using System;
using System.Collections.Generic;
using GCOM2Users.Models;
using Microsoft.EntityFrameworkCore;

namespace GCOM2Users.Api.Data;

public partial class Gcom2Context : DbContext
{
    public Gcom2Context()
    {
    }

    public Gcom2Context(DbContextOptions<Gcom2Context> options)
        : base(options)
    {
    }

    public virtual DbSet<AbatimentosDebrief> AbatimentosDebriefs { get; set; }

    public virtual DbSet<AeroportoCompanhiaAerea> AeroportoCompanhiaAereas { get; set; }

    public virtual DbSet<AeroportoT> AeroportoTs { get; set; }

    public virtual DbSet<AlertaDetalhe> AlertaDetalhes { get; set; }

    public virtual DbSet<AlertaTipoT> AlertaTipoTs { get; set; }

    public virtual DbSet<Alertum> Alerta { get; set; }

    public virtual DbSet<AlteracoesServico> AlteracoesServicos { get; set; }

    public virtual DbSet<Anacom> Anacoms { get; set; }

    public virtual DbSet<Atest> Atests { get; set; }

    public virtual DbSet<AtestV2> AtestV2s { get; set; }

    public virtual DbSet<Audit> Audits { get; set; }

    public virtual DbSet<AuditManifesto> AuditManifestos { get; set; }

    public virtual DbSet<AuditManifestoDestinatario> AuditManifestoDestinatarios { get; set; }

    public virtual DbSet<AuditManifestoDevolucao> AuditManifestoDevolucaos { get; set; }

    public virtual DbSet<AuditManifestoEnvio> AuditManifestoEnvios { get; set; }

    public virtual DbSet<AuditManifestoExpedicao> AuditManifestoExpedicaos { get; set; }

    public virtual DbSet<AuditManifestoExpedidor> AuditManifestoExpedidors { get; set; }

    public virtual DbSet<AuditManifestoRetencao> AuditManifestoRetencaos { get; set; }

    public virtual DbSet<AuditManifestoVolume> AuditManifestoVolumes { get; set; }

    public virtual DbSet<AviaoT> AviaoTs { get; set; }

    public virtual DbSet<AvisoTipoDepart> AvisoTipoDeparts { get; set; }

    public virtual DbSet<AvisoTipoGrupo> AvisoTipoGrupos { get; set; }

    public virtual DbSet<AvisoTipoT> AvisoTipoTs { get; set; }

    public virtual DbSet<AvisoTipoUtil> AvisoTipoUtils { get; set; }

    public virtual DbSet<Awbcounter> Awbcounters { get; set; }

    public virtual DbSet<AwbcounterAo> AwbcounterAos { get; set; }

    public virtual DbSet<AwbparamCliente> AwbparamClientes { get; set; }

    public virtual DbSet<BackOffice> BackOffices { get; set; }

    public virtual DbSet<BackOfficeAwb> BackOfficeAwbs { get; set; }

    public virtual DbSet<BackOfficeDocumento> BackOfficeDocumentos { get; set; }

    public virtual DbSet<BackOfficeTiposEstadoT> BackOfficeTiposEstadoTs { get; set; }

    public virtual DbSet<BackofficeParceiroDestinatario> BackofficeParceiroDestinatarios { get; set; }

    public virtual DbSet<Basedado> Basedados { get; set; }

    public virtual DbSet<BusinessPlan> BusinessPlans { get; set; }

    public virtual DbSet<BuytragoDiasViagem> BuytragoDiasViagems { get; set; }

    public virtual DbSet<BuytragoManifesto> BuytragoManifestos { get; set; }

    public virtual DbSet<BuytragoRec> BuytragoRecs { get; set; }

    public virtual DbSet<CallCenter> CallCenters { get; set; }

    public virtual DbSet<CallCenterUtilizador> CallCenterUtilizadors { get; set; }

    public virtual DbSet<CallcenterTratamentosT> CallcenterTratamentosTs { get; set; }

    public virtual DbSet<CallcenterTratar> CallcenterTratars { get; set; }

    public virtual DbSet<CampanhasPremiosCliente> CampanhasPremiosClientes { get; set; }

    public virtual DbSet<CamposAuditM> CamposAuditMs { get; set; }

    public virtual DbSet<CamposObrigatorio> CamposObrigatorios { get; set; }

    public virtual DbSet<CargoScanner> CargoScanners { get; set; }

    public virtual DbSet<CargoScannerBalancasT> CargoScannerBalancasTs { get; set; }

    public virtual DbSet<CargoScannerBalancasTipoProdutoT> CargoScannerBalancasTipoProdutoTs { get; set; }

    public virtual DbSet<CargoScannerBalancasTipoT> CargoScannerBalancasTipoTs { get; set; }

    public virtual DbSet<CargoScannerModosT> CargoScannerModosTs { get; set; }

    public virtual DbSet<CargoScannerRazoesNaoConferirT> CargoScannerRazoesNaoConferirTs { get; set; }

    public virtual DbSet<CentrosCustoT> CentrosCustoTs { get; set; }

    public virtual DbSet<CexEnviospendentesactualizacao> CexEnviospendentesactualizacaos { get; set; }

    public virtual DbSet<CexParticularidade> CexParticularidades { get; set; }

    public virtual DbSet<CgidToGcomMap> CgidToGcomMaps { get; set; }

    public virtual DbSet<ClassesOrigem> ClassesOrigems { get; set; }

    public virtual DbSet<ClassesOrigemRex2> ClassesOrigemRex2s { get; set; }

    public virtual DbSet<Cliente> Clientes { get; set; }

    public virtual DbSet<ClienteAcompanhamentoTipoT> ClienteAcompanhamentoTipoTs { get; set; }

    public virtual DbSet<ClienteCaeT> ClienteCaeTs { get; set; }

    public virtual DbSet<ClienteCampanha> ClienteCampanhas { get; set; }

    public virtual DbSet<ClienteCampanhaPremio> ClienteCampanhaPremios { get; set; }

    public virtual DbSet<ClienteCampanhaPremiosLog> ClienteCampanhaPremiosLogs { get; set; }

    public virtual DbSet<ClienteCampanhasLog> ClienteCampanhasLogs { get; set; }

    public virtual DbSet<ClienteConcorrenteMotivoT> ClienteConcorrenteMotivoTs { get; set; }

    public virtual DbSet<ClienteConcorrenteT> ClienteConcorrenteTs { get; set; }

    public virtual DbSet<ClienteContacto> ClienteContactos { get; set; }

    public virtual DbSet<ClienteContactosTipoAcesso> ClienteContactosTipoAcessos { get; set; }

    public virtual DbSet<ClienteContactosTipoT> ClienteContactosTipoTs { get; set; }

    public virtual DbSet<ClienteContrato> ClienteContratos { get; set; }

    public virtual DbSet<ClienteContratoSuplemProduto> ClienteContratoSuplemProdutos { get; set; }

    public virtual DbSet<ClienteCreditoPedido> ClienteCreditoPedidos { get; set; }

    public virtual DbSet<ClienteCreditoPedidoStatusT> ClienteCreditoPedidoStatusTs { get; set; }

    public virtual DbSet<ClienteCustomerCareLog> ClienteCustomerCareLogs { get; set; }

    public virtual DbSet<ClienteCustomerCareT> ClienteCustomerCareTs { get; set; }

    public virtual DbSet<ClienteEmailing> ClienteEmailings { get; set; }

    public virtual DbSet<ClienteEmailingCliente> ClienteEmailingClientes { get; set; }

    public virtual DbSet<ClienteEmailingLog> ClienteEmailingLogs { get; set; }

    public virtual DbSet<ClienteEmailingTiposCliente> ClienteEmailingTiposClientes { get; set; }

    public virtual DbSet<ClienteEmailingTiposT> ClienteEmailingTiposTs { get; set; }

    public virtual DbSet<ClienteEntidade> ClienteEntidades { get; set; }

    public virtual DbSet<ClienteEntidadesEnvio> ClienteEntidadesEnvios { get; set; }

    public virtual DbSet<ClienteEntidadesEnviosZona> ClienteEntidadesEnviosZonas { get; set; }

    public virtual DbSet<ClienteEntidadesLogin> ClienteEntidadesLogins { get; set; }

    public virtual DbSet<ClienteEntidadesLoginTipoT> ClienteEntidadesLoginTipoTs { get; set; }

    public virtual DbSet<ClienteEntidadesPotNeg> ClienteEntidadesPotNegs { get; set; }

    public virtual DbSet<ClienteEntidadesPotNegTlog> ClienteEntidadesPotNegTlogs { get; set; }

    public virtual DbSet<ClienteEntidadesPotNegZonaT> ClienteEntidadesPotNegZonaTs { get; set; }

    public virtual DbSet<ClienteEntidadesTlog> ClienteEntidadesTlogs { get; set; }

    public virtual DbSet<ClienteEnvolvenciaT> ClienteEnvolvenciaTs { get; set; }

    public virtual DbSet<ClienteFaturacao> ClienteFaturacaos { get; set; }

    public virtual DbSet<ClienteGidLinkLog> ClienteGidLinkLogs { get; set; }

    public virtual DbSet<ClienteInterfaceParametro> ClienteInterfaceParametros { get; set; }

    public virtual DbSet<ClienteLogin> ClienteLogins { get; set; }

    public virtual DbSet<ClienteLoginHistorico> ClienteLoginHistoricos { get; set; }

    public virtual DbSet<ClienteLojaT> ClienteLojaTs { get; set; }

    public virtual DbSet<ClienteMapCex> ClienteMapCexes { get; set; }

    public virtual DbSet<ClienteMorada> ClienteMoradas { get; set; }

    public virtual DbSet<ClienteMoradaMapCex> ClienteMoradaMapCexes { get; set; }

    public virtual DbSet<ClienteMoradasTipoT> ClienteMoradasTipoTs { get; set; }

    public virtual DbSet<ClienteMoradasTlog> ClienteMoradasTlogs { get; set; }

    public virtual DbSet<ClienteMotivoFsmT> ClienteMotivoFsmTs { get; set; }

    public virtual DbSet<ClienteMotivoInsightT> ClienteMotivoInsightTs { get; set; }

    public virtual DbSet<ClienteMovContum> ClienteMovConta { get; set; }

    public virtual DbSet<ClienteParserConfig> ClienteParserConfigs { get; set; }

    public virtual DbSet<ClienteParserParametro> ClienteParserParametros { get; set; }

    public virtual DbSet<ClientePeriodicidadeT> ClientePeriodicidadeTs { get; set; }

    public virtual DbSet<ClientePropriedade> ClientePropriedades { get; set; }

    public virtual DbSet<ClientePropriedadeT> ClientePropriedadeTs { get; set; }

    public virtual DbSet<ClienteResumoAcesso> ClienteResumoAcessos { get; set; }

    public virtual DbSet<ClienteResumoFuncaoAcesso> ClienteResumoFuncaoAcessos { get; set; }

    public virtual DbSet<ClienteResumoFuncaoAcessoPermisso> ClienteResumoFuncaoAcessoPermissoes { get; set; }

    public virtual DbSet<ClienteResumoFuncaoEntidadeAcesso> ClienteResumoFuncaoEntidadeAcessos { get; set; }

    public virtual DbSet<ClienteResumoT> ClienteResumoTs { get; set; }

    public virtual DbSet<ClienteResumoUtilizadorAcesso> ClienteResumoUtilizadorAcessos { get; set; }

    public virtual DbSet<ClienteSectorActividadeT> ClienteSectorActividadeTs { get; set; }

    public virtual DbSet<ClienteStatusComercialCreditoT> ClienteStatusComercialCreditoTs { get; set; }

    public virtual DbSet<ClienteStatusComercialLog> ClienteStatusComercialLogs { get; set; }

    public virtual DbSet<ClienteStatusComercialT> ClienteStatusComercialTs { get; set; }

    public virtual DbSet<ClienteStatusCreditoAduaneiroT> ClienteStatusCreditoAduaneiroTs { get; set; }

    public virtual DbSet<ClienteStatusCreditoLog> ClienteStatusCreditoLogs { get; set; }

    public virtual DbSet<ClienteStatusCreditoRatingRegrasT> ClienteStatusCreditoRatingRegrasTs { get; set; }

    public virtual DbSet<ClienteStatusCreditoT> ClienteStatusCreditoTs { get; set; }

    public virtual DbSet<ClienteStatusCreditoTipoT> ClienteStatusCreditoTipoTs { get; set; }

    public virtual DbSet<ClienteTarifa> ClienteTarifas { get; set; }

    public virtual DbSet<ClienteTarifaZoning> ClienteTarifaZonings { get; set; }

    public virtual DbSet<ClienteTarifasLog> ClienteTarifasLogs { get; set; }

    public virtual DbSet<ClienteTarifasLogBackupAo> ClienteTarifasLogBackupAos { get; set; }

    public virtual DbSet<ClienteTipoAbcT> ClienteTipoAbcTs { get; set; }

    public virtual DbSet<ClienteTipoAbclog> ClienteTipoAbclogs { get; set; }

    public virtual DbSet<ClienteTipoEntidadeT> ClienteTipoEntidadeTs { get; set; }

    public virtual DbSet<ClienteTipoLog> ClienteTipoLogs { get; set; }

    public virtual DbSet<ClienteTipoT> ClienteTipoTs { get; set; }

    public virtual DbSet<ClienteTlog> ClienteTlogs { get; set; }

    public virtual DbSet<ClienteTxDescCombCustoLog> ClienteTxDescCombCustoLogs { get; set; }

    public virtual DbSet<ClienteTxDescCombLog> ClienteTxDescCombLogs { get; set; }

    public virtual DbSet<ClienteTxDespAlfandegariasLog> ClienteTxDespAlfandegariasLogs { get; set; }

    public virtual DbSet<ClienteUtilizadorTipoT> ClienteUtilizadorTipoTs { get; set; }

    public virtual DbSet<ClienteUtilizadore> ClienteUtilizadores { get; set; }

    public virtual DbSet<ClienteUtilizadoresTlog> ClienteUtilizadoresTlogs { get; set; }

    public virtual DbSet<ClienteVipLog> ClienteVipLogs { get; set; }

    public virtual DbSet<ClientesAlteracoesSap> ClientesAlteracoesSaps { get; set; }

    public virtual DbSet<ClientesConta> ClientesContas { get; set; }

    public virtual DbSet<ClientesDuplicadosAlteracoesLog> ClientesDuplicadosAlteracoesLogs { get; set; }

    public virtual DbSet<ClientesEnviosSuspenso> ClientesEnviosSuspensos { get; set; }

    public virtual DbSet<ClientesFactManualT> ClientesFactManualTs { get; set; }

    public virtual DbSet<ClientesFacturaEmissaoT> ClientesFacturaEmissaoTs { get; set; }

    public virtual DbSet<ClientesGeracaoCodigo> ClientesGeracaoCodigos { get; set; }

    public virtual DbSet<ClientesGeracaoCodigosTiposT> ClientesGeracaoCodigosTiposTs { get; set; }

    public virtual DbSet<ClientesServicoDet> ClientesServicoDets { get; set; }

    public virtual DbSet<ClientesServicoDetBk> ClientesServicoDetBks { get; set; }

    public virtual DbSet<ClientesServicoDetBk2018> ClientesServicoDetBk2018s { get; set; }

    public virtual DbSet<Cobranca> Cobrancas { get; set; }

    public virtual DbSet<CobrancaAduaneiraCobranca> CobrancaAduaneiraCobrancas { get; set; }

    public virtual DbSet<CobrancaAduaneiraFicheiro> CobrancaAduaneiraFicheiros { get; set; }

    public virtual DbSet<CobrancaAduaneiraVgcab> CobrancaAduaneiraVgcabs { get; set; }

    public virtual DbSet<CobrancaAduaneiraVglin> CobrancaAduaneiraVglins { get; set; }

    public virtual DbSet<CobrancaDetalhe> CobrancaDetalhes { get; set; }

    public virtual DbSet<CobrancaLog> CobrancaLogs { get; set; }

    public virtual DbSet<CobrancaMotivosEncerrarT> CobrancaMotivosEncerrarTs { get; set; }

    public virtual DbSet<CobrancaMotivosNaoConferirT> CobrancaMotivosNaoConferirTs { get; set; }

    public virtual DbSet<CobrancaRecebimentosTipoT> CobrancaRecebimentosTipoTs { get; set; }

    public virtual DbSet<CobrancaTipoDetalhesT> CobrancaTipoDetalhesTs { get; set; }

    public virtual DbSet<CobrancaTipoT> CobrancaTipoTs { get; set; }

    public virtual DbSet<CodigosIataT> CodigosIataTs { get; set; }

    public virtual DbSet<CodigosPostaisBuytragoT> CodigosPostaisBuytragoTs { get; set; }

    public virtual DbSet<CodigosPostaisBuytragoT20130503> CodigosPostaisBuytragoT20130503s { get; set; }

    public virtual DbSet<CodigosPostaisBuytragoT20130930> CodigosPostaisBuytragoT20130930s { get; set; }

    public virtual DbSet<CodigosPostaisBuytragoT20131024> CodigosPostaisBuytragoT20131024s { get; set; }

    public virtual DbSet<CodigosPostaisBuytragoT20131111> CodigosPostaisBuytragoT20131111s { get; set; }

    public virtual DbSet<CodigosPostaisBuytragoTCopy> CodigosPostaisBuytragoTCopies { get; set; }

    public virtual DbSet<CodigosPostaisCompromissoT> CodigosPostaisCompromissoTs { get; set; }

    public virtual DbSet<CodigosPostaisEntidade> CodigosPostaisEntidades { get; set; }

    public virtual DbSet<CodigosPostaisEntidadesBak> CodigosPostaisEntidadesBaks { get; set; }

    public virtual DbSet<CodigosPostaisEntidadesBk> CodigosPostaisEntidadesBks { get; set; }

    public virtual DbSet<CodigosPostaisRoutingLabel> CodigosPostaisRoutingLabels { get; set; }

    public virtual DbSet<CodigosPostaisT> CodigosPostaisTs { get; set; }

    public virtual DbSet<CodigosPostaisTntstation> CodigosPostaisTntstations { get; set; }

    public virtual DbSet<CodigosPostaisTotalT> CodigosPostaisTotalTs { get; set; }

    public virtual DbSet<CodigosPostaisZonasPaisT> CodigosPostaisZonasPaisTs { get; set; }

    public virtual DbSet<CodigosTabelasT> CodigosTabelasTs { get; set; }

    public virtual DbSet<CodigospostaisTBackup> CodigospostaisTBackups { get; set; }

    public virtual DbSet<CompanhiaAereaT> CompanhiaAereaTs { get; set; }

    public virtual DbSet<ConferenciaCustosDestinatario> ConferenciaCustosDestinatarios { get; set; }

    public virtual DbSet<ConferenciaCustosEntrega> ConferenciaCustosEntregas { get; set; }

    public virtual DbSet<ConferenciaCustosEnvio> ConferenciaCustosEnvios { get; set; }

    public virtual DbSet<ConferenciaCustosExpedidore> ConferenciaCustosExpedidores { get; set; }

    public virtual DbSet<ConferenciaCustosFactura> ConferenciaCustosFacturas { get; set; }

    public virtual DbSet<ConferenciaCustosFedEx> ConferenciaCustosFedices { get; set; }

    public virtual DbSet<ConferenciaCustosFedExReclamaLog> ConferenciaCustosFedExReclamaLogs { get; set; }

    public virtual DbSet<ConferenciaCustosFedExTiposT> ConferenciaCustosFedExTiposTs { get; set; }

    public virtual DbSet<ConferenciaCustosFedexReclamaco> ConferenciaCustosFedexReclamacoes { get; set; }

    public virtual DbSet<ConferenciaCustosItem> ConferenciaCustosItems { get; set; }

    public virtual DbSet<ConferenciaCustosVolume> ConferenciaCustosVolumes { get; set; }

    public virtual DbSet<ConferenciaTiposT> ConferenciaTiposTs { get; set; }

    public virtual DbSet<ConferenciaTxDespAlf> ConferenciaTxDespAlves { get; set; }

    public virtual DbSet<Consolidado> Consolidados { get; set; }

    public virtual DbSet<ConsolidadosTipoT> ConsolidadosTipoTs { get; set; }

    public virtual DbSet<ConsumosClatLog> ConsumosClatLogs { get; set; }

    public virtual DbSet<ConsumosGologisticLog> ConsumosGologisticLogs { get; set; }

    public virtual DbSet<ConsumosPtcredesLog> ConsumosPtcredesLogs { get; set; }

    public virtual DbSet<Contencioso> Contenciosos { get; set; }

    public virtual DbSet<ContenciosoAdvogadoT> ContenciosoAdvogadoTs { get; set; }

    public virtual DbSet<ContenciosoDocumento> ContenciosoDocumentos { get; set; }

    public virtual DbSet<ContenciosoDocumento1> ContenciosoDocumentos1 { get; set; }

    public virtual DbSet<ContenciosoDocumentoTipoT> ContenciosoDocumentoTipoTs { get; set; }

    public virtual DbSet<ContenciosoFase> ContenciosoFases { get; set; }

    public virtual DbSet<ContenciosoFaseT> ContenciosoFaseTs { get; set; }

    public virtual DbSet<ContenciosoValorCobrado> ContenciosoValorCobrados { get; set; }

    public virtual DbSet<ContenciosoValorCreditado> ContenciosoValorCreditados { get; set; }

    public virtual DbSet<ControloPalete> ControloPaletes { get; set; }

    public virtual DbSet<ControloPaletesDevoluco> ControloPaletesDevolucoes { get; set; }

    public virtual DbSet<ControloPaletesTotai> ControloPaletesTotais { get; set; }

    public virtual DbSet<Conversa> Conversas { get; set; }

    public virtual DbSet<ConversasMensagen> ConversasMensagens { get; set; }

    public virtual DbSet<ConversasMensagensLog> ConversasMensagensLogs { get; set; }

    public virtual DbSet<ConversasUtil> ConversasUtils { get; set; }

    public virtual DbSet<Correio> Correios { get; set; }

    public virtual DbSet<CorreioDetalhe> CorreioDetalhes { get; set; }

    public virtual DbSet<CorreioDocumento> CorreioDocumentos { get; set; }

    public virtual DbSet<CorreioEstadoT> CorreioEstadoTs { get; set; }

    public virtual DbSet<CorreioTipoT> CorreioTipoTs { get; set; }

    public virtual DbSet<Cotacao> Cotacaos { get; set; }

    public virtual DbSet<CotacoesItem> CotacoesItems { get; set; }

    public virtual DbSet<CotacoesPickup> CotacoesPickups { get; set; }

    public virtual DbSet<CpAgrupamentosStop> CpAgrupamentosStops { get; set; }

    public virtual DbSet<CpAgrupamentosStopsLog> CpAgrupamentosStopsLogs { get; set; }

    public virtual DbSet<CpApsCtt> CpApsCtts { get; set; }

    public virtual DbSet<CpCtt> CpCtts { get; set; }

    public virtual DbSet<Cpfrff> Cpfrffs { get; set; }

    public virtual DbSet<CprFf> CprFfs { get; set; }

    public virtual DbSet<CprIt> CprIts { get; set; }

    public virtual DbSet<CrossDockingFacturacaoT> CrossDockingFacturacaoTs { get; set; }

    public virtual DbSet<CustomHtmlField> CustomHtmlFields { get; set; }

    public virtual DbSet<DangerousGood> DangerousGoods { get; set; }

    public virtual DbSet<DeleteMe> DeleteMes { get; set; }

    public virtual DbSet<DepartamentosAreasGrupo> DepartamentosAreasGrupos { get; set; }

    public virtual DbSet<DepartamentosAreasT> DepartamentosAreasTs { get; set; }

    public virtual DbSet<DepartamentosT> DepartamentosTs { get; set; }

    public virtual DbSet<DepositoCobranca> DepositoCobrancas { get; set; }

    public virtual DbSet<DepositoCobrancasEstadosT> DepositoCobrancasEstadosTs { get; set; }

    public virtual DbSet<DepositoCobrancasLog> DepositoCobrancasLogs { get; set; }

    public virtual DbSet<DescargasConfigT> DescargasConfigTs { get; set; }

    public virtual DbSet<Destinatario> Destinatarios { get; set; }

    public virtual DbSet<DestinatarioClassificacaoT> DestinatarioClassificacaoTs { get; set; }

    public virtual DbSet<DestinatarioLog> DestinatarioLogs { get; set; }

    public virtual DbSet<DestinatarioRepetido> DestinatarioRepetidos { get; set; }

    public virtual DbSet<DestinatarioTemp> DestinatarioTemps { get; set; }

    public virtual DbSet<DestinatariosGrandSup> DestinatariosGrandSups { get; set; }

    public virtual DbSet<DevolucaoGuiasRemessa> DevolucaoGuiasRemessas { get; set; }

    public virtual DbSet<DevolucaoGuiasRemessaDetalhe> DevolucaoGuiasRemessaDetalhes { get; set; }

    public virtual DbSet<DevolucaoGuiasRemessaEstadosT> DevolucaoGuiasRemessaEstadosTs { get; set; }

    public virtual DbSet<DinamicaComercialT> DinamicaComercialTs { get; set; }

    public virtual DbSet<DistribuicaoEntidadesT> DistribuicaoEntidadesTs { get; set; }

    public virtual DbSet<DistritosT> DistritosTs { get; set; }

    public virtual DbSet<DlinkDelivery> DlinkDeliveries { get; set; }

    public virtual DbSet<DlinkInvoice> DlinkInvoices { get; set; }

    public virtual DbSet<DlinkPackage> DlinkPackages { get; set; }

    public virtual DbSet<DlinkRecipient> DlinkRecipients { get; set; }

    public virtual DbSet<DlinkShipment> DlinkShipments { get; set; }

    public virtual DbSet<DlinkShipmentCommerceTypeLookup> DlinkShipmentCommerceTypeLookups { get; set; }

    public virtual DbSet<DlinkShipmentServiceBaseLookup> DlinkShipmentServiceBaseLookups { get; set; }

    public virtual DbSet<DlinkShipmentServicePackagingLookup> DlinkShipmentServicePackagingLookups { get; set; }

    public virtual DbSet<DlinkShipper> DlinkShippers { get; set; }

    public virtual DbSet<DocLinsProvisorio> DocLinsProvisorios { get; set; }

    public virtual DbSet<DocLinsProvisoriosTempitem> DocLinsProvisoriosTempitems { get; set; }

    public virtual DbSet<DocServerTiposT> DocServerTiposTs { get; set; }

    public virtual DbSet<DoclinsBk> DoclinsBks { get; set; }

    public virtual DbSet<DocumentosAduaneirosCreditar> DocumentosAduaneirosCreditars { get; set; }

    public virtual DbSet<DocumentosCab> DocumentosCabs { get; set; }

    public virtual DbSet<DocumentosCfg> DocumentosCfgs { get; set; }

    public virtual DbSet<DocumentosComissoesTipoT> DocumentosComissoesTipoTs { get; set; }

    public virtual DbSet<DocumentosDatasFecho> DocumentosDatasFechoes { get; set; }

    public virtual DbSet<DocumentosDepartamentosT> DocumentosDepartamentosTs { get; set; }

    public virtual DbSet<DocumentosDigitalizacao> DocumentosDigitalizacaos { get; set; }

    public virtual DbSet<DocumentosDigitalizacaoTipoT> DocumentosDigitalizacaoTipoTs { get; set; }

    public virtual DbSet<DocumentosEnvioPortal> DocumentosEnvioPortals { get; set; }

    public virtual DbSet<DocumentosFormatoEmissaoT> DocumentosFormatoEmissaoTs { get; set; }

    public virtual DbSet<DocumentosInterface> DocumentosInterfaces { get; set; }

    public virtual DbSet<DocumentosInterfaceTipoT> DocumentosInterfaceTipoTs { get; set; }

    public virtual DbSet<DocumentosLin> DocumentosLins { get; set; }

    public virtual DbSet<DocumentosLinBk> DocumentosLinBks { get; set; }

    public virtual DbSet<DocumentosModosPagamentoT> DocumentosModosPagamentoTs { get; set; }

    public virtual DbSet<DocumentosNumeroMaskT> DocumentosNumeroMaskTs { get; set; }

    public virtual DbSet<DocumentosTiposT> DocumentosTiposTs { get; set; }

    public virtual DbSet<DutiesTaxesT> DutiesTaxesTs { get; set; }

    public virtual DbSet<DutyTypeMapeamento> DutyTypeMapeamentos { get; set; }

    public virtual DbSet<EmaMastersDup> EmaMastersDups { get; set; }

    public virtual DbSet<Email> Emails { get; set; }

    public virtual DbSet<EmailDestinatario> EmailDestinatarios { get; set; }

    public virtual DbSet<EmailRecolhaLog> EmailRecolhaLogs { get; set; }

    public virtual DbSet<EmailRelatorio> EmailRelatorios { get; set; }

    public virtual DbSet<EmailRelatoriosRegulare> EmailRelatoriosRegulares { get; set; }

    public virtual DbSet<EmailSalesLeadLog> EmailSalesLeadLogs { get; set; }

    public virtual DbSet<EmpresasRatingsLog> EmpresasRatingsLogs { get; set; }

    public virtual DbSet<EntregasIncidenciasClatLog> EntregasIncidenciasClatLogs { get; set; }

    public virtual DbSet<EntregasIncidenciasPtproTmnLog> EntregasIncidenciasPtproTmnLogs { get; set; }

    public virtual DbSet<EntrevistaDocumento> EntrevistaDocumentos { get; set; }

    public virtual DbSet<EntrevistaEntraveAcesso> EntrevistaEntraveAcessos { get; set; }

    public virtual DbSet<EntrevistaEntraveT> EntrevistaEntraveTs { get; set; }

    public virtual DbSet<EntrevistaFormatoAcesso> EntrevistaFormatoAcessos { get; set; }

    public virtual DbSet<EntrevistaFormatoT> EntrevistaFormatoTs { get; set; }

    public virtual DbSet<EntrevistaObjectivo> EntrevistaObjectivos { get; set; }

    public virtual DbSet<EntrevistaResultadosT> EntrevistaResultadosTs { get; set; }

    public virtual DbSet<EntrevistaSugestaoCriteriosLog> EntrevistaSugestaoCriteriosLogs { get; set; }

    public virtual DbSet<EntrevistaSugestaoCriteriosT> EntrevistaSugestaoCriteriosTs { get; set; }

    public virtual DbSet<EntrevistaSugestaoCriteriosTipo> EntrevistaSugestaoCriteriosTipos { get; set; }

    public virtual DbSet<EntrevistaSugestaoLog> EntrevistaSugestaoLogs { get; set; }

    public virtual DbSet<EntrevistaSugestaoTipoFechoT> EntrevistaSugestaoTipoFechoTs { get; set; }

    public virtual DbSet<EntrevistaSugestaoValorizacoesLog> EntrevistaSugestaoValorizacoesLogs { get; set; }

    public virtual DbSet<EntrevistaTipoAcesso> EntrevistaTipoAcessos { get; set; }

    public virtual DbSet<EntrevistaTipoT> EntrevistaTipoTs { get; set; }

    public virtual DbSet<EntrevistaTlog> EntrevistaTlogs { get; set; }

    public virtual DbSet<EntrevistasSugerida> EntrevistasSugeridas { get; set; }

    public virtual DbSet<Entrevistum> Entrevista { get; set; }

    public virtual DbSet<EnviadosRexiibuytragoLog> EnviadosRexiibuytragoLogs { get; set; }

    public virtual DbSet<EnvioPodsLog> EnvioPodsLogs { get; set; }

    public virtual DbSet<EnviosProvedorCriacao> EnviosProvedorCriacaos { get; set; }

    public virtual DbSet<EnviosProvedorIncidencia> EnviosProvedorIncidencias { get; set; }

    public virtual DbSet<EnviosSuspenso> EnviosSuspensos { get; set; }

    public virtual DbSet<EquipasComerciasRespTemp> EquipasComerciasRespTemps { get; set; }

    public virtual DbSet<ErrosEtiquetasTdnlog> ErrosEtiquetasTdnlogs { get; set; }

    public virtual DbSet<EtlTmpManif> EtlTmpManifs { get; set; }

    public virtual DbSet<EtlrefList> EtlrefLists { get; set; }

    public virtual DbSet<ExcFedexAo> ExcFedexAos { get; set; }

    public virtual DbSet<ExcepDomesticoAo> ExcepDomesticoAos { get; set; }

    public virtual DbSet<ExepcoesTarifasEspeciaisFornecedor> ExepcoesTarifasEspeciaisFornecedors { get; set; }

    public virtual DbSet<Exeption> Exeptions { get; set; }

    public virtual DbSet<ExportacaoAgrupamento> ExportacaoAgrupamentos { get; set; }

    public virtual DbSet<ExportacaoHandlingCodesT> ExportacaoHandlingCodesTs { get; set; }

    public virtual DbSet<ExportacaoLocalPagamentoT> ExportacaoLocalPagamentoTs { get; set; }

    public virtual DbSet<ExportacaoManifestoCorreccoesCosmo> ExportacaoManifestoCorreccoesCosmos { get; set; }

    public virtual DbSet<ExportacaoManifestoDescricoesProibidasT> ExportacaoManifestoDescricoesProibidasTs { get; set; }

    public virtual DbSet<ExportacaoManifestoFsm> ExportacaoManifestoFsms { get; set; }

    public virtual DbSet<ExportacaoReceivedAtT> ExportacaoReceivedAtTs { get; set; }

    public virtual DbSet<ExportacaoTipoCargaT> ExportacaoTipoCargaTs { get; set; }

    public virtual DbSet<FacturaProformaCab> FacturaProformaCabs { get; set; }

    public virtual DbSet<FacturacaoServicosParceiro> FacturacaoServicosParceiros { get; set; }

    public virtual DbSet<FacturacaoServicosParceirosDocConfigT> FacturacaoServicosParceirosDocConfigTs { get; set; }

    public virtual DbSet<FacturacaoServicosParceirosItem> FacturacaoServicosParceirosItems { get; set; }

    public virtual DbSet<FacturacaoServicosParceirosMotivosNaoFacturarT> FacturacaoServicosParceirosMotivosNaoFacturarTs { get; set; }

    public virtual DbSet<FedexIb> FedexIbs { get; set; }

    public virtual DbSet<FedexTarifa> FedexTarifas { get; set; }

    public virtual DbSet<Feriado> Feriados { get; set; }

    public virtual DbSet<FeriadosPlataformasM> FeriadosPlataformasMs { get; set; }

    public virtual DbSet<FicheirosImportado> FicheirosImportados { get; set; }

    public virtual DbSet<FilaProcessamentoClasseT> FilaProcessamentoClasseTs { get; set; }

    public virtual DbSet<FilaProcessamentoInstrucaoT> FilaProcessamentoInstrucaoTs { get; set; }

    public virtual DbSet<FilaProcessamentoLog> FilaProcessamentoLogs { get; set; }

    public virtual DbSet<FilaProcessamentoParam> FilaProcessamentoParams { get; set; }

    public virtual DbSet<FilaProcessamentoPend> FilaProcessamentoPends { get; set; }

    public virtual DbSet<FilaProcessamentoProc> FilaProcessamentoProcs { get; set; }

    public virtual DbSet<Fornecedor> Fornecedors { get; set; }

    public virtual DbSet<FornecedorContacto> FornecedorContactos { get; set; }

    public virtual DbSet<FornecedorContactoTipoT> FornecedorContactoTipoTs { get; set; }

    public virtual DbSet<FornecedorLineHaul> FornecedorLineHauls { get; set; }

    public virtual DbSet<FornecedorTarifa> FornecedorTarifas { get; set; }

    public virtual DbSet<FornecedorTarifaDetalhe> FornecedorTarifaDetalhes { get; set; }

    public virtual DbSet<FornecedorTipoT> FornecedorTipoTs { get; set; }

    public virtual DbSet<FornecedorUtilizadore> FornecedorUtilizadores { get; set; }

    public virtual DbSet<FornecedorUtilizadoresTlog> FornecedorUtilizadoresTlogs { get; set; }

    public virtual DbSet<Francisco> Franciscos { get; set; }

    public virtual DbSet<GcomnectConfigT> GcomnectConfigTs { get; set; }

    public virtual DbSet<GidwinProdutosM> GidwinProdutosMs { get; set; }

    public virtual DbSet<GidwinServicosMapeamento> GidwinServicosMapeamentos { get; set; }

    public virtual DbSet<GuiaRemessaDigitalizacaoControlo> GuiaRemessaDigitalizacaoControlos { get; set; }

    public virtual DbSet<GuiasCon> GuiasCons { get; set; }

    public virtual DbSet<GuiasImprimirLog> GuiasImprimirLogs { get; set; }

    public virtual DbSet<Ibmanifest> Ibmanifests { get; set; }

    public virtual DbSet<ImportacaoClientesCex> ImportacaoClientesCexes { get; set; }

    public virtual DbSet<ImportacaoFacturasContasFedex> ImportacaoFacturasContasFedices { get; set; }

    public virtual DbSet<ImportacaoFacturasFedex> ImportacaoFacturasFedices { get; set; }

    public virtual DbSet<ImportacaoFacturasItemsMap> ImportacaoFacturasItemsMaps { get; set; }

    public virtual DbSet<ImportacaoFacturasMapServico> ImportacaoFacturasMapServicos { get; set; }

    public virtual DbSet<ImportacaoFacturasTnt> ImportacaoFacturasTnts { get; set; }

    public virtual DbSet<ImportacaoIncidencia> ImportacaoIncidencias { get; set; }

    public virtual DbSet<ImportacaoIncidenciasResolucoesT> ImportacaoIncidenciasResolucoesTs { get; set; }

    public virtual DbSet<ImportacaoIncidenciasTipoT> ImportacaoIncidenciasTipoTs { get; set; }

    public virtual DbSet<ImportacaoManifestoAux> ImportacaoManifestoAuxes { get; set; }

    public virtual DbSet<ImportacaoManifestoOverage> ImportacaoManifestoOverages { get; set; }

    public virtual DbSet<ImportacaoPedido> ImportacaoPedidos { get; set; }

    public virtual DbSet<ImportacaoScan> ImportacaoScans { get; set; }

    public virtual DbSet<ImportacaoScansImagen> ImportacaoScansImagens { get; set; }

    public virtual DbSet<ImportarTarifasRexii2016> ImportarTarifasRexii2016s { get; set; }

    public virtual DbSet<ImpressaoTipoT> ImpressaoTipoTs { get; set; }

    public virtual DbSet<IncidenciasBuytrago> IncidenciasBuytragos { get; set; }

    public virtual DbSet<IncidenciasBuytragoLog> IncidenciasBuytragoLogs { get; set; }

    public virtual DbSet<IncidenciasBuytragoScansFecho> IncidenciasBuytragoScansFechoes { get; set; }

    public virtual DbSet<IncidenciasRtmsMap> IncidenciasRtmsMaps { get; set; }

    public virtual DbSet<IndicadoresComerciaisGrafico> IndicadoresComerciaisGraficos { get; set; }

    public virtual DbSet<IndicadoresComerciaisGraficosAcesso> IndicadoresComerciaisGraficosAcessos { get; set; }

    public virtual DbSet<IndicadoresComerciaisGraficosAcessosGrupo> IndicadoresComerciaisGraficosAcessosGrupos { get; set; }

    public virtual DbSet<IndietexWarehouse> IndietexWarehouses { get; set; }

    public virtual DbSet<InfoAuditChange> InfoAuditChanges { get; set; }

    public virtual DbSet<InformacaoEnvioGeox> InformacaoEnvioGeoxes { get; set; }

    public virtual DbSet<InterfaceBuytragoInternacionalLog> InterfaceBuytragoInternacionalLogs { get; set; }

    public virtual DbSet<InterfaceDadosDestinoT> InterfaceDadosDestinoTs { get; set; }

    public virtual DbSet<InterfaceDadosLog> InterfaceDadosLogs { get; set; }

    public virtual DbSet<InterfaceDadosLogMsg> InterfaceDadosLogMsgs { get; set; }

    public virtual DbSet<InterfaceDadosPend> InterfaceDadosPends { get; set; }

    public virtual DbSet<InterfaceDadosTipoT> InterfaceDadosTipoTs { get; set; }

    public virtual DbSet<InterfaceDigsPendentesEistC> InterfaceDigsPendentesEistCs { get; set; }

    public virtual DbSet<InterfaceDigsPendentesParceiro> InterfaceDigsPendentesParceiros { get; set; }

    public virtual DbSet<InterfacesClientesParametro> InterfacesClientesParametros { get; set; }

    public virtual DbSet<InterfacesColuna> InterfacesColunas { get; set; }

    public virtual DbSet<InventarioRotaLog> InventarioRotaLogs { get; set; }

    public virtual DbSet<IpbrickWaitingCallsLog> IpbrickWaitingCallsLogs { get; set; }

    public virtual DbSet<Ipd> Ipds { get; set; }

    public virtual DbSet<IvaCodigoIsencaoT> IvaCodigoIsencaoTs { get; set; }

    public virtual DbSet<IvaT> IvaTs { get; set; }

    public virtual DbSet<IvaregEntidade> IvaregEntidades { get; set; }

    public virtual DbSet<IvaregT> IvaregTs { get; set; }

    public virtual DbSet<IvatipoT> IvatipoTs { get; set; }

    public virtual DbSet<LhpercursoStepsTemplate> LhpercursoStepsTemplates { get; set; }

    public virtual DbSet<LineHaul> LineHauls { get; set; }

    public virtual DbSet<LineHaulPlataforma> LineHaulPlataformas { get; set; }

    public virtual DbSet<LineHaulPlataformaT> LineHaulPlataformaTs { get; set; }

    public virtual DbSet<LineHaulPlataformasTemplate> LineHaulPlataformasTemplates { get; set; }

    public virtual DbSet<LineHaulRota> LineHaulRotas { get; set; }

    public virtual DbSet<LineHaulTemplate> LineHaulTemplates { get; set; }

    public virtual DbSet<LineHaulTipoServicoT> LineHaulTipoServicoTs { get; set; }

    public virtual DbSet<LineHaulTipoT> LineHaulTipoTs { get; set; }

    public virtual DbSet<LmsCustomerAndProspect> LmsCustomerAndProspects { get; set; }

    public virtual DbSet<LmsCustomerAndProspectsClient> LmsCustomerAndProspectsClients { get; set; }

    public virtual DbSet<LmsCustomerVolume> LmsCustomerVolumes { get; set; }

    public virtual DbSet<LmsCustomerVolumeClient> LmsCustomerVolumeClients { get; set; }

    public virtual DbSet<LocaisLevantamento> LocaisLevantamentos { get; set; }

    public virtual DbSet<Localization> Localizations { get; set; }

    public virtual DbSet<LocalizationsBackup> LocalizationsBackups { get; set; }

    public virtual DbSet<Manifesto> Manifestos { get; set; }

    public virtual DbSet<ManifestoAssinatura> ManifestoAssinaturas { get; set; }

    public virtual DbSet<ManifestoAssinaturaDetalhe> ManifestoAssinaturaDetalhes { get; set; }

    public virtual DbSet<ManifestoCommodity> ManifestoCommodities { get; set; }

    public virtual DbSet<ManifestoConsolidado> ManifestoConsolidados { get; set; }

    public virtual DbSet<ManifestoConsolidadoTnt> ManifestoConsolidadoTnts { get; set; }

    public virtual DbSet<ManifestoConsolidadosEmbalagemTiposT> ManifestoConsolidadosEmbalagemTiposTs { get; set; }

    public virtual DbSet<ManifestoConsolidadosInterface> ManifestoConsolidadosInterfaces { get; set; }

    public virtual DbSet<ManifestoConsolidadosInterfaceTipoT> ManifestoConsolidadosInterfaceTipoTs { get; set; }

    public virtual DbSet<ManifestoConsolidadosItem> ManifestoConsolidadosItems { get; set; }

    public virtual DbSet<ManifestoConsolidadosItemsInterface> ManifestoConsolidadosItemsInterfaces { get; set; }

    public virtual DbSet<ManifestoConsolidadosItemsInterfaceTipoT> ManifestoConsolidadosItemsInterfaceTipoTs { get; set; }

    public virtual DbSet<ManifestoConsolidadosPlataformaT> ManifestoConsolidadosPlataformaTs { get; set; }

    public virtual DbSet<ManifestoConsolidadosPlataformasEntidade> ManifestoConsolidadosPlataformasEntidades { get; set; }

    public virtual DbSet<ManifestoConsolidadosTiposEntidade> ManifestoConsolidadosTiposEntidades { get; set; }

    public virtual DbSet<ManifestoConsolidadosTiposT> ManifestoConsolidadosTiposTs { get; set; }

    public virtual DbSet<ManifestoCustosManuai> ManifestoCustosManuais { get; set; }

    public virtual DbSet<ManifestoCustosPenalizaco> ManifestoCustosPenalizacoes { get; set; }

    public virtual DbSet<ManifestoCustosPenalizacoesManuai> ManifestoCustosPenalizacoesManuais { get; set; }

    public virtual DbSet<ManifestoCustosPrevisto> ManifestoCustosPrevistos { get; set; }

    public virtual DbSet<ManifestoCustosReai> ManifestoCustosReais { get; set; }

    public virtual DbSet<ManifestoCustosTiposT> ManifestoCustosTiposTs { get; set; }

    public virtual DbSet<ManifestoDadosFiscai> ManifestoDadosFiscais { get; set; }

    public virtual DbSet<ManifestoDangGood> ManifestoDangGoods { get; set; }

    public virtual DbSet<ManifestoDestinatario> ManifestoDestinatarios { get; set; }

    public virtual DbSet<ManifestoDestinatarioSwap> ManifestoDestinatarioSwaps { get; set; }

    public virtual DbSet<ManifestoDestinatarioTlog> ManifestoDestinatarioTlogs { get; set; }

    public virtual DbSet<ManifestoDevolucao> ManifestoDevolucaos { get; set; }

    public virtual DbSet<ManifestoDevolucaoT> ManifestoDevolucaoTs { get; set; }

    public virtual DbSet<ManifestoDigitalizacao> ManifestoDigitalizacaos { get; set; }

    public virtual DbSet<ManifestoDigitalizacaoTipoT> ManifestoDigitalizacaoTipoTs { get; set; }

    public virtual DbSet<ManifestoDu> ManifestoDus { get; set; }

    public virtual DbSet<ManifestoEnvio> ManifestoEnvios { get; set; }

    public virtual DbSet<ManifestoEstadosLog> ManifestoEstadosLogs { get; set; }

    public virtual DbSet<ManifestoEstadosT> ManifestoEstadosTs { get; set; }

    public virtual DbSet<ManifestoExpedicao> ManifestoExpedicaos { get; set; }

    public virtual DbSet<ManifestoExpedicaoViagen> ManifestoExpedicaoViagens { get; set; }

    public virtual DbSet<ManifestoExpedidor> ManifestoExpedidors { get; set; }

    public virtual DbSet<ManifestoExpedidorTlog> ManifestoExpedidorTlogs { get; set; }

    public virtual DbSet<ManifestoFact> ManifestoFacts { get; set; }

    public virtual DbSet<ManifestoFactAgrupamento> ManifestoFactAgrupamentos { get; set; }

    public virtual DbSet<ManifestoFactCredito> ManifestoFactCreditos { get; set; }

    public virtual DbSet<ManifestoFactCreditoConfigT> ManifestoFactCreditoConfigTs { get; set; }

    public virtual DbSet<ManifestoFactItem> ManifestoFactItems { get; set; }

    public virtual DbSet<ManifestoFedexGrasp> ManifestoFedexGrasps { get; set; }

    public virtual DbSet<ManifestoFedexGraspLeg> ManifestoFedexGraspLegs { get; set; }

    public virtual DbSet<ManifestoImpressao> ManifestoImpressaos { get; set; }

    public virtual DbSet<ManifestoInterface> ManifestoInterfaces { get; set; }

    public virtual DbSet<ManifestoInterfaceTipoT> ManifestoInterfaceTipoTs { get; set; }

    public virtual DbSet<ManifestoItem> ManifestoItems { get; set; }

    public virtual DbSet<ManifestoItemsBk> ManifestoItemsBks { get; set; }

    public virtual DbSet<ManifestoLocPagaEntidade> ManifestoLocPagaEntidades { get; set; }

    public virtual DbSet<ManifestoLocPagaT> ManifestoLocPagaTs { get; set; }

    public virtual DbSet<ManifestoManuai> ManifestoManuais { get; set; }

    public virtual DbSet<ManifestoOrigem> ManifestoOrigems { get; set; }

    public virtual DbSet<ManifestoOrigemT> ManifestoOrigemTs { get; set; }

    public virtual DbSet<ManifestoPendentesEntrega> ManifestoPendentesEntregas { get; set; }

    public virtual DbSet<ManifestoPrevisoesEntrega> ManifestoPrevisoesEntregas { get; set; }

    public virtual DbSet<ManifestoRazoesNaoFacturarT> ManifestoRazoesNaoFacturarTs { get; set; }

    public virtual DbSet<ManifestoRecolha> ManifestoRecolhas { get; set; }

    public virtual DbSet<ManifestoRecolhaLog> ManifestoRecolhaLogs { get; set; }

    public virtual DbSet<ManifestoRecolhaPrevistum> ManifestoRecolhaPrevista { get; set; }

    public virtual DbSet<ManifestoReferencia> ManifestoReferencias { get; set; }

    public virtual DbSet<ManifestoReferenciasTipoT> ManifestoReferenciasTipoTs { get; set; }

    public virtual DbSet<ManifestoRetencao> ManifestoRetencaos { get; set; }

    public virtual DbSet<ManifestoScan> ManifestoScans { get; set; }

    public virtual DbSet<ManifestoScansFila> ManifestoScansFilas { get; set; }

    public virtual DbSet<ManifestoScansInterface> ManifestoScansInterfaces { get; set; }

    public virtual DbSet<ManifestoScansInterface2> ManifestoScansInterface2s { get; set; }

    public virtual DbSet<ManifestoScansInterfaceRejection> ManifestoScansInterfaceRejections { get; set; }

    public virtual DbSet<ManifestoScansInterfaceRejectionsErrorCodesT> ManifestoScansInterfaceRejectionsErrorCodesTs { get; set; }

    public virtual DbSet<ManifestoScansInterfaceTipoT> ManifestoScansInterfaceTipoTs { get; set; }

    public virtual DbSet<ManifestoScansTempBuytragoDuplicado> ManifestoScansTempBuytragoDuplicados { get; set; }

    public virtual DbSet<ManifestoScansTratar> ManifestoScansTratars { get; set; }

    public virtual DbSet<ManifestoScansTratarOrigemT> ManifestoScansTratarOrigemTs { get; set; }

    public virtual DbSet<ManifestoSeguranca> ManifestoSegurancas { get; set; }

    public virtual DbSet<ManifestoSegurancaAlerta> ManifestoSegurancaAlertas { get; set; }

    public virtual DbSet<ManifestoSegurancaAlertaTipoT> ManifestoSegurancaAlertaTipoTs { get; set; }

    public virtual DbSet<ManifestoTipoT> ManifestoTipoTs { get; set; }

    public virtual DbSet<ManifestoTnt> ManifestoTnts { get; set; }

    public virtual DbSet<ManifestoUltScan> ManifestoUltScans { get; set; }

    public virtual DbSet<ManifestoVolume> ManifestoVolumes { get; set; }

    public virtual DbSet<ManifestosCliente> ManifestosClientes { get; set; }

    public virtual DbSet<ManifestosDeleteLog> ManifestosDeleteLogs { get; set; }

    public virtual DbSet<MapEstadosFedexScan> MapEstadosFedexScans { get; set; }

    public virtual DbSet<MapEstadosFedexScansV2> MapEstadosFedexScansV2s { get; set; }

    public virtual DbSet<MapScanCodeGeodisRgl> MapScanCodeGeodisRgls { get; set; }

    public virtual DbSet<MapScanCodeRglBtg> MapScanCodeRglBtgs { get; set; }

    public virtual DbSet<MapScanCodeRglGeodi> MapScanCodeRglGeodis { get; set; }

    public virtual DbSet<MapeamentoGrupoFuncao> MapeamentoGrupoFuncaos { get; set; }

    public virtual DbSet<MapeamentoScanCode> MapeamentoScanCodes { get; set; }

    public virtual DbSet<MapeamentoServicoProdutosT> MapeamentoServicoProdutosTs { get; set; }

    public virtual DbSet<MarcoTeste> MarcoTestes { get; set; }

    public virtual DbSet<MaterialPedido> MaterialPedidos { get; set; }

    public virtual DbSet<MaterialPedidoJustificacaoT> MaterialPedidoJustificacaoTs { get; set; }

    public virtual DbSet<MaterialPedidoLog> MaterialPedidoLogs { get; set; }

    public virtual DbSet<MaterialPedidoRestricao> MaterialPedidoRestricaos { get; set; }

    public virtual DbSet<MaterialPedidoTipoAccoesT> MaterialPedidoTipoAccoesTs { get; set; }

    public virtual DbSet<MbTeste> MbTestes { get; set; }

    public virtual DbSet<MensagensEmailRecolha> MensagensEmailRecolhas { get; set; }

    public virtual DbSet<MenuDoc> MenuDocs { get; set; }

    public virtual DbSet<MenuReportsT> MenuReportsTs { get; set; }

    public virtual DbSet<MenuTipoReportsT> MenuTipoReportsTs { get; set; }

    public virtual DbSet<MenuUrl1T> MenuUrl1Ts { get; set; }

    public virtual DbSet<MenuUrl2T> MenuUrl2Ts { get; set; }

    public virtual DbSet<MenuUrlDoc> MenuUrlDocs { get; set; }

    public virtual DbSet<MenuUrlT> MenuUrlTs { get; set; }

    public virtual DbSet<MenuUrlcontroloDefaultsT> MenuUrlcontroloDefaultsTs { get; set; }

    public virtual DbSet<MenuUrlcontroloT> MenuUrlcontroloTs { get; set; }

    public virtual DbSet<MenuUrlgrupo> MenuUrlgrupos { get; set; }

    public virtual DbSet<MenuUrlreportsGrupo> MenuUrlreportsGrupos { get; set; }

    public virtual DbSet<MenuUrlreportsT> MenuUrlreportsTs { get; set; }

    public virtual DbSet<MenuUrlreportsUtilizadore> MenuUrlreportsUtilizadores { get; set; }

    public virtual DbSet<MenuUrlutilizadore> MenuUrlutilizadores { get; set; }

    public virtual DbSet<MesesFiscai> MesesFiscais { get; set; }

    public virtual DbSet<MeuMenuAreasFuncaoEntidade> MeuMenuAreasFuncaoEntidades { get; set; }

    public virtual DbSet<MeuMenuAreasFuncaoEntidadeItem> MeuMenuAreasFuncaoEntidadeItems { get; set; }

    public virtual DbSet<MeuMenuAreasGrupo> MeuMenuAreasGrupos { get; set; }

    public virtual DbSet<MeuMenuAreasItemsGrupo> MeuMenuAreasItemsGrupos { get; set; }

    public virtual DbSet<MeuMenuAreasItemsT> MeuMenuAreasItemsTs { get; set; }

    public virtual DbSet<MeuMenuAreasT> MeuMenuAreasTs { get; set; }

    public virtual DbSet<Mktcampanha> Mktcampanhas { get; set; }

    public virtual DbSet<MktcampanhaCliente> MktcampanhaClientes { get; set; }

    public virtual DbSet<MktcampanhaVantagen> MktcampanhaVantagens { get; set; }

    public virtual DbSet<MoedaT> MoedaTs { get; set; }

    public virtual DbSet<MoradasAlterar> MoradasAlterars { get; set; }

    public virtual DbSet<Moradasforced> Moradasforceds { get; set; }

    public virtual DbSet<Morept> Morepts { get; set; }

    public virtual DbSet<NbCodigosPostaisEntidade> NbCodigosPostaisEntidades { get; set; }

    public virtual DbSet<NbTeste> NbTestes { get; set; }

    public virtual DbSet<Newpt> Newpts { get; set; }

    public virtual DbSet<NotificacaoCliente> NotificacaoClientes { get; set; }

    public virtual DbSet<NotificacaoClienteTlog> NotificacaoClienteTlogs { get; set; }

    public virtual DbSet<NotificacaoContexto> NotificacaoContextos { get; set; }

    public virtual DbSet<NotificacaoContextoTlog> NotificacaoContextoTlogs { get; set; }

    public virtual DbSet<NotificacaoFormatoT> NotificacaoFormatoTs { get; set; }

    public virtual DbSet<NotificacaoManifesto> NotificacaoManifestos { get; set; }

    public virtual DbSet<NotificacaoManifestoTlog> NotificacaoManifestoTlogs { get; set; }

    public virtual DbSet<NotificacaoPersonalizadum> NotificacaoPersonalizada { get; set; }

    public virtual DbSet<NotificacaoTipoContextoT> NotificacaoTipoContextoTs { get; set; }

    public virtual DbSet<NotificacaoTipoT> NotificacaoTipoTs { get; set; }

    public virtual DbSet<NotificacaoTiposFormato> NotificacaoTiposFormatos { get; set; }

    public virtual DbSet<Notificaco> Notificacoes { get; set; }

    public virtual DbSet<NotificacoesAnexo> NotificacoesAnexos { get; set; }

    public virtual DbSet<NotificacoesDetalhe> NotificacoesDetalhes { get; set; }

    public virtual DbSet<NotificacoesItem> NotificacoesItems { get; set; }

    public virtual DbSet<NotificacoesPersonalizadasClienteMoradum> NotificacoesPersonalizadasClienteMorada { get; set; }

    public virtual DbSet<NsJanelaHorarium> NsJanelaHoraria { get; set; }

    public virtual DbSet<NsManifestoScansByDay> NsManifestoScansByDays { get; set; }

    public virtual DbSet<Nsplataforma> Nsplataformas { get; set; }

    public virtual DbSet<ObjectoDocumento> ObjectoDocumentos { get; set; }

    public virtual DbSet<ObjectoDocumentosExtensoesT> ObjectoDocumentosExtensoesTs { get; set; }

    public virtual DbSet<ObjectoDocumentosTipoT> ObjectoDocumentosTipoTs { get; set; }

    public virtual DbSet<OdaOpaTiersCode> OdaOpaTiersCodes { get; set; }

    public virtual DbSet<OverValMacro> OverValMacros { get; set; }

    public virtual DbSet<OverValMacroResult> OverValMacroResults { get; set; }

    public virtual DbSet<PCoffsImportarExcell> PCoffsImportarExcells { get; set; }

    public virtual DbSet<Pac> Pacs { get; set; }

    public virtual DbSet<PacCausasRaizT> PacCausasRaizTs { get; set; }

    public virtual DbSet<PacEstadoT> PacEstadoTs { get; set; }

    public virtual DbSet<PacReclamaco> PacReclamacoes { get; set; }

    public virtual DbSet<PacReclamacoesStatusT> PacReclamacoesStatusTs { get; set; }

    public virtual DbSet<PacTiposAccoesCorrectivasT> PacTiposAccoesCorrectivasTs { get; set; }

    public virtual DbSet<Pacdocumento> Pacdocumentos { get; set; }

    public virtual DbSet<PaisEstacoesT> PaisEstacoesTs { get; set; }

    public virtual DbSet<PaisProdutoZona> PaisProdutoZonas { get; set; }

    public virtual DbSet<PaisProdutoZona20160229> PaisProdutoZona20160229s { get; set; }

    public virtual DbSet<PaisZonaRegioesT> PaisZonaRegioesTs { get; set; }

    public virtual DbSet<PaisZonaT> PaisZonaTs { get; set; }

    public virtual DbSet<ParametrosFalhasTratavei> ParametrosFalhasTrataveis { get; set; }

    public virtual DbSet<ParametrosT> ParametrosTs { get; set; }

    public virtual DbSet<ParceiroCodigoPostalM> ParceiroCodigoPostalMs { get; set; }

    public virtual DbSet<ParserCexReembolso> ParserCexReembolsos { get; set; }

    public virtual DbSet<ParserCrossDocking> ParserCrossDockings { get; set; }

    public virtual DbSet<ParserDetail> ParserDetails { get; set; }

    public virtual DbSet<ParserDetailsAt> ParserDetailsAts { get; set; }

    public virtual DbSet<ParserDetailsAtLog> ParserDetailsAtLogs { get; set; }

    public virtual DbSet<ParserDetailsLog> ParserDetailsLogs { get; set; }

    public virtual DbSet<ParserDetailsTemp> ParserDetailsTemps { get; set; }

    public virtual DbSet<ParserErrosInesperado> ParserErrosInesperados { get; set; }

    public virtual DbSet<ParserEstado> ParserEstados { get; set; }

    public virtual DbSet<ParserEstadosLog> ParserEstadosLogs { get; set; }

    public virtual DbSet<ParserFileTypesT> ParserFileTypesTs { get; set; }

    public virtual DbSet<ParserFtp> ParserFtps { get; set; }

    public virtual DbSet<ParserHeader> ParserHeaders { get; set; }

    public virtual DbSet<ParserHeadersLog> ParserHeadersLogs { get; set; }

    public virtual DbSet<ParserHeadersReferencia> ParserHeadersReferencias { get; set; }

    public virtual DbSet<ParserHeadersReferenciasLog> ParserHeadersReferenciasLogs { get; set; }

    public virtual DbSet<ParserHeadersTemp> ParserHeadersTemps { get; set; }

    public virtual DbSet<ParserLogTemp> ParserLogTemps { get; set; }

    public virtual DbSet<ParserParametrosAdicionai> ParserParametrosAdicionais { get; set; }

    public virtual DbSet<ParserRecolha> ParserRecolhas { get; set; }

    public virtual DbSet<ParserRecolhaResultado> ParserRecolhaResultados { get; set; }

    public virtual DbSet<ParserRecolhasLog> ParserRecolhasLogs { get; set; }

    public virtual DbSet<ParserReferenciasTipo> ParserReferenciasTipos { get; set; }

    public virtual DbSet<ParserRegra> ParserRegras { get; set; }

    public virtual DbSet<ParserRegrasValore> ParserRegrasValores { get; set; }

    public virtual DbSet<ParserSourceTypeT> ParserSourceTypeTs { get; set; }

    public virtual DbSet<ParserSwap> ParserSwaps { get; set; }

    public virtual DbSet<ParserSwapsLog> ParserSwapsLogs { get; set; }

    public virtual DbSet<PcontrollersT06> PcontrollersT06s { get; set; }

    public virtual DbSet<PcontrollersT07> PcontrollersT07s { get; set; }

    public virtual DbSet<PendentesSap> PendentesSaps { get; set; }

    public virtual DbSet<PerguntasResposta> PerguntasRespostas { get; set; }

    public virtual DbSet<PerguntasRespostasM> PerguntasRespostasMs { get; set; }

    public virtual DbSet<PerguntasRespostasT> PerguntasRespostasTs { get; set; }

    public virtual DbSet<PerguntasRespostasTBk> PerguntasRespostasTBks { get; set; }

    public virtual DbSet<PesoT> PesoTs { get; set; }

    public virtual DbSet<Pickup> Pickups { get; set; }

    public virtual DbSet<PickupCustosManuai> PickupCustosManuais { get; set; }

    public virtual DbSet<PickupCustosPenalizaco> PickupCustosPenalizacoes { get; set; }

    public virtual DbSet<PickupCustosPenalizacoesManuai> PickupCustosPenalizacoesManuais { get; set; }

    public virtual DbSet<PickupCustosPrevisto> PickupCustosPrevistos { get; set; }

    public virtual DbSet<PickupCustosReai> PickupCustosReais { get; set; }

    public virtual DbSet<PickupDelegacao> PickupDelegacaos { get; set; }

    public virtual DbSet<PickupDocumento> PickupDocumentos { get; set; }

    public virtual DbSet<PickupEncomendaItem> PickupEncomendaItems { get; set; }

    public virtual DbSet<PickupEncomendum> PickupEncomenda { get; set; }

    public virtual DbSet<PickupEstadosT> PickupEstadosTs { get; set; }

    public virtual DbSet<PickupInterface> PickupInterfaces { get; set; }

    public virtual DbSet<PickupInterfaceTipoT> PickupInterfaceTipoTs { get; set; }

    public virtual DbSet<PickupItem> PickupItems { get; set; }

    public virtual DbSet<PickupLocalPagamentoT> PickupLocalPagamentoTs { get; set; }

    public virtual DbSet<PickupLog> PickupLogs { get; set; }

    public virtual DbSet<PickupLogTipoAccoesT> PickupLogTipoAccoesTs { get; set; }

    public virtual DbSet<PickupTlog> PickupTlogs { get; set; }

    public virtual DbSet<PickupcodesT> PickupcodesTs { get; set; }

    public virtual DbSet<PjDestinatario> PjDestinatarios { get; set; }

    public virtual DbSet<PjDestinatarios2> PjDestinatarios2s { get; set; }

    public virtual DbSet<PjDestinatarios3> PjDestinatarios3s { get; set; }

    public virtual DbSet<PjInfo> PjInfos { get; set; }

    public virtual DbSet<PjInfo2> PjInfo2s { get; set; }

    public virtual DbSet<PjInfo3> PjInfo3s { get; set; }

    public virtual DbSet<PjManifesto> PjManifestos { get; set; }

    public virtual DbSet<PjManifestos2> PjManifestos2s { get; set; }

    public virtual DbSet<PjManifestosNome> PjManifestosNomes { get; set; }

    public virtual DbSet<PjManifestosNomes2> PjManifestosNomes2s { get; set; }

    public virtual DbSet<PjManifestosNomes3> PjManifestosNomes3s { get; set; }

    public virtual DbSet<PlaneamentoControloImpressao> PlaneamentoControloImpressaos { get; set; }

    public virtual DbSet<PlataformaCliente> PlataformaClientes { get; set; }

    public virtual DbSet<PlataformaRegT> PlataformaRegTs { get; set; }

    public virtual DbSet<PlataformaT> PlataformaTs { get; set; }

    public virtual DbSet<PlataformaZonasT> PlataformaZonasTs { get; set; }

    public virtual DbSet<PlataformasEntidadesM> PlataformasEntidadesMs { get; set; }

    public virtual DbSet<PlataformasM> PlataformasMs { get; set; }

    public virtual DbSet<PlataformasParceirosM> PlataformasParceirosMs { get; set; }

    public virtual DbSet<PortalClientesMap> PortalClientesMaps { get; set; }

    public virtual DbSet<PrevisoesEntregaT> PrevisoesEntregaTs { get; set; }

    public virtual DbSet<ProducaoCustosPenalizaco> ProducaoCustosPenalizacoes { get; set; }

    public virtual DbSet<ProducaoPenalizacoesTipoT> ProducaoPenalizacoesTipoTs { get; set; }

    public virtual DbSet<ProdutoFamiliasT> ProdutoFamiliasTs { get; set; }

    public virtual DbSet<ProdutoPesosT> ProdutoPesosTs { get; set; }

    public virtual DbSet<ProdutoServico> ProdutoServicos { get; set; }

    public virtual DbSet<ProdutoTiposM> ProdutoTiposMs { get; set; }

    public virtual DbSet<ProdutoTiposT> ProdutoTiposTs { get; set; }

    public virtual DbSet<ProdutosProvedoresT> ProdutosProvedoresTs { get; set; }

    public virtual DbSet<ProformaLin> ProformaLins { get; set; }

    public virtual DbSet<Provedore> Provedores { get; set; }

    public virtual DbSet<Ptinfo> Ptinfos { get; set; }

    public virtual DbSet<Ptpendente> Ptpendentes { get; set; }

    public virtual DbSet<Ptsaraiva> Ptsaraivas { get; set; }

    public virtual DbSet<Pudo> Pudos { get; set; }

    public virtual DbSet<PudoClienteConfig> PudoClienteConfigs { get; set; }

    public virtual DbSet<PudoClienteConfigOpco> PudoClienteConfigOpcoes { get; set; }

    public virtual DbSet<PudoCpostal> PudoCpostals { get; set; }

    public virtual DbSet<PudoManifesto> PudoManifestos { get; set; }

    public virtual DbSet<PudoManifestoLog> PudoManifestoLogs { get; set; }

    public virtual DbSet<PudoManifestoRecolha> PudoManifestoRecolhas { get; set; }

    public virtual DbSet<Pupfixo> Pupfixos { get; set; }

    public virtual DbSet<PupfixoLog> PupfixoLogs { get; set; }

    public virtual DbSet<RealocarRecolhasRota> RealocarRecolhasRotas { get; set; }

    public virtual DbSet<Reclamacao> Reclamacaos { get; set; }

    public virtual DbSet<ReclamacaoAwb> ReclamacaoAwbs { get; set; }

    public virtual DbSet<ReclamacaoCategoriaT> ReclamacaoCategoriaTs { get; set; }

    public virtual DbSet<ReclamacaoCausaDetalhe> ReclamacaoCausaDetalhes { get; set; }

    public virtual DbSet<ReclamacaoCausaT> ReclamacaoCausaTs { get; set; }

    public virtual DbSet<ReclamacaoDetalhe> ReclamacaoDetalhes { get; set; }

    public virtual DbSet<ReclamacaoDocumento> ReclamacaoDocumentos { get; set; }

    public virtual DbSet<ReclamacaoEstadoGeralT> ReclamacaoEstadoGeralTs { get; set; }

    public virtual DbSet<ReclamacaoEstadoT> ReclamacaoEstadoTs { get; set; }

    public virtual DbSet<ReclamacaoLocalCausaT> ReclamacaoLocalCausaTs { get; set; }

    public virtual DbSet<ReclamacaoLocalT> ReclamacaoLocalTs { get; set; }

    public virtual DbSet<ReclamacaoMeiosEntradaT> ReclamacaoMeiosEntradaTs { get; set; }

    public virtual DbSet<ReclamacaoRegimeT> ReclamacaoRegimeTs { get; set; }

    public virtual DbSet<ReclamacaoResolucaoT> ReclamacaoResolucaoTs { get; set; }

    public virtual DbSet<ReclamacaoTipoCausaT> ReclamacaoTipoCausaTs { get; set; }

    public virtual DbSet<ReclamacaoTipoT> ReclamacaoTipoTs { get; set; }

    public virtual DbSet<RecolhaPrevisoesEntrega> RecolhaPrevisoesEntregas { get; set; }

    public virtual DbSet<RecolhasDestinatario> RecolhasDestinatarios { get; set; }

    public virtual DbSet<RecolhasProvedorCriacao> RecolhasProvedorCriacaos { get; set; }

    public virtual DbSet<ReemBolsosAgrupamento> ReemBolsosAgrupamentos { get; set; }

    public virtual DbSet<ReemBolsosAgrupamentosT> ReemBolsosAgrupamentosTs { get; set; }

    public virtual DbSet<RegimeManifesto> RegimeManifestos { get; set; }

    public virtual DbSet<RegimeT> RegimeTs { get; set; }

    public virtual DbSet<RegrasValidacaoAwb> RegrasValidacaoAwbs { get; set; }

    public virtual DbSet<RegularidadeT> RegularidadeTs { get; set; }

    public virtual DbSet<RelatoriosEmail> RelatoriosEmails { get; set; }

    public virtual DbSet<Renting> Rentings { get; set; }

    public virtual DbSet<Reparticao> Reparticaos { get; set; }

    public virtual DbSet<Rex2Tarifa> Rex2Tarifas { get; set; }

    public virtual DbSet<RotaClasseT> RotaClasseTs { get; set; }

    public virtual DbSet<RotaModoTransporteT> RotaModoTransporteTs { get; set; }

    public virtual DbSet<RotaSegmentosT> RotaSegmentosTs { get; set; }

    public virtual DbSet<RotaUtilizadoresLog> RotaUtilizadoresLogs { get; set; }

    public virtual DbSet<RotaViasT> RotaViasTs { get; set; }

    public virtual DbSet<RotasAngTemporarium> RotasAngTemporaria { get; set; }

    public virtual DbSet<RotasCodPostaisEntrega> RotasCodPostaisEntregas { get; set; }

    public virtual DbSet<RotasCodPostaisRecolha> RotasCodPostaisRecolhas { get; set; }

    public virtual DbSet<RotasCodPostaisRecolhasBackup> RotasCodPostaisRecolhasBackups { get; set; }

    public virtual DbSet<RotasEntidadesM> RotasEntidadesMs { get; set; }

    public virtual DbSet<Rotum> Rota { get; set; }

    public virtual DbSet<SalesHistory> SalesHistories { get; set; }

    public virtual DbSet<SalesHistoryAudit> SalesHistoryAudits { get; set; }

    public virtual DbSet<SalesLead> SalesLeads { get; set; }

    public virtual DbSet<SalesLeadAcordoTiposT> SalesLeadAcordoTiposTs { get; set; }

    public virtual DbSet<SalesLeadEntrevista> SalesLeadEntrevistas { get; set; }

    public virtual DbSet<SalesLeadEstadosLog> SalesLeadEstadosLogs { get; set; }

    public virtual DbSet<SalesLeadEstadosT> SalesLeadEstadosTs { get; set; }

    public virtual DbSet<SalesLeadOrigemGrupoT> SalesLeadOrigemGrupoTs { get; set; }

    public virtual DbSet<SalesLeadOrigemTipoT> SalesLeadOrigemTipoTs { get; set; }

    public virtual DbSet<SalesLeadProspect> SalesLeadProspects { get; set; }

    public virtual DbSet<SalesLeadStatusReasonsT> SalesLeadStatusReasonsTs { get; set; }

    public virtual DbSet<SalesLeadStatusReasonsTrfT> SalesLeadStatusReasonsTrfTs { get; set; }

    public virtual DbSet<SalesLeadStatusT> SalesLeadStatusTs { get; set; }

    public virtual DbSet<SalesLeadsEnvio> SalesLeadsEnvios { get; set; }

    public virtual DbSet<SalesLeadsEnviosZona> SalesLeadsEnviosZonas { get; set; }

    public virtual DbSet<SalesLeadsFormulaValoresT> SalesLeadsFormulaValoresTs { get; set; }

    public virtual DbSet<SalesLeadsMotivosT> SalesLeadsMotivosTs { get; set; }

    public virtual DbSet<SalesLeadsOrigemT> SalesLeadsOrigemTs { get; set; }

    public virtual DbSet<ScanCodesTratamentoAuto> ScanCodesTratamentoAutos { get; set; }

    public virtual DbSet<ScanTypeExportLayoutReqT> ScanTypeExportLayoutReqTs { get; set; }

    public virtual DbSet<ScanTypeExportLayoutT> ScanTypeExportLayoutTs { get; set; }

    public virtual DbSet<ScanTypeT> ScanTypeTs { get; set; }

    public virtual DbSet<ScancodesOpDistribuicao> ScancodesOpDistribuicaos { get; set; }

    public virtual DbSet<ScancodesT> ScancodesTs { get; set; }

    public virtual DbSet<ScancodesTranslationsT> ScancodesTranslationsTs { get; set; }

    public virtual DbSet<ScansObfedex> ScansObfedices { get; set; }

    public virtual DbSet<ScansProvedoresT> ScansProvedoresTs { get; set; }

    public virtual DbSet<SegmentosT> SegmentosTs { get; set; }

    public virtual DbSet<ServicosCliente> ServicosClientes { get; set; }

    public virtual DbSet<ServicosDetAreaNegT> ServicosDetAreaNegTs { get; set; }

    public virtual DbSet<ServicosDetT> ServicosDetTs { get; set; }

    public virtual DbSet<ServicosDetTBackupHd> ServicosDetTBackupHds { get; set; }

    public virtual DbSet<ServicosDetTBk20170317> ServicosDetTBk20170317s { get; set; }

    public virtual DbSet<ServicosDiasTransito> ServicosDiasTransitos { get; set; }

    public virtual DbSet<ServicosDiasTransitoZona> ServicosDiasTransitoZonas { get; set; }

    public virtual DbSet<ServicosDiasTransitoZonas0> ServicosDiasTransitoZonas0s { get; set; }

    public virtual DbSet<ServicosEspeciai> ServicosEspeciais { get; set; }

    public virtual DbSet<ServicosEspeciaisCategoriasT> ServicosEspeciaisCategoriasTs { get; set; }

    public virtual DbSet<ServicosEspeciaisFedex> ServicosEspeciaisFedices { get; set; }

    public virtual DbSet<ServicosProduto> ServicosProdutos { get; set; }

    public virtual DbSet<ServicosProvedoresT> ServicosProvedoresTs { get; set; }

    public virtual DbSet<ServicosRegimesDet> ServicosRegimesDets { get; set; }

    public virtual DbSet<ServicosT> ServicosTs { get; set; }

    public virtual DbSet<ServicosUnixGcommap> ServicosUnixGcommaps { get; set; }

    public virtual DbSet<Simulacao2016> Simulacao2016s { get; set; }

    public virtual DbSet<Sospedido> Sospedidos { get; set; }

    public virtual DbSet<SospedidoDetalhe> SospedidoDetalhes { get; set; }

    public virtual DbSet<SospedidoEstadosT> SospedidoEstadosTs { get; set; }

    public virtual DbSet<SospedidoItem> SospedidoItems { get; set; }

    public virtual DbSet<SospedidoMotivoRejeitadoT> SospedidoMotivoRejeitadoTs { get; set; }

    public virtual DbSet<SospedidoTipoDetalhesT> SospedidoTipoDetalhesTs { get; set; }

    public virtual DbSet<SospedidoTransportadore> SospedidoTransportadores { get; set; }

    public virtual DbSet<SospedidoVolume> SospedidoVolumes { get; set; }

    public virtual DbSet<SpInputDadosXml> SpInputDadosXmls { get; set; }

    public virtual DbSet<SwapT> SwapTs { get; set; }

    public virtual DbSet<TableTest> TableTests { get; set; }

    public virtual DbSet<Tarifa> Tarifas { get; set; }

    public virtual DbSet<TarifaClienteFicheiro> TarifaClienteFicheiros { get; set; }

    public virtual DbSet<TarifaDetalhe> TarifaDetalhes { get; set; }

    public virtual DbSet<TarifaDetalhesN> TarifaDetalhesNs { get; set; }

    public virtual DbSet<TarifaDetalhesSoon2bedeleted> TarifaDetalhesSoon2bedeleteds { get; set; }

    public virtual DbSet<TarifaIncidenciasTiposMap> TarifaIncidenciasTiposMaps { get; set; }

    public virtual DbSet<TarifaMotoristaCondico> TarifaMotoristaCondicoes { get; set; }

    public virtual DbSet<TarifaMotoristum> TarifaMotorista { get; set; }

    public virtual DbSet<TarifaPenalizacoesTipoT> TarifaPenalizacoesTipoTs { get; set; }

    public virtual DbSet<TarifaTipoAgrupaRep> TarifaTipoAgrupaReps { get; set; }

    public virtual DbSet<TarifaTipoAgrupaRepT> TarifaTipoAgrupaRepTs { get; set; }

    public virtual DbSet<TarifaTipoAgrupaT> TarifaTipoAgrupaTs { get; set; }

    public virtual DbSet<TarifaTipoIncidenciaT> TarifaTipoIncidenciaTs { get; set; }

    public virtual DbSet<TarifaTipoT> TarifaTipoTs { get; set; }

    public virtual DbSet<TarifaTipoValorT> TarifaTipoValorTs { get; set; }

    public virtual DbSet<TarifaTiposIncidencium> TarifaTiposIncidencia { get; set; }

    public virtual DbSet<TarifaZona> TarifaZonas { get; set; }

    public virtual DbSet<TarifaZonas0> TarifaZonas0s { get; set; }

    public virtual DbSet<TarifasEmUso> TarifasEmUsos { get; set; }

    public virtual DbSet<TarifasEspeciaisFornecedor> TarifasEspeciaisFornecedors { get; set; }

    public virtual DbSet<TarifasPenalizaco> TarifasPenalizacoes { get; set; }

    public virtual DbSet<TarifasSimular> TarifasSimulars { get; set; }

    public virtual DbSet<Tarifassimular2015> Tarifassimular2015s { get; set; }

    public virtual DbSet<Tarifassimular2016> Tarifassimular2016s { get; set; }

    public virtual DbSet<TaxaCombustivelT> TaxaCombustivelTs { get; set; }

    public virtual DbSet<TaxaCombustivelZonasT> TaxaCombustivelZonasTs { get; set; }

    public virtual DbSet<TaxasAdicionai> TaxasAdicionais { get; set; }

    public virtual DbSet<TaxasAdicionaisConfig> TaxasAdicionaisConfigs { get; set; }

    public virtual DbSet<TaxasAdicionaisConfigDetalhe> TaxasAdicionaisConfigDetalhes { get; set; }

    public virtual DbSet<TaxasAdicionaisConfigDetalheZona> TaxasAdicionaisConfigDetalheZonas { get; set; }

    public virtual DbSet<TaxasAdicionaisTarifa> TaxasAdicionaisTarifas { get; set; }

    public virtual DbSet<TblDelete> TblDeletes { get; set; }

    public virtual DbSet<TblDelete1> TblDelete1s { get; set; }

    public virtual DbSet<TblDeleteMe> TblDeleteMes { get; set; }

    public virtual DbSet<TempAlldatum> TempAlldata { get; set; }

    public virtual DbSet<TempAndreClientesComtarifaAlteradum> TempAndreClientesComtarifaAlterada { get; set; }

    public virtual DbSet<TempAndreTarifasRex2alterada> TempAndreTarifasRex2alteradas { get; set; }

    public virtual DbSet<TempAtribuitarifasAoDom> TempAtribuitarifasAoDoms { get; set; }

    public virtual DbSet<TempAtribuitarifasFedex> TempAtribuitarifasFedices { get; set; }

    public virtual DbSet<TempAtribuitarifasFedexAo> TempAtribuitarifasFedexAos { get; set; }

    public virtual DbSet<TempAtribuitarifasRexii> TempAtribuitarifasRexiis { get; set; }

    public virtual DbSet<TempAumentos2014> TempAumentos2014s { get; set; }

    public virtual DbSet<TempAumentos2014Hd> TempAumentos2014Hds { get; set; }

    public virtual DbSet<TempAumentos2015> TempAumentos2015s { get; set; }

    public virtual DbSet<TempAumentosSimulacao> TempAumentosSimulacaos { get; set; }

    public virtual DbSet<TempEstadoEntrega> TempEstadoEntregas { get; set; }

    public virtual DbSet<TempHdMonitorFact> TempHdMonitorFacts { get; set; }

    public virtual DbSet<TempNeptunoHd> TempNeptunoHds { get; set; }

    public virtual DbSet<TempPtctmnCarrovassoura> TempPtctmnCarrovassouras { get; set; }

    public virtual DbSet<TempRedesCarrovassoura> TempRedesCarrovassouras { get; set; }

    public virtual DbSet<TempSafira> TempSafiras { get; set; }

    public virtual DbSet<TempSheet1Am> TempSheet1Ams { get; set; }

    public virtual DbSet<TempSplitComercial> TempSplitComercials { get; set; }

    public virtual DbSet<TempStatusConvert> TempStatusConverts { get; set; }

    public virtual DbSet<TempTemplatesTarifas2011> TempTemplatesTarifas2011s { get; set; }

    public virtual DbSet<TempTemplatesTarifasRex2Final> TempTemplatesTarifasRex2Finals { get; set; }

    public virtual DbSet<Teresaalf> Teresaalves { get; set; }

    public virtual DbSet<TesteAudit> TesteAudits { get; set; }

    public virtual DbSet<TesteHd> TesteHds { get; set; }

    public virtual DbSet<TesteNb> TesteNbs { get; set; }

    public virtual DbSet<TiagoCostum> TiagoCosta { get; set; }

    public virtual DbSet<TipoInstalacaoShipT> TipoInstalacaoShipTs { get; set; }

    public virtual DbSet<Tipsa> Tipsas { get; set; }

    public virtual DbSet<Tipsa4> Tipsa4s { get; set; }

    public virtual DbSet<TmpAndre> TmpAndres { get; set; }

    public virtual DbSet<TmpDocsLinToDelete> TmpDocsLinToDeletes { get; set; }

    public virtual DbSet<TmpSaraiva> TmpSaraivas { get; set; }

    public virtual DbSet<TodosCp> TodosCps { get; set; }

    public virtual DbSet<TransportChargesT> TransportChargesTs { get; set; }

    public virtual DbSet<TratamentoTipoT> TratamentoTipoTs { get; set; }

    public virtual DbSet<TtBenetton> TtBenettons { get; set; }

    public virtual DbSet<TtPtcTmn> TtPtcTmns { get; set; }

    public virtual DbSet<TtPtcredesLog> TtPtcredesLogs { get; set; }

    public virtual DbSet<TtcpFedex> TtcpFedices { get; set; }

    public virtual DbSet<UnidadesMetricasT> UnidadesMetricasTs { get; set; }

    public virtual DbSet<UnidadesMonetariasCambioLog> UnidadesMonetariasCambioLogs { get; set; }

    public virtual DbSet<UnidadesMonetariasT> UnidadesMonetariasTs { get; set; }

    public virtual DbSet<UnidadesPesoT> UnidadesPesoTs { get; set; }

    public virtual DbSet<UnidadesVolumetricasT> UnidadesVolumetricasTs { get; set; }

    public virtual DbSet<Utilizador> Utilizadores { get; set; }

    public virtual DbSet<UtilizadorAcessosDblog> UtilizadorAcessosDblogs { get; set; }

    public virtual DbSet<UtilizadorAcessosDblogLin> UtilizadorAcessosDblogLins { get; set; }

    public virtual DbSet<UtilizadorAcessosReportLog> UtilizadorAcessosReportLogs { get; set; }

    public virtual DbSet<UtilizadorAcessosUrl> UtilizadorAcessosUrls { get; set; }

    public virtual DbSet<UtilizadorAcessosUrlHistLog> UtilizadorAcessosUrlHistLogs { get; set; }

    public virtual DbSet<UtilizadorAcessosUrlLog> UtilizadorAcessosUrlLogs { get; set; }

    public virtual DbSet<UtilizadorAcessosUrlPermisso> UtilizadorAcessosUrlPermissoes { get; set; }

    public virtual DbSet<UtilizadorAcessosUrlReport> UtilizadorAcessosUrlReports { get; set; }

    public virtual DbSet<UtilizadorAcessosUrlReportsPermisso> UtilizadorAcessosUrlReportsPermissoes { get; set; }

    //public virtual DbSet<UtilizadorActivo> UtilizadoresActivos { get; set; }

    public virtual DbSet<UtilizadorAgente> UtilizadorAgentes { get; set; }

    public virtual DbSet<UtilizadorAlertasCount> UtilizadorAlertasCounts { get; set; }

    public virtual DbSet<UtilizadorAusencia> UtilizadorAusencias { get; set; }

    public virtual DbSet<UtilizadorDistribuidore> UtilizadorDistribuidores { get; set; }

    public virtual DbSet<UtilizadorEntidade> UtilizadorEntidades { get; set; }

    public virtual DbSet<UtilizadorEquipa> UtilizadorEquipas { get; set; }

    public virtual DbSet<UtilizadorExcepcao> UtilizadorExcepcaos { get; set; }

    public virtual DbSet<UtilizadorFuncaoAcessosUrl> UtilizadorFuncaoAcessosUrls { get; set; }

    public virtual DbSet<UtilizadorFuncaoAcessosUrlPermisso> UtilizadorFuncaoAcessosUrlPermissoes { get; set; }

    public virtual DbSet<UtilizadorFuncaoAcessosUrlReport> UtilizadorFuncaoAcessosUrlReports { get; set; }

    public virtual DbSet<UtilizadorFuncaoAcessosUrlreportsPermisso> UtilizadorFuncaoAcessosUrlreportsPermissoes { get; set; }

    public virtual DbSet<UtilizadorFuncaoEntidade> UtilizadorFuncaoEntidades { get; set; }

    public virtual DbSet<UtilizadorFuncaoEntidadeAcessosUrl> UtilizadorFuncaoEntidadeAcessosUrls { get; set; }

    public virtual DbSet<UtilizadorFuncaoEntidadeAcessosUrlParam> UtilizadorFuncaoEntidadeAcessosUrlParams { get; set; }

    public virtual DbSet<UtilizadorFuncaoEntidadeAcessosUrlReport> UtilizadorFuncaoEntidadeAcessosUrlReports { get; set; }

    public virtual DbSet<UtilizadorFuncaoEntidadeAcessosUrlReportsParam> UtilizadorFuncaoEntidadeAcessosUrlReportsParams { get; set; }

    public virtual DbSet<UtilizadorFuncaoEntidadeParam> UtilizadorFuncaoEntidadeParams { get; set; }

    public virtual DbSet<UtilizadorFuncaoParamsT> UtilizadorFuncaoParamsTs { get; set; }

    public virtual DbSet<UtilizadorFuncaoT> UtilizadorFuncaoTs { get; set; }

    public virtual DbSet<UtilizadorFunco> UtilizadorFuncoes { get; set; }

    public virtual DbSet<UtilizadorFuncoesEntidade> UtilizadorFuncoesEntidades { get; set; }

    public virtual DbSet<UtilizadorFuncoesEntidadesPlataforma> UtilizadorFuncoesEntidadesPlataformas { get; set; }

    public virtual DbSet<UtilizadorFuncoesT> UtilizadorFuncoesTs { get; set; }

    public virtual DbSet<UtilizadorGruposDistribuidoresT> UtilizadorGruposDistribuidoresTs { get; set; }

    public virtual DbSet<UtilizadorGruposEntidadesT> UtilizadorGruposEntidadesTs { get; set; }

    public virtual DbSet<UtilizadorGruposT> UtilizadorGruposTs { get; set; }

    public virtual DbSet<UtilizadorLogin> UtilizadorLogins { get; set; }

    public virtual DbSet<UtilizadorLoginLog> UtilizadorLoginLogs { get; set; }

    public virtual DbSet<UtilizadorLoginMirrorsT> UtilizadorLoginMirrorsTs { get; set; }

    public virtual DbSet<UtilizadorMotivosAusenciaT> UtilizadorMotivosAusenciaTs { get; set; }

    public virtual DbSet<UtilizadorRelatorioDiario> UtilizadorRelatorioDiarios { get; set; }

    public virtual DbSet<UtilizadorSetting> UtilizadorSettings { get; set; }

    public virtual DbSet<UtilizadoresEquipasCpostal> UtilizadoresEquipasCpostals { get; set; }

    public virtual DbSet<UtilizadoresEquipasCpostalBak> UtilizadoresEquipasCpostalBaks { get; set; }

    public virtual DbSet<VClienteEntidadesPotNeg> VClienteEntidadesPotNegs { get; set; }

    public virtual DbSet<VClienteMorada> VClienteMoradas { get; set; }

    public virtual DbSet<VEntrevistasCrmApagar> VEntrevistasCrmApagars { get; set; }

    public virtual DbSet<VEntrevistasEfectuadasApagar> VEntrevistasEfectuadasApagars { get; set; }

    public virtual DbSet<VEntrevistasPECApagar> VEntrevistasPECApagars { get; set; }

    public virtual DbSet<VEntrevistasPendentesApagar> VEntrevistasPendentesApagars { get; set; }

    public virtual DbSet<VEtlmanifesto> VEtlmanifestos { get; set; }

    public virtual DbSet<VImportacaoScansAbertosApagar> VImportacaoScansAbertosApagars { get; set; }

    public virtual DbSet<VManifestoPendentesEntrega> VManifestoPendentesEntregas { get; set; }

    public virtual DbSet<VMaterialCutOffsApagar> VMaterialCutOffsApagars { get; set; }

    public virtual DbSet<VMaterialPedidosCutOffsApagar> VMaterialPedidosCutOffsApagars { get; set; }

    public virtual DbSet<VReclamaco> VReclamacoes { get; set; }

    public virtual DbSet<VRecolhasCutOffsApagar> VRecolhasCutOffsApagars { get; set; }

    public virtual DbSet<VScan71RiApagar> VScan71RiApagars { get; set; }

    public virtual DbSet<VeraGuerreiro> VeraGuerreiros { get; set; }

    public virtual DbSet<Viatura> Viaturas { get; set; }

    public virtual DbSet<ViaturaCombustiveisT> ViaturaCombustiveisTs { get; set; }

    public virtual DbSet<ViaturaCustosExtra> ViaturaCustosExtras { get; set; }

    public virtual DbSet<ViaturaReviso> ViaturaRevisoes { get; set; }

    public virtual DbSet<ViaturaTipoContratoT> ViaturaTipoContratoTs { get; set; }

    public virtual DbSet<ViaturaZona> ViaturaZonas { get; set; }

    public virtual DbSet<ViaturasTipoT> ViaturasTipoTs { get; set; }

    public virtual DbSet<ViewFacturacaoRexIi> ViewFacturacaoRexIis { get; set; }

    public virtual DbSet<ViewSapbwVenda> ViewSapbwVendas { get; set; }

    public virtual DbSet<WsCexIncidenciasTratamentoLog> WsCexIncidenciasTratamentoLogs { get; set; }

    public virtual DbSet<WsauthLog> WsauthLogs { get; set; }

    public virtual DbSet<ZIuqTempIndexKey> ZIuqTempIndexKeys { get; set; }

    public virtual DbSet<ZIuqTempIndexUsage> ZIuqTempIndexUsages { get; set; }

    public virtual DbSet<Zona> Zonas { get; set; }

    public virtual DbSet<ZonasRota> ZonasRotas { get; set; }

    public virtual DbSet<ZonasTarifariosRex2> ZonasTarifariosRex2s { get; set; }

    public virtual DbSet<ZzzConvPortal> ZzzConvPortals { get; set; }

    protected override void OnConfiguring(DbContextOptionsBuilder optionsBuilder)
#warning To protect potentially sensitive information in your connection string, you should move it out of source code. You can avoid scaffolding the connection string by using the Name= syntax to read it from configuration - see https://go.microsoft.com/fwlink/?linkid=2131148. For more guidance on storing connection strings, see http://go.microsoft.com/fwlink/?LinkId=723263.
        => optionsBuilder.UseSqlServer("server=192.168.90.241;trusted_connection=false;user=sa;password=SCOV78q6;database=GCOM2;Connect Timeout=150;Type System Version=SQL Server 2008;Enlist=true;Trust Server Certificate=true;");

    protected override void OnModelCreating(ModelBuilder modelBuilder)
    {
        modelBuilder.UseCollation("SQL_Latin1_General_CP1_CI_AS");

        modelBuilder.Entity<AbatimentosDebrief>(entity =>
        {
            entity.HasKey(e => e.Id).HasName("PK__Abatimen__3213E83F52322F2F");

            entity.ToTable("AbatimentosDebrief");

            entity.Property(e => e.Id).HasColumnName("id");
            entity.Property(e => e.DtAccao)
                .HasColumnType("datetime")
                .HasColumnName("dtAccao");
            entity.Property(e => e.IdObjecto).HasColumnName("idObjecto");
            entity.Property(e => e.IdUtil).HasColumnName("idUtil");
            entity.Property(e => e.ScanCode).HasMaxLength(2);
            entity.Property(e => e.TipoAbatimento)
                .HasMaxLength(1)
                .IsUnicode(false)
                .IsFixedLength()
                .HasColumnName("tipoAbatimento");
        });

        modelBuilder.Entity<AeroportoCompanhiaAerea>(entity =>
        {
            entity
                .HasNoKey()
                .ToTable("AeroportoCompanhiaAerea");

            entity.Property(e => e.IdAeroporto).HasColumnName("idAeroporto");
            entity.Property(e => e.IdCompanhiaAerea).HasColumnName("idCompanhiaAerea");
        });

        modelBuilder.Entity<AeroportoT>(entity =>
        {
            entity.ToTable("Aeroporto_T");

            entity.Property(e => e.Id).HasColumnName("id");
            entity.Property(e => e.Activo)
                .IsRequired()
                .HasDefaultValueSql("((1))")
                .HasColumnName("activo");
            entity.Property(e => e.Codigo)
                .HasMaxLength(50)
                .HasColumnName("codigo");
            entity.Property(e => e.Descricao)
                .HasMaxLength(50)
                .HasColumnName("descricao");
            entity.Property(e => e.IdPais).HasColumnName("idPais");
            entity.Property(e => e.Sigla)
                .HasMaxLength(5)
                .HasColumnName("sigla");
        });

        modelBuilder.Entity<AlertaDetalhe>(entity =>
        {
            entity.ToTable("AlertaDetalhe");

            entity.HasIndex(e => new { e.IdUtilDestino, e.Fechado }, "IDX_Destino").HasFillFactor(80);

            entity.HasIndex(e => new { e.Fechado, e.IdUtilDestino }, "idx_fechado_idUtilDestino").HasFillFactor(80);

            entity.HasIndex(e => new { e.IGCOM2Userserta, e.IdUtilDestino, e.Fechado }, "idx_iGCOM2Userserta_idUtil_fechado").HasFillFactor(80);

            entity.Property(e => e.Id).HasColumnName("id");
            entity.Property(e => e.DtFecho)
                .HasColumnType("datetime")
                .HasColumnName("dtFecho");
            entity.Property(e => e.Fechado).HasColumnName("fechado");
            entity.Property(e => e.IGCOM2Userserta).HasColumnName("iGCOM2Userserta");
            entity.Property(e => e.IdDeptDestino).HasColumnName("idDeptDestino");
            entity.Property(e => e.IdUtilDestino).HasColumnName("idUtilDestino");
            entity.Property(e => e.IdUtilFecho).HasColumnName("idUtilFecho");
        });

        modelBuilder.Entity<AlertaTipoT>(entity =>
        {
            entity.ToTable("AlertaTipo_T");

            entity.Property(e => e.Id).HasColumnName("id");
            entity.Property(e => e.Activo)
                .IsRequired()
                .HasDefaultValueSql("((1))")
                .HasColumnName("activo");
            entity.Property(e => e.Codigo)
                .HasMaxLength(15)
                .HasColumnName("codigo");
            entity.Property(e => e.Descricao)
                .HasMaxLength(50)
                .HasColumnName("descricao");
            entity.Property(e => e.GeraEmail).HasColumnName("geraEmail");
        });

        modelBuilder.Entity<Alertum>(entity =>
        {
            entity.HasIndex(e => e.IdUtilCriacao, "idx_utilcriacao").HasFillFactor(80);

            entity.Property(e => e.Id).HasColumnName("id");
            entity.Property(e => e.Descricao)
                .HasMaxLength(250)
                .HasColumnName("descricao");
            entity.Property(e => e.DtAlerta)
                .HasColumnType("datetime")
                .HasColumnName("dtAlerta");
            entity.Property(e => e.DtCriacao)
                .HasDefaultValueSql("(getdate())")
                .HasColumnType("datetime")
                .HasColumnName("dtCriacao");
            entity.Property(e => e.IdCliMorada).HasColumnName("idCliMorada");
            entity.Property(e => e.IdCliente).HasColumnName("idCliente");
            entity.Property(e => e.IdEntidade).HasColumnName("idEntidade");
            entity.Property(e => e.IdTipoAlerta).HasColumnName("idTipoAlerta");
            entity.Property(e => e.IdUtilCriacao).HasColumnName("idUtilCriacao");
            entity.Property(e => e.NumDiasAlerta)
                .HasDefaultValueSql("((0))")
                .HasColumnName("numDiasAlerta");
        });

        modelBuilder.Entity<AlteracoesServico>(entity =>
        {
            entity
                .HasNoKey()
                .ToTable("alteracoesServico");

            entity.HasIndex(e => new { e.IdEntidade, e.IdCliente, e.IdServicoOrigem, e.DtFim }, "idx_idEntidade_idCliente_idServicoOrig_dtFim");

            entity.Property(e => e.DtFim)
                .HasColumnType("datetime")
                .HasColumnName("dtFim");
            entity.Property(e => e.DtIni)
                .HasColumnType("datetime")
                .HasColumnName("dtIni");
            entity.Property(e => e.IdCliMorada).HasColumnName("idCliMorada");
            entity.Property(e => e.IdCliente).HasColumnName("idCliente");
            entity.Property(e => e.IdEntidade).HasColumnName("idEntidade");
            entity.Property(e => e.IdServicoDest).HasColumnName("idServicoDest");
            entity.Property(e => e.IdServicoOrigem).HasColumnName("idServicoOrigem");
            entity.Property(e => e.IdUnix).HasColumnName("idUnix");
        });

        modelBuilder.Entity<Anacom>(entity =>
        {
            entity
                .HasNoKey()
                .ToView("Anacom");

            entity.Property(e => e.Awb).HasMaxLength(50);
            entity.Property(e => e.CodContabClienteFact)
                .HasMaxLength(50)
                .HasColumnName("Cod Contab Cliente Fact");
            entity.Property(e => e.CodContabilidadeCliente)
                .HasMaxLength(50)
                .HasColumnName("Cod contabilidade cliente");
            entity.Property(e => e.EmpresaFaturação)
                .HasMaxLength(4)
                .HasColumnName("Empresa faturação");
            entity.Property(e => e.PaisDestinatarioDescricao)
                .HasMaxLength(50)
                .HasColumnName("paisDestinatarioDescricao");
            entity.Property(e => e.PaisDestinatarioSigla)
                .HasMaxLength(2)
                .HasColumnName("paisDestinatarioSigla");
            entity.Property(e => e.PaisExpedidorDescricao)
                .HasMaxLength(50)
                .HasColumnName("paisExpedidorDescricao");
            entity.Property(e => e.PaisExpedidorSigla)
                .HasMaxLength(2)
                .HasColumnName("paisExpedidorSigla");
            entity.Property(e => e.PesoPorAwb)
                .HasColumnType("money")
                .HasColumnName("Peso por awb");
            entity.Property(e => e.Regime).HasMaxLength(25);
            entity.Property(e => e.Serviço).HasMaxLength(15);
            entity.Property(e => e.ValorFaturadoPorAwb)
                .HasColumnType("money")
                .HasColumnName("Valor faturado por awb");
        });

        modelBuilder.Entity<Atest>(entity =>
        {
            entity.HasKey(e => e.AuditTestId).HasName("PK_AuditTest");

            entity.ToTable("ATest", tb => tb.HasTrigger("AuditTeste_TriggerDJ"));

            entity.Property(e => e.DtUltAct)
                .HasDefaultValueSql("(getdate())")
                .HasColumnType("datetime")
                .HasColumnName("dtUltAct");
            entity.Property(e => e.IdUtilUltAct)
                .HasDefaultValueSql("((4092))")
                .HasColumnName("idUtilUltAct");
            entity.Property(e => e.Val1).HasMaxLength(10);
            entity.Property(e => e.Val5)
                .HasDefaultValueSql("(getdate())")
                .HasColumnType("datetime");
        });

        modelBuilder.Entity<AtestV2>(entity =>
        {
            entity.ToTable("ATestV2", tb => tb.HasTrigger("ATestV2_TriggerDJ"));

            entity.Property(e => e.AtestV2id).HasColumnName("ATestV2Id");
            entity.Property(e => e.Campo1)
                .HasMaxLength(50)
                .IsUnicode(false);
            entity.Property(e => e.DtUltAct)
                .HasDefaultValueSql("(getdate())")
                .HasColumnType("datetime")
                .HasColumnName("dtUltAct");
            entity.Property(e => e.IdUtilUltAct)
                .HasDefaultValueSql("((4092))")
                .HasColumnName("idUtilUltAct");
        });

        modelBuilder.Entity<Audit>(entity =>
        {
            entity
                .HasNoKey()
                .ToTable("Audit");

            entity.HasIndex(e => e.SysUpdateDate, "idx_SysUpdateDate")
                .IsDescending()
                .HasFillFactor(80);

            entity.HasIndex(e => new { e.TableName, e.Pk, e.SysUpdateDate }, "idx_tablename_pk_sysupdatedate")
                .IsDescending(false, false, true)
                .HasFillFactor(80);

            entity.Property(e => e.AlteredData)
                .HasColumnType("xml")
                .HasColumnName("alteredData");
            entity.Property(e => e.DtUltAct)
                .HasColumnType("datetime")
                .HasColumnName("dtUltAct");
            entity.Property(e => e.FieldName)
                .HasMaxLength(128)
                .IsUnicode(false);
            entity.Property(e => e.IdUtilUltAct).HasColumnName("idUtilUltAct");
            entity.Property(e => e.NewValue)
                .HasMaxLength(1000)
                .IsUnicode(false);
            entity.Property(e => e.OldValue)
                .HasMaxLength(1000)
                .IsUnicode(false);
            entity.Property(e => e.Pk).HasColumnName("PK");
            entity.Property(e => e.SpId).HasColumnName("spID");
            entity.Property(e => e.SysUpdateDate).HasColumnType("datetime");
            entity.Property(e => e.SysUserName)
                .HasMaxLength(128)
                .IsUnicode(false);
            entity.Property(e => e.TableName)
                .HasMaxLength(128)
                .IsUnicode(false);
            entity.Property(e => e.Type)
                .HasMaxLength(1)
                .IsUnicode(false)
                .IsFixedLength();
        });

        modelBuilder.Entity<AuditManifesto>(entity =>
        {
            entity.HasKey(e => e.IdAudit);

            entity.ToTable("Audit_Manifesto");

            entity.Property(e => e.IdAudit).HasColumnName("idAudit");
            entity.Property(e => e.Anulado).HasColumnName("anulado");
            entity.Property(e => e.AuditFact).HasColumnName("auditFact");
            entity.Property(e => e.AuditLog).HasColumnName("auditLog");
            entity.Property(e => e.AuditPortal).HasColumnName("auditPortal");
            entity.Property(e => e.Awb)
                .HasMaxLength(50)
                .HasColumnName("awb");
            entity.Property(e => e.DtEntregaDesejada)
                .HasColumnType("datetime")
                .HasColumnName("dtEntregaDesejada");
            entity.Property(e => e.DtEnvio)
                .HasColumnType("date")
                .HasColumnName("dtEnvio");
            entity.Property(e => e.DtExpedicao)
                .HasColumnType("date")
                .HasColumnName("dtExpedicao");
            entity.Property(e => e.DtIntrod)
                .HasColumnType("datetime")
                .HasColumnName("dtIntrod");
            entity.Property(e => e.DtUltAct)
                .HasColumnType("datetime")
                .HasColumnName("dtUltAct");
            entity.Property(e => e.FormId)
                .HasMaxLength(4)
                .HasColumnName("form_id");
            entity.Property(e => e.Id).HasColumnName("id");
            entity.Property(e => e.IdDistribuidor).HasColumnName("idDistribuidor");
            entity.Property(e => e.IdEntidade).HasColumnName("idEntidade");
            entity.Property(e => e.IdMaster).HasColumnName("idMaster");
            entity.Property(e => e.IdOrigemManifesto).HasColumnName("idOrigemManifesto");
            entity.Property(e => e.IdPickup).HasColumnName("idPickup");
            entity.Property(e => e.IdRegime).HasColumnName("idRegime");
            entity.Property(e => e.IdSegmento).HasColumnName("idSegmento");
            entity.Property(e => e.IdTipoManifesto).HasColumnName("idTipoManifesto");
            entity.Property(e => e.IdUtilAnulacao).HasColumnName("idUtilAnulacao");
            entity.Property(e => e.IdUtilIntrod).HasColumnName("idUtilIntrod");
            entity.Property(e => e.IdUtilUltAct).HasColumnName("idUtilUltAct");
            entity.Property(e => e.IsMaster).HasColumnName("isMaster");
            entity.Property(e => e.Master)
                .HasMaxLength(50)
                .HasColumnName("master");
            entity.Property(e => e.RecordType)
                .HasMaxLength(2)
                .HasColumnName("recordType");
            entity.Property(e => e.RefExpedidor)
                .HasMaxLength(40)
                .HasColumnName("refExpedidor");
            entity.Property(e => e.RefOrig)
                .HasMaxLength(50)
                .HasColumnName("refOrig");
            entity.Property(e => e.TratarVolume).HasColumnName("tratarVolume");
            entity.Property(e => e.Type)
                .HasMaxLength(1)
                .IsUnicode(false)
                .HasColumnName("type");
        });

        modelBuilder.Entity<AuditManifestoDestinatario>(entity =>
        {
            entity.HasKey(e => e.IdAudit);

            entity.ToTable("Audit_ManifestoDestinatario");

            entity.Property(e => e.IdAudit).HasColumnName("idAudit");
            entity.Property(e => e.Anulado).HasColumnName("anulado");
            entity.Property(e => e.AuditFact).HasColumnName("auditFact");
            entity.Property(e => e.AuditLog).HasColumnName("auditLog");
            entity.Property(e => e.AuditPortal).HasColumnName("auditPortal");
            entity.Property(e => e.Awb)
                .HasMaxLength(50)
                .HasColumnName("awb");
            entity.Property(e => e.Cidade)
                .HasMaxLength(34)
                .HasColumnName("cidade");
            entity.Property(e => e.CodPais)
                .HasMaxLength(2)
                .HasColumnName("codPais");
            entity.Property(e => e.Cpostal)
                .HasMaxLength(10)
                .HasColumnName("cpostal");
            entity.Property(e => e.Departamento)
                .HasMaxLength(12)
                .HasColumnName("departamento");
            entity.Property(e => e.DtUltAct)
                .HasColumnType("datetime")
                .HasColumnName("dtUltAct");
            entity.Property(e => e.Email)
                .HasMaxLength(100)
                .HasColumnName("email");
            entity.Property(e => e.Empresa)
                .HasMaxLength(34)
                .HasColumnName("empresa");
            entity.Property(e => e.Estado)
                .HasMaxLength(2)
                .HasColumnName("estado");
            entity.Property(e => e.IdAgrupamento).HasColumnName("idAgrupamento");
            entity.Property(e => e.IdClassDest).HasColumnName("idClassDest");
            entity.Property(e => e.IdCliMorada).HasColumnName("idCliMorada");
            entity.Property(e => e.IdCliente).HasColumnName("idCliente");
            entity.Property(e => e.IdCpostal).HasColumnName("idCPostal");
            entity.Property(e => e.IdDestinatario).HasColumnName("idDestinatario");
            entity.Property(e => e.IdEntidade).HasColumnName("idEntidade");
            entity.Property(e => e.IdMaster).HasColumnName("idMaster");
            entity.Property(e => e.IdPais).HasColumnName("idPais");
            entity.Property(e => e.IdPlataforma).HasColumnName("idPlataforma");
            entity.Property(e => e.IdUtilUltAct).HasColumnName("idUtilUltAct");
            entity.Property(e => e.Morada)
                .HasMaxLength(68)
                .HasColumnName("morada");
            entity.Property(e => e.Nome)
                .HasMaxLength(34)
                .HasColumnName("nome");
            entity.Property(e => e.NomeContacto).HasMaxLength(100);
            entity.Property(e => e.NrContrib)
                .HasMaxLength(15)
                .HasColumnName("nrContrib");
            entity.Property(e => e.NumConta)
                .HasMaxLength(20)
                .HasColumnName("numConta");
            entity.Property(e => e.Telefone)
                .HasMaxLength(15)
                .HasColumnName("telefone");
            entity.Property(e => e.Type)
                .HasMaxLength(1)
                .IsUnicode(false)
                .HasColumnName("type");
        });

        modelBuilder.Entity<AuditManifestoDevolucao>(entity =>
        {
            entity.HasKey(e => e.IdAudit);

            entity.ToTable("Audit_ManifestoDevolucao");

            entity.Property(e => e.IdAudit).HasColumnName("idAudit");
            entity.Property(e => e.AuditFact).HasColumnName("auditFact");
            entity.Property(e => e.AuditLog).HasColumnName("auditLog");
            entity.Property(e => e.AuditPortal).HasColumnName("auditPortal");
            entity.Property(e => e.DtIntrod)
                .HasColumnType("datetime")
                .HasColumnName("dtIntrod");
            entity.Property(e => e.IdManifestoDev).HasColumnName("idManifestoDev");
            entity.Property(e => e.IdManifestoOrig).HasColumnName("idManifestoOrig");
            entity.Property(e => e.IdTipoDev).HasColumnName("idTipoDev");
            entity.Property(e => e.IdUtilIntrod).HasColumnName("idUtilIntrod");
            entity.Property(e => e.Type)
                .HasMaxLength(1)
                .IsUnicode(false)
                .HasColumnName("type");
        });

        modelBuilder.Entity<AuditManifestoEnvio>(entity =>
        {
            entity.HasKey(e => e.IdAudit);

            entity.ToTable("Audit_ManifestoEnvio");

            entity.HasIndex(e => new { e.Type, e.IdMaster, e.IdAudit }, "idx_teste");

            entity.Property(e => e.IdAudit).HasColumnName("idAudit");
            entity.Property(e => e.Anulado).HasColumnName("anulado");
            entity.Property(e => e.AuditFact).HasColumnName("auditFact");
            entity.Property(e => e.AuditLog).HasColumnName("auditLog");
            entity.Property(e => e.AuditPortal).HasColumnName("auditPortal");
            entity.Property(e => e.Awb)
                .HasMaxLength(50)
                .HasColumnName("awb");
            entity.Property(e => e.DepartamentoFact)
                .HasMaxLength(40)
                .IsUnicode(false)
                .HasColumnName("departamentoFact");
            entity.Property(e => e.Descricao)
                .HasMaxLength(200)
                .HasColumnName("descricao");
            entity.Property(e => e.DtDataEntry)
                .HasColumnType("datetime")
                .HasColumnName("dtDataEntry");
            entity.Property(e => e.DtEnvio)
                .HasColumnType("datetime")
                .HasColumnName("dtEnvio");
            entity.Property(e => e.DtUltAct)
                .HasColumnType("datetime")
                .HasColumnName("dtUltAct");
            entity.Property(e => e.IdClasseOrigem).HasColumnName("idClasseOrigem");
            entity.Property(e => e.IdCliMorada).HasColumnName("idCliMorada");
            entity.Property(e => e.IdCliMoradaEmissao).HasColumnName("idCliMoradaEmissao");
            entity.Property(e => e.IdCliMoradaFact).HasColumnName("idCliMoradaFact");
            entity.Property(e => e.IdCliente).HasColumnName("idCliente");
            entity.Property(e => e.IdClienteEmissao).HasColumnName("idClienteEmissao");
            entity.Property(e => e.IdClienteFact).HasColumnName("idClienteFact");
            entity.Property(e => e.IdEntidade).HasColumnName("idEntidade");
            entity.Property(e => e.IdLocPagaDir).HasColumnName("idLocPagaDir");
            entity.Property(e => e.IdLocPagaTrans).HasColumnName("idLocPagaTrans");
            entity.Property(e => e.IdMaster).HasColumnName("idMaster");
            entity.Property(e => e.IdOficinaCorreos)
                .HasMaxLength(50)
                .HasColumnName("idOficinaCorreos");
            entity.Property(e => e.IdPltDestino).HasColumnName("idPltDestino");
            entity.Property(e => e.IdPltOrigem).HasColumnName("idPltOrigem");
            entity.Property(e => e.IdRegime).HasColumnName("idRegime");
            entity.Property(e => e.IdServico).HasColumnName("idServico");
            entity.Property(e => e.IdTipoDangGoods).HasColumnName("idTipoDangGoods");
            entity.Property(e => e.IdTipoHandlingCode)
                .HasMaxLength(2)
                .HasColumnName("idTipoHandlingCode");
            entity.Property(e => e.IdTipoIss)
                .HasMaxLength(2)
                .HasColumnName("idTipoISS");
            entity.Property(e => e.IdTipoLogisticaInversa)
                .HasMaxLength(50)
                .HasColumnName("idTipoLogisticaInversa");
            entity.Property(e => e.IdTipoProduto).HasColumnName("idTipoProduto");
            entity.Property(e => e.IdUnidM3).HasColumnName("idUnidM3");
            entity.Property(e => e.IdUnidadePeso).HasColumnName("idUnidadePeso");
            entity.Property(e => e.IdUnidadePesoVolumetrico).HasColumnName("idUnidadePesoVolumetrico");
            entity.Property(e => e.IdUtilDataEntry).HasColumnName("idUtilDataEntry");
            entity.Property(e => e.IdUtilUltAct).HasColumnName("idUtilUltAct");
            entity.Property(e => e.M3orig).HasColumnName("M3Orig");
            entity.Property(e => e.M3real).HasColumnName("M3Real");
            entity.Property(e => e.NumContaPagaDir)
                .HasMaxLength(9)
                .HasColumnName("numContaPagaDir");
            entity.Property(e => e.NumContaPagaTrans)
                .HasMaxLength(9)
                .HasColumnName("numContaPagaTrans");
            entity.Property(e => e.NumDocAt)
                .HasMaxLength(255)
                .HasColumnName("numDocAt");
            entity.Property(e => e.NumPacotes).HasColumnName("numPacotes");
            entity.Property(e => e.Observacoes)
                .HasMaxLength(200)
                .HasColumnName("observacoes");
            entity.Property(e => e.Peso)
                .HasColumnType("money")
                .HasColumnName("peso");
            entity.Property(e => e.PesoOrig)
                .HasColumnType("money")
                .HasColumnName("pesoOrig");
            entity.Property(e => e.PesoReal)
                .HasColumnType("money")
                .HasColumnName("pesoReal");
            entity.Property(e => e.PesoVolumetrico)
                .HasColumnType("money")
                .HasColumnName("pesoVolumetrico");
            entity.Property(e => e.ReembolsoObs)
                .HasMaxLength(250)
                .IsUnicode(false)
                .HasColumnName("reembolsoObs");
            entity.Property(e => e.Type)
                .HasMaxLength(1)
                .IsUnicode(false)
                .HasColumnName("type");
            entity.Property(e => e.ValorReembolso)
                .HasColumnType("money")
                .HasColumnName("valorReembolso");
            entity.Property(e => e.ValorSegurado)
                .HasColumnType("money")
                .HasColumnName("valorSegurado");
            entity.Property(e => e.ValorVendaDinheiro)
                .HasColumnType("money")
                .HasColumnName("valorVendaDinheiro");
            entity.Property(e => e.VendaDinheiro).HasColumnName("vendaDinheiro");
        });

        modelBuilder.Entity<AuditManifestoExpedicao>(entity =>
        {
            entity.HasKey(e => e.IdAudit).HasName("PK__Audit_Ma__A0E9FA087A39393B");

            entity.ToTable("Audit_ManifestoExpedicao");

            entity.Property(e => e.IdAudit).HasColumnName("idAudit");
            entity.Property(e => e.AuditFact).HasColumnName("auditFact");
            entity.Property(e => e.AuditLog).HasColumnName("auditLog");
            entity.Property(e => e.AuditPortal).HasColumnName("auditPortal");
            entity.Property(e => e.Awb)
                .HasMaxLength(50)
                .HasColumnName("awb");
            entity.Property(e => e.AwbCategoryCustoms)
                .HasMaxLength(4)
                .HasColumnName("awbCategoryCustoms");
            entity.Property(e => e.BatchNumber).HasColumnName("batchNumber");
            entity.Property(e => e.CargoAircraftOnly).HasColumnName("cargo_aircraft_only");
            entity.Property(e => e.Cflag).HasColumnName("CFlag");
            entity.Property(e => e.CodPaisOrigem)
                .HasMaxLength(2)
                .HasColumnName("codPaisOrigem");
            entity.Property(e => e.DangerousGoodsFlag).HasColumnName("dangerous_goods_flag");
            entity.Property(e => e.DtDocVal)
                .HasColumnType("datetime")
                .HasColumnName("dtDocVal");
            entity.Property(e => e.DtExpToGrasp)
                .HasColumnType("datetime")
                .HasColumnName("dtExp_to_grasp");
            entity.Property(e => e.DtParaExpToGrasp)
                .HasColumnType("datetime")
                .HasColumnName("dtParaExp_to_grasp");
            entity.Property(e => e.DtUltAct)
                .HasColumnType("datetime")
                .HasColumnName("dtUltAct");
            entity.Property(e => e.DtUpdatedFromCosmos)
                .HasColumnType("datetime")
                .HasColumnName("dtUpdatedFromCosmos");
            entity.Property(e => e.DtValidToGrasp)
                .HasColumnType("datetime")
                .HasColumnName("dtValid_to_grasp");
            entity.Property(e => e.DtValidatedInCosmos)
                .HasColumnType("datetime")
                .HasColumnName("dtValidatedInCosmos");
            entity.Property(e => e.EstacaoDestino)
                .HasMaxLength(5)
                .HasColumnName("estacaoDestino");
            entity.Property(e => e.EstacaoOrigem)
                .HasMaxLength(5)
                .HasColumnName("estacaoOrigem");
            entity.Property(e => e.ExpToGrasp).HasColumnName("exp_to_grasp");
            entity.Property(e => e.ExportLicense).HasColumnName("exportLicense");
            entity.Property(e => e.ExtractedForTransfer).HasColumnName("extracted_for_transfer");
            entity.Property(e => e.FlightDestination)
                .HasMaxLength(5)
                .HasColumnName("flightDestination");
            entity.Property(e => e.GoodsClassCd).HasMaxLength(5);
            entity.Property(e => e.HandlingCode)
                .HasMaxLength(2)
                .HasColumnName("handlingCode");
            entity.Property(e => e.HandlingCode2)
                .HasMaxLength(2)
                .HasColumnName("handlingCode2");
            entity.Property(e => e.HarmonizedCode)
                .HasMaxLength(80)
                .HasColumnName("harmonizedCode");
            entity.Property(e => e.IdAviao).HasColumnName("idAviao");
            entity.Property(e => e.IdContaClienteFilho).HasColumnName("idContaClienteFilho");
            entity.Property(e => e.IdEntidade).HasColumnName("idEntidade");
            entity.Property(e => e.IdEstacaoDestino).HasColumnName("idEstacaoDestino");
            entity.Property(e => e.IdEstacaoOrigem).HasColumnName("idEstacaoOrigem");
            entity.Property(e => e.IdMaster).HasColumnName("idMaster");
            entity.Property(e => e.IdMoeda).HasColumnName("idMoeda");
            entity.Property(e => e.IdPaisManufactura).HasColumnName("idPaisManufactura");
            entity.Property(e => e.IdPaisOrigem).HasColumnName("idPaisOrigem");
            entity.Property(e => e.IdReceivedAt).HasColumnName("idReceivedAt");
            entity.Property(e => e.IdTipoCflag).HasColumnName("idTipoCFlag");
            entity.Property(e => e.IdUtilDocVal).HasColumnName("idUtilDocVal");
            entity.Property(e => e.IdUtilExpToGrasp).HasColumnName("idUtilExp_to_grasp");
            entity.Property(e => e.IdUtilParaExpToGrasp).HasColumnName("idUtilParaExp_to_grasp");
            entity.Property(e => e.IdUtilUltAct).HasColumnName("idUtilUltAct");
            entity.Property(e => e.IdUtilValidToGrasp).HasColumnName("idUtilValid_to_grasp");
            entity.Property(e => e.IsDirty).HasColumnName("isDirty");
            entity.Property(e => e.IsDutyDue).HasColumnName("isDutyDue");
            entity.Property(e => e.Moeda)
                .HasMaxLength(5)
                .HasColumnName("moeda");
            entity.Property(e => e.NonComercialFlag).HasColumnName("non_comercial_flag");
            entity.Property(e => e.ParaExpToGrasp).HasColumnName("paraExp_to_grasp");
            entity.Property(e => e.ProductType)
                .HasMaxLength(2)
                .HasColumnName("productType");
            entity.Property(e => e.RouteDate)
                .HasColumnType("date")
                .HasColumnName("route_date");
            entity.Property(e => e.ServiceType)
                .HasMaxLength(2)
                .HasColumnName("serviceType");
            entity.Property(e => e.TemDocumentacaoValida).HasColumnName("temDocumentacaoValida");
            entity.Property(e => e.ThermalAwb).HasColumnName("thermalAWB");
            entity.Property(e => e.TransactionDateTime)
                .HasColumnType("datetime")
                .HasColumnName("transactionDateTime");
            entity.Property(e => e.Type)
                .HasMaxLength(1)
                .HasColumnName("type");
            entity.Property(e => e.ValidToGrasp).HasColumnName("valid_to_grasp");
            entity.Property(e => e.ValorAlfandega)
                .HasColumnType("money")
                .HasColumnName("valorAlfandega");
            entity.Property(e => e.ValorCarriage)
                .HasColumnType("money")
                .HasColumnName("valorCarriage");
            entity.Property(e => e.VisaRoute)
                .HasMaxLength(15)
                .HasColumnName("visaRoute");
        });

        modelBuilder.Entity<AuditManifestoExpedidor>(entity =>
        {
            entity.HasKey(e => e.IdAudit);

            entity.ToTable("Audit_ManifestoExpedidor");

            entity.Property(e => e.IdAudit).HasColumnName("idAudit");
            entity.Property(e => e.Anulado).HasColumnName("anulado");
            entity.Property(e => e.AuditFact).HasColumnName("auditFact");
            entity.Property(e => e.AuditLog).HasColumnName("auditLog");
            entity.Property(e => e.AuditPortal).HasColumnName("auditPortal");
            entity.Property(e => e.Awb)
                .HasMaxLength(50)
                .HasColumnName("awb");
            entity.Property(e => e.Cidade)
                .HasMaxLength(34)
                .HasColumnName("cidade");
            entity.Property(e => e.CodPais)
                .HasMaxLength(2)
                .HasColumnName("codPais");
            entity.Property(e => e.Cpostal)
                .HasMaxLength(10)
                .HasColumnName("cpostal");
            entity.Property(e => e.Departamento)
                .HasMaxLength(12)
                .HasColumnName("departamento");
            entity.Property(e => e.DtUltAct)
                .HasColumnType("datetime")
                .HasColumnName("dtUltAct");
            entity.Property(e => e.Email)
                .HasMaxLength(100)
                .HasColumnName("email");
            entity.Property(e => e.Empresa)
                .HasMaxLength(60)
                .HasColumnName("empresa");
            entity.Property(e => e.Estado)
                .HasMaxLength(2)
                .HasColumnName("estado");
            entity.Property(e => e.IdAgrupamento).HasColumnName("idAgrupamento");
            entity.Property(e => e.IdCliMorada).HasColumnName("idCliMorada");
            entity.Property(e => e.IdCliente).HasColumnName("idCliente");
            entity.Property(e => e.IdCpostal).HasColumnName("idCPostal");
            entity.Property(e => e.IdEntidade).HasColumnName("idEntidade");
            entity.Property(e => e.IdMaster).HasColumnName("idMaster");
            entity.Property(e => e.IdPais).HasColumnName("idPais");
            entity.Property(e => e.IdPlataforma).HasColumnName("idPlataforma");
            entity.Property(e => e.IdUtilUltAct).HasColumnName("idUtilUltAct");
            entity.Property(e => e.Morada)
                .HasMaxLength(68)
                .HasColumnName("morada");
            entity.Property(e => e.Nome)
                .HasMaxLength(34)
                .HasColumnName("nome");
            entity.Property(e => e.NomeContacto).HasMaxLength(100);
            entity.Property(e => e.NrContrib)
                .HasMaxLength(15)
                .HasColumnName("nrContrib");
            entity.Property(e => e.NumConta)
                .HasMaxLength(20)
                .HasColumnName("numConta");
            entity.Property(e => e.Telefone)
                .HasMaxLength(15)
                .HasColumnName("telefone");
            entity.Property(e => e.Type)
                .HasMaxLength(1)
                .IsUnicode(false)
                .HasColumnName("type");
        });

        modelBuilder.Entity<AuditManifestoRetencao>(entity =>
        {
            entity.HasKey(e => e.IdAudit);

            entity.ToTable("Audit_ManifestoRetencao");

            entity.Property(e => e.IdAudit).HasColumnName("idAudit");
            entity.Property(e => e.AuditFact).HasColumnName("auditFact");
            entity.Property(e => e.AuditLog).HasColumnName("auditLog");
            entity.Property(e => e.AuditPortal).HasColumnName("auditPortal");
            entity.Property(e => e.Awb)
                .HasMaxLength(50)
                .HasColumnName("awb");
            entity.Property(e => e.DtFimReter)
                .HasColumnType("datetime")
                .HasColumnName("dtFimReter");
            entity.Property(e => e.DtReterAte)
                .HasColumnType("datetime")
                .HasColumnName("dtReterAte");
            entity.Property(e => e.DtReterEnvio)
                .HasColumnType("datetime")
                .HasColumnName("dtReterEnvio");
            entity.Property(e => e.IdEntidade).HasColumnName("idEntidade");
            entity.Property(e => e.IdManifesto).HasColumnName("idManifesto");
            entity.Property(e => e.IdUtilFimReter).HasColumnName("idUtilFimReter");
            entity.Property(e => e.IdUtilReterEnvio).HasColumnName("idUtilReterEnvio");
            entity.Property(e => e.ObsReterEnvio)
                .HasMaxLength(150)
                .HasColumnName("obsReterEnvio");
            entity.Property(e => e.ReterEnvio).HasColumnName("reterEnvio");
            entity.Property(e => e.Type)
                .HasMaxLength(1)
                .IsUnicode(false)
                .HasColumnName("type");
        });

        modelBuilder.Entity<AuditManifestoVolume>(entity =>
        {
            entity.HasKey(e => e.IdAudit);

            entity.ToTable("Audit_ManifestoVolumes");

            entity.Property(e => e.IdAudit).HasColumnName("idAudit");
            entity.Property(e => e.Altura)
                .HasColumnType("money")
                .HasColumnName("altura");
            entity.Property(e => e.AlturaOrig)
                .HasColumnType("money")
                .HasColumnName("alturaOrig");
            entity.Property(e => e.AlturaReal)
                .HasColumnType("money")
                .HasColumnName("alturaReal");
            entity.Property(e => e.AuditFact).HasColumnName("auditFact");
            entity.Property(e => e.AuditLog).HasColumnName("auditLog");
            entity.Property(e => e.AuditPortal).HasColumnName("auditPortal");
            entity.Property(e => e.Awb)
                .HasMaxLength(50)
                .HasColumnName("awb");
            entity.Property(e => e.Comprimento)
                .HasColumnType("money")
                .HasColumnName("comprimento");
            entity.Property(e => e.ComprimentoOrig)
                .HasColumnType("money")
                .HasColumnName("comprimentoOrig");
            entity.Property(e => e.ComprimentoReal)
                .HasColumnType("money")
                .HasColumnName("comprimentoReal");
            entity.Property(e => e.Descricao)
                .HasMaxLength(200)
                .HasColumnName("descricao");
            entity.Property(e => e.DtConfOrig)
                .HasColumnType("datetime")
                .HasColumnName("dtConfOrig");
            entity.Property(e => e.DtUltAct)
                .HasColumnType("datetime")
                .HasColumnName("dtUltAct");
            entity.Property(e => e.IdEntidade).HasColumnName("idEntidade");
            entity.Property(e => e.IdManifesto).HasColumnName("idManifesto");
            entity.Property(e => e.IdMoeda).HasColumnName("idMoeda");
            entity.Property(e => e.IdPaisManufactura).HasColumnName("idPaisManufactura");
            entity.Property(e => e.IdTipoProduto).HasColumnName("idTipoProduto");
            entity.Property(e => e.IdTipoProdutoOrig).HasColumnName("idTipoProdutoOrig");
            entity.Property(e => e.IdUnidM3).HasColumnName("idUnidM3");
            entity.Property(e => e.IdUnidM3orig).HasColumnName("idUnidM3Orig");
            entity.Property(e => e.IdUnidadeMetrica).HasColumnName("idUnidadeMetrica");
            entity.Property(e => e.IdUnidadeMetricaOrig).HasColumnName("idUnidadeMetricaOrig");
            entity.Property(e => e.IdUnidadePeso).HasColumnName("idUnidadePeso");
            entity.Property(e => e.IdUnidadePesoOrig).HasColumnName("idUnidadePesoOrig");
            entity.Property(e => e.IdUnidadePesoVolumetrico).HasColumnName("idUnidadePesoVolumetrico");
            entity.Property(e => e.IdUnidadePesoVolumetricoOrig).HasColumnName("idUnidadePesoVolumetricoOrig");
            entity.Property(e => e.IdUtilUltAct).HasColumnName("idUtilUltAct");
            entity.Property(e => e.Largura)
                .HasColumnType("money")
                .HasColumnName("largura");
            entity.Property(e => e.LarguraOrig)
                .HasColumnType("money")
                .HasColumnName("larguraOrig");
            entity.Property(e => e.LarguraReal)
                .HasColumnType("money")
                .HasColumnName("larguraReal");
            entity.Property(e => e.M3orig).HasColumnName("M3Orig");
            entity.Property(e => e.M3real).HasColumnName("M3Real");
            entity.Property(e => e.Peso)
                .HasColumnType("money")
                .HasColumnName("peso");
            entity.Property(e => e.PesoOrig)
                .HasColumnType("money")
                .HasColumnName("pesoOrig");
            entity.Property(e => e.PesoReal)
                .HasColumnType("money")
                .HasColumnName("pesoReal");
            entity.Property(e => e.PesoVolumetrico)
                .HasColumnType("money")
                .HasColumnName("pesoVolumetrico");
            entity.Property(e => e.PesoVolumetricoOrig)
                .HasColumnType("money")
                .HasColumnName("pesoVolumetricoOrig");
            entity.Property(e => e.Type)
                .HasMaxLength(1)
                .IsUnicode(false)
                .HasColumnName("type");
            entity.Property(e => e.ValorMercadoria)
                .HasColumnType("money")
                .HasColumnName("valorMercadoria");
        });

        modelBuilder.Entity<AviaoT>(entity =>
        {
            entity.HasKey(e => e.Id).HasName("PK_T_Aviao");

            entity.ToTable("Aviao_T");

            entity.Property(e => e.Id).HasColumnName("id");
            entity.Property(e => e.Activo)
                .IsRequired()
                .HasDefaultValueSql("(1)")
                .HasColumnName("activo");
            entity.Property(e => e.Codigo)
                .HasMaxLength(6)
                .HasColumnName("codigo");
            entity.Property(e => e.Descricao)
                .HasMaxLength(50)
                .HasColumnName("descricao");
            entity.Property(e => e.IdPlataforma).HasColumnName("idPlataforma");
            entity.Property(e => e.Importacao).HasColumnName("importacao");
            entity.Property(e => e.Matricula)
                .HasMaxLength(50)
                .HasColumnName("matricula");
        });

        modelBuilder.Entity<AvisoTipoDepart>(entity =>
        {
            entity.Property(e => e.Id).HasColumnName("id");
            entity.Property(e => e.Activo)
                .IsRequired()
                .HasDefaultValueSql("(1)")
                .HasColumnName("activo");
            entity.Property(e => e.IdDepart).HasColumnName("idDepart");
            entity.Property(e => e.IdTipo).HasColumnName("idTipo");
        });

        modelBuilder.Entity<AvisoTipoGrupo>(entity =>
        {
            entity.Property(e => e.Id).HasColumnName("id");
            entity.Property(e => e.Activo)
                .IsRequired()
                .HasDefaultValueSql("(1)")
                .HasColumnName("activo");
            entity.Property(e => e.IdGrupo).HasColumnName("idGrupo");
            entity.Property(e => e.IdTipo).HasColumnName("idTipo");
        });

        modelBuilder.Entity<AvisoTipoT>(entity =>
        {
            entity.ToTable("AvisoTipo_T");

            entity.Property(e => e.Id).HasColumnName("id");
            entity.Property(e => e.Activo)
                .IsRequired()
                .HasDefaultValueSql("(1)")
                .HasColumnName("activo");
            entity.Property(e => e.Descricao)
                .HasMaxLength(150)
                .HasColumnName("descricao");
            entity.Property(e => e.Nome)
                .HasMaxLength(50)
                .HasColumnName("nome");
        });

        modelBuilder.Entity<AvisoTipoUtil>(entity =>
        {
            entity.Property(e => e.Id).HasColumnName("id");
            entity.Property(e => e.Activo)
                .IsRequired()
                .HasDefaultValueSql("(1)")
                .HasColumnName("activo");
            entity.Property(e => e.IdTipo).HasColumnName("idTipo");
            entity.Property(e => e.IdUtil).HasColumnName("idUtil");
        });

        modelBuilder.Entity<Awbcounter>(entity =>
        {
            entity
                .HasNoKey()
                .ToTable("AWBCounter", tb => tb.HasTrigger("TRG_AWBCounter"));

            entity.HasIndex(e => e.IdCliente, "idx_idCliente").HasFillFactor(80);

            entity.Property(e => e.CounterDate)
                .HasColumnType("datetime")
                .HasColumnName("counterDate");
            entity.Property(e => e.IdCliMorada).HasColumnName("idCliMorada");
            entity.Property(e => e.IdCliente).HasColumnName("idCliente");
            entity.Property(e => e.IdEntidade).HasColumnName("idEntidade");
            entity.Property(e => e.Value).HasColumnName("value");
        });

        modelBuilder.Entity<AwbcounterAo>(entity =>
        {
            entity
                .HasNoKey()
                .ToTable("AWBCounterAO");

            entity.HasIndex(e => e.AwbPrefix, "idx_AWBCounterAO_awbprefix");

            entity.Property(e => e.Activo)
                .IsRequired()
                .HasDefaultValueSql("((1))")
                .HasColumnName("activo");
            entity.Property(e => e.AwbPrefix)
                .HasMaxLength(20)
                .IsUnicode(false)
                .HasColumnName("awbPrefix");
            entity.Property(e => e.Counter).HasColumnName("counter");
            entity.Property(e => e.IdEntidade).HasColumnName("idEntidade");
        });

        modelBuilder.Entity<AwbparamCliente>(entity =>
        {
            entity.ToTable("AWBParamCliente");

            entity.Property(e => e.Id).HasColumnName("id");
            entity.Property(e => e.AwbEnd)
                .HasMaxLength(14)
                .HasColumnName("awbEnd");
            entity.Property(e => e.AwbStart)
                .HasMaxLength(14)
                .HasColumnName("awbStart");
            entity.Property(e => e.DtIntrod)
                .HasColumnType("datetime")
                .HasColumnName("dtIntrod");
            entity.Property(e => e.DtUltAct)
                .HasColumnType("datetime")
                .HasColumnName("dtUltAct");
            entity.Property(e => e.IdCliente).HasColumnName("idCliente");
            entity.Property(e => e.IdUtilIntrod).HasColumnName("idUtilIntrod");
            entity.Property(e => e.IdUtilUltAct).HasColumnName("idUtilUltAct");
            entity.Property(e => e.Obs).HasColumnName("obs");
            entity.Property(e => e.PrefixoAwb)
                .HasMaxLength(4)
                .HasColumnName("prefixoAWB");
        });

        modelBuilder.Entity<BackOffice>(entity =>
        {
            entity.HasKey(e => e.Id).HasName("PK__BackOffice__71D1E811");

            entity.ToTable("BackOffice");

            entity.HasIndex(e => e.IGCOM2Userserta, "IDX_iGCOM2Userserta").HasFillFactor(80);

            entity.HasIndex(e => new { e.Fechado, e.IdBoffOrig }, "idx_fechado_idBoffOrig").HasFillFactor(80);

            entity.HasIndex(e => new { e.IdParent, e.Fechado, e.Observacoes }, "idx_idParent_fechado_obs").HasFillFactor(80);

            entity.Property(e => e.Id).HasColumnName("id");
            entity.Property(e => e.ApenasFecharOrigem).HasColumnName("apenasFecharOrigem");
            entity.Property(e => e.DtAbertura)
                .HasDefaultValueSql("(getdate())")
                .HasColumnType("datetime")
                .HasColumnName("dtAbertura");
            entity.Property(e => e.DtFecho)
                .HasColumnType("datetime")
                .HasColumnName("dtFecho");
            entity.Property(e => e.Dtfechadodestino)
                .HasColumnType("datetime")
                .HasColumnName("dtfechadodestino");
            entity.Property(e => e.Fechado).HasColumnName("fechado");
            entity.Property(e => e.Fechadodestino).HasColumnName("fechadodestino");
            entity.Property(e => e.IGCOM2Userserta).HasColumnName("iGCOM2Userserta");
            entity.Property(e => e.IdBoffOrig).HasColumnName("idBoffOrig");
            entity.Property(e => e.IdCliMorada).HasColumnName("idCliMorada");
            entity.Property(e => e.IdCliente).HasColumnName("idCliente");
            entity.Property(e => e.IdDepartDestino).HasColumnName("idDepartDestino");
            entity.Property(e => e.IdEntidade)
                .HasDefaultValueSql("((1))")
                .HasColumnName("idEntidade");
            entity.Property(e => e.IdParent).HasColumnName("idParent");
            entity.Property(e => e.IdPerguntaResposta).HasColumnName("idPerguntaResposta");
            entity.Property(e => e.IdUtilAbertura).HasColumnName("idUtilAbertura");
            entity.Property(e => e.IdUtilDestino).HasColumnName("idUtilDestino");
            entity.Property(e => e.IdUtilFecho).HasColumnName("idUtilFecho");
            entity.Property(e => e.Observacoes)
                .HasMaxLength(250)
                .HasColumnName("observacoes");
        });

        modelBuilder.Entity<BackOfficeAwb>(entity =>
        {
            entity.ToTable("BackOfficeAWBs");

            entity.HasIndex(e => new { e.Activo, e.Awb, e.IdBackOffice }, "idx_activo_awb_idBOff")
                .IsDescending(true, false, false)
                .HasFillFactor(80);

            entity.HasIndex(e => new { e.Activo, e.IdManifesto, e.IdBackOffice }, "idx_activo_idManifesto_idBOff").HasFillFactor(80);

            entity.HasIndex(e => new { e.IdBackOffice, e.Awb, e.Activo }, "idx_idBackoffice_awb").HasFillFactor(80);

            entity.Property(e => e.Id).HasColumnName("id");
            entity.Property(e => e.Activo)
                .IsRequired()
                .HasDefaultValueSql("(1)")
                .HasColumnName("activo");
            entity.Property(e => e.Awb)
                .HasMaxLength(50)
                .HasColumnName("awb");
            entity.Property(e => e.DtIntrod)
                .HasDefaultValueSql("(getdate())")
                .HasColumnType("datetime")
                .HasColumnName("dtIntrod");
            entity.Property(e => e.DtUltAct)
                .HasDefaultValueSql("(getdate())")
                .HasColumnType("datetime")
                .HasColumnName("dtUltAct");
            entity.Property(e => e.IdBackOffice).HasColumnName("idBackOffice");
            entity.Property(e => e.IdManifesto).HasColumnName("idManifesto");
            entity.Property(e => e.IdUtilIntrod).HasColumnName("idUtilIntrod");
            entity.Property(e => e.IdUtilUltAct).HasColumnName("idUtilUltAct");
            entity.Property(e => e.Referencia)
                .HasMaxLength(50)
                .HasColumnName("referencia");
        });

        modelBuilder.Entity<BackOfficeDocumento>(entity =>
        {
            entity.Property(e => e.Id).HasColumnName("id");
            entity.Property(e => e.Descricao)
                .HasMaxLength(50)
                .IsUnicode(false)
                .HasColumnName("descricao");
            entity.Property(e => e.DtIntrod)
                .HasColumnType("datetime")
                .HasColumnName("dtIntrod");
            entity.Property(e => e.Guid)
                .HasMaxLength(50)
                .IsUnicode(false)
                .HasColumnName("GUID");
            entity.Property(e => e.IdBackOffice).HasColumnName("idBackOffice");
            entity.Property(e => e.IdUtilIntrod).HasColumnName("idUtilIntrod");
            entity.Property(e => e.MimeType)
                .HasMaxLength(50)
                .IsUnicode(false)
                .HasColumnName("mimeType");
            entity.Property(e => e.Nome)
                .HasMaxLength(500)
                .IsUnicode(false)
                .HasColumnName("nome");
            entity.Property(e => e.ServerLocation)
                .HasMaxLength(250)
                .IsUnicode(false)
                .HasColumnName("serverLocation");
            entity.Property(e => e.Tamanho).HasColumnName("tamanho");
        });

        modelBuilder.Entity<BackOfficeTiposEstadoT>(entity =>
        {
            entity.ToTable("BackOfficeTiposEstado_T");

            entity.Property(e => e.Id).HasColumnName("id");
            entity.Property(e => e.Descricao)
                .HasMaxLength(50)
                .HasColumnName("descricao");
            entity.Property(e => e.Fecha).HasColumnName("fecha");
        });

        modelBuilder.Entity<BackofficeParceiroDestinatario>(entity =>
        {
            entity.Property(e => e.Id).HasColumnName("id");
            entity.Property(e => e.IdFornecedor).HasColumnName("idFornecedor");
            entity.Property(e => e.IdFuncaoEntidade).HasColumnName("idFuncaoEntidade");
            entity.Property(e => e.IdGrupoUtil).HasColumnName("idGrupoUtil");
            entity.Property(e => e.IdUtil).HasColumnName("idUtil");
        });

        modelBuilder.Entity<Basedado>(entity =>
        {
            entity
                .HasNoKey()
                .ToTable("basedados$");

            entity.Property(e => e.AccountCreationDate)
                .HasColumnType("datetime")
                .HasColumnName("Account Creation Date");
            entity.Property(e => e.ActiveOnIms)
                .HasMaxLength(255)
                .HasColumnName("Active on IMS");
            entity.Property(e => e.ActiveOnYes)
                .HasMaxLength(255)
                .HasColumnName("Active on YES");
            entity.Property(e => e.Country).HasMaxLength(255);
            entity.Property(e => e.CreditTerms)
                .HasMaxLength(255)
                .HasColumnName("Credit Terms");
            entity.Property(e => e.Currency).HasMaxLength(255);
            entity.Property(e => e.CustomerName)
                .HasMaxLength(255)
                .HasColumnName("Customer Name");
            entity.Property(e => e.DomesticRates)
                .HasMaxLength(255)
                .HasColumnName("Domestic Rates");
            entity.Property(e => e.Ean).HasColumnName("EAN");
            entity.Property(e => e.EmailAddress)
                .HasMaxLength(255)
                .HasColumnName("Email Address");
            entity.Property(e => e.IntlOlRateScale)
                .HasMaxLength(255)
                .HasColumnName("INTL_OL_RateScale");
            entity.Property(e => e.MaxDiscLoaded)
                .HasMaxLength(255)
                .HasColumnName("Max_Disc_Loaded");
            entity.Property(e => e.PhysicalAddress)
                .HasMaxLength(255)
                .HasColumnName("Physical Address");
            entity.Property(e => e.TransitionedToEPrs)
                .HasMaxLength(255)
                .HasColumnName("Transitioned to ePRS");
            entity.Property(e => e.Vatnumber).HasColumnName("VATNumber");
            entity.Property(e => e.YesAccountNumber).HasColumnName("YES Account Number");
        });

        modelBuilder.Entity<BusinessPlan>(entity =>
        {
            entity.ToTable("BusinessPlan");

            entity.Property(e => e.Id).HasColumnName("id");
            entity.Property(e => e.BpExpAe)
                .HasColumnType("money")
                .HasColumnName("bpExpAE");
            entity.Property(e => e.BpExpTs)
                .HasColumnType("money")
                .HasColumnName("bpExpTS");
            entity.Property(e => e.BpImp)
                .HasColumnType("money")
                .HasColumnName("bpImp");
            entity.Property(e => e.Criterio).HasColumnName("criterio");
            entity.Property(e => e.Data)
                .HasColumnType("datetime")
                .HasColumnName("data");
            entity.Property(e => e.Fy)
                .HasMaxLength(2)
                .HasDefaultValueSql("(7)")
                .HasColumnName("fy");
            entity.Property(e => e.IdEntidade).HasColumnName("idEntidade");
            entity.Property(e => e.IdZona).HasColumnName("idZona");
        });

        modelBuilder.Entity<BuytragoDiasViagem>(entity =>
        {
            entity
                .HasNoKey()
                .ToTable("BuytragoDiasViagem");

            entity.Property(e => e.DescPlatDest)
                .HasMaxLength(50)
                .IsUnicode(false)
                .HasColumnName("descPlatDest");
            entity.Property(e => e.DescPlatOrig)
                .HasMaxLength(50)
                .IsUnicode(false)
                .HasColumnName("descPlatOrig");
            entity.Property(e => e.IdPlatDest).HasColumnName("idPlatDest");
            entity.Property(e => e.IdPlatOrig).HasColumnName("idPlatOrig");
            entity.Property(e => e.NDias).HasColumnName("nDias");
        });

        modelBuilder.Entity<BuytragoManifesto>(entity =>
        {
            entity
                .HasNoKey()
                .ToTable("BuytragoManifesto");

            entity.HasIndex(e => e.IdHeader, "idx_idHeader").HasFillFactor(80);

            entity.HasIndex(e => new { e.TipoRegisto, e.CodDelOrig, e.NumExpedicao, e.DataExpedicao }, "idx_tipoRegisto_codDelOrigem_numExpedicao_dataExpedicao");

            entity.HasIndex(e => new { e.IdManifesto, e.CodDelOrig, e.CodDelDest, e.NumExpedicao, e.CodExpedidor, e.NumDocCliente }, "ix_BuytragoManifesto_RGL_6").HasFillFactor(80);

            entity.HasIndex(e => new { e.TipoRegisto, e.CodDelOrig, e.CodDelDest, e.NumExpedicao, e.CodExpedidor, e.NumDocCliente }, "ix_BuytragoManifesto_RGL_7").HasFillFactor(80);

            entity.HasIndex(e => new { e.CodDelOrig, e.CodDelDest, e.CodEtiquetado, e.NumExpedicao, e.DataExpedicao, e.IdManifesto }, "ix_MB");

            entity.Property(e => e.CodDelDest)
                .HasMaxLength(4)
                .IsUnicode(false)
                .HasColumnName("codDelDest");
            entity.Property(e => e.CodDelOrig)
                .HasMaxLength(4)
                .IsUnicode(false)
                .HasColumnName("codDelOrig");
            entity.Property(e => e.CodDelRemetente)
                .HasMaxLength(4)
                .IsUnicode(false)
                .HasColumnName("codDelRemetente");
            entity.Property(e => e.CodEtiquetado)
                .HasMaxLength(10)
                .IsUnicode(false)
                .HasColumnName("codEtiquetado");
            entity.Property(e => e.CodExpedidor)
                .HasMaxLength(10)
                .IsUnicode(false)
                .HasColumnName("codExpedidor");
            entity.Property(e => e.CodPaisExpedidor)
                .HasMaxLength(2)
                .HasColumnName("codPaisExpedidor");
            entity.Property(e => e.CodPostalDest)
                .HasMaxLength(9)
                .IsUnicode(false)
                .HasColumnName("codPostalDest");
            entity.Property(e => e.CodPostalExpedidor)
                .HasMaxLength(10)
                .HasColumnName("codPostalExpedidor");
            entity.Property(e => e.ComIva).HasColumnName("comIva");
            entity.Property(e => e.ContactoDest)
                .HasMaxLength(60)
                .HasColumnName("contactoDest");
            entity.Property(e => e.Conteudo)
                .HasMaxLength(20)
                .IsUnicode(false)
                .HasColumnName("conteudo");
            entity.Property(e => e.Control1)
                .HasMaxLength(6)
                .IsUnicode(false)
                .HasColumnName("control1");
            entity.Property(e => e.Control2)
                .HasMaxLength(4)
                .IsUnicode(false)
                .HasColumnName("control2");
            entity.Property(e => e.DataExpedicao)
                .HasColumnType("datetime")
                .HasColumnName("dataExpedicao");
            entity.Property(e => e.Ded)
                .HasColumnType("datetime")
                .HasColumnName("DED");
            entity.Property(e => e.Desembolso)
                .HasColumnType("money")
                .HasColumnName("desembolso");
            entity.Property(e => e.DocAnexo).HasColumnName("docAnexo");
            entity.Property(e => e.DtIntrod)
                .HasDefaultValueSql("(getdate())")
                .HasColumnType("datetime")
                .HasColumnName("dtIntrod");
            entity.Property(e => e.GastosReembolsoPorteDevido)
                .HasColumnType("money")
                .HasColumnName("gastosReembolsoPorteDevido");
            entity.Property(e => e.GastosReembolsoPortePagado)
                .HasColumnType("money")
                .HasColumnName("gastosReembolsoPortePagado");
            entity.Property(e => e.GastosSeguroMercadoria)
                .HasColumnType("money")
                .HasColumnName("gastosSeguroMercadoria");
            entity.Property(e => e.IdHeader).HasColumnName("idHeader");
            entity.Property(e => e.IdManifesto).HasColumnName("idManifesto");
            entity.Property(e => e.Iva)
                .HasColumnType("money")
                .HasColumnName("iva");
            entity.Property(e => e.IvaPorteDevido)
                .HasColumnType("money")
                .HasColumnName("ivaPorteDevido");
            entity.Property(e => e.LocalidadeDest)
                .HasMaxLength(30)
                .IsUnicode(false)
                .HasColumnName("localidadeDest");
            entity.Property(e => e.LocalidadeExpedidor)
                .HasMaxLength(30)
                .IsUnicode(false)
                .HasColumnName("localidadeExpedidor");
            entity.Property(e => e.M3)
                .HasColumnType("money")
                .HasColumnName("m3");
            entity.Property(e => e.Morada1Dest)
                .HasMaxLength(50)
                .IsUnicode(false)
                .HasColumnName("morada1Dest");
            entity.Property(e => e.Morada2Det)
                .HasMaxLength(50)
                .IsUnicode(false)
                .HasColumnName("morada2Det");
            entity.Property(e => e.MoradaExpedidor)
                .HasMaxLength(40)
                .IsUnicode(false)
                .HasColumnName("moradaExpedidor");
            entity.Property(e => e.NomeDest)
                .HasMaxLength(50)
                .IsUnicode(false)
                .HasColumnName("nomeDest");
            entity.Property(e => e.NomeExpedidor)
                .HasMaxLength(30)
                .IsUnicode(false)
                .HasColumnName("nomeExpedidor");
            entity.Property(e => e.NomeRemetente)
                .HasMaxLength(30)
                .IsUnicode(false)
                .HasColumnName("nomeRemetente");
            entity.Property(e => e.NumDocCliente)
                .HasMaxLength(20)
                .IsUnicode(false)
                .HasColumnName("numDocCliente");
            entity.Property(e => e.NumEtiq).HasColumnName("numEtiq");
            entity.Property(e => e.NumExpedicao)
                .HasMaxLength(20)
                .IsUnicode(false)
                .HasColumnName("numExpedicao");
            entity.Property(e => e.NumRota).HasColumnName("numRota");
            entity.Property(e => e.NumVols).HasColumnName("numVols");
            entity.Property(e => e.Obs)
                .HasMaxLength(160)
                .IsUnicode(false)
                .HasColumnName("obs");
            entity.Property(e => e.PercentDesconto)
                .HasColumnType("money")
                .HasColumnName("percentDesconto");
            entity.Property(e => e.Peso)
                .HasColumnType("money")
                .HasColumnName("peso");
            entity.Property(e => e.PesoVol)
                .HasColumnType("money")
                .HasColumnName("pesoVol");
            entity.Property(e => e.Porte)
                .HasColumnType("money")
                .HasColumnName("porte");
            entity.Property(e => e.ReExpComercial)
                .HasColumnType("money")
                .HasColumnName("reExpComercial");
            entity.Property(e => e.ReExpInterna)
                .HasColumnType("money")
                .HasColumnName("reExpInterna");
            entity.Property(e => e.Reembolso)
                .HasColumnType("money")
                .HasColumnName("reembolso");
            entity.Property(e => e.Seguro)
                .HasColumnType("money")
                .HasColumnName("seguro");
            entity.Property(e => e.TelfDest)
                .HasMaxLength(20)
                .IsUnicode(false)
                .HasColumnName("telfDest");
            entity.Property(e => e.TipoAvaliacao).HasColumnName("tipoAvaliacao");
            entity.Property(e => e.TipoEnvio).HasColumnName("tipoEnvio");
            entity.Property(e => e.TipoRegisto).HasColumnName("tipoRegisto");
            entity.Property(e => e.TipoServico).HasColumnName("tipoServico");
            entity.Property(e => e.ValorSegurado)
                .HasColumnType("money")
                .HasColumnName("valorSegurado");
        });

        modelBuilder.Entity<BuytragoRec>(entity =>
        {
            entity
                .HasNoKey()
                .ToTable("Buytrago_REC");

            entity.HasIndex(e => new { e.Tratado, e.ScanCodeRgl }, "Idx_Tratado");

            entity.Property(e => e.CodDelDestino).HasColumnName("codDelDestino");
            entity.Property(e => e.CodDelOrigem).HasColumnName("codDelOrigem");
            entity.Property(e => e.CodEtiquetado)
                .HasMaxLength(4)
                .IsUnicode(false)
                .HasColumnName("codEtiquetado");
            entity.Property(e => e.CodIncidencia)
                .HasMaxLength(4)
                .HasColumnName("codIncidencia");
            entity.Property(e => e.DtExpedicao)
                .HasColumnType("datetime")
                .HasColumnName("dtExpedicao");
            entity.Property(e => e.DtIncidencia)
                .HasColumnType("datetime")
                .HasColumnName("dtIncidencia");
            entity.Property(e => e.DtIntrod)
                .HasDefaultValueSql("(getdate())")
                .HasColumnType("datetime")
                .HasColumnName("dtIntrod");
            entity.Property(e => e.FileName)
                .HasMaxLength(250)
                .IsUnicode(false)
                .HasColumnName("fileName");
            entity.Property(e => e.Id)
                .ValueGeneratedOnAdd()
                .HasColumnName("id");
            entity.Property(e => e.LineIndex).HasColumnName("lineIndex");
            entity.Property(e => e.NumExpedicao)
                .HasMaxLength(8)
                .IsUnicode(false)
                .HasColumnName("numExpedicao");
            entity.Property(e => e.Obs)
                .HasMaxLength(100)
                .IsUnicode(false)
                .HasColumnName("obs");
            entity.Property(e => e.ScanCodeRgl)
                .HasMaxLength(2)
                .HasColumnName("ScanCodeRGL");
            entity.Property(e => e.Tratado)
                .HasDefaultValueSql("((0))")
                .HasColumnName("tratado");
        });

        modelBuilder.Entity<CallCenter>(entity =>
        {
            entity
                .HasNoKey()
                .ToTable("callCenter");

            entity.HasIndex(e => e.CallDate, "idx_call_date").HasFillFactor(80);

            entity.HasIndex(e => new { e.Qname, e.CallDate }, "idx_qname_callDate").HasFillFactor(80);

            entity.Property(e => e.Atendida).HasColumnName("atendida");
            entity.Property(e => e.AtendidaOnTime).HasColumnName("atendidaOnTime");
            entity.Property(e => e.CallDate)
                .HasColumnType("datetime")
                .HasColumnName("call_date");
            entity.Property(e => e.CallDuration).HasColumnName("callDuration");
            entity.Property(e => e.CallId).HasColumnName("call_id");
            entity.Property(e => e.CodUtilizador)
                .HasMaxLength(15)
                .HasColumnName("codUtilizador");
            entity.Property(e => e.Duration).HasColumnName("duration");
            entity.Property(e => e.Phone)
                .HasMaxLength(50)
                .IsUnicode(false)
                .HasColumnName("phone");
            entity.Property(e => e.Qname)
                .HasMaxLength(15)
                .UseCollation("Latin1_General_CI_AS")
                .HasColumnName("qname");
            entity.Property(e => e.Utilizador)
                .HasMaxLength(100)
                .HasColumnName("utilizador");
        });

        modelBuilder.Entity<CallCenterUtilizador>(entity =>
        {
            entity.HasKey(e => e.Id).HasName("PK__callCent__3213E83F15F4CFCA");

            entity.ToTable("callCenterUtilizador");

            entity.Property(e => e.Id).HasColumnName("id");
            entity.Property(e => e.Activo).HasColumnName("activo");
            entity.Property(e => e.Agent).HasColumnName("agent");
            entity.Property(e => e.Fila)
                .HasMaxLength(20)
                .IsUnicode(false)
                .HasColumnName("fila");
            entity.Property(e => e.IdUtilGcom).HasColumnName("idUtilGCOM");
        });

        modelBuilder.Entity<CallcenterTratamentosT>(entity =>
        {
            entity.HasKey(e => e.Id).HasName("PK__callcent__3213E83F300F00F0");

            entity.ToTable("callcenterTratamentos_T");

            entity.Property(e => e.Id).HasColumnName("id");
            entity.Property(e => e.Codigo)
                .HasMaxLength(50)
                .IsUnicode(false)
                .HasColumnName("codigo");
            entity.Property(e => e.Descricao)
                .HasMaxLength(50)
                .IsUnicode(false)
                .HasColumnName("descricao");
        });

        modelBuilder.Entity<CallcenterTratar>(entity =>
        {
            entity.HasKey(e => e.CallId).HasName("PK__callcent__427DCE684FFCAD95");

            entity.ToTable("callcenterTratar");

            entity.Property(e => e.CallId)
                .ValueGeneratedNever()
                .HasColumnName("call_id");
            entity.Property(e => e.CallDate)
                .HasColumnType("datetime")
                .HasColumnName("call_date");
            entity.Property(e => e.DtIntrod)
                .HasColumnType("datetime")
                .HasColumnName("dtIntrod");
            entity.Property(e => e.DtUltAct)
                .HasColumnType("datetime")
                .HasColumnName("dtUltAct");
            entity.Property(e => e.Duracao).HasColumnName("duracao");
            entity.Property(e => e.IdEntrevista).HasColumnName("idEntrevista");
            entity.Property(e => e.IdTratamento).HasColumnName("idTratamento");
            entity.Property(e => e.IdUtilIntrod).HasColumnName("idUtilIntrod");
            entity.Property(e => e.IdUtilUltAct).HasColumnName("idUtilUltAct");
            entity.Property(e => e.Phone)
                .HasMaxLength(50)
                .IsUnicode(false)
                .HasColumnName("phone");
            entity.Property(e => e.Qname)
                .HasMaxLength(15)
                .IsUnicode(false)
                .HasColumnName("qname");
        });

        modelBuilder.Entity<CampanhasPremiosCliente>(entity =>
        {
            entity.HasKey(e => new { e.IdCampanhaPremio, e.IdCliente, e.IdCliMorada, e.IdEntidade });

            entity.Property(e => e.IdCampanhaPremio).HasColumnName("idCampanhaPremio");
            entity.Property(e => e.IdCliente).HasColumnName("idCliente");
            entity.Property(e => e.IdCliMorada).HasColumnName("idCliMorada");
            entity.Property(e => e.IdEntidade).HasColumnName("idEntidade");
            entity.Property(e => e.DtEntrega)
                .HasColumnType("datetime")
                .HasColumnName("dtEntrega");
            entity.Property(e => e.DtIntrod)
                .HasColumnType("datetime")
                .HasColumnName("dtIntrod");
            entity.Property(e => e.DtPedido)
                .HasColumnType("datetime")
                .HasColumnName("dtPedido");
            entity.Property(e => e.DtUltAct)
                .HasColumnType("datetime")
                .HasColumnName("dtUltAct");
            entity.Property(e => e.IdUtilIntrod).HasColumnName("idUtilIntrod");
            entity.Property(e => e.IdUtilUltAct).HasColumnName("idUtilUltAct");
        });

        modelBuilder.Entity<CamposAuditM>(entity =>
        {
            entity.HasKey(e => e.Id).HasName("PK__CamposAu__3213E83F54105600");

            entity.ToTable("CamposAudit_M");

            entity.HasIndex(e => new { e.Campo, e.Activo, e.Tabela }, "idx_Campo_tabela_activo");

            entity.Property(e => e.Id).HasColumnName("id");
            entity.Property(e => e.Campo)
                .HasMaxLength(128)
                .IsUnicode(false)
                .HasColumnName("CAMPO");
            entity.Property(e => e.Datatype)
                .HasMaxLength(50)
                .HasColumnName("datatype");
            entity.Property(e => e.Descricao)
                .HasMaxLength(128)
                .HasColumnName("DESCRICAO");
            entity.Property(e => e.Tabela)
                .HasMaxLength(100)
                .HasColumnName("tabela");
            entity.Property(e => e.Typeformat)
                .HasMaxLength(50)
                .HasColumnName("typeformat");
        });

        modelBuilder.Entity<CamposObrigatorio>(entity =>
        {
            entity.HasKey(e => e.Id).HasName("PK__CamposOb__3213E83F65E54CDD");

            entity.HasIndex(e => new { e.IdCliente, e.Er, e.Activo }, "idx_idCliente_er_activo");

            entity.Property(e => e.Id).HasColumnName("id");
            entity.Property(e => e.Activo).HasColumnName("activo");
            entity.Property(e => e.Campo).HasMaxLength(50);
            entity.Property(e => e.CodigoCampo)
                .HasMaxLength(100)
                .HasColumnName("codigoCampo");
            entity.Property(e => e.Er)
                .HasMaxLength(20)
                .HasColumnName("ER");
            entity.Property(e => e.IdCliente).HasColumnName("idCliente");
            entity.Property(e => e.LblCampo)
                .HasMaxLength(100)
                .HasColumnName("lblCampo");
            entity.Property(e => e.ObsCampo)
                .HasMaxLength(100)
                .HasColumnName("obsCampo");
            entity.Property(e => e.Tabela).HasMaxLength(100);
        });

        modelBuilder.Entity<CargoScanner>(entity =>
        {
            entity.HasKey(e => e.Id).HasName("PK_CargoScanner1");

            entity.ToTable("CargoScanner");

            entity.HasIndex(e => new { e.IdManifesto, e.DtValida }, "IDX_idManifesto_dtValida").HasFillFactor(80);

            entity.HasIndex(e => new { e.IdManifesto, e.DtValida }, "IDX_idManifesto_dtValida1");

            entity.HasIndex(e => new { e.Awb, e.IdBalanca, e.IdUnico }, "idx_AWB_idBALANCA_idUnico").HasFillFactor(80);

            entity.HasIndex(e => new { e.Awb, e.IdBalanca, e.IdUnico }, "idx_AWB_idBALANCA_idUnico1");

            entity.HasIndex(e => e.DtConferido, "idx_dtConferido");

            entity.HasIndex(e => e.DtConferido, "idx_dtConferido1");

            entity.HasIndex(e => new { e.DtScans, e.DataLeitura }, "idx_dtScan_DataLeitura");

            entity.HasIndex(e => new { e.DtScans, e.DataLeitura }, "idx_dtScan_DataLeitura1");

            entity.Property(e => e.Id).HasColumnName("id");
            entity.Property(e => e.AlteraValor).HasColumnName("alteraValor");
            entity.Property(e => e.Altura)
                .HasColumnType("money")
                .HasColumnName("altura");
            entity.Property(e => e.Awb)
                .HasMaxLength(50)
                .HasColumnName("awb");
            entity.Property(e => e.Comprimento)
                .HasColumnType("money")
                .HasColumnName("comprimento");
            entity.Property(e => e.DataAutomatica)
                .HasDefaultValueSql("(getdate())")
                .HasColumnType("datetime")
                .HasColumnName("dataAutomatica");
            entity.Property(e => e.DataLeitura)
                .HasColumnType("datetime")
                .HasColumnName("dataLeitura");
            entity.Property(e => e.DtConferido)
                .HasColumnType("datetime")
                .HasColumnName("dtConferido");
            entity.Property(e => e.DtNotif)
                .HasColumnType("datetime")
                .HasColumnName("dtNotif");
            entity.Property(e => e.DtScans)
                .HasColumnType("datetime")
                .HasColumnName("dtScans");
            entity.Property(e => e.DtValida)
                .HasColumnType("datetime")
                .HasColumnName("dtValida");
            entity.Property(e => e.IdBalanca)
                .HasMaxLength(20)
                .IsFixedLength()
                .HasColumnName("idBalanca");
            entity.Property(e => e.IdExportacaoManifesto).HasColumnName("idExportacaoManifesto");
            entity.Property(e => e.IdImportacaoManifesto).HasColumnName("idImportacaoManifesto");
            entity.Property(e => e.IdManifesto).HasColumnName("idManifesto");
            entity.Property(e => e.IdRazaoNaoConferir).HasColumnName("idRazaoNaoConferir");
            entity.Property(e => e.IdUnico).HasColumnName("idUnico");
            entity.Property(e => e.Largura)
                .HasColumnType("money")
                .HasColumnName("largura");
            entity.Property(e => e.Modo)
                .HasMaxLength(10)
                .IsFixedLength()
                .HasColumnName("modo");
            entity.Property(e => e.Peso)
                .HasColumnType("money")
                .HasColumnName("peso");
            entity.Property(e => e.Pesovol)
                .HasColumnType("money")
                .HasColumnName("pesovol");
            entity.Property(e => e.RampId)
                .HasMaxLength(20)
                .HasColumnName("rampID");
        });

        modelBuilder.Entity<CargoScannerBalancasT>(entity =>
        {
            entity.HasKey(e => e.IdBalanca);

            entity.ToTable("CargoScannerBalancas_T");

            entity.Property(e => e.IdBalanca)
                .HasMaxLength(20)
                .HasColumnName("idBalanca");
            entity.Property(e => e.Activa)
                .IsRequired()
                .HasDefaultValueSql("((1))")
                .HasColumnName("activa");
            entity.Property(e => e.DescReport)
                .HasMaxLength(50)
                .HasColumnName("descReport");
            entity.Property(e => e.Descricao)
                .HasMaxLength(50)
                .HasColumnName("descricao");
            entity.Property(e => e.IdEntidade).HasColumnName("idEntidade");
            entity.Property(e => e.IdPlataforma).HasColumnName("idPlataforma");
            entity.Property(e => e.IdTipoBalanca).HasColumnName("idTipoBalanca");
            entity.Property(e => e.IdUtil).HasColumnName("idUtil");
        });

        modelBuilder.Entity<CargoScannerBalancasTipoProdutoT>(entity =>
        {
            entity.HasKey(e => new { e.IdTipoBalanca, e.IdTipoProduto });

            entity.ToTable("CargoScannerBalancasTipoProduto_T");

            entity.Property(e => e.IdTipoBalanca).HasColumnName("idTipoBalanca");
            entity.Property(e => e.IdTipoProduto).HasColumnName("idTipoProduto");
        });

        modelBuilder.Entity<CargoScannerBalancasTipoT>(entity =>
        {
            entity.ToTable("CargoScannerBalancasTipo_T");

            entity.Property(e => e.Id)
                .ValueGeneratedNever()
                .HasColumnName("id");
            entity.Property(e => e.Descricao)
                .HasMaxLength(50)
                .HasColumnName("descricao");
        });

        modelBuilder.Entity<CargoScannerModosT>(entity =>
        {
            entity.ToTable("CargoScannerModos_T");

            entity.Property(e => e.Id).HasColumnName("id");
            entity.Property(e => e.IdEntidade).HasColumnName("idEntidade");
            entity.Property(e => e.IsDefault).HasColumnName("isDefault");
            entity.Property(e => e.Modo)
                .HasMaxLength(10)
                .IsFixedLength()
                .HasColumnName("modo");
            entity.Property(e => e.OrdemScan).HasColumnName("ordemScan");
            entity.Property(e => e.ParaConferir).HasColumnName("paraConferir");
            entity.Property(e => e.ParaMaster).HasColumnName("paraMaster");
            entity.Property(e => e.ParaObsPeso).HasColumnName("paraObsPeso");
            entity.Property(e => e.ParaScans).HasColumnName("paraScans");
            entity.Property(e => e.PodeScanRepetido).HasColumnName("podeScanRepetido");
            entity.Property(e => e.ScanCode)
                .HasMaxLength(2)
                .HasColumnName("scanCode");
        });

        modelBuilder.Entity<CargoScannerRazoesNaoConferirT>(entity =>
        {
            entity.ToTable("CargoScannerRazoesNaoConferir_T");

            entity.Property(e => e.Id).HasColumnName("id");
            entity.Property(e => e.Codigo)
                .HasMaxLength(50)
                .HasColumnName("codigo");
            entity.Property(e => e.Descricao)
                .HasMaxLength(50)
                .HasColumnName("descricao");
            entity.Property(e => e.IdEntidade).HasColumnName("idEntidade");
        });

        modelBuilder.Entity<CentrosCustoT>(entity =>
        {
            entity.ToTable("CentrosCusto_T");

            entity.Property(e => e.Id).HasColumnName("id");
            entity.Property(e => e.Activo)
                .IsRequired()
                .HasDefaultValueSql("(1)")
                .HasColumnName("activo");
            entity.Property(e => e.Arrasto).HasColumnName("arrasto");
            entity.Property(e => e.Codigo)
                .HasMaxLength(15)
                .HasColumnName("codigo");
            entity.Property(e => e.Descricao)
                .HasMaxLength(50)
                .HasColumnName("descricao");
            entity.Property(e => e.Entrega).HasColumnName("entrega");
            entity.Property(e => e.Recolha).HasColumnName("recolha");
        });

        modelBuilder.Entity<CexEnviospendentesactualizacao>(entity =>
        {
            entity.HasKey(e => e.NumEnvio).HasName("PK__CEX_ENVI__9597E69240E73BAA");

            entity.ToTable("CEX_ENVIOSPENDENTESACTUALIZACAO");

            entity.Property(e => e.NumEnvio)
                .HasMaxLength(23)
                .HasColumnName("numEnvio");
            entity.Property(e => e.DtIntrod)
                .HasDefaultValueSql("(getdate())")
                .HasColumnType("datetime")
                .HasColumnName("dtIntrod");
            entity.Property(e => e.Dtprocessado)
                .HasColumnType("datetime")
                .HasColumnName("dtprocessado");
            entity.Property(e => e.IdPickup).HasColumnName("idPickup");
            entity.Property(e => e.Msg)
                .HasMaxLength(500)
                .HasColumnName("msg");
            entity.Property(e => e.Processado)
                .HasDefaultValueSql("((0))")
                .HasColumnName("processado");
        });

        modelBuilder.Entity<CexParticularidade>(entity =>
        {
            entity.HasKey(e => e.Id).HasName("PK__CEX_PART__3213E83F07BED2E4");

            entity.ToTable("CEX_PARTICULARIDADES");

            entity.Property(e => e.Id).HasColumnName("id");
            entity.Property(e => e.Activo).HasColumnName("activo");
            entity.Property(e => e.CodClienteParceiro).HasMaxLength(100);
            entity.Property(e => e.CodClienteParceiroWs)
                .HasMaxLength(50)
                .HasColumnName("CodClienteParceiroWS");
            entity.Property(e => e.Cpostal)
                .HasMaxLength(10)
                .HasColumnName("cpostal");
            entity.Property(e => e.Descricao)
                .HasMaxLength(2000)
                .HasColumnName("descricao");
            entity.Property(e => e.IdClasseOrigemNova).HasColumnName("idClasseOrigemNova");
            entity.Property(e => e.IdCliMorada).HasColumnName("idCliMorada");
            entity.Property(e => e.IdCliMoradaNova).HasColumnName("idCliMoradaNova");
            entity.Property(e => e.IdCliente).HasColumnName("idCliente");
            entity.Property(e => e.IdServicoNovo).HasColumnName("idServicoNovo");
            entity.Property(e => e.Produto)
                .HasMaxLength(10)
                .HasColumnName("produto");
            entity.Property(e => e.Regra)
                .HasMaxLength(50)
                .HasColumnName("REGRA");
        });

        modelBuilder.Entity<CgidToGcomMap>(entity =>
        {
            entity.HasKey(e => e.IdMap).HasName("PK__CgidToGc__0D13B7403A8194A0");

            entity.ToTable("CgidToGcomMap");

            entity.Property(e => e.CodCgid).HasMaxLength(50);
            entity.Property(e => e.CodGcom).HasMaxLength(50);
        });

        modelBuilder.Entity<ClassesOrigem>(entity =>
        {
            entity.ToTable("ClassesOrigem");

            entity.Property(e => e.Id).HasColumnName("id");
            entity.Property(e => e.DtIntrod)
                .HasDefaultValueSql("(getdate())")
                .HasColumnType("datetime")
                .HasColumnName("dtIntrod");
            entity.Property(e => e.IdCliMorada).HasColumnName("idCliMorada");
            entity.Property(e => e.IdCliente).HasColumnName("idCliente");
            entity.Property(e => e.IdEntidade)
                .HasDefaultValueSql("((4))")
                .HasColumnName("idEntidade");
            entity.Property(e => e.IdRegime).HasColumnName("idRegime");
            entity.Property(e => e.IdServico).HasColumnName("idServico");
            entity.Property(e => e.IdUtilIntrod).HasColumnName("idUtilIntrod");
            entity.Property(e => e.Nome)
                .HasMaxLength(50)
                .HasColumnName("nome");
        });

        modelBuilder.Entity<ClassesOrigemRex2>(entity =>
        {
            entity
                .HasNoKey()
                .ToTable("ClassesOrigemREX2");

            entity.Property(e => e.CoCliente)
                .HasMaxLength(50)
                .IsUnicode(false)
                .HasColumnName("co_cliente");
            entity.Property(e => e.CoNome)
                .HasMaxLength(50)
                .IsUnicode(false)
                .HasColumnName("co_nome");
            entity.Property(e => e.CoNumero)
                .HasMaxLength(50)
                .IsUnicode(false)
                .HasColumnName("co_numero");
            entity.Property(e => e.IdGcom).HasColumnName("idGCOM");
        });

        modelBuilder.Entity<Cliente>(entity =>
        {
            entity.HasKey(e => e.Id).HasName("PK_T_Cliente_tmp");

            entity.ToTable("Cliente", tb =>
                {
                    tb.HasTrigger("Cliente_SAP_Trigger");
                    tb.HasTrigger("Cliente_TLog_Trigger");
                });

            entity.HasIndex(e => new { e.Anulado, e.Id }, "idx_anulado_id");

            entity.HasIndex(e => new { e.IsParticular, e.Id }, "idx_isParticular_id").IsDescending(true, false);

            entity.HasIndex(e => new { e.Nome, e.Id, e.Anulado }, "idx_nome_id_anulado").HasFillFactor(80);

            entity.Property(e => e.Id).HasColumnName("id");
            entity.Property(e => e.Anulado).HasColumnName("anulado");
            entity.Property(e => e.Bicc)
                .HasMaxLength(20)
                .HasColumnName("BICC");
            entity.Property(e => e.DtUltAct)
                .HasDefaultValueSql("(getdate())")
                .HasColumnType("datetime")
                .HasColumnName("dtUltAct");
            entity.Property(e => e.GrupoRangel).HasColumnName("grupoRangel");
            entity.Property(e => e.IdCae).HasColumnName("idCae");
            entity.Property(e => e.IdPais).HasColumnName("idPais");
            entity.Property(e => e.IdSectorActividade).HasColumnName("idSectorActividade");
            entity.Property(e => e.IdTipoEntidade).HasColumnName("idTipoEntidade");
            entity.Property(e => e.IdUtilUltAct).HasColumnName("idUtilUltAct");
            entity.Property(e => e.IsEditavel)
                .IsRequired()
                .HasDefaultValueSql("((1))")
                .HasColumnName("isEditavel");
            entity.Property(e => e.IsParticular)
                .HasComment("Bit que identifica o cliente particular")
                .HasColumnName("isParticular");
            entity.Property(e => e.Nome)
                .HasMaxLength(100)
                .HasColumnName("nome");
            entity.Property(e => e.NrContrib)
                .HasMaxLength(20)
                .HasColumnName("nrContrib");
            entity.Property(e => e.Observacoes)
                .HasMaxLength(250)
                .HasColumnName("observacoes");
            entity.Property(e => e.Passaporte).HasMaxLength(20);
        });

        modelBuilder.Entity<ClienteAcompanhamentoTipoT>(entity =>
        {
            entity.ToTable("ClienteAcompanhamentoTipo_T");

            entity.Property(e => e.Id).HasColumnName("id");
            entity.Property(e => e.Activo)
                .IsRequired()
                .HasDefaultValueSql("(1)")
                .HasColumnName("activo");
            entity.Property(e => e.Codigo)
                .HasMaxLength(25)
                .HasColumnName("codigo");
            entity.Property(e => e.Descricao)
                .HasMaxLength(50)
                .HasColumnName("descricao");
            entity.Property(e => e.IdEntidade).HasColumnName("idEntidade");
        });

        modelBuilder.Entity<ClienteCaeT>(entity =>
        {
            entity.HasKey(e => e.Id).HasName("PK_T_CAE");

            entity.ToTable("ClienteCAE_T");

            entity.Property(e => e.Id)
                .ValueGeneratedNever()
                .HasColumnName("id");
            entity.Property(e => e.Activo)
                .IsRequired()
                .HasDefaultValueSql("((1))")
                .HasColumnName("activo");
            entity.Property(e => e.Descricao)
                .HasMaxLength(255)
                .IsUnicode(false)
                .HasColumnName("descricao");
        });

        modelBuilder.Entity<ClienteCampanha>(entity =>
        {
            entity.ToTable("ClienteCampanha");

            entity.Property(e => e.Id).HasColumnName("id");
            entity.Property(e => e.Activo)
                .HasDefaultValueSql("(1)")
                .HasColumnName("activo");
            entity.Property(e => e.Codigo)
                .HasMaxLength(15)
                .HasColumnName("codigo");
            entity.Property(e => e.Descricao)
                .HasMaxLength(50)
                .HasColumnName("descricao");
            entity.Property(e => e.DtFim)
                .HasColumnType("datetime")
                .HasColumnName("dtFim");
            entity.Property(e => e.DtInicio)
                .HasDefaultValueSql("(getdate())")
                .HasColumnType("datetime")
                .HasColumnName("dtInicio");
            entity.Property(e => e.DtIntrod)
                .HasColumnType("datetime")
                .HasColumnName("dtIntrod");
            entity.Property(e => e.IdEntidade)
                .HasDefaultValueSql("(1)")
                .HasColumnName("idEntidade");
            entity.Property(e => e.IdUtilIntrod).HasColumnName("idUtilIntrod");
            entity.Property(e => e.Obs)
                .HasMaxLength(100)
                .HasColumnName("obs");
            entity.Property(e => e.TodosClientes).HasColumnName("todosClientes");
        });

        modelBuilder.Entity<ClienteCampanhaPremio>(entity =>
        {
            entity.HasKey(e => e.Id).HasName("PK__Campanha__3213E83F247AF4DD");

            entity.Property(e => e.Id).HasColumnName("id");
            entity.Property(e => e.Codigo)
                .HasMaxLength(50)
                .IsUnicode(false)
                .HasColumnName("codigo");
            entity.Property(e => e.Descricao)
                .HasMaxLength(250)
                .IsUnicode(false)
                .HasColumnName("descricao");
            entity.Property(e => e.DtIntrod)
                .HasColumnType("datetime")
                .HasColumnName("dtIntrod");
            entity.Property(e => e.DtUltAct)
                .HasColumnType("datetime")
                .HasColumnName("dtUltAct");
            entity.Property(e => e.IdCampanha).HasColumnName("idCampanha");
            entity.Property(e => e.IdEntidade).HasColumnName("idEntidade");
            entity.Property(e => e.IdUtilIntrod).HasColumnName("idUtilIntrod");
            entity.Property(e => e.IdUtilUltAct).HasColumnName("idUtilUltAct");
            entity.Property(e => e.Pontos)
                .HasColumnType("money")
                .HasColumnName("pontos");
        });

        modelBuilder.Entity<ClienteCampanhaPremiosLog>(entity =>
        {
            entity
                .HasNoKey()
                .ToTable("ClienteCampanhaPremios_Log");

            entity.Property(e => e.DtIntrod)
                .HasColumnType("datetime")
                .HasColumnName("dtIntrod");
            entity.Property(e => e.IdCampanha).HasColumnName("idCampanha");
            entity.Property(e => e.IdCliMorada).HasColumnName("idCliMorada");
            entity.Property(e => e.IdCliente).HasColumnName("idCliente");
            entity.Property(e => e.IdEntidade).HasColumnName("idEntidade");
            entity.Property(e => e.IdPremio).HasColumnName("idPremio");
            entity.Property(e => e.IdUtilIntrod).HasColumnName("idUtilIntrod");
            entity.Property(e => e.Pontos)
                .HasColumnType("money")
                .HasColumnName("pontos");
        });

        modelBuilder.Entity<ClienteCampanhasLog>(entity =>
        {
            entity.ToTable("ClienteCampanhasLog");

            entity.HasIndex(e => new { e.IdCliente, e.IdCampanha, e.DtInicio, e.DtFim }, "idx_cliente_campanha_datas").HasFillFactor(80);

            entity.HasIndex(e => new { e.IdCliente, e.IdCampanha, e.Activo }, "idx_idcliente_idcampanha_activo")
                .IsDescending(false, false, true)
                .HasFillFactor(80);

            entity.HasIndex(e => new { e.Activo, e.IdCliente, e.IdCampanha, e.DtInicio, e.DtFim, e.DtFimMedicao }, "ix_ClienteCampanhasLog_RGL_8").HasFillFactor(80);

            entity.Property(e => e.Id).HasColumnName("id");
            entity.Property(e => e.Activo).HasColumnName("activo");
            entity.Property(e => e.DtFim)
                .HasColumnType("datetime")
                .HasColumnName("dtFim");
            entity.Property(e => e.DtFimMedicao)
                .HasColumnType("datetime")
                .HasColumnName("dtFimMedicao");
            entity.Property(e => e.DtInicio)
                .HasColumnType("datetime")
                .HasColumnName("dtInicio");
            entity.Property(e => e.DtIntrod)
                .HasColumnType("datetime")
                .HasColumnName("dtIntrod");
            entity.Property(e => e.DtUltAct)
                .HasColumnType("datetime")
                .HasColumnName("dtUltAct");
            entity.Property(e => e.DtUltCalculoPontos)
                .HasColumnType("datetime")
                .HasColumnName("dtUltCalculoPontos");
            entity.Property(e => e.DtUltCalculoPontosProvisorios)
                .HasColumnType("datetime")
                .HasColumnName("dtUltCalculoPontosProvisorios");
            entity.Property(e => e.IdCampanha).HasColumnName("idCampanha");
            entity.Property(e => e.IdCliMorada).HasColumnName("idCliMorada");
            entity.Property(e => e.IdCliente).HasColumnName("idCliente");
            entity.Property(e => e.IdEntidade).HasColumnName("idEntidade");
            entity.Property(e => e.IdUtilIntrod).HasColumnName("idUtilIntrod");
            entity.Property(e => e.IdUtilUltAct).HasColumnName("idUtilUltAct");
            entity.Property(e => e.Pontos)
                .HasColumnType("money")
                .HasColumnName("pontos");
            entity.Property(e => e.PontosProvisorios)
                .HasColumnType("money")
                .HasColumnName("pontosProvisorios");
        });

        modelBuilder.Entity<ClienteConcorrenteMotivoT>(entity =>
        {
            entity.HasKey(e => e.Id).HasName("PK_T_ConcorrenteMotivo");

            entity.ToTable("ClienteConcorrenteMotivo_T");

            entity.Property(e => e.Id).HasColumnName("id");
            entity.Property(e => e.Descricao)
                .HasMaxLength(50)
                .HasColumnName("descricao");
            entity.Property(e => e.IdEntidade).HasColumnName("idEntidade");
        });

        modelBuilder.Entity<ClienteConcorrenteT>(entity =>
        {
            entity.HasKey(e => e.Id).HasName("PK_T_Concorrente");

            entity.ToTable("ClienteConcorrente_T");

            entity.Property(e => e.Id).HasColumnName("id");
            entity.Property(e => e.Descricao)
                .HasMaxLength(50)
                .HasColumnName("descricao");
            entity.Property(e => e.IdEntidade)
                .HasDefaultValueSql("(1)")
                .HasColumnName("idEntidade");
        });

        modelBuilder.Entity<ClienteContacto>(entity =>
        {
            entity.HasKey(e => e.Id).HasName("PK_T_ClienteContactos");

            entity.HasIndex(e => new { e.Default, e.IdEntidade }, "idx_default_idEntidade_idCliente_telef_fax").HasFillFactor(80);

            entity.HasIndex(e => new { e.Telefone, e.Fax, e.Default }, "idx_fax_telefone").HasFillFactor(80);

            entity.HasIndex(e => new { e.IdCliente, e.IdEntidade, e.IdCliMorada, e.Default }, "idx_idCliente_idEntidade_idCliMorada_default").HasFillFactor(80);

            entity.HasIndex(e => new { e.IdCliente, e.IdTipoContacto, e.IdEntidade }, "idx_idCliente_idTipoContacto_idEntidade").HasFillFactor(80);

            entity.Property(e => e.Id).HasColumnName("id");
            entity.Property(e => e.Aduaneira)
                .HasDefaultValueSql("(0)")
                .HasColumnName("aduaneira");
            entity.Property(e => e.Cargo)
                .HasMaxLength(50)
                .HasColumnName("cargo");
            entity.Property(e => e.Comercial)
                .HasDefaultValueSql("(0)")
                .HasColumnName("comercial");
            entity.Property(e => e.DataCriacao)
                .HasDefaultValueSql("(getdate())")
                .HasColumnType("datetime")
                .HasColumnName("dataCriacao");
            entity.Property(e => e.DataUltAct)
                .HasDefaultValueSql("(getdate())")
                .HasColumnType("datetime")
                .HasColumnName("dataUltAct");
            entity.Property(e => e.Default).HasColumnName("default");
            entity.Property(e => e.Departamento)
                .HasMaxLength(50)
                .HasColumnName("departamento");
            entity.Property(e => e.Email)
                .HasMaxLength(50)
                .HasColumnName("email");
            entity.Property(e => e.Fax).HasColumnName("fax");
            entity.Property(e => e.Financeira)
                .HasDefaultValueSql("(0)")
                .HasColumnName("financeira");
            entity.Property(e => e.HoraEntrada)
                .HasColumnType("datetime")
                .HasColumnName("horaEntrada");
            entity.Property(e => e.HoraFimAlmoco)
                .HasColumnType("datetime")
                .HasColumnName("horaFimAlmoco");
            entity.Property(e => e.HoraInicioAlmoco)
                .HasColumnType("datetime")
                .HasColumnName("horaInicioAlmoco");
            entity.Property(e => e.HoraSaida)
                .HasColumnType("datetime")
                .HasColumnName("horaSaida");
            entity.Property(e => e.IdCliMorada).HasColumnName("idCliMorada");
            entity.Property(e => e.IdCliente).HasColumnName("idCliente");
            entity.Property(e => e.IdEntidade).HasColumnName("idEntidade");
            entity.Property(e => e.IdTipoContacto).HasColumnName("idTipoContacto");
            entity.Property(e => e.IdUtilCriacao).HasColumnName("idUtilCriacao");
            entity.Property(e => e.IdUtilUltAct).HasColumnName("idUtilUltAct");
            entity.Property(e => e.IdeExternoSf)
                .HasMaxLength(50)
                .HasColumnName("ideExternoSF");
            entity.Property(e => e.Nome)
                .HasMaxLength(50)
                .HasColumnName("nome");
            entity.Property(e => e.Observacoes)
                .HasMaxLength(150)
                .HasColumnName("observacoes");
            entity.Property(e => e.Operacoes)
                .HasDefaultValueSql("(0)")
                .HasColumnName("operacoes");
            entity.Property(e => e.Telefone).HasColumnName("telefone");
            entity.Property(e => e.Telefone2).HasColumnName("telefone2");
            entity.Property(e => e.Titulo)
                .HasMaxLength(5)
                .HasColumnName("titulo");
        });

        modelBuilder.Entity<ClienteContactosTipoAcesso>(entity =>
        {
            entity.HasKey(e => new { e.IdContactoTipo, e.IdGrupo }).HasName("PK_ClienteContactoTipoDepartamentosDefeito");

            entity.ToTable("ClienteContactosTipoAcesso");

            entity.Property(e => e.IdContactoTipo).HasColumnName("idContactoTipo");
            entity.Property(e => e.IdGrupo).HasColumnName("idGrupo");
            entity.Property(e => e.Id)
                .ValueGeneratedOnAdd()
                .HasColumnName("id");
            entity.Property(e => e.Posicao).HasColumnName("posicao");
        });

        modelBuilder.Entity<ClienteContactosTipoT>(entity =>
        {
            entity.ToTable("ClienteContactosTipo_T");

            entity.Property(e => e.Id).HasColumnName("id");
            entity.Property(e => e.Activo)
                .IsRequired()
                .HasDefaultValueSql("((1))")
                .HasColumnName("activo");
            entity.Property(e => e.Descricao)
                .HasMaxLength(50)
                .HasColumnName("descricao");
            entity.Property(e => e.IdEntidade).HasColumnName("idEntidade");
        });

        modelBuilder.Entity<ClienteContrato>(entity =>
        {
            entity.HasKey(e => e.Id).HasName("PK_Cliente_Contrato");

            entity.ToTable("ClienteContrato");

            entity.HasIndex(e => e.IdCliente, "Idx_IdCliente");

            entity.Property(e => e.Id).HasColumnName("id");
            entity.Property(e => e.Bultos)
                .HasMaxLength(50)
                .HasColumnName("bultos");
            entity.Property(e => e.BultosExpedicionEstandar)
                .HasMaxLength(50)
                .HasColumnName("bultosExpedicionEstandar");
            entity.Property(e => e.BultosPorExpedicion)
                .HasMaxLength(50)
                .HasColumnName("bultosPorExpedicion");
            entity.Property(e => e.CentroRecogida)
                .HasMaxLength(50)
                .HasColumnName("centroRecogida");
            entity.Property(e => e.CodBancoFacturacion)
                .HasMaxLength(50)
                .HasColumnName("codBancoFacturacion");
            entity.Property(e => e.CodBancoReembolso)
                .HasMaxLength(50)
                .HasColumnName("codBancoReembolso");
            entity.Property(e => e.CodBicFacturacion)
                .HasMaxLength(50)
                .HasColumnName("codBicFacturacion");
            entity.Property(e => e.CodCuentaFacturacion)
                .HasMaxLength(50)
                .HasColumnName("codCuentaFacturacion");
            entity.Property(e => e.CodCuentaReembolso)
                .HasMaxLength(50)
                .HasColumnName("codCuentaReembolso");
            entity.Property(e => e.CodDcFacturacion)
                .HasMaxLength(50)
                .HasColumnName("codDcFacturacion");
            entity.Property(e => e.CodDcReembolso)
                .HasMaxLength(50)
                .HasColumnName("codDcReembolso");
            entity.Property(e => e.CodIbanFacturacion)
                .HasMaxLength(50)
                .HasColumnName("codIbanFacturacion");
            entity.Property(e => e.CodIbanreembolso)
                .HasMaxLength(50)
                .HasColumnName("codIBANReembolso");
            entity.Property(e => e.CodSucursalFacturacion)
                .HasMaxLength(50)
                .HasColumnName("codSucursalFacturacion");
            entity.Property(e => e.CodSucursalReembolso)
                .HasMaxLength(50)
                .HasColumnName("codSucursalReembolso");
            entity.Property(e => e.CodigoMandatoSepa)
                .HasMaxLength(50)
                .HasColumnName("codigoMandatoSEPA");
            entity.Property(e => e.Competidores)
                .HasMaxLength(50)
                .HasColumnName("competidores");
            entity.Property(e => e.DesOferta)
                .HasMaxLength(50)
                .HasColumnName("desOferta");
            entity.Property(e => e.DiaPago1)
                .HasMaxLength(50)
                .HasColumnName("diaPago1");
            entity.Property(e => e.DiaPago2)
                .HasMaxLength(50)
                .HasColumnName("diaPago2");
            entity.Property(e => e.DispersionProductos)
                .HasMaxLength(50)
                .HasColumnName("dispersionProductos");
            entity.Property(e => e.DispersionesEstandar)
                .HasMaxLength(50)
                .HasColumnName("dispersionesEstandar");
            entity.Property(e => e.DtCriacao)
                .HasDefaultValueSql("(getdate())")
                .HasColumnType("datetime");
            entity.Property(e => e.EnviosReembolso)
                .HasMaxLength(50)
                .HasColumnName("enviosReembolso");
            entity.Property(e => e.FechActivacion)
                .HasMaxLength(50)
                .HasColumnName("fechActivacion");
            entity.Property(e => e.FpgReqAutorizacion)
                .HasMaxLength(50)
                .HasColumnName("fpgReqAutorizacion");
            entity.Property(e => e.FrecuenciaRecogida)
                .HasMaxLength(50)
                .HasColumnName("frecuenciaRecogida");
            entity.Property(e => e.HorarioRecogida)
                .HasMaxLength(50)
                .HasColumnName("horarioRecogida");
            entity.Property(e => e.IbanExtracomunitario)
                .HasMaxLength(50)
                .HasColumnName("ibanExtracomunitario");
            entity.Property(e => e.IbanIntracomunitario)
                .HasMaxLength(50)
                .HasColumnName("ibanIntracomunitario");
            entity.Property(e => e.IdCliente).HasMaxLength(50);
            entity.Property(e => e.IdContactoVenta)
                .HasMaxLength(50)
                .HasColumnName("idContactoVenta");
            entity.Property(e => e.IdTarifa)
                .HasMaxLength(50)
                .HasColumnName("idTarifa");
            entity.Property(e => e.IdTarifaName)
                .HasMaxLength(50)
                .HasColumnName("idTarifaName");
            entity.Property(e => e.IdeContrato)
                .HasMaxLength(50)
                .HasColumnName("ideContrato");
            entity.Property(e => e.IdeExterno)
                .HasMaxLength(50)
                .HasColumnName("ideExterno");
            entity.Property(e => e.IdeFormaPago)
                .HasMaxLength(50)
                .HasColumnName("ideFormaPago");
            entity.Property(e => e.ImporteRecogida)
                .HasMaxLength(50)
                .HasColumnName("importeRecogida");
            entity.Property(e => e.ImporteReembolso)
                .HasMaxLength(50)
                .HasColumnName("importeReembolso");
            entity.Property(e => e.IndEstaAprobada)
                .HasMaxLength(50)
                .HasColumnName("indEstaAprobada");
            entity.Property(e => e.IndMapaBaremo)
                .HasMaxLength(50)
                .HasColumnName("indMapaBaremo");
            entity.Property(e => e.IndTipoTarifa)
                .HasMaxLength(50)
                .HasColumnName("indTipoTarifa");
            entity.Property(e => e.MailReembolso)
                .HasMaxLength(50)
                .HasColumnName("mailReembolso");
            entity.Property(e => e.Suplementos).HasColumnName("suplementos");
            entity.Property(e => e.TipoCuentaBancaria)
                .HasMaxLength(50)
                .HasColumnName("tipoCuentaBancaria");
            entity.Property(e => e.TipoMandatoSepa)
                .HasMaxLength(50)
                .HasColumnName("tipoMandatoSepa");
            entity.Property(e => e.TipoMercancia)
                .HasMaxLength(50)
                .HasColumnName("tipoMercancia");
            entity.Property(e => e.TipoOportunidad)
                .HasMaxLength(50)
                .HasColumnName("tipoOportunidad");
            entity.Property(e => e.UrlContrato)
                .HasMaxLength(50)
                .HasColumnName("urlContrato");
        });

        modelBuilder.Entity<ClienteContratoSuplemProduto>(entity =>
        {
            entity.HasIndex(e => e.IdClienteContrato, "Idx_IdClienteContrato");

            entity.Property(e => e.Id).HasColumnName("id");
            entity.Property(e => e.CodProdutoSalesForce)
                .HasMaxLength(50)
                .HasColumnName("codProdutoSalesForce");
            entity.Property(e => e.CodigoServiceDetGcom)
                .HasMaxLength(50)
                .HasColumnName("codigoServiceDetGcom");
            entity.Property(e => e.CodigoServicoGcom).HasMaxLength(50);
            entity.Property(e => e.IdClienteContrato).HasColumnName("idClienteContrato");
            entity.Property(e => e.IdServiceDetGcom)
                .HasMaxLength(50)
                .HasColumnName("idServiceDetGcom");
            entity.Property(e => e.IdServicoGcom)
                .HasMaxLength(50)
                .HasColumnName("idServicoGcom");
            entity.Property(e => e.IdSuplemento)
                .HasMaxLength(50)
                .HasColumnName("idSuplemento");
        });

        modelBuilder.Entity<ClienteCreditoPedido>(entity =>
        {
            entity.HasKey(e => e.Id).HasName("PK_T_PedidoCredito");

            entity.ToTable("ClienteCreditoPedido");

            entity.HasIndex(e => new { e.Anulado, e.IdStatus, e.IdEntidade }, "idx_anulado_idStatus_idEntidade");

            entity.HasIndex(e => new { e.IdCliente, e.IdEntidade, e.Anulado }, "idx_idCliente_idEntidade_anulado").HasFillFactor(80);

            entity.HasIndex(e => new { e.IdEntidade, e.Id, e.IdCliente, e.IdStCreditoPedido, e.LimiteCreditoPedido, e.IdUtilPedido, e.DtPedido, e.IdTipoCredito, e.IdStatus }, "ix_ClienteCreditoPedido_RGL_11").HasFillFactor(80);

            entity.Property(e => e.Id).HasColumnName("id");
            entity.Property(e => e.Anulado).HasColumnName("anulado");
            entity.Property(e => e.DtPedido).HasColumnType("datetime");
            entity.Property(e => e.DtResposta).HasColumnType("datetime");
            entity.Property(e => e.IGCOM2UsersertaPedido).HasColumnName("iGCOM2UsersertaPedido");
            entity.Property(e => e.IGCOM2UsersertaResposta).HasColumnName("iGCOM2UsersertaResposta");
            entity.Property(e => e.IdCliMorada).HasColumnName("idCliMorada");
            entity.Property(e => e.IdCliente).HasColumnName("idCliente");
            entity.Property(e => e.IdEntidade)
                .HasDefaultValueSql("((1))")
                .HasColumnName("idEntidade");
            entity.Property(e => e.IdStCreditoPedido).HasColumnName("idStCreditoPedido");
            entity.Property(e => e.IdStCreditoResposta).HasColumnName("idStCreditoResposta");
            entity.Property(e => e.IdStatus).HasColumnName("idStatus");
            entity.Property(e => e.IdTipoCredito).HasColumnName("idTipoCredito");
            entity.Property(e => e.IdUtilPedido).HasColumnName("idUtilPedido");
            entity.Property(e => e.IdUtilResposta).HasColumnName("idUtilResposta");
            entity.Property(e => e.LimiteCreditoPedido).HasColumnType("money");
            entity.Property(e => e.LimiteCreditoResposta).HasColumnType("money");
            entity.Property(e => e.ObsPedido).HasMaxLength(1000);
            entity.Property(e => e.ObsResposta).HasMaxLength(1000);
        });

        modelBuilder.Entity<ClienteCreditoPedidoStatusT>(entity =>
        {
            entity.ToTable("ClienteCreditoPedidoStatus_T");

            entity.Property(e => e.Id).HasColumnName("id");
            entity.Property(e => e.Activo)
                .IsRequired()
                .HasDefaultValueSql("((1))")
                .HasColumnName("activo");
            entity.Property(e => e.Aprovado).HasColumnName("aprovado");
            entity.Property(e => e.Concluido).HasColumnName("concluido");
            entity.Property(e => e.Descricao)
                .HasMaxLength(50)
                .HasColumnName("descricao");
            entity.Property(e => e.IdEntidade)
                .HasDefaultValueSql("((1))")
                .HasColumnName("idEntidade");
            entity.Property(e => e.Respondido).HasColumnName("respondido");
        });

        modelBuilder.Entity<ClienteCustomerCareLog>(entity =>
        {
            entity.HasKey(e => e.Id).HasName("PK_ClienteCustomerCare_Log");

            entity.ToTable("ClienteCustomerCareLog");

            entity.HasIndex(e => new { e.IdCliente, e.IdEntidade, e.IdCustomerCare }, "idx_idCliente_idEntidade_idCustomerCare").HasFillFactor(80);

            entity.Property(e => e.Id).HasColumnName("id");
            entity.Property(e => e.DtAtrib)
                .HasColumnType("datetime")
                .HasColumnName("dtAtrib");
            entity.Property(e => e.DtFim)
                .HasColumnType("datetime")
                .HasColumnName("dtFim");
            entity.Property(e => e.DtInicio)
                .HasColumnType("datetime")
                .HasColumnName("dtInicio");
            entity.Property(e => e.IdCliMorada).HasColumnName("idCliMorada");
            entity.Property(e => e.IdCliente).HasColumnName("idCliente");
            entity.Property(e => e.IdCustomerCare).HasColumnName("idCustomerCare");
            entity.Property(e => e.IdEntidade)
                .HasDefaultValueSql("((1))")
                .HasColumnName("idEntidade");
            entity.Property(e => e.IdUtilAtrib).HasColumnName("idUtilAtrib");
            entity.Property(e => e.ObjEnvios).HasColumnName("objEnvios");
        });

        modelBuilder.Entity<ClienteCustomerCareT>(entity =>
        {
            entity.ToTable("ClienteCustomerCare_T");

            entity.Property(e => e.Id).HasColumnName("id");
            entity.Property(e => e.Activo)
                .IsRequired()
                .HasDefaultValueSql("(1)")
                .HasColumnName("activo");
            entity.Property(e => e.Codigo)
                .HasMaxLength(20)
                .HasColumnName("codigo");
            entity.Property(e => e.Descricao)
                .HasMaxLength(100)
                .HasColumnName("descricao");
            entity.Property(e => e.IdEntidade)
                .HasDefaultValueSql("(1)")
                .HasColumnName("idEntidade");
        });

        modelBuilder.Entity<ClienteEmailing>(entity =>
        {
            entity.ToTable("ClienteEmailing");

            entity.HasIndex(e => new { e.IdCliente, e.IdEntidade }, "idx_idCliente_idEntidade");

            entity.Property(e => e.Id).HasColumnName("id");
            entity.Property(e => e.DiasEspecificos)
                .HasMaxLength(50)
                .HasColumnName("diasEspecificos");
            entity.Property(e => e.DtInicio)
                .HasColumnType("datetime")
                .HasColumnName("dtInicio");
            entity.Property(e => e.DtIntrod)
                .HasColumnType("datetime")
                .HasColumnName("dtIntrod");
            entity.Property(e => e.DtRem)
                .HasColumnType("datetime")
                .HasColumnName("dtRem");
            entity.Property(e => e.EmailDestino)
                .HasMaxLength(1000)
                .HasColumnName("emailDestino");
            entity.Property(e => e.HoraEnvio)
                .HasColumnType("datetime")
                .HasColumnName("horaEnvio");
            entity.Property(e => e.IdCliMorada).HasColumnName("idCliMorada");
            entity.Property(e => e.IdCliente).HasColumnName("idCliente");
            entity.Property(e => e.IdEntidade).HasColumnName("idEntidade");
            entity.Property(e => e.IdTipoEmailing).HasColumnName("idTipoEmailing");
            entity.Property(e => e.IdTipoRegularidade).HasColumnName("idTipoRegularidade");
            entity.Property(e => e.IdUtilIntrod).HasColumnName("idUtilIntrod");
            entity.Property(e => e.IdUtilRem).HasColumnName("idUtilRem");
        });

        modelBuilder.Entity<ClienteEmailingCliente>(entity =>
        {
            entity.HasNoKey();

            entity.Property(e => e.Activo).HasColumnName("activo");
            entity.Property(e => e.Id).HasColumnName("id");
            entity.Property(e => e.IdCliMorada).HasColumnName("idCliMorada");
            entity.Property(e => e.IdCliente).HasColumnName("idCliente");
            entity.Property(e => e.IdTipoemailing).HasColumnName("idTipoemailing");
        });

        modelBuilder.Entity<ClienteEmailingLog>(entity =>
        {
            entity.ToTable("ClienteEmailingLog");

            entity.HasIndex(e => e.DtEnviado, "idx_dtEnviado")
                .IsDescending()
                .HasFillFactor(80);

            entity.Property(e => e.Id).HasColumnName("id");
            entity.Property(e => e.DtEnviado)
                .HasColumnType("datetime")
                .HasColumnName("dtEnviado");
            entity.Property(e => e.IdEmailing)
                .HasMaxLength(10)
                .IsFixedLength()
                .HasColumnName("idEmailing");
        });

        modelBuilder.Entity<ClienteEmailingTiposCliente>(entity =>
        {
            entity.ToTable("ClienteEmailingTiposCliente");

            entity.Property(e => e.Id).HasColumnName("id");
            entity.Property(e => e.IdCliMorada).HasColumnName("idCliMorada");
            entity.Property(e => e.IdCliente).HasColumnName("idCliente");
            entity.Property(e => e.IdClienteEmailing).HasColumnName("idClienteEmailing");
        });

        modelBuilder.Entity<ClienteEmailingTiposT>(entity =>
        {
            entity.ToTable("ClienteEmailingTipos_T");

            entity.Property(e => e.Id).HasColumnName("id");
            entity.Property(e => e.Activo).HasColumnName("activo");
            entity.Property(e => e.Body)
                .HasMaxLength(1000)
                .HasColumnName("body");
            entity.Property(e => e.Codigo)
                .HasMaxLength(15)
                .HasColumnName("codigo");
            entity.Property(e => e.Descricao)
                .HasMaxLength(50)
                .HasColumnName("descricao");
            entity.Property(e => e.EmailRemetente)
                .HasMaxLength(50)
                .HasColumnName("emailRemetente");
            entity.Property(e => e.EnviaPortal).HasColumnName("enviaPortal");
            entity.Property(e => e.FilePrefix)
                .HasMaxLength(20)
                .IsFixedLength()
                .HasColumnName("filePrefix");
            entity.Property(e => e.Formato)
                .HasMaxLength(4)
                .HasColumnName("formato");
            entity.Property(e => e.IdEntidade).HasColumnName("idEntidade");
            entity.Property(e => e.IdTipoEmailingDetalhe).HasColumnName("idTipoEmailingDetalhe");
            entity.Property(e => e.IsVisivel).HasColumnName("isVisivel");
            entity.Property(e => e.ParamQuebra)
                .HasMaxLength(100)
                .IsUnicode(false)
                .HasColumnName("paramQuebra");
            entity.Property(e => e.ParamsSample)
                .HasMaxLength(1000)
                .HasColumnName("paramsSample");
            entity.Property(e => e.PermEnvioManual).HasColumnName("permEnvioManual");
            entity.Property(e => e.PermMultiplasMoradas)
                .HasDefaultValueSql("((1))")
                .HasColumnName("permMultiplasMoradas");
            entity.Property(e => e.ProcessaJob).HasColumnName("processaJOB");
            entity.Property(e => e.RegularProcessing)
                .HasDefaultValueSql("((1))")
                .HasColumnName("regularProcessing");
            entity.Property(e => e.Report)
                .HasMaxLength(50)
                .HasColumnName("report");
            entity.Property(e => e.SendEmpty).HasColumnName("sendEmpty");
            entity.Property(e => e.Subject)
                .HasMaxLength(100)
                .HasColumnName("subject");
        });

        modelBuilder.Entity<ClienteEntidade>(entity =>
        {
            entity.HasKey(e => new { e.IdCliente, e.IdEntidade });

            entity.ToTable(tb => tb.HasTrigger("ClienteEntidades_TLog_Trigger"));

            entity.HasIndex(e => new { e.IdEntidade, e.IdCliente, e.CodContab }, "idx_idEntidade_idCliente_codContab").HasFillFactor(80);

            entity.Property(e => e.IdCliente).HasColumnName("idCliente");
            entity.Property(e => e.IdEntidade).HasColumnName("idEntidade");
            entity.Property(e => e.CodContab)
                .HasMaxLength(50)
                .HasColumnName("codContab");
            entity.Property(e => e.DtUltAct)
                .HasDefaultValueSql("(getdate())")
                .HasColumnType("datetime")
                .HasColumnName("dtUltAct");
            entity.Property(e => e.Id)
                .ValueGeneratedOnAdd()
                .HasColumnName("id");
            entity.Property(e => e.IdEnvolvencia).HasColumnName("idEnvolvencia");
            entity.Property(e => e.IdTipoAbc).HasColumnName("idTipoABC");
            entity.Property(e => e.IdUtilUltAct).HasColumnName("idUtilUltAct");
            entity.Property(e => e.LimiteCredito)
                .HasColumnType("money")
                .HasColumnName("limiteCredito");
            entity.Property(e => e.LimiteCreditoAdua)
                .HasColumnType("money")
                .HasColumnName("limiteCreditoAdua");
            entity.Property(e => e.NrExpAvencado)
                .HasMaxLength(15)
                .HasColumnName("nrExpAvencado");
            entity.Property(e => e.Observacoes)
                .HasMaxLength(250)
                .HasColumnName("observacoes");
            entity.Property(e => e.ResponsabilidadeTotal).HasColumnName("responsabilidadeTotal");
            entity.Property(e => e.TemSecurityControl).HasColumnName("temSecurityControl");
            entity.Property(e => e.VolumeVendas)
                .HasColumnType("money")
                .HasColumnName("volumeVendas");
        });

        modelBuilder.Entity<ClienteEntidadesEnvio>(entity =>
        {
            entity.Property(e => e.Id).HasColumnName("id");
            entity.Property(e => e.IdCliMorada).HasColumnName("idCliMorada");
            entity.Property(e => e.IdCliente).HasColumnName("idCliente");
            entity.Property(e => e.IdEntidade)
                .HasDefaultValueSql("((1))")
                .HasColumnName("idEntidade");
            entity.Property(e => e.IdPeriodicidade).HasColumnName("idPeriodicidade");
            entity.Property(e => e.IdPesoMedio).HasColumnName("idPesoMedio");
            entity.Property(e => e.IdRegime).HasColumnName("idRegime");
            entity.Property(e => e.IdServico).HasColumnName("idServico");
            entity.Property(e => e.NumeroEnvios).HasColumnName("numeroEnvios");
        });

        modelBuilder.Entity<ClienteEntidadesEnviosZona>(entity =>
        {
            entity.Property(e => e.Id).HasColumnName("id");
            entity.Property(e => e.IdCliMorada).HasColumnName("idCliMorada");
            entity.Property(e => e.IdCliente).HasColumnName("idCliente");
            entity.Property(e => e.IdEntidade)
                .HasDefaultValueSql("((1))")
                .HasColumnName("idEntidade");
            entity.Property(e => e.IdRegime).HasColumnName("idRegime");
            entity.Property(e => e.IdServico).HasColumnName("idServico");
            entity.Property(e => e.IdZonaPais).HasColumnName("idZonaPais");
            entity.Property(e => e.Percentagem).HasColumnName("percentagem");
        });

        modelBuilder.Entity<ClienteEntidadesLogin>(entity =>
        {
            entity.HasKey(e => new { e.IdCliente, e.IdEntidade, e.IdTipoLogin });

            entity.ToTable("ClienteEntidadesLogin");

            entity.Property(e => e.IdCliente).HasColumnName("idCliente");
            entity.Property(e => e.IdEntidade).HasColumnName("idEntidade");
            entity.Property(e => e.IdTipoLogin).HasColumnName("idTipoLogin");
            entity.Property(e => e.DtIntrod)
                .HasDefaultValueSql("(getdate())")
                .HasColumnType("date")
                .HasColumnName("dtIntrod");
            entity.Property(e => e.Guid)
                .HasMaxLength(50)
                .HasColumnName("guid");
            entity.Property(e => e.IdUtilIntrod).HasColumnName("idUtilIntrod");
            entity.Property(e => e.Login)
                .HasMaxLength(50)
                .HasColumnName("login");
        });

        modelBuilder.Entity<ClienteEntidadesLoginTipoT>(entity =>
        {
            entity.ToTable("ClienteEntidadesLoginTipo_T");

            entity.Property(e => e.Id).HasColumnName("id");
            entity.Property(e => e.Activo).HasColumnName("activo");
            entity.Property(e => e.Codigo)
                .HasMaxLength(25)
                .HasColumnName("codigo");
            entity.Property(e => e.Descricao)
                .HasMaxLength(50)
                .HasColumnName("descricao");
            entity.Property(e => e.IdEntidade).HasColumnName("idEntidade");
        });

        modelBuilder.Entity<ClienteEntidadesPotNeg>(entity =>
        {
            entity.ToTable("ClienteEntidadesPotNeg", tb => tb.HasTrigger("ClienteEntidadesPotNeg_TLog_Trigger"));

            entity.HasIndex(e => new { e.IdEntidade, e.IdCliente, e.IdCliMorada, e.IdRegime, e.IdServico, e.IdPotNegZona }, "idx_idEntidade_idCliente_idCliMorada_idRegime_idServico").HasFillFactor(80);

            entity.Property(e => e.Id).HasColumnName("id");
            entity.Property(e => e.DtUltAct)
                .HasColumnType("datetime")
                .HasColumnName("dtUltAct");
            entity.Property(e => e.IdCliMorada).HasColumnName("idCliMorada");
            entity.Property(e => e.IdCliente).HasColumnName("idCliente");
            entity.Property(e => e.IdEntidade).HasColumnName("idEntidade");
            entity.Property(e => e.IdPotNegZona).HasColumnName("idPotNegZona");
            entity.Property(e => e.IdRegime).HasColumnName("idRegime");
            entity.Property(e => e.IdServico).HasColumnName("idServico");
            entity.Property(e => e.IdUtilUltAct).HasColumnName("idUtilUltAct");
            entity.Property(e => e.Negociado)
                .HasColumnType("money")
                .HasColumnName("negociado");
            entity.Property(e => e.Potencial)
                .HasColumnType("money")
                .HasColumnName("potencial");
        });

        modelBuilder.Entity<ClienteEntidadesPotNegTlog>(entity =>
        {
            entity.HasKey(e => e.IdTrigger).HasName("PK_ClienteEntidadesPotNeg_TLog_1");

            entity.ToTable("ClienteEntidadesPotNeg_TLog");

            entity.Property(e => e.IdTrigger).HasColumnName("idTrigger");
            entity.Property(e => e.DtTrigger)
                .HasDefaultValueSql("(getdate())")
                .HasColumnType("datetime")
                .HasColumnName("dtTrigger");
            entity.Property(e => e.DtUltAct)
                .HasColumnType("datetime")
                .HasColumnName("dtUltAct");
            entity.Property(e => e.Id).HasColumnName("id");
            entity.Property(e => e.IdCliMorada).HasColumnName("idCliMorada");
            entity.Property(e => e.IdCliente).HasColumnName("idCliente");
            entity.Property(e => e.IdEntidade).HasColumnName("idEntidade");
            entity.Property(e => e.IdPotNegZona).HasColumnName("idPotNegZona");
            entity.Property(e => e.IdRegime).HasColumnName("idRegime");
            entity.Property(e => e.IdServico).HasColumnName("idServico");
            entity.Property(e => e.IdUtilUltAct).HasColumnName("idUtilUltAct");
            entity.Property(e => e.Negociado)
                .HasColumnType("money")
                .HasColumnName("negociado");
            entity.Property(e => e.Potencial)
                .HasColumnType("money")
                .HasColumnName("potencial");
        });

        modelBuilder.Entity<ClienteEntidadesPotNegZonaT>(entity =>
        {
            entity.ToTable("ClienteEntidadesPotNegZona_T");

            entity.Property(e => e.Id).HasColumnName("id");
            entity.Property(e => e.Activo)
                .IsRequired()
                .HasDefaultValueSql("((1))")
                .HasColumnName("activo");
            entity.Property(e => e.Codigo)
                .HasMaxLength(10)
                .HasColumnName("codigo");
            entity.Property(e => e.Descricao)
                .HasMaxLength(50)
                .HasColumnName("descricao");
            entity.Property(e => e.IdEntidade).HasColumnName("idEntidade");
        });

        modelBuilder.Entity<ClienteEntidadesTlog>(entity =>
        {
            entity.HasKey(e => e.IdTrigger);

            entity.ToTable("ClienteEntidades_TLog");

            entity.Property(e => e.IdTrigger).HasColumnName("idTrigger");
            entity.Property(e => e.CodContab)
                .HasMaxLength(50)
                .HasColumnName("codContab");
            entity.Property(e => e.DtTrigger)
                .HasColumnType("datetime")
                .HasColumnName("dtTrigger");
            entity.Property(e => e.DtUltAct)
                .HasColumnType("datetime")
                .HasColumnName("dtUltAct");
            entity.Property(e => e.Id).HasColumnName("id");
            entity.Property(e => e.IdCliente).HasColumnName("idCliente");
            entity.Property(e => e.IdEntidade).HasColumnName("idEntidade");
            entity.Property(e => e.IdTipoAbc).HasColumnName("idTipoABC");
            entity.Property(e => e.IdUtilUltAct).HasColumnName("idUtilUltAct");
            entity.Property(e => e.LimiteCredito)
                .HasColumnType("money")
                .HasColumnName("limiteCredito");
            entity.Property(e => e.LimiteCreditoAdua)
                .HasColumnType("money")
                .HasColumnName("limiteCreditoAdua");
            entity.Property(e => e.NrExpAvencado)
                .HasMaxLength(15)
                .HasColumnName("nrExpAvencado");
            entity.Property(e => e.Observacoes)
                .HasMaxLength(250)
                .HasColumnName("observacoes");
            entity.Property(e => e.ResponsabilidadeTotal).HasColumnName("responsabilidadeTotal");
            entity.Property(e => e.VolumeVendas)
                .HasColumnType("money")
                .HasColumnName("volumeVendas");
        });

        modelBuilder.Entity<ClienteEnvolvenciaT>(entity =>
        {
            entity
                .HasNoKey()
                .ToTable("ClienteEnvolvencia_T");

            entity.Property(e => e.Anulado)
                .HasDefaultValueSql("((0))")
                .HasColumnName("anulado");
            entity.Property(e => e.Descricao)
                .HasMaxLength(50)
                .IsUnicode(false)
                .HasColumnName("descricao");
            entity.Property(e => e.Id)
                .ValueGeneratedOnAdd()
                .HasColumnName("id");
        });

        modelBuilder.Entity<ClienteFaturacao>(entity =>
        {
            entity
                .HasNoKey()
                .ToTable("ClienteFaturacao");

            entity.Property(e => e.DataInicio).HasColumnType("datetime");
            entity.Property(e => e.Descricao)
                .HasMaxLength(100)
                .HasColumnName("descricao");
            entity.Property(e => e.IdCliente).HasColumnName("idCliente");
        });

        modelBuilder.Entity<ClienteGidLinkLog>(entity =>
        {
            entity.ToTable("ClienteGidLink_Log");

            entity.Property(e => e.Id).HasColumnName("id");
            entity.Property(e => e.CliCodi)
                .HasMaxLength(18)
                .HasColumnName("cli_codi");
            entity.Property(e => e.CliCounter).HasColumnName("cli_counter");
            entity.Property(e => e.Dtintrod)
                .HasColumnType("datetime")
                .HasColumnName("dtintrod");
            entity.Property(e => e.Idutil).HasColumnName("idutil");
            entity.Property(e => e.Plataforma)
                .HasMaxLength(3)
                .HasColumnName("plataforma");
        });

        modelBuilder.Entity<ClienteInterfaceParametro>(entity =>
        {
            entity.Property(e => e.Id).HasColumnName("id");
            entity.Property(e => e.Activo)
                .IsRequired()
                .HasDefaultValueSql("((1))")
                .HasColumnName("activo");
            entity.Property(e => e.CodInterface)
                .HasMaxLength(50)
                .HasColumnName("codInterface");
            entity.Property(e => e.CodInterfaceDestino)
                .HasMaxLength(50)
                .HasColumnName("codInterfaceDestino");
            entity.Property(e => e.CodInterfaceTipo)
                .HasMaxLength(50)
                .HasColumnName("codInterfaceTipo");
            entity.Property(e => e.DestinationPath)
                .HasMaxLength(50)
                .HasColumnName("destinationPath");
            entity.Property(e => e.EmailBcc)
                .HasMaxLength(50)
                .HasColumnName("emailBCC");
            entity.Property(e => e.EmailCc)
                .HasMaxLength(50)
                .HasColumnName("emailCC");
            entity.Property(e => e.EmailFrom)
                .HasMaxLength(50)
                .HasColumnName("emailFrom");
            entity.Property(e => e.EmailTo)
                .HasMaxLength(1000)
                .HasColumnName("emailTo");
            entity.Property(e => e.FtpDir)
                .HasMaxLength(50)
                .HasColumnName("ftpDir");
            entity.Property(e => e.FtpPassword)
                .HasMaxLength(50)
                .HasColumnName("ftpPassword");
            entity.Property(e => e.FtpServer)
                .HasMaxLength(50)
                .HasColumnName("ftpServer");
            entity.Property(e => e.FtpType)
                .HasMaxLength(10)
                .HasColumnName("ftpType");
            entity.Property(e => e.FtpUser)
                .HasMaxLength(50)
                .HasColumnName("ftpUser");
            entity.Property(e => e.IdCliMorada).HasColumnName("idCliMorada");
            entity.Property(e => e.IdCliente).HasColumnName("idCliente");
            entity.Property(e => e.IdEntidade).HasColumnName("idEntidade");
            entity.Property(e => e.NomeTabela).HasMaxLength(100);
            entity.Property(e => e.NotificationEmails)
                .HasMaxLength(50)
                .HasColumnName("notificationEmails");
            entity.Property(e => e.TimerGcomnect)
                .HasMaxLength(50)
                .HasColumnName("timerGCOMnect");
        });

        modelBuilder.Entity<ClienteLogin>(entity =>
        {
            entity.HasKey(e => e.IdCliente).HasName("PK_T_ClienteLogin");

            entity.ToTable("ClienteLogin");

            entity.Property(e => e.IdCliente)
                .ValueGeneratedNever()
                .HasColumnName("idCliente");
            entity.Property(e => e.DtCriacao)
                .HasDefaultValueSql("(getdate())")
                .HasColumnType("datetime")
                .HasColumnName("dtCriacao");
            entity.Property(e => e.Id)
                .ValueGeneratedOnAdd()
                .HasColumnName("id");
            entity.Property(e => e.IdUtilCriacao).HasColumnName("idUtilCriacao");
            entity.Property(e => e.Login)
                .HasMaxLength(50)
                .HasColumnName("login");
            entity.Property(e => e.Password)
                .HasMaxLength(50)
                .HasColumnName("password");
            entity.Property(e => e.Timeout).HasColumnName("timeout");
        });

        modelBuilder.Entity<ClienteLoginHistorico>(entity =>
        {
            entity.HasKey(e => e.IdCliente).HasName("PK_T_ClienteLoginHistorico");

            entity.ToTable("ClienteLoginHistorico");

            entity.Property(e => e.IdCliente)
                .ValueGeneratedNever()
                .HasColumnName("idCliente");
            entity.Property(e => e.DtLogin)
                .HasColumnType("datetime")
                .HasColumnName("dtLogin");
            entity.Property(e => e.DtLogoff)
                .HasColumnType("datetime")
                .HasColumnName("dtLogoff");
            entity.Property(e => e.Id)
                .ValueGeneratedOnAdd()
                .HasColumnName("id");
            entity.Property(e => e.Ip)
                .HasMaxLength(50)
                .HasColumnName("ip");
            entity.Property(e => e.Sucesso).HasColumnName("sucesso");
        });

        modelBuilder.Entity<ClienteLojaT>(entity =>
        {
            entity.HasKey(e => e.Id).HasName("PK_T_Loja");

            entity.ToTable("ClienteLoja_T");

            entity.Property(e => e.Id)
                .ValueGeneratedNever()
                .HasColumnName("id");
            entity.Property(e => e.Activo)
                .HasDefaultValueSql("(1)")
                .HasColumnName("activo");
            entity.Property(e => e.Descricao)
                .HasMaxLength(50)
                .HasColumnName("descricao");
            entity.Property(e => e.IdEntidade).HasColumnName("idEntidade");
        });

        modelBuilder.Entity<ClienteMapCex>(entity =>
        {
            entity.HasKey(e => e.IdCliente);

            entity.ToTable("ClienteMapCex");

            entity.Property(e => e.IdCliente)
                .ValueGeneratedNever()
                .HasColumnName("idCliente");
            entity.Property(e => e.CodGcom).HasColumnName("codGcom");
            entity.Property(e => e.DtInsercao)
                .HasDefaultValueSql("(getdate())")
                .HasColumnType("datetime")
                .HasColumnName("dtInsercao");
            entity.Property(e => e.IdExterno)
                .HasMaxLength(50)
                .HasColumnName("idExterno");
        });

        modelBuilder.Entity<ClienteMorada>(entity =>
        {
            entity.ToTable(tb =>
                {
                    tb.HasTrigger("ClienteMoradas_CriaPropriedades_Trigger");
                    tb.HasTrigger("ClienteMoradas_SAP_Trigger");
                    tb.HasTrigger("ClienteMoradas_TLog_Trigger");
                });

            entity.HasIndex(e => new { e.Activo, e.IdEntidade, e.IdCliente, e.Id, e.IsMoradaFact }, "idx_activo_idEntidade_idCliente_id")
                .IsDescending(true, false, false, false, false)
                .HasFillFactor(80);

            entity.HasIndex(e => e.IdCliente, "idx_idCliente");

            entity.HasIndex(e => new { e.IdEntidade, e.IdCliente, e.Activo, e.IsDefault }, "idx_idEntidade_idCliente_activo_isDefault").HasFillFactor(80);

            entity.HasIndex(e => new { e.NumConta, e.IdCliente, e.IdEntidade }, "idx_numConta_idCliente_idEntidade").HasFillFactor(80);

            entity.Property(e => e.Id).HasColumnName("id");
            entity.Property(e => e.Activo).HasColumnName("activo");
            entity.Property(e => e.Booking).HasColumnName("booking");
            entity.Property(e => e.CoordGps)
                .HasMaxLength(1)
                .HasColumnName("coordGPS");
            entity.Property(e => e.Cpostal)
                .HasMaxLength(15)
                .HasColumnName("cpostal");
            entity.Property(e => e.DescTxCombCusto)
                .HasColumnType("money")
                .HasColumnName("descTxCombCusto");
            entity.Property(e => e.DtGrandeConta)
                .HasColumnType("datetime")
                .HasColumnName("dtGrandeConta");
            entity.Property(e => e.DtInsight)
                .HasColumnType("datetime")
                .HasColumnName("dtInsight");
            entity.Property(e => e.DtNovoDescTxCombCusto)
                .HasColumnType("datetime")
                .HasColumnName("dtNovoDescTxCombCusto");
            entity.Property(e => e.DtSisShip)
                .HasColumnType("datetime")
                .HasColumnName("dtSisShip");
            entity.Property(e => e.DtUltAct)
                .HasColumnType("datetime")
                .HasColumnName("dtUltAct");
            entity.Property(e => e.DtUtilAcomp)
                .HasColumnType("datetime")
                .HasColumnName("dtUtilAcomp");
            entity.Property(e => e.EmailRecolha).HasMaxLength(50);
            entity.Property(e => e.FactDetalhada).HasColumnName("factDetalhada");
            entity.Property(e => e.FacturasIndividuais).HasColumnName("facturasIndividuais");
            entity.Property(e => e.HoraDisponivel).HasColumnName("horaDisponivel");
            entity.Property(e => e.HoraFecho).HasColumnName("horaFecho");
            entity.Property(e => e.IdCampanhaMkt).HasColumnName("idCampanhaMKT");
            entity.Property(e => e.IdCliMoradaDevGr).HasColumnName("idCliMoradaDevGR");
            entity.Property(e => e.IdCliMoradaDevPaletes).HasColumnName("idCliMoradaDevPaletes");
            entity.Property(e => e.IdCliMoradaDevolucao).HasColumnName("idCliMoradaDevolucao");
            entity.Property(e => e.IdCliMoradaEmissao).HasColumnName("idCliMoradaEmissao");
            entity.Property(e => e.IdCliMoradaFact).HasColumnName("idCliMoradaFact");
            entity.Property(e => e.IdCliMoradaReembolso).HasColumnName("idCliMoradaReembolso");
            entity.Property(e => e.IdCliente).HasColumnName("idCliente");
            entity.Property(e => e.IdConcorrente).HasColumnName("idConcorrente");
            entity.Property(e => e.IdCpostal).HasColumnName("idCPostal");
            entity.Property(e => e.IdDinamicaComercial)
                .HasDefaultValueSql("((3))")
                .HasColumnName("idDinamicaComercial");
            entity.Property(e => e.IdEntidade).HasColumnName("idEntidade");
            entity.Property(e => e.IdEquipaComercial).HasColumnName("idEquipaComercial");
            entity.Property(e => e.IdFormatoEmissaoFact).HasColumnName("idFormatoEmissaoFact");
            entity.Property(e => e.IdLoja).HasColumnName("idLoja");
            entity.Property(e => e.IdMotivo).HasColumnName("idMotivo");
            entity.Property(e => e.IdMotivoInsight).HasColumnName("idMotivoInsight");
            entity.Property(e => e.IdMotivoSisShip).HasColumnName("idMotivoSisShip");
            entity.Property(e => e.IdPais).HasColumnName("idPais");
            entity.Property(e => e.IdStComercial).HasColumnName("idStComercial");
            entity.Property(e => e.IdStCredito).HasColumnName("idStCredito");
            entity.Property(e => e.IdStatusCreditoAdua).HasColumnName("idStatusCreditoAdua");
            entity.Property(e => e.IdTipoAcomp).HasColumnName("idTipoAcomp");
            entity.Property(e => e.IdTipoCliente).HasColumnName("idTipoCliente");
            entity.Property(e => e.IdTipoInstalacao).HasColumnName("idTipoInstalacao");
            entity.Property(e => e.IdUtilAcomp).HasColumnName("idUtilAcomp");
            entity.Property(e => e.IdUtilUltAct).HasColumnName("idUtilUltAct");
            entity.Property(e => e.IsDefault).HasColumnName("isDefault");
            entity.Property(e => e.IsFacturacaoManual).HasColumnName("isFacturacaoManual");
            entity.Property(e => e.IsForcedCtrCredito).HasColumnName("isForcedCtrCredito");
            entity.Property(e => e.IsGestaoIndependente).HasColumnName("isGestaoIndependente");
            entity.Property(e => e.IsGlobalAccount).HasColumnName("isGlobalAccount");
            entity.Property(e => e.IsGrandeConta).HasColumnName("isGrandeConta");
            entity.Property(e => e.IsIsentoPesagem).HasColumnName("isIsentoPesagem");
            entity.Property(e => e.IsMoradaEntrega).HasColumnName("isMoradaEntrega");
            entity.Property(e => e.IsMoradaEntrevista).HasColumnName("isMoradaEntrevista");
            entity.Property(e => e.IsMoradaFact).HasColumnName("isMoradaFact");
            entity.Property(e => e.IsMoradaRecolha).HasColumnName("isMoradaRecolha");
            entity.Property(e => e.Localidade)
                .HasMaxLength(100)
                .HasColumnName("localidade");
            entity.Property(e => e.Morada)
                .HasMaxLength(100)
                .HasColumnName("morada");
            entity.Property(e => e.NibDebDir)
                .HasMaxLength(21)
                .HasColumnName("nibDebDir");
            entity.Property(e => e.Nome)
                .HasMaxLength(100)
                .HasColumnName("nome");
            entity.Property(e => e.NovoDescTxCombCusto)
                .HasColumnType("money")
                .HasColumnName("novoDescTxCombCusto");
            entity.Property(e => e.NumConta)
                .HasMaxLength(20)
                .HasColumnName("numConta");
            entity.Property(e => e.ObsInsight)
                .HasMaxLength(250)
                .HasColumnName("obsInsight");
            entity.Property(e => e.ObsSisShip)
                .HasMaxLength(250)
                .HasColumnName("obsSisShip");
            entity.Property(e => e.Observacoes)
                .HasMaxLength(250)
                .HasColumnName("observacoes");
            entity.Property(e => e.PassRecolha)
                .HasMaxLength(50)
                .HasColumnName("passRecolha");
            entity.Property(e => e.PeriodicidadeFacturacao).HasColumnName("periodicidadeFacturacao");
            entity.Property(e => e.QuebraFactClassOri).HasColumnName("quebraFactClassOri");
            entity.Property(e => e.QuebraFactDepart).HasColumnName("quebraFactDepart");
            entity.Property(e => e.QuebraFactServico).HasColumnName("quebraFactServico");
            entity.Property(e => e.RecebeDescarga).HasColumnName("recebeDescarga");
            entity.Property(e => e.RefDebDir)
                .HasMaxLength(11)
                .HasColumnName("refDebDir");
            entity.Property(e => e.TemDebDir).HasColumnName("temDebDir");
            entity.Property(e => e.TemImprSisShip)
                .HasDefaultValueSql("((0))")
                .HasColumnName("temImprSisShip");
            entity.Property(e => e.TemInsight).HasColumnName("temInsight");
            entity.Property(e => e.TemSisShip).HasColumnName("temSisShip");
            entity.Property(e => e.TemTxDespAlfPer).HasColumnName("temTxDespAlfPer");
            entity.Property(e => e.TxDespAlfPer)
                .HasColumnType("money")
                .HasColumnName("txDespAlfPer");
        });

        modelBuilder.Entity<ClienteMoradaMapCex>(entity =>
        {
            entity.HasKey(e => e.Id).HasName("PK_ClienteMoradaMapCex_1");

            entity.ToTable("ClienteMoradaMapCex");

            entity.Property(e => e.Id).HasColumnName("id");
            entity.Property(e => e.DtInsercao)
                .HasDefaultValueSql("(getdate())")
                .HasColumnType("datetime")
                .HasColumnName("dtInsercao");
            entity.Property(e => e.IdCliMorada).HasColumnName("idCliMorada");
            entity.Property(e => e.IdClienteGcom).HasColumnName("idClienteGcom");
            entity.Property(e => e.IdEntidade).HasColumnName("idEntidade");
            entity.Property(e => e.IdExterno)
                .HasMaxLength(50)
                .HasColumnName("idExterno");
        });

        modelBuilder.Entity<ClienteMoradasTipoT>(entity =>
        {
            entity.ToTable("ClienteMoradasTipo_T");

            entity.Property(e => e.Id)
                .ValueGeneratedNever()
                .HasColumnName("id");
            entity.Property(e => e.Activo)
                .IsRequired()
                .HasDefaultValueSql("((1))")
                .HasColumnName("activo");
            entity.Property(e => e.Codigo)
                .HasMaxLength(10)
                .HasColumnName("codigo");
            entity.Property(e => e.Descricao)
                .HasMaxLength(50)
                .HasColumnName("descricao");
        });

        modelBuilder.Entity<ClienteMoradasTlog>(entity =>
        {
            entity.HasKey(e => e.IdTrigger).HasName("PK_ClienteEntidadesMor_TLog_1");

            entity.ToTable("ClienteMoradas_TLog");

            entity.Property(e => e.IdTrigger).HasColumnName("idTrigger");
            entity.Property(e => e.Activo).HasColumnName("activo");
            entity.Property(e => e.Booking).HasColumnName("booking");
            entity.Property(e => e.CoordGps)
                .HasMaxLength(1)
                .HasColumnName("coordGPS");
            entity.Property(e => e.Cpostal)
                .HasMaxLength(15)
                .HasColumnName("cpostal");
            entity.Property(e => e.DescTxCombCusto)
                .HasColumnType("money")
                .HasColumnName("descTxCombCusto");
            entity.Property(e => e.DtGrandeConta)
                .HasColumnType("datetime")
                .HasColumnName("dtGrandeConta");
            entity.Property(e => e.DtInsight)
                .HasColumnType("datetime")
                .HasColumnName("dtInsight");
            entity.Property(e => e.DtNovoDescTxCombCusto)
                .HasColumnType("datetime")
                .HasColumnName("dtNovoDescTxCombCusto");
            entity.Property(e => e.DtSisShip)
                .HasColumnType("datetime")
                .HasColumnName("dtSisShip");
            entity.Property(e => e.DtTrigger)
                .HasDefaultValueSql("(getdate())")
                .HasColumnType("datetime")
                .HasColumnName("dtTrigger");
            entity.Property(e => e.DtUltAct)
                .HasColumnType("datetime")
                .HasColumnName("dtUltAct");
            entity.Property(e => e.DtUtilAcomp)
                .HasColumnType("datetime")
                .HasColumnName("dtUtilAcomp");
            entity.Property(e => e.FactDetalhada).HasColumnName("factDetalhada");
            entity.Property(e => e.FacturasIndividuais).HasColumnName("facturasIndividuais");
            entity.Property(e => e.HoraDisponivel).HasColumnName("horaDisponivel");
            entity.Property(e => e.HoraFecho).HasColumnName("horaFecho");
            entity.Property(e => e.Id).HasColumnName("id");
            entity.Property(e => e.IdCampanhaMkt).HasColumnName("idCampanhaMKT");
            entity.Property(e => e.IdCliMoradaEmissao).HasColumnName("idCliMoradaEmissao");
            entity.Property(e => e.IdCliMoradaFact).HasColumnName("idCliMoradaFact");
            entity.Property(e => e.IdCliMoradaReembolso).HasColumnName("idCliMoradaReembolso");
            entity.Property(e => e.IdCliente).HasColumnName("idCliente");
            entity.Property(e => e.IdConcorrente).HasColumnName("idConcorrente");
            entity.Property(e => e.IdCpostal).HasColumnName("idCPostal");
            entity.Property(e => e.IdEntidade).HasColumnName("idEntidade");
            entity.Property(e => e.IdEquipaComercial).HasColumnName("idEquipaComercial");
            entity.Property(e => e.IdLoja).HasColumnName("idLoja");
            entity.Property(e => e.IdMotivo).HasColumnName("idMotivo");
            entity.Property(e => e.IdMotivoInsight).HasColumnName("idMotivoInsight");
            entity.Property(e => e.IdMotivoSisShip).HasColumnName("idMotivoSisShip");
            entity.Property(e => e.IdPais).HasColumnName("idPais");
            entity.Property(e => e.IdStComercial).HasColumnName("idStComercial");
            entity.Property(e => e.IdStCredito).HasColumnName("idStCredito");
            entity.Property(e => e.IdStatusCreditoAdua).HasColumnName("idStatusCreditoAdua");
            entity.Property(e => e.IdTipoAcomp).HasColumnName("idTipoAcomp");
            entity.Property(e => e.IdTipoCliente).HasColumnName("idTipoCliente");
            entity.Property(e => e.IdTipoInstalacao).HasColumnName("idTipoInstalacao");
            entity.Property(e => e.IdUtilAcomp).HasColumnName("idUtilAcomp");
            entity.Property(e => e.IdUtilUltAct).HasColumnName("idUtilUltAct");
            entity.Property(e => e.IsDefault).HasColumnName("isDefault");
            entity.Property(e => e.IsGestaoIndependente).HasColumnName("isGestaoIndependente");
            entity.Property(e => e.IsGlobalAccount).HasColumnName("isGlobalAccount");
            entity.Property(e => e.IsGrandeConta).HasColumnName("isGrandeConta");
            entity.Property(e => e.IsMoradaEntrega).HasColumnName("isMoradaEntrega");
            entity.Property(e => e.IsMoradaEntrevista).HasColumnName("isMoradaEntrevista");
            entity.Property(e => e.IsMoradaFact).HasColumnName("isMoradaFact");
            entity.Property(e => e.IsMoradaRecolha).HasColumnName("isMoradaRecolha");
            entity.Property(e => e.Localidade)
                .HasMaxLength(100)
                .HasColumnName("localidade");
            entity.Property(e => e.Morada)
                .HasMaxLength(100)
                .HasColumnName("morada");
            entity.Property(e => e.NibDebDir)
                .HasMaxLength(21)
                .HasColumnName("nibDebDir");
            entity.Property(e => e.Nome)
                .HasMaxLength(100)
                .HasColumnName("nome");
            entity.Property(e => e.NovoDescTxCombCusto)
                .HasColumnType("money")
                .HasColumnName("novoDescTxCombCusto");
            entity.Property(e => e.NumConta)
                .HasMaxLength(20)
                .HasColumnName("numConta");
            entity.Property(e => e.ObsInsight)
                .HasMaxLength(250)
                .HasColumnName("obsInsight");
            entity.Property(e => e.ObsSisShip)
                .HasMaxLength(250)
                .HasColumnName("obsSisShip");
            entity.Property(e => e.Observacoes)
                .HasMaxLength(250)
                .HasColumnName("observacoes");
            entity.Property(e => e.PeriodicidadeFacturacao).HasColumnName("periodicidadeFacturacao");
            entity.Property(e => e.QuebraFactClassOri).HasColumnName("quebraFactClassOri");
            entity.Property(e => e.QuebraFactDepart).HasColumnName("quebraFactDepart");
            entity.Property(e => e.QuebraFactServico).HasColumnName("quebraFactServico");
            entity.Property(e => e.RecebeDescarga).HasColumnName("recebeDescarga");
            entity.Property(e => e.RefDebDir)
                .HasMaxLength(11)
                .HasColumnName("refDebDir");
            entity.Property(e => e.TemDebDir).HasColumnName("temDebDir");
            entity.Property(e => e.TemInsight).HasColumnName("temInsight");
            entity.Property(e => e.TemSisShip).HasColumnName("temSisShip");
            entity.Property(e => e.TemTxDespAlfPer).HasColumnName("temTxDespAlfPer");
            entity.Property(e => e.TxDespAlfPer)
                .HasColumnType("money")
                .HasColumnName("txDespAlfPer");
        });

        modelBuilder.Entity<ClienteMotivoFsmT>(entity =>
        {
            entity.HasKey(e => e.Id).HasName("PK_ClienteMotivosFSM_T");

            entity.ToTable("ClienteMotivoFSM_T");

            entity.Property(e => e.Id).HasColumnName("id");
            entity.Property(e => e.Activo)
                .IsRequired()
                .HasDefaultValueSql("(1)")
                .HasColumnName("activo");
            entity.Property(e => e.Descricao)
                .HasMaxLength(50)
                .HasColumnName("descricao");
        });

        modelBuilder.Entity<ClienteMotivoInsightT>(entity =>
        {
            entity.HasKey(e => e.Id).HasName("PK_ClienteInsightMotivo_T");

            entity.ToTable("ClienteMotivoInsight_T");

            entity.Property(e => e.Id).HasColumnName("id");
            entity.Property(e => e.Activo)
                .IsRequired()
                .HasDefaultValueSql("(1)")
                .HasColumnName("activo");
            entity.Property(e => e.Descricao)
                .HasMaxLength(50)
                .HasColumnName("descricao");
        });

        modelBuilder.Entity<ClienteMovContum>(entity =>
        {
            entity.HasIndex(e => new { e.IdEntidade, e.IdCliente, e.IdCliMorada, e.DebCred }, "NonClusteredIndex-20170329-155602");

            entity.HasIndex(e => new { e.NumDoc, e.DtFechadoSap }, "idx_numDoc_dtFechadoSAP").HasFillFactor(80);

            entity.Property(e => e.Id).HasColumnName("id");
            entity.Property(e => e.DataDoc)
                .HasColumnType("datetime")
                .HasColumnName("dataDoc");
            entity.Property(e => e.DataVencimento)
                .HasColumnType("datetime")
                .HasColumnName("dataVencimento");
            entity.Property(e => e.DebCred).HasMaxLength(2);
            entity.Property(e => e.DtExportSdd)
                .HasColumnType("datetime")
                .HasColumnName("dtExportSDD");
            entity.Property(e => e.DtFechadoSap)
                .HasColumnType("datetime")
                .HasColumnName("dtFechadoSAP");
            entity.Property(e => e.ExportSdd).HasColumnName("exportSDD");
            entity.Property(e => e.FechadoSap).HasColumnName("fechadoSAP");
            entity.Property(e => e.IdCliMorada).HasColumnName("idCliMorada");
            entity.Property(e => e.IdCliente).HasColumnName("idCliente");
            entity.Property(e => e.IdEntidade).HasColumnName("idEntidade");
            entity.Property(e => e.IdUtilExportSdd).HasColumnName("idUtilExportSDD");
            entity.Property(e => e.NumDoc)
                .HasMaxLength(50)
                .HasColumnName("numDoc");
            entity.Property(e => e.TipoDoc2)
                .HasMaxLength(2)
                .HasColumnName("tipoDoc2");
            entity.Property(e => e.Valor)
                .HasColumnType("money")
                .HasColumnName("valor");
        });

        modelBuilder.Entity<ClienteParserConfig>(entity =>
        {
            entity.HasKey(e => e.Id).HasName("PK__ClienteP__3213E83F68D1B13F");

            entity.ToTable("ClienteParserConfig");

            entity.HasIndex(e => new { e.IdCliente, e.IdCliMorada }, "idx_idCliente_idCliMorada");

            entity.Property(e => e.Id).HasColumnName("id");
            entity.Property(e => e.IdCliMorada).HasColumnName("idCliMorada");
            entity.Property(e => e.IdCliente).HasColumnName("idCliente");
            entity.Property(e => e.Opcao).HasMaxLength(500);
            entity.Property(e => e.Valor).HasMaxLength(500);
        });

        modelBuilder.Entity<ClienteParserParametro>(entity =>
        {
            entity.HasIndex(e => new { e.Activo, e.IdEntidade, e.IdCliente, e.IdCliMorada }, "idx_activo_idEntidade_idCliente_idCliMorada");

            entity.Property(e => e.Id).HasColumnName("id");
            entity.Property(e => e.Activo)
                .HasDefaultValueSql("((1))")
                .HasColumnName("activo");
            entity.Property(e => e.AddFilePrefix)
                .HasMaxLength(50)
                .IsUnicode(false)
                .HasColumnName("addFilePrefix");
            entity.Property(e => e.AplicarRegras)
                .HasDefaultValueSql("((0))")
                .HasColumnName("aplicarRegras");
            entity.Property(e => e.CheckBackupDir)
                .HasDefaultValueSql("((1))")
                .HasColumnName("checkBackupDir");
            entity.Property(e => e.ConcatenarPrefixo)
                .HasDefaultValueSql("((1))")
                .HasColumnName("concatenarPrefixo");
            entity.Property(e => e.DelimiterChar)
                .HasMaxLength(1)
                .IsUnicode(false)
                .IsFixedLength()
                .HasColumnName("delimiterChar");
            entity.Property(e => e.Dir)
                .HasMaxLength(50)
                .IsUnicode(false)
                .HasColumnName("dir");
            entity.Property(e => e.DtIntrod)
                .HasColumnType("datetime")
                .HasColumnName("dtIntrod");
            entity.Property(e => e.DtUltAct)
                .HasColumnType("datetime")
                .HasColumnName("dtUltAct");
            entity.Property(e => e.FileExtension)
                .HasMaxLength(100)
                .IsUnicode(false)
                .HasColumnName("fileExtension");
            entity.Property(e => e.FilePrefix)
                .HasMaxLength(100)
                .IsUnicode(false)
                .HasColumnName("filePrefix");
            entity.Property(e => e.FileType)
                .HasDefaultValueSql("((1))")
                .HasColumnName("fileType");
            entity.Property(e => e.FtpDir)
                .HasMaxLength(50)
                .IsUnicode(false)
                .HasColumnName("ftpDir");
            entity.Property(e => e.FtpPassword)
                .HasMaxLength(50)
                .IsUnicode(false)
                .HasColumnName("ftpPassword");
            entity.Property(e => e.FtpServer)
                .HasMaxLength(50)
                .IsUnicode(false)
                .HasColumnName("ftpServer");
            entity.Property(e => e.FtpUser)
                .HasMaxLength(50)
                .IsUnicode(false)
                .HasColumnName("ftpUser");
            entity.Property(e => e.GerarRecolha)
                .HasDefaultValueSql("((0))")
                .HasColumnName("gerarRecolha");
            entity.Property(e => e.GuiasImpressas)
                .HasDefaultValueSql("((0))")
                .HasColumnName("guiasImpressas");
            entity.Property(e => e.IdCliMorada).HasColumnName("idCliMorada");
            entity.Property(e => e.IdCliente).HasColumnName("idCliente");
            entity.Property(e => e.IdClienteEmissao).HasColumnName("idClienteEmissao");
            entity.Property(e => e.IdClienteUnix).HasColumnName("idClienteUnix");
            entity.Property(e => e.IdEntidade).HasColumnName("idEntidade");
            entity.Property(e => e.IdExpedidor).HasColumnName("idExpedidor");
            entity.Property(e => e.IdUtilIntrod).HasColumnName("idUtilIntrod");
            entity.Property(e => e.IdUtilUltAct).HasColumnName("idUtilUltAct");
            entity.Property(e => e.MoveToDir)
                .HasMaxLength(100)
                .IsUnicode(false)
                .HasColumnName("moveToDir");
            entity.Property(e => e.Observacoes)
                .IsUnicode(false)
                .HasColumnName("observacoes");
            entity.Property(e => e.Prioritario)
                .HasDefaultValueSql("((0))")
                .HasColumnName("prioritario");
            entity.Property(e => e.Processamento).HasColumnName("processamento");
            entity.Property(e => e.RecordId).HasColumnName("recordId");
            entity.Property(e => e.RegrasClasseOrigem)
                .HasDefaultValueSql("((0))")
                .HasColumnName("regrasClasseOrigem");
            entity.Property(e => e.SendEmail).HasColumnName("sendEmail");
            entity.Property(e => e.SourceBackupDir)
                .HasMaxLength(50)
                .IsUnicode(false)
                .HasColumnName("sourceBackupDir");
            entity.Property(e => e.SourceFtpPassword)
                .HasMaxLength(50)
                .IsUnicode(false)
                .HasColumnName("sourceFtpPassword");
            entity.Property(e => e.SourceFtpServer)
                .HasMaxLength(50)
                .IsUnicode(false)
                .HasColumnName("sourceFtpServer");
            entity.Property(e => e.SourceFtpUser)
                .HasMaxLength(50)
                .IsUnicode(false)
                .HasColumnName("sourceFtpUser");
            entity.Property(e => e.SourceTypeId)
                .HasDefaultValueSql("((2))")
                .HasColumnName("sourceTypeId");
        });

        modelBuilder.Entity<ClientePeriodicidadeT>(entity =>
        {
            entity.HasKey(e => e.Id).HasName("PK_T_Regularidade");

            entity.ToTable("ClientePeriodicidade_T");

            entity.Property(e => e.Id)
                .ValueGeneratedNever()
                .HasColumnName("id");
            entity.Property(e => e.Activo)
                .HasDefaultValueSql("(1)")
                .HasColumnName("activo");
            entity.Property(e => e.Descricao)
                .HasMaxLength(50)
                .HasColumnName("descricao");
        });

        modelBuilder.Entity<ClientePropriedade>(entity =>
        {
            entity.HasKey(e => new { e.IdCliente, e.IdPropriedade, e.IdCliMorada });

            entity.HasIndex(e => e.Id, "idx_id").HasFillFactor(80);

            entity.Property(e => e.IdCliente).HasColumnName("idCliente");
            entity.Property(e => e.IdPropriedade).HasColumnName("idPropriedade");
            entity.Property(e => e.IdCliMorada).HasColumnName("idCliMorada");
            entity.Property(e => e.DtIntrod)
                .HasColumnType("datetime")
                .HasColumnName("dtIntrod");
            entity.Property(e => e.Id)
                .ValueGeneratedOnAdd()
                .HasColumnName("id");
            entity.Property(e => e.IdEntidade).HasColumnName("idEntidade");
            entity.Property(e => e.IdUtilIntrod).HasColumnName("idUtilIntrod");
            entity.Property(e => e.Valor)
                .HasColumnType("sql_variant")
                .HasColumnName("valor");
        });

        modelBuilder.Entity<ClientePropriedadeT>(entity =>
        {
            entity.ToTable("ClientePropriedade_T");

            entity.Property(e => e.Id).HasColumnName("id");
            entity.Property(e => e.Activo)
                .IsRequired()
                .HasDefaultValueSql("((1))")
                .HasColumnName("activo");
            entity.Property(e => e.Descricao)
                .HasMaxLength(50)
                .HasColumnName("descricao");
            entity.Property(e => e.IdEntidade).HasColumnName("idEntidade");
            entity.Property(e => e.Posicao).HasColumnName("posicao");
            entity.Property(e => e.TipoValor)
                .HasMaxLength(50)
                .HasColumnName("tipoValor");
            entity.Property(e => e.ValorInicial)
                .HasColumnType("sql_variant")
                .HasColumnName("valorInicial");
        });

        modelBuilder.Entity<ClienteResumoAcesso>(entity =>
        {
            entity.HasKey(e => e.Id).HasName("PK_ClienteResumoAcessos");

            entity.ToTable("ClienteResumoAcesso");

            entity.Property(e => e.Id).HasColumnName("id");
            entity.Property(e => e.Activo)
                .IsRequired()
                .HasDefaultValueSql("(1)")
                .HasColumnName("activo");
            entity.Property(e => e.IdClienteResumo).HasColumnName("idClienteResumo");
            entity.Property(e => e.IdEntidade).HasColumnName("idEntidade");
            entity.Property(e => e.IdGrupo).HasColumnName("idGrupo");
            entity.Property(e => e.Permissao)
                .HasDefaultValueSql("(8)")
                .HasColumnName("permissao");
            entity.Property(e => e.Posicao)
                .HasDefaultValueSql("(10)")
                .HasColumnName("posicao");
        });

        modelBuilder.Entity<ClienteResumoFuncaoAcesso>(entity =>
        {
            entity.HasKey(e => new { e.IdFuncao, e.IdClienteResumo }).HasName("PK_ClienteResumoUtilFuncaoAcesso");

            entity.ToTable("ClienteResumoFuncaoAcesso");

            entity.Property(e => e.IdFuncao).HasColumnName("idFuncao");
            entity.Property(e => e.IdClienteResumo).HasColumnName("idClienteResumo");
            entity.Property(e => e.Activo)
                .IsRequired()
                .HasDefaultValueSql("((1))")
                .HasColumnName("activo");
            entity.Property(e => e.Id)
                .ValueGeneratedOnAdd()
                .HasColumnName("id");
            entity.Property(e => e.Permissao).HasColumnName("permissao");
            entity.Property(e => e.Posicao).HasColumnName("posicao");
        });

        modelBuilder.Entity<ClienteResumoFuncaoAcessoPermisso>(entity =>
        {
            entity.Property(e => e.Id).HasColumnName("id");
            entity.Property(e => e.Codigo)
                .HasMaxLength(50)
                .HasColumnName("codigo");
            entity.Property(e => e.IdResumoFuncAcesso).HasColumnName("idResumoFuncAcesso");
            entity.Property(e => e.IsDefault).HasColumnName("isDefault");
            entity.Property(e => e.Valor)
                .HasColumnType("sql_variant")
                .HasColumnName("valor");
        });

        modelBuilder.Entity<ClienteResumoFuncaoEntidadeAcesso>(entity =>
        {
            entity.HasKey(e => new { e.IdFuncaoEntidade, e.IdClienteResumo });

            entity.ToTable("ClienteResumoFuncaoEntidadeAcesso");

            entity.Property(e => e.IdFuncaoEntidade).HasColumnName("idFuncaoEntidade");
            entity.Property(e => e.IdClienteResumo).HasColumnName("idClienteResumo");
            entity.Property(e => e.Activo)
                .IsRequired()
                .HasDefaultValueSql("((1))")
                .HasColumnName("activo");
            entity.Property(e => e.Id)
                .ValueGeneratedOnAdd()
                .HasColumnName("id");
            entity.Property(e => e.Permissao).HasColumnName("permissao");
            entity.Property(e => e.Posicao).HasColumnName("posicao");
        });

        modelBuilder.Entity<ClienteResumoT>(entity =>
        {
            entity.HasKey(e => e.Id).HasName("PK_ClienteResumo");

            entity.ToTable("ClienteResumo_T");

            entity.Property(e => e.Id).HasColumnName("id");
            entity.Property(e => e.Activo)
                .IsRequired()
                .HasDefaultValueSql("((1))")
                .HasColumnName("activo");
            entity.Property(e => e.Descricao)
                .HasMaxLength(50)
                .HasColumnName("descricao");
            entity.Property(e => e.IdUrlLocal).HasColumnName("idUrlLocal");
            entity.Property(e => e.Nome)
                .HasMaxLength(25)
                .HasDefaultValueSql("(N'resumo')")
                .HasColumnName("nome");
            entity.Property(e => e.PosicaoDef)
                .HasDefaultValueSql("((200))")
                .HasColumnName("posicaoDef");
            entity.Property(e => e.Visivel)
                .IsRequired()
                .HasDefaultValueSql("((1))")
                .HasColumnName("visivel");
        });

        modelBuilder.Entity<ClienteResumoUtilizadorAcesso>(entity =>
        {
            entity.HasKey(e => new { e.IdUtilizador, e.IdClienteResumo }).HasName("PK_ClienteResumoUtilizadiorAcesso");

            entity.ToTable("ClienteResumoUtilizadorAcesso");

            entity.Property(e => e.IdUtilizador).HasColumnName("idUtilizador");
            entity.Property(e => e.IdClienteResumo).HasColumnName("idClienteResumo");
            entity.Property(e => e.Activo)
                .IsRequired()
                .HasDefaultValueSql("((1))")
                .HasColumnName("activo");
            entity.Property(e => e.Id)
                .ValueGeneratedOnAdd()
                .HasColumnName("id");
            entity.Property(e => e.Permissao).HasColumnName("permissao");
            entity.Property(e => e.Posicao).HasColumnName("posicao");
        });

        modelBuilder.Entity<ClienteSectorActividadeT>(entity =>
        {
            entity.ToTable("ClienteSectorActividade_T");

            entity.Property(e => e.Id)
                .ValueGeneratedNever()
                .HasColumnName("id");
            entity.Property(e => e.Descricao)
                .HasMaxLength(100)
                .IsUnicode(false)
                .HasColumnName("descricao");
        });

        modelBuilder.Entity<ClienteStatusComercialCreditoT>(entity =>
        {
            entity.HasKey(e => new { e.IdStatusComercial, e.IdStatusCredito, e.IdEntidade });

            entity.ToTable("ClienteStatusComercialCredito_T");

            entity.Property(e => e.IdStatusComercial).HasColumnName("idStatusComercial");
            entity.Property(e => e.IdStatusCredito).HasColumnName("idStatusCredito");
            entity.Property(e => e.IdEntidade)
                .HasDefaultValueSql("(1)")
                .HasColumnName("idEntidade");
            entity.Property(e => e.Auto).HasColumnName("auto");
            entity.Property(e => e.Id)
                .ValueGeneratedOnAdd()
                .HasColumnName("id");
        });

        modelBuilder.Entity<ClienteStatusComercialLog>(entity =>
        {
            entity.HasKey(e => e.Id).HasName("PK_T_StatusComercialHistorico");

            entity.ToTable("ClienteStatusComercialLog");

            entity.HasIndex(e => new { e.IdCliente, e.IdStatus, e.IdEntidade, e.IdCliMorada }, "idx_idcliente_idstatus").HasFillFactor(80);

            entity.Property(e => e.Id).HasColumnName("id");
            entity.Property(e => e.Data)
                .HasColumnType("datetime")
                .HasColumnName("data");
            entity.Property(e => e.DtIntrod)
                .HasDefaultValueSql("(getdate())")
                .HasColumnType("datetime")
                .HasColumnName("dtIntrod");
            entity.Property(e => e.IdCliMorada).HasColumnName("idCliMorada");
            entity.Property(e => e.IdCliente).HasColumnName("idCliente");
            entity.Property(e => e.IdEntidade)
                .HasDefaultValueSql("((1))")
                .HasColumnName("idEntidade");
            entity.Property(e => e.IdRegistoAnterior).HasColumnName("idRegistoAnterior");
            entity.Property(e => e.IdStatus).HasColumnName("idStatus");
            entity.Property(e => e.IdUtilizador).HasColumnName("idUtilizador");
        });

        modelBuilder.Entity<ClienteStatusComercialT>(entity =>
        {
            entity.HasKey(e => e.Id).HasName("PK_T_StatusComercial");

            entity.ToTable("ClienteStatusComercial_T");

            entity.HasIndex(e => new { e.IdEntidade, e.Activo, e.Codigo }, "idx_idEntidade_activo_codigo");

            entity.Property(e => e.Id).HasColumnName("id");
            entity.Property(e => e.Activo).HasColumnName("activo");
            entity.Property(e => e.Captado).HasColumnName("captado");
            entity.Property(e => e.CaptadoOcasional).HasColumnName("captado_ocasional");
            entity.Property(e => e.Codigo)
                .HasMaxLength(15)
                .HasColumnName("codigo");
            entity.Property(e => e.Cor)
                .HasMaxLength(6)
                .HasDefaultValueSql("('000000')")
                .HasColumnName("cor");
            entity.Property(e => e.Default).HasColumnName("default");
            entity.Property(e => e.Descricao)
                .HasMaxLength(50)
                .HasColumnName("descricao");
            entity.Property(e => e.IdEntidade).HasColumnName("idEntidade");
            entity.Property(e => e.InvalidoParaSalesLead).HasColumnName("invalido_para_Sales_Lead");
            entity.Property(e => e.Negociacao).HasColumnName("negociacao");
            entity.Property(e => e.SemPcred).HasColumnName("sem_pcred");
            entity.Property(e => e.TempRespPcred)
                .HasDefaultValueSql("((99999))")
                .HasColumnName("temp_resp_pcred");
            entity.Property(e => e.ValidoBp).HasColumnName("validoBP");
        });

        modelBuilder.Entity<ClienteStatusCreditoAduaneiroT>(entity =>
        {
            entity.HasKey(e => e.Id).HasName("PK_T_StatusCreditoAduaneiro");

            entity.ToTable("ClienteStatusCreditoAduaneiro_T");

            entity.Property(e => e.Id).HasColumnName("id");
            entity.Property(e => e.Activo).HasColumnName("activo");
            entity.Property(e => e.CodigoVanguarda).HasColumnName("codigoVanguarda");
            entity.Property(e => e.Descricao)
                .HasMaxLength(50)
                .HasColumnName("descricao");
            entity.Property(e => e.DiasCredito).HasColumnName("diasCredito");
        });

        modelBuilder.Entity<ClienteStatusCreditoLog>(entity =>
        {
            entity.HasKey(e => e.Id).HasName("PK_T_StatusFinanceiroHistorico");

            entity.ToTable("ClienteStatusCreditoLog");

            entity.HasIndex(e => new { e.IdCliente, e.IdStatus }, "idx_idcliente_idstatus").HasFillFactor(80);

            entity.Property(e => e.Id).HasColumnName("id");
            entity.Property(e => e.Data)
                .HasColumnType("datetime")
                .HasColumnName("data");
            entity.Property(e => e.DtIntrod)
                .HasDefaultValueSql("(getdate())")
                .HasColumnType("datetime")
                .HasColumnName("dtIntrod");
            entity.Property(e => e.IdCliMorada).HasColumnName("idCliMorada");
            entity.Property(e => e.IdCliente).HasColumnName("idCliente");
            entity.Property(e => e.IdEntidade)
                .HasDefaultValueSql("((1))")
                .HasColumnName("idEntidade");
            entity.Property(e => e.IdRegistoAnterior).HasColumnName("idRegistoAnterior");
            entity.Property(e => e.IdStatus).HasColumnName("idStatus");
            entity.Property(e => e.IdTipoCredito).HasColumnName("idTipoCredito");
            entity.Property(e => e.IdUtilizador).HasColumnName("idUtilizador");
            entity.Property(e => e.LimiteCredito)
                .HasColumnType("money")
                .HasColumnName("limiteCredito");
            entity.Property(e => e.Observacoes)
                .HasMaxLength(250)
                .HasColumnName("observacoes");
        });

        modelBuilder.Entity<ClienteStatusCreditoRatingRegrasT>(entity =>
        {
            entity.ToTable("ClienteStatusCreditoRatingRegras_T");

            entity.Property(e => e.Id).HasColumnName("id");
            entity.Property(e => e.FactorMultCredito)
                .HasColumnType("money")
                .HasColumnName("factorMultCredito");
            entity.Property(e => e.GeraPedidoCredito).HasColumnName("geraPedidoCredito");
            entity.Property(e => e.IdEntidade).HasColumnName("idEntidade");
            entity.Property(e => e.LimiteCreditoAtribuir)
                .HasColumnType("money")
                .HasColumnName("limiteCreditoAtribuir");
            entity.Property(e => e.PotencialFim)
                .HasColumnType("money")
                .HasColumnName("potencialFim");
            entity.Property(e => e.PotencialIni)
                .HasColumnType("money")
                .HasColumnName("potencialIni");
            entity.Property(e => e.RatingFim).HasColumnName("ratingFim");
            entity.Property(e => e.RatingIni).HasColumnName("ratingIni");
            entity.Property(e => e.ScoreFim).HasColumnName("scoreFim");
            entity.Property(e => e.ScoreIni).HasColumnName("scoreIni");
            entity.Property(e => e.StCreditoAtribuir).HasColumnName("stCreditoAtribuir");
        });

        modelBuilder.Entity<ClienteStatusCreditoT>(entity =>
        {
            entity.HasKey(e => e.Id).HasName("PK_T_StatusFinanceiro");

            entity.ToTable("ClienteStatusCredito_T");

            entity.Property(e => e.Id).HasColumnName("id");
            entity.Property(e => e.Activo)
                .IsRequired()
                .HasDefaultValueSql("((1))")
                .HasColumnName("activo");
            entity.Property(e => e.AplicarPvp).HasColumnName("aplicarPVP");
            entity.Property(e => e.Codigo)
                .HasMaxLength(15)
                .HasColumnName("codigo");
            entity.Property(e => e.CodigoSap)
                .HasMaxLength(10)
                .HasColumnName("CodigoSAP");
            entity.Property(e => e.CodigoVanguarda).HasColumnName("codigoVanguarda");
            entity.Property(e => e.Cor)
                .HasDefaultValueSql("('000000')")
                .HasColumnName("cor");
            entity.Property(e => e.Cortado).HasColumnName("cortado");
            entity.Property(e => e.CreditoAduaneiro).HasColumnName("creditoAduaneiro");
            entity.Property(e => e.CreditoTransporte).HasColumnName("creditoTransporte");
            entity.Property(e => e.Default).HasColumnName("default");
            entity.Property(e => e.Descricao)
                .HasMaxLength(50)
                .HasColumnName("descricao");
            entity.Property(e => e.DiasCredito).HasColumnName("diasCredito");
            entity.Property(e => e.FactorMultCredito)
                .HasColumnType("money")
                .HasColumnName("factorMultCredito");
            entity.Property(e => e.GeraPedidoCredito).HasColumnName("geraPedidoCredito");
            entity.Property(e => e.IdEntidade).HasColumnName("idEntidade");
            entity.Property(e => e.IdModoPagamento).HasColumnName("idModoPagamento");
            entity.Property(e => e.ImgCredito)
                .HasMaxLength(50)
                .HasColumnName("imgCredito");
            entity.Property(e => e.PerdeDescontos).HasColumnName("perdeDescontos");
            entity.Property(e => e.PerdeTarifas).HasColumnName("perdeTarifas");
            entity.Property(e => e.PotencialMaximo)
                .HasColumnType("money")
                .HasColumnName("potencialMaximo");
            entity.Property(e => e.Provisorio).HasColumnName("provisorio");
        });

        modelBuilder.Entity<ClienteStatusCreditoTipoT>(entity =>
        {
            entity.HasKey(e => e.Id).HasName("PK_ClienteCreditoPedidosTipo_T");

            entity.ToTable("ClienteStatusCreditoTipo_T");

            entity.Property(e => e.Id).HasColumnName("id");
            entity.Property(e => e.Activo)
                .HasDefaultValueSql("(1)")
                .HasColumnName("activo");
            entity.Property(e => e.Descricao)
                .HasMaxLength(50)
                .HasColumnName("descricao");
            entity.Property(e => e.IdEntidade)
                .HasDefaultValueSql("(1)")
                .HasColumnName("idEntidade");
        });

        modelBuilder.Entity<ClienteTarifa>(entity =>
        {
            entity.HasKey(e => e.Id).HasName("PK_T_Tarifa");

            entity.ToTable("ClienteTarifa");

            entity.Property(e => e.Id).HasColumnName("id");
            entity.Property(e => e.Activa)
                .HasDefaultValueSql("(1)")
                .HasColumnName("activa");
            entity.Property(e => e.AumenMargem)
                .HasDefaultValueSql("(0)")
                .HasColumnType("money")
                .HasColumnName("aumenMargem");
            entity.Property(e => e.Codigo)
                .HasMaxLength(25)
                .HasColumnName("codigo");
            entity.Property(e => e.Default)
                .HasDefaultValueSql("(0)")
                .HasColumnName("default");
            entity.Property(e => e.Desconto)
                .HasDefaultValueSql("(0)")
                .HasColumnType("money")
                .HasColumnName("desconto");
            entity.Property(e => e.Descricao)
                .HasMaxLength(50)
                .HasColumnName("descricao");
            entity.Property(e => e.DivMargem)
                .HasDefaultValueSql("(1)")
                .HasColumnType("money")
                .HasColumnName("divMargem");
            entity.Property(e => e.DtFim)
                .HasColumnType("datetime")
                .HasColumnName("dtFim");
            entity.Property(e => e.DtInicio)
                .HasColumnType("datetime")
                .HasColumnName("dtInicio");
            entity.Property(e => e.DtIntrod)
                .HasColumnType("datetime")
                .HasColumnName("dtIntrod");
            entity.Property(e => e.FactEsperada).HasColumnName("factEsperada");
            entity.Property(e => e.FactMax).HasColumnName("factMax");
            entity.Property(e => e.Factseguinte)
                .HasColumnType("money")
                .HasColumnName("factseguinte");
            entity.Property(e => e.IdCliMorada).HasColumnName("idCliMorada");
            entity.Property(e => e.IdCliente).HasColumnName("idCliente");
            entity.Property(e => e.IdEntidade)
                .HasDefaultValueSql("(1)")
                .HasColumnName("idEntidade");
            entity.Property(e => e.IdProximaTarifa).HasColumnName("idProximaTarifa");
            entity.Property(e => e.IdTarifaBase).HasColumnName("idTarifaBase");
            entity.Property(e => e.IdTipoTarifa)
                .HasDefaultValueSql("(1)")
                .HasColumnName("idTipoTarifa");
            entity.Property(e => e.IdUtil).HasColumnName("idUtil");
            entity.Property(e => e.MultMargem)
                .HasDefaultValueSql("(1)")
                .HasColumnType("money")
                .HasColumnName("multMargem");
            entity.Property(e => e.Prioridade)
                .HasDefaultValueSql("(0)")
                .HasColumnName("prioridade");
            entity.Property(e => e.TarifaExp)
                .HasDefaultValueSql("(1)")
                .HasColumnName("tarifaExp");
            entity.Property(e => e.TarifaIc).HasColumnName("tarifaIC");
            entity.Property(e => e.TarifaIe).HasColumnName("tarifaIE");
            entity.Property(e => e.TarifaImp)
                .HasDefaultValueSql("(1)")
                .HasColumnName("tarifaImp");
            entity.Property(e => e.TarifaIp)
                .HasDefaultValueSql("(1)")
                .HasColumnName("tarifaIP");
            entity.Property(e => e.TarifaIpf)
                .HasDefaultValueSql("(0)")
                .HasColumnName("tarifaIPF");
            entity.Property(e => e.TarifaRe)
                .HasDefaultValueSql("(1)")
                .HasColumnName("tarifaRE");
            entity.Property(e => e.TarifaRm).HasColumnName("tarifaRM");
            entity.Property(e => e.Tb).HasColumnName("TB");
            entity.Property(e => e.Valida)
                .HasDefaultValueSql("(0)")
                .HasColumnName("valida");
        });

        modelBuilder.Entity<ClienteTarifaZoning>(entity =>
        {
            entity.HasKey(e => new { e.IdPais, e.IdTarifa });

            entity.ToTable("ClienteTarifaZoning");

            entity.Property(e => e.IdPais).HasColumnName("idPais");
            entity.Property(e => e.IdTarifa).HasColumnName("idTarifa");
            entity.Property(e => e.Id)
                .ValueGeneratedOnAdd()
                .HasColumnName("id");
            entity.Property(e => e.Zona)
                .HasMaxLength(3)
                .HasColumnName("zona");
        });

        modelBuilder.Entity<ClienteTarifasLog>(entity =>
        {
            entity.ToTable("ClienteTarifasLog");

            entity.HasIndex(e => e.IdTarifa, "IDx_idTarifa").HasFillFactor(80);

            entity.HasIndex(e => e.RubricaObrigatoria, "idX_rubricaObrigatoria").HasFillFactor(80);

            entity.HasIndex(e => new { e.IdUtilIntrod, e.IdCliente, e.IdTarifa, e.Id }, "idx_idUtilIntrod_idCliente_idTarifa_id").HasFillFactor(80);

            entity.HasIndex(e => new { e.IdCliente, e.Data, e.DtFim, e.IdClasseOrigem, e.IdCliMorada }, "idx_idcliente_data").HasFillFactor(80);

            entity.Property(e => e.Id).HasColumnName("id");
            entity.Property(e => e.Data)
                .HasColumnType("datetime")
                .HasColumnName("data");
            entity.Property(e => e.DescUnidAdi)
                .IsRequired()
                .HasDefaultValueSql("((1))")
                .HasColumnName("descUnidAdi");
            entity.Property(e => e.DivVolumetrico)
                .HasColumnType("money")
                .HasColumnName("divVolumetrico");
            entity.Property(e => e.DtFim)
                .HasColumnType("datetime")
                .HasColumnName("dtFim");
            entity.Property(e => e.DtIntrod)
                .HasDefaultValueSql("(getdate())")
                .HasColumnType("datetime")
                .HasColumnName("dtIntrod");
            entity.Property(e => e.DtUltAct)
                .HasDefaultValueSql("(getdate())")
                .HasColumnType("datetime")
                .HasColumnName("dtUltAct");
            entity.Property(e => e.FactEsperada)
                .HasColumnType("money")
                .HasColumnName("factEsperada");
            entity.Property(e => e.FactMinEsperada)
                .HasColumnType("money")
                .HasColumnName("factMinEsperada");
            entity.Property(e => e.IdClasseOrigem).HasColumnName("idClasseOrigem");
            entity.Property(e => e.IdCliMorada).HasColumnName("idCliMorada");
            entity.Property(e => e.IdCliente).HasColumnName("idCliente");
            entity.Property(e => e.IdTarifa).HasColumnName("idTarifa");
            entity.Property(e => e.IdTipoAgrupa).HasColumnName("idTipoAgrupa");
            entity.Property(e => e.IdTipoAgrupaRep).HasColumnName("idTipoAgrupaRep");
            entity.Property(e => e.IdUtilIntrod).HasColumnName("idUtilIntrod");
            entity.Property(e => e.IdUtilUltAct).HasColumnName("idUtilUltAct");
            entity.Property(e => e.Observacoes)
                .HasMaxLength(250)
                .HasColumnName("observacoes");
            entity.Property(e => e.PercDesconto)
                .HasColumnType("money")
                .HasColumnName("percDesconto");
            entity.Property(e => e.ReqValidacao).HasColumnName("reqValidacao");
            entity.Property(e => e.RubricaObrigatoria).HasColumnName("rubricaObrigatoria");
            entity.Property(e => e.UnidArredonda)
                .HasDefaultValueSql("((0.5))")
                .HasColumnType("money")
                .HasColumnName("unidArredonda");
        });

        modelBuilder.Entity<ClienteTarifasLogBackupAo>(entity =>
        {
            entity
                .HasNoKey()
                .ToTable("ClienteTarifasLog_backupAO");

            entity.Property(e => e.Data)
                .HasColumnType("datetime")
                .HasColumnName("data");
            entity.Property(e => e.DescUnidAdi).HasColumnName("descUnidAdi");
            entity.Property(e => e.DivVolumetrico)
                .HasColumnType("money")
                .HasColumnName("divVolumetrico");
            entity.Property(e => e.DtFim)
                .HasColumnType("datetime")
                .HasColumnName("dtFim");
            entity.Property(e => e.DtIntrod)
                .HasColumnType("datetime")
                .HasColumnName("dtIntrod");
            entity.Property(e => e.DtUltAct)
                .HasColumnType("datetime")
                .HasColumnName("dtUltAct");
            entity.Property(e => e.FactEsperada)
                .HasColumnType("money")
                .HasColumnName("factEsperada");
            entity.Property(e => e.FactMinEsperada)
                .HasColumnType("money")
                .HasColumnName("factMinEsperada");
            entity.Property(e => e.Id).HasColumnName("id");
            entity.Property(e => e.IdClasseOrigem).HasColumnName("idClasseOrigem");
            entity.Property(e => e.IdCliMorada).HasColumnName("idCliMorada");
            entity.Property(e => e.IdCliente).HasColumnName("idCliente");
            entity.Property(e => e.IdTarifa).HasColumnName("idTarifa");
            entity.Property(e => e.IdTipoAgrupa).HasColumnName("idTipoAgrupa");
            entity.Property(e => e.IdTipoAgrupaRep).HasColumnName("idTipoAgrupaRep");
            entity.Property(e => e.IdUtilIntrod).HasColumnName("idUtilIntrod");
            entity.Property(e => e.IdUtilUltAct).HasColumnName("idUtilUltAct");
            entity.Property(e => e.Observacoes)
                .HasMaxLength(250)
                .HasColumnName("observacoes");
            entity.Property(e => e.PercDesconto)
                .HasColumnType("money")
                .HasColumnName("percDesconto");
            entity.Property(e => e.ReqValidacao).HasColumnName("reqValidacao");
            entity.Property(e => e.RubricaObrigatoria).HasColumnName("rubricaObrigatoria");
            entity.Property(e => e.UnidArredonda)
                .HasColumnType("money")
                .HasColumnName("unidArredonda");
        });

        modelBuilder.Entity<ClienteTipoAbcT>(entity =>
        {
            entity.ToTable("ClienteTipoABC_T");

            entity.HasIndex(e => new { e.IdEntidade, e.Activo, e.ValorMin, e.ValorMax, e.Id }, "idx_idEntidade_activo_valorMin_valorMax_id").HasFillFactor(80);

            entity.Property(e => e.Id).HasColumnName("id");
            entity.Property(e => e.Activo)
                .IsRequired()
                .HasDefaultValueSql("((1))")
                .HasColumnName("activo");
            entity.Property(e => e.Codigo)
                .HasMaxLength(5)
                .HasColumnName("codigo");
            entity.Property(e => e.Color)
                .HasMaxLength(6)
                .HasDefaultValueSql("(N'FFFFFF')")
                .HasColumnName("color");
            entity.Property(e => e.Descricao)
                .HasMaxLength(50)
                .HasColumnName("descricao");
            entity.Property(e => e.IdEntidade).HasColumnName("idEntidade");
            entity.Property(e => e.ValorMax)
                .HasColumnType("money")
                .HasColumnName("valorMax");
            entity.Property(e => e.ValorMin)
                .HasColumnType("money")
                .HasColumnName("valorMin");
        });

        modelBuilder.Entity<ClienteTipoAbclog>(entity =>
        {
            entity.ToTable("ClienteTipoABCLog");

            entity.HasIndex(e => new { e.IdCliente, e.IdEntidade, e.DtInicio, e.DtIntrod, e.IdTipoAbc }, "idx_idCliente_idEntidade_dtInicio_dtIntrod_idTipoABC")
                .IsDescending(false, false, false, true, false)
                .HasFillFactor(80);

            entity.Property(e => e.Id).HasColumnName("id");
            entity.Property(e => e.DtFim)
                .HasColumnType("date")
                .HasColumnName("dtFim");
            entity.Property(e => e.DtInicio)
                .HasColumnType("date")
                .HasColumnName("dtInicio");
            entity.Property(e => e.DtIntrod)
                .HasColumnType("datetime")
                .HasColumnName("dtIntrod");
            entity.Property(e => e.IdCliente).HasColumnName("idCliente");
            entity.Property(e => e.IdEntidade).HasColumnName("idEntidade");
            entity.Property(e => e.IdTipoAbc).HasColumnName("idTipoABC");
            entity.Property(e => e.ValorMedio)
                .HasColumnType("money")
                .HasColumnName("valorMedio");
        });

        modelBuilder.Entity<ClienteTipoEntidadeT>(entity =>
        {
            entity.ToTable("ClienteTipoEntidade_T");

            entity.Property(e => e.Id)
                .ValueGeneratedNever()
                .HasColumnName("id");
            entity.Property(e => e.Descricao)
                .HasMaxLength(20)
                .IsUnicode(false)
                .HasColumnName("descricao");
        });

        modelBuilder.Entity<ClienteTipoLog>(entity =>
        {
            entity.ToTable("ClienteTipoLog");

            entity.HasIndex(e => new { e.Idcliente, e.Idtiponovo }, "idx_idcliente_idtipo").HasFillFactor(80);

            entity.HasIndex(e => new { e.Idtiponovo, e.DataAct, e.Idcliente }, "ix_ClienteTipoLog_RGL_25").HasFillFactor(80);

            entity.Property(e => e.Id).HasColumnName("id");
            entity.Property(e => e.DataAct)
                .HasColumnType("datetime")
                .HasColumnName("dataAct");
            entity.Property(e => e.IdCliMorada).HasColumnName("idCliMorada");
            entity.Property(e => e.Idcliente).HasColumnName("idcliente");
            entity.Property(e => e.Idtiponovo).HasColumnName("idtiponovo");
            entity.Property(e => e.NEntrevistas).HasColumnName("nEntrevistas");
            entity.Property(e => e.ValorDesvio)
                .HasColumnType("money")
                .HasColumnName("valorDesvio");
        });

        modelBuilder.Entity<ClienteTipoT>(entity =>
        {
            entity.HasKey(e => e.Id).HasName("PK_T_TipoCliente");

            entity.ToTable("ClienteTipo_T");

            entity.HasIndex(e => new { e.IdEntidade, e.Codigo }, "idx_idEntidade_codigo");

            entity.Property(e => e.Id)
                .ValueGeneratedOnAdd()
                .HasColumnName("id");
            entity.Property(e => e.Codigo)
                .HasMaxLength(15)
                .HasColumnName("codigo");
            entity.Property(e => e.Descricao)
                .HasMaxLength(200)
                .HasColumnName("descricao");
            entity.Property(e => e.IdEntidade)
                .HasDefaultValueSql("((1))")
                .HasColumnName("idEntidade");
            entity.Property(e => e.ImgTipo)
                .HasMaxLength(50)
                .HasColumnName("imgTipo");
            entity.Property(e => e.Nome)
                .HasMaxLength(50)
                .HasColumnName("nome");
        });

        modelBuilder.Entity<ClienteTlog>(entity =>
        {
            entity.HasKey(e => e.IdTrigger).HasName("PK_T_Cliente_TLog");

            entity.ToTable("Cliente_TLog");

            entity.HasIndex(e => new { e.Id, e.DtTrigger }, "idx_id_dtTrigger").HasFillFactor(80);

            entity.Property(e => e.IdTrigger).HasColumnName("idTrigger");
            entity.Property(e => e.Anulado).HasColumnName("anulado");
            entity.Property(e => e.DtTrigger)
                .HasDefaultValueSql("(getdate())")
                .HasColumnType("datetime")
                .HasColumnName("dtTrigger");
            entity.Property(e => e.DtUltAct)
                .HasColumnType("datetime")
                .HasColumnName("dtUltAct");
            entity.Property(e => e.GrupoRangel).HasColumnName("grupoRangel");
            entity.Property(e => e.Id).HasColumnName("id");
            entity.Property(e => e.IdCae).HasColumnName("idCae");
            entity.Property(e => e.IdPais).HasColumnName("idPais");
            entity.Property(e => e.IdTipoEntidade).HasColumnName("idTipoEntidade");
            entity.Property(e => e.IdUtilUltAct).HasColumnName("idUtilUltAct");
            entity.Property(e => e.IsEditavel).HasColumnName("isEditavel");
            entity.Property(e => e.IsParticular).HasColumnName("isParticular");
            entity.Property(e => e.Nome)
                .HasMaxLength(100)
                .HasColumnName("nome");
            entity.Property(e => e.NrContrib)
                .HasMaxLength(20)
                .HasColumnName("nrContrib");
            entity.Property(e => e.Observacoes)
                .HasMaxLength(250)
                .HasColumnName("observacoes");
        });

        modelBuilder.Entity<ClienteTxDescCombCustoLog>(entity =>
        {
            entity.ToTable("ClienteTxDescCombCusto_Log");

            entity.Property(e => e.Id).HasColumnName("id");
            entity.Property(e => e.DtAgendada)
                .HasColumnType("datetime")
                .HasColumnName("dtAgendada");
            entity.Property(e => e.DtIntrod)
                .HasColumnType("datetime")
                .HasColumnName("dtIntrod");
            entity.Property(e => e.IdCliMorada).HasColumnName("idCliMorada");
            entity.Property(e => e.IdCliente).HasColumnName("idCliente");
            entity.Property(e => e.IdEntidade)
                .HasDefaultValueSql("(1)")
                .HasColumnName("idEntidade");
            entity.Property(e => e.IdUtilizador).HasColumnName("idUtilizador");
            entity.Property(e => e.TxDesc)
                .HasColumnType("money")
                .HasColumnName("txDesc");
        });

        modelBuilder.Entity<ClienteTxDescCombLog>(entity =>
        {
            entity.ToTable("ClienteTxDescComb_Log");

            entity.HasIndex(e => new { e.IdCliente, e.DtIntrod }, "dtIntrod_idCliente").HasFillFactor(80);

            entity.Property(e => e.Id).HasColumnName("id");
            entity.Property(e => e.DtAgendada)
                .HasColumnType("datetime")
                .HasColumnName("dtAgendada");
            entity.Property(e => e.DtIntrod)
                .HasColumnType("datetime")
                .HasColumnName("dtIntrod");
            entity.Property(e => e.IdCliMorada).HasColumnName("idCliMorada");
            entity.Property(e => e.IdCliente).HasColumnName("idCliente");
            entity.Property(e => e.IdEntidade)
                .HasDefaultValueSql("((1))")
                .HasColumnName("idEntidade");
            entity.Property(e => e.IdUtilizador).HasColumnName("idUtilizador");
            entity.Property(e => e.TxDesc)
                .HasColumnType("money")
                .HasColumnName("txDesc");
        });

        modelBuilder.Entity<ClienteTxDespAlfandegariasLog>(entity =>
        {
            entity.ToTable("ClienteTxDespAlfandegarias_Log");

            entity.Property(e => e.Id).HasColumnName("id");
            entity.Property(e => e.DtIntrod)
                .HasColumnType("datetime")
                .HasColumnName("dtIntrod");
            entity.Property(e => e.IdCliMorada).HasColumnName("idCliMorada");
            entity.Property(e => e.IdCliente).HasColumnName("idCliente");
            entity.Property(e => e.IdEntidade)
                .HasDefaultValueSql("(1)")
                .HasColumnName("idEntidade");
            entity.Property(e => e.IdUtilizador).HasColumnName("idUtilizador");
            entity.Property(e => e.TxDespAlf)
                .HasColumnType("money")
                .HasColumnName("txDespAlf");
        });

        modelBuilder.Entity<ClienteUtilizadorTipoT>(entity =>
        {
            entity.ToTable("ClienteUtilizadorTipo_T");

            entity.Property(e => e.Id)
                .ValueGeneratedOnAdd()
                .HasColumnName("id");
            entity.Property(e => e.Activo)
                .IsRequired()
                .HasDefaultValueSql("((1))")
                .HasColumnName("activo");
            entity.Property(e => e.Codigo)
                .HasMaxLength(15)
                .HasColumnName("codigo");
            entity.Property(e => e.Descricao)
                .HasMaxLength(15)
                .HasColumnName("descricao");
            entity.Property(e => e.IdDepartamento).HasColumnName("idDepartamento");
        });

        modelBuilder.Entity<ClienteUtilizadore>(entity =>
        {
            entity.ToTable(tb => tb.HasTrigger("ClienteUtilizadores_Trigger"));

            entity.HasIndex(e => new { e.IdCliente, e.IdEntidade, e.IdCliMorada, e.Resp }, "idx_idCliente_idEntidade_idCliMorada_resp").HasFillFactor(80);

            entity.HasIndex(e => new { e.IdTipoUtil, e.IdEntidade, e.Resp }, "idx_idTipoUtil_idEntidade_resp").HasFillFactor(80);

            entity.HasIndex(e => new { e.IdUtil, e.IdEntidade, e.Resp }, "idx_idutil")
                .IsDescending(false, false, true)
                .HasFillFactor(80);

            entity.HasIndex(e => new { e.Resp, e.IdEntidade, e.IdUtil, e.IdCliente, e.IdCliMorada }, "idx_resp_idEntidade_idutil_idcliente_idCliMorada").HasFillFactor(80);

            entity.Property(e => e.Id).HasColumnName("id");
            entity.Property(e => e.DtIntrod)
                .HasDefaultValueSql("(getdate())")
                .HasColumnType("datetime")
                .HasColumnName("dtIntrod");
            entity.Property(e => e.DtUltAct)
                .HasColumnType("datetime")
                .HasColumnName("dtUltAct");
            entity.Property(e => e.IdCliMorada).HasColumnName("idCliMorada");
            entity.Property(e => e.IdCliente).HasColumnName("idCliente");
            entity.Property(e => e.IdEntidade).HasColumnName("idEntidade");
            entity.Property(e => e.IdTipoUtil).HasColumnName("idTipoUtil");
            entity.Property(e => e.IdUtil).HasColumnName("idUtil");
            entity.Property(e => e.IdUtilIntrod).HasColumnName("idUtilIntrod");
            entity.Property(e => e.IdUtilUltAct).HasColumnName("idUtilUltAct");
            entity.Property(e => e.IsAe).HasColumnName("isAE");
            entity.Property(e => e.Resp).HasColumnName("resp");
        });

        modelBuilder.Entity<ClienteUtilizadoresTlog>(entity =>
        {
            entity.HasKey(e => e.IdTrigger);

            entity.ToTable("ClienteUtilizadores_TLog");

            entity.HasIndex(e => new { e.IdUtil, e.DtUltAct }, "NonClusteredIndex-20151223-11052222").IsDescending(false, true);

            entity.HasIndex(e => e.Id, "NonClusteredIndex-20151223-110554").HasFillFactor(80);

            entity.Property(e => e.IdTrigger).HasColumnName("idTrigger");
            entity.Property(e => e.DtTrigger)
                .HasColumnType("datetime")
                .HasColumnName("dtTrigger");
            entity.Property(e => e.DtUltAct)
                .HasColumnType("datetime")
                .HasColumnName("dtUltAct");
            entity.Property(e => e.Id).HasColumnName("id");
            entity.Property(e => e.IdCliMorada).HasColumnName("idCliMorada");
            entity.Property(e => e.IdCliente).HasColumnName("idCliente");
            entity.Property(e => e.IdEntidade).HasColumnName("idEntidade");
            entity.Property(e => e.IdTipoUtil).HasColumnName("idTipoUtil");
            entity.Property(e => e.IdUtil).HasColumnName("idUtil");
            entity.Property(e => e.IdUtilUltAct).HasColumnName("idUtilUltAct");
            entity.Property(e => e.Resp).HasColumnName("resp");
        });

        modelBuilder.Entity<ClienteVipLog>(entity =>
        {
            entity.ToTable("ClienteVipLog");

            entity.HasIndex(e => e.IdCliente, "idx_idcliente").HasFillFactor(80);

            entity.Property(e => e.Id).HasColumnName("id");
            entity.Property(e => e.Data)
                .HasDefaultValueSql("(1)")
                .HasColumnType("datetime")
                .HasColumnName("data");
            entity.Property(e => e.DtIntrod)
                .HasDefaultValueSql("(getdate())")
                .HasColumnType("datetime")
                .HasColumnName("dtIntrod");
            entity.Property(e => e.IdCliente).HasColumnName("idCliente");
            entity.Property(e => e.IdUtil).HasColumnName("idUtil");
            entity.Property(e => e.IdUtilVip).HasColumnName("idUtilVip");
            entity.Property(e => e.Vip).HasColumnName("vip");
        });

        modelBuilder.Entity<ClientesAlteracoesSap>(entity =>
        {
            entity.ToTable("ClientesAlteracoes_SAP");

            entity.HasIndex(e => e.DtexpToSap, "idx_dtExp_id_idcliente").HasFillFactor(80);

            entity.HasIndex(e => new { e.IdCliente, e.DtexpToSap }, "idx_idclient_dtexp_id").HasFillFactor(80);

            entity.Property(e => e.Id).HasColumnName("id");
            entity.Property(e => e.DtAlt)
                .HasColumnType("datetime")
                .HasColumnName("dtAlt");
            entity.Property(e => e.DtexpToSap)
                .HasColumnType("datetime")
                .HasColumnName("dtexp_to_SAP");
            entity.Property(e => e.ExpToSap).HasColumnName("exp_to_SAP");
            entity.Property(e => e.IdCliMorada).HasColumnName("idCliMorada");
            entity.Property(e => e.IdCliente).HasColumnName("idCliente");
            entity.Property(e => e.IdUtilAlt)
                .HasMaxLength(10)
                .IsFixedLength()
                .HasColumnName("idUtilAlt");
        });

        modelBuilder.Entity<ClientesConta>(entity =>
        {
            entity.HasKey(e => e.ContaFilho);

            entity.Property(e => e.ContaFilho)
                .HasMaxLength(9)
                .HasColumnName("contaFilho");
            entity.Property(e => e.Activo).HasColumnName("activo");
            entity.Property(e => e.ContaPai)
                .HasMaxLength(9)
                .HasColumnName("contaPai");
            entity.Property(e => e.Id)
                .ValueGeneratedOnAdd()
                .HasColumnName("id");
        });

        modelBuilder.Entity<ClientesDuplicadosAlteracoesLog>(entity =>
        {
            entity.ToTable("ClientesDuplicadosAlteracoes_Log");

            entity.Property(e => e.Id).HasColumnName("id");
            entity.Property(e => e.Data)
                .HasColumnType("datetime")
                .HasColumnName("data");
            entity.Property(e => e.IdClienteOriginal).HasColumnName("idClienteOriginal");
            entity.Property(e => e.IdRegisto).HasColumnName("idRegisto");
            entity.Property(e => e.IdUtil).HasColumnName("idUtil");
            entity.Property(e => e.TabelaRegisto)
                .HasMaxLength(50)
                .HasColumnName("tabelaRegisto");
        });

        modelBuilder.Entity<ClientesEnviosSuspenso>(entity =>
        {
            entity.HasKey(e => e.Id).HasName("PK__Clientes__3213E83F6B1A0943");

            entity.Property(e => e.Id).HasColumnName("id");
            entity.Property(e => e.Activo).HasColumnName("activo");
            entity.Property(e => e.CodPosNacDest)
                .HasMaxLength(20)
                .HasColumnName("codPosNacDest");
            entity.Property(e => e.CodPosNacRte)
                .HasMaxLength(20)
                .HasColumnName("codPosNacRte");
            entity.Property(e => e.CodRte)
                .HasMaxLength(50)
                .HasColumnName("codRte");
            entity.Property(e => e.DirDest)
                .HasMaxLength(200)
                .HasColumnName("dirDest");
            entity.Property(e => e.DirRte)
                .HasMaxLength(200)
                .HasColumnName("dirRte");
            entity.Property(e => e.IdCliMorada).HasColumnName("idCliMorada");
            entity.Property(e => e.IdCliente).HasColumnName("idCLiente");
            entity.Property(e => e.IdProduto).HasColumnName("idProduto");
            entity.Property(e => e.IdServico).HasColumnName("idServico");
            entity.Property(e => e.NomeDest)
                .HasMaxLength(100)
                .HasColumnName("nomeDest");
            entity.Property(e => e.NomeRte)
                .HasMaxLength(100)
                .HasColumnName("nomeRte");
            entity.Property(e => e.PaisIsodest)
                .HasMaxLength(2)
                .HasColumnName("paisISODest");
            entity.Property(e => e.PaisIsorte)
                .HasMaxLength(2)
                .HasColumnName("paisISORte");
            entity.Property(e => e.PobDest)
                .HasMaxLength(100)
                .HasColumnName("pobDest");
            entity.Property(e => e.PobRte)
                .HasMaxLength(100)
                .HasColumnName("pobRte");
            entity.Property(e => e.RefExp)
                .HasMaxLength(100)
                .HasColumnName("refExp");
        });

        modelBuilder.Entity<ClientesFactManualT>(entity =>
        {
            entity
                .HasNoKey()
                .ToTable("ClientesFactManual_T");

            entity.Property(e => e.Id)
                .ValueGeneratedOnAdd()
                .HasColumnName("id");
            entity.Property(e => e.IdCliMorada).HasColumnName("idCliMorada");
            entity.Property(e => e.IdCliente).HasColumnName("idCliente");
        });

        modelBuilder.Entity<ClientesFacturaEmissaoT>(entity =>
        {
            entity
                .HasNoKey()
                .ToTable("ClientesFacturaEmissao_T");

            entity.Property(e => e.IdCliMorada).HasColumnName("idCliMorada");
            entity.Property(e => e.IdCliente).HasColumnName("idCliente");
            entity.Property(e => e.IdClienteEmissao).HasColumnName("idClienteEmissao");
        });

        modelBuilder.Entity<ClientesGeracaoCodigo>(entity =>
        {
            entity.HasKey(e => e.Id).HasName("PK_clientesGeracaoCodigos");

            entity.HasIndex(e => new { e.IdTipo, e.IdManifesto }, "Idx_IdTipo_IdManifesto");

            entity.Property(e => e.Id).HasColumnName("id");
            entity.Property(e => e.AwbNumber)
                .HasMaxLength(50)
                .IsUnicode(false)
                .HasColumnName("awbNumber");
            entity.Property(e => e.CodCliente)
                .HasMaxLength(100)
                .IsUnicode(false)
                .HasColumnName("codCliente");
            entity.Property(e => e.CreationDate)
                .HasColumnType("datetime")
                .HasColumnName("creationDate");
            entity.Property(e => e.Er)
                .HasMaxLength(1)
                .IsUnicode(false)
                .IsFixedLength()
                .HasColumnName("ER");
            entity.Property(e => e.IdCliMorada).HasColumnName("idCliMorada");
            entity.Property(e => e.IdCliente).HasColumnName("idCliente");
            entity.Property(e => e.IdEntidade).HasColumnName("idEntidade");
            entity.Property(e => e.IdManifesto).HasColumnName("idManifesto");
            entity.Property(e => e.IdPickup).HasColumnName("idPickup");
            entity.Property(e => e.IdTipo)
                .HasDefaultValueSql("((1))")
                .HasColumnName("idTipo");
        });

        modelBuilder.Entity<ClientesGeracaoCodigosTiposT>(entity =>
        {
            entity.ToTable("ClientesGeracaoCodigosTipos_T");

            entity.Property(e => e.Id).HasColumnName("id");
            entity.Property(e => e.Codigo)
                .HasMaxLength(20)
                .HasColumnName("codigo");
            entity.Property(e => e.Descricao)
                .HasMaxLength(50)
                .HasColumnName("descricao");
        });

        modelBuilder.Entity<ClientesServicoDet>(entity =>
        {
            entity.ToTable("ClientesServico_Det");

            entity.HasIndex(e => new { e.Activo, e.IdCliMorada, e.IdRegime, e.IdServico, e.IdServicoDet, e.IdTipoAgrupa }, "idx_activo_idCliMorada_idRegime_idServico_idServicoDet_idTipoAgrupa");

            entity.Property(e => e.Id).HasColumnName("id");
            entity.Property(e => e.Activo).HasColumnName("activo");
            entity.Property(e => e.Campo)
                .HasMaxLength(100)
                .IsUnicode(false)
                .HasColumnName("campo");
            entity.Property(e => e.CausaDev)
                .HasMaxLength(5)
                .IsUnicode(false)
                .HasColumnName("causaDev");
            entity.Property(e => e.IdCliMorada).HasColumnName("idCliMorada");
            entity.Property(e => e.IdCliente).HasColumnName("idCliente");
            entity.Property(e => e.IdEntidade).HasColumnName("idEntidade");
            entity.Property(e => e.IdGrupo).HasColumnName("idGrupo");
            entity.Property(e => e.IdRegime).HasColumnName("idRegime");
            entity.Property(e => e.IdServico).HasColumnName("idServico");
            entity.Property(e => e.IdServicoDet).HasColumnName("idServicoDet");
            entity.Property(e => e.IdTipoAgrupa).HasColumnName("idTipoAgrupa");
            entity.Property(e => e.IdZona).HasColumnName("idZona");
            entity.Property(e => e.Valor)
                .HasMaxLength(100)
                .IsUnicode(false)
                .HasColumnName("valor");
            entity.Property(e => e.Zona)
                .HasMaxLength(50)
                .IsUnicode(false)
                .HasColumnName("zona");
        });

        modelBuilder.Entity<ClientesServicoDetBk>(entity =>
        {
            entity
                .HasNoKey()
                .ToTable("ClientesServico_Det_bk");

            entity.Property(e => e.Activo).HasColumnName("activo");
            entity.Property(e => e.Campo)
                .HasMaxLength(100)
                .IsUnicode(false)
                .HasColumnName("campo");
            entity.Property(e => e.CausaDev)
                .HasMaxLength(5)
                .IsUnicode(false)
                .HasColumnName("causaDev");
            entity.Property(e => e.Id)
                .ValueGeneratedOnAdd()
                .HasColumnName("id");
            entity.Property(e => e.IdCliMorada).HasColumnName("idCliMorada");
            entity.Property(e => e.IdCliente).HasColumnName("idCliente");
            entity.Property(e => e.IdEntidade).HasColumnName("idEntidade");
            entity.Property(e => e.IdGrupo).HasColumnName("idGrupo");
            entity.Property(e => e.IdRegime).HasColumnName("idRegime");
            entity.Property(e => e.IdServico).HasColumnName("idServico");
            entity.Property(e => e.IdServicoDet).HasColumnName("idServicoDet");
            entity.Property(e => e.IdTipoAgrupa).HasColumnName("idTipoAgrupa");
            entity.Property(e => e.IdZona).HasColumnName("idZona");
            entity.Property(e => e.Valor)
                .HasMaxLength(100)
                .IsUnicode(false)
                .HasColumnName("valor");
            entity.Property(e => e.Zona)
                .HasMaxLength(50)
                .IsUnicode(false)
                .HasColumnName("zona");
        });

        modelBuilder.Entity<ClientesServicoDetBk2018>(entity =>
        {
            entity.HasKey(e => e.Id).HasName("PK_ClientesServico_Det2018");

            entity.ToTable("ClientesServico_Det_BK2018");

            entity.Property(e => e.Id).HasColumnName("id");
            entity.Property(e => e.Activo).HasColumnName("activo");
            entity.Property(e => e.Campo)
                .HasMaxLength(100)
                .IsUnicode(false)
                .HasColumnName("campo");
            entity.Property(e => e.CausaDev)
                .HasMaxLength(5)
                .IsUnicode(false)
                .HasColumnName("causaDev");
            entity.Property(e => e.IdCliMorada).HasColumnName("idCliMorada");
            entity.Property(e => e.IdCliente).HasColumnName("idCliente");
            entity.Property(e => e.IdEntidade).HasColumnName("idEntidade");
            entity.Property(e => e.IdGrupo).HasColumnName("idGrupo");
            entity.Property(e => e.IdRegime).HasColumnName("idRegime");
            entity.Property(e => e.IdServico).HasColumnName("idServico");
            entity.Property(e => e.IdServicoDet).HasColumnName("idServicoDet");
            entity.Property(e => e.IdTipoAgrupa).HasColumnName("idTipoAgrupa");
            entity.Property(e => e.IdZona).HasColumnName("idZona");
            entity.Property(e => e.Valor)
                .HasMaxLength(100)
                .IsUnicode(false)
                .HasColumnName("valor");
            entity.Property(e => e.Zona)
                .HasMaxLength(50)
                .IsUnicode(false)
                .HasColumnName("zona");
        });

        modelBuilder.Entity<Cobranca>(entity =>
        {
            entity.HasKey(e => e.Id).HasName("PK_CobrancasAduaneira");

            entity.ToTable("Cobranca", tb =>
                {
                    tb.HasTrigger("CobrancasInsertTrigger");
                    tb.HasTrigger("CobrancasUpdateTrigger");
                    tb.HasTrigger("UpdateCobrancaPDATrigger");
                });

            entity.HasIndex(e => e.DtUltAct, "Idx_DtUltAct");

            entity.HasIndex(e => e.IdPickup, "idx_Pickup").HasFillFactor(80);

            entity.HasIndex(e => new { e.Anulado, e.Encerrado, e.Conferido, e.Recebido, e.IdEntidade, e.IdTipoCobranca, e.IdDeptAreaDestino, e.IdCliente, e.IdPlataforma, e.DtCobrar }, "idx_anulado_encerrado_conferido_recebido_idEntidade_idTipoCobranca_").HasFillFactor(80);

            entity.HasIndex(e => new { e.Anulado, e.FechadoVang, e.IdEntidade, e.IdTipoCobranca, e.IdDeptAreaDestino, e.IdCliente, e.IdPlataforma, e.IdManifesto, e.DtCobrar }, "idx_anulado_fechadoVang_idEntidade_idTipoCobranca_idManifesto_").HasFillFactor(80);

            entity.HasIndex(e => new { e.Anulado, e.FechadoVang, e.IdTipoCobranca, e.IdEntidade, e.IdPlataforma, e.IdDeptAreaDestino, e.IdCliente, e.DtCobrar }, "idx_anulado_fechadoVang_idTipoCobranca_idEntidade_idPlataforma_idDept_").HasFillFactor(80);

            entity.HasIndex(e => new { e.Anulado, e.IdManifestoReembolso, e.IdTipoCobranca, e.IdTipoRecebimento }, "idx_anulado_idManifestoReembolso_idTipoCobr_idTipoReceb").HasFillFactor(80);

            entity.HasIndex(e => new { e.Awb, e.IdTipoCobranca, e.Factura }, "idx_awb_idtipocobranca").HasFillFactor(80);

            entity.HasIndex(e => e.IdCliente, "idx_cliente").HasFillFactor(80);

            entity.HasIndex(e => new { e.Cobrado, e.EnvInterface }, "idx_cobrado_envInter_id_valCobrado_idTipoRec_dtCobr").HasFillFactor(80);

            entity.HasIndex(e => new { e.ValCobrado, e.IdTipoRecebimento, e.IdPlataforma, e.Anulado, e.IdEntidade, e.Conferido, e.DtFinalizado, e.DtExportSap, e.ValidToSap }, "idx_dtFinalizado_idEntidade_idPLataforma_dtExportSap_validTOsap_conferido_anulado_valCobrado_idTipoRecebimento").HasFillFactor(80);

            entity.HasIndex(e => new { e.IdEntidade, e.IsConfValidSap, e.DtExportSap }, "idx_idEntidade_isConfValidSAP_dtExportSAP");

            entity.HasIndex(e => e.IdManifesto, "idx_idManifesto").HasFillFactor(80);

            entity.HasIndex(e => e.IdTipoCobranca, "idx_idTipoCobranca").HasFillFactor(80);

            entity.Property(e => e.Id).HasColumnName("id");
            entity.Property(e => e.Anulado).HasColumnName("anulado");
            entity.Property(e => e.Awb)
                .HasMaxLength(50)
                .HasColumnName("awb");
            entity.Property(e => e.Billfedex)
                .HasDefaultValueSql("((0))")
                .HasColumnName("billfedex");
            entity.Property(e => e.Cheque)
                .HasDefaultValueSql("((0))")
                .HasColumnName("cheque");
            entity.Property(e => e.Cobrado)
                .HasDefaultValueSql("((0))")
                .HasColumnName("cobrado");
            entity.Property(e => e.CobrancaLocal)
                .HasDefaultValueSql("((0))")
                .HasColumnName("cobrancaLocal");
            entity.Property(e => e.Conferido).HasColumnName("conferido");
            entity.Property(e => e.ContactoAlt)
                .HasMaxLength(50)
                .HasColumnName("contactoAlt");
            entity.Property(e => e.DtAnulado)
                .HasColumnType("datetime")
                .HasColumnName("dtAnulado");
            entity.Property(e => e.DtBillFedEx)
                .HasColumnType("datetime")
                .HasColumnName("dtBillFedEx");
            entity.Property(e => e.DtCobrado)
                .HasColumnType("datetime")
                .HasColumnName("dtCobrado");
            entity.Property(e => e.DtCobrar)
                .HasColumnType("datetime")
                .HasColumnName("dtCobrar");
            entity.Property(e => e.DtConfValidSap).HasColumnName("dtConfValidSAP");
            entity.Property(e => e.DtEnvInterface)
                .HasColumnType("datetime")
                .HasColumnName("dtEnvInterface");
            entity.Property(e => e.DtExportSap)
                .HasColumnType("datetime")
                .HasColumnName("dtExportSAP");
            entity.Property(e => e.DtFactura)
                .HasColumnType("datetime")
                .HasColumnName("dtFactura");
            entity.Property(e => e.DtFechadoVang)
                .HasColumnType("datetime")
                .HasColumnName("dtFechadoVang");
            entity.Property(e => e.DtFecho)
                .HasColumnType("datetime")
                .HasColumnName("dtFecho");
            entity.Property(e => e.DtFinalizado)
                .HasColumnType("datetime")
                .HasColumnName("dtFinalizado");
            entity.Property(e => e.DtIntrod)
                .HasDefaultValueSql("(getdate())")
                .HasColumnType("datetime")
                .HasColumnName("dtIntrod");
            entity.Property(e => e.DtUltAct)
                .HasColumnType("datetime")
                .HasColumnName("dtUltAct");
            entity.Property(e => e.DtValidadeCheque)
                .HasColumnType("date")
                .HasColumnName("dtValidadeCheque");
            entity.Property(e => e.Encerrado).HasColumnName("encerrado");
            entity.Property(e => e.EnvInterface).HasColumnName("envInterface");
            entity.Property(e => e.Factura)
                .HasMaxLength(10)
                .HasColumnName("factura");
            entity.Property(e => e.Fechado)
                .HasDefaultValueSql("((0))")
                .HasColumnName("fechado");
            entity.Property(e => e.FechadoVang)
                .HasDefaultValueSql("((0))")
                .HasColumnName("fechadoVang");
            entity.Property(e => e.Finalizar)
                .HasDefaultValueSql("((0))")
                .HasColumnName("finalizar");
            entity.Property(e => e.IdCabSaidasA).HasColumnName("idCab_Saidas_A");
            entity.Property(e => e.IdCliMorada).HasColumnName("idCliMorada");
            entity.Property(e => e.IdCliente).HasColumnName("idCliente");
            entity.Property(e => e.IdCobrancaAdicional).HasColumnName("idCobrancaAdicional");
            entity.Property(e => e.IdCpostalAlt).HasColumnName("idCPostalAlt");
            entity.Property(e => e.IdDeposito).HasColumnName("idDeposito");
            entity.Property(e => e.IdDeptAreaDestino)
                .HasDefaultValueSql("((1))")
                .HasColumnName("idDeptAreaDestino");
            entity.Property(e => e.IdDistribuidor)
                .HasDefaultValueSql("((1))")
                .HasColumnName("idDistribuidor");
            entity.Property(e => e.IdEntidade)
                .HasDefaultValueSql("((1))")
                .HasColumnName("idEntidade");
            entity.Property(e => e.IdFornecedor).HasColumnName("idFornecedor");
            entity.Property(e => e.IdImportacaoManifesto).HasColumnName("idImportacaoManifesto");
            entity.Property(e => e.IdManifesto).HasColumnName("idManifesto");
            entity.Property(e => e.IdManifestoReembolso).HasColumnName("idManifestoReembolso");
            entity.Property(e => e.IdMaterialPedidos).HasColumnName("idMaterialPedidos");
            entity.Property(e => e.IdMotivoEncerrar).HasColumnName("idMotivoEncerrar");
            entity.Property(e => e.IdMotivoNaoConferir).HasColumnName("idMotivoNaoConferir");
            entity.Property(e => e.IdPickup).HasColumnName("idPickup");
            entity.Property(e => e.IdPlataforma).HasColumnName("idPlataforma");
            entity.Property(e => e.IdRota).HasColumnName("idRota");
            entity.Property(e => e.IdTipoCobranca).HasColumnName("idTipoCobranca");
            entity.Property(e => e.IdTipoRecebimento).HasColumnName("idTipoRecebimento");
            entity.Property(e => e.IdUtilAnulado).HasColumnName("idUtilAnulado");
            entity.Property(e => e.IdUtilBillFedEx).HasColumnName("idUtilBillFedEx");
            entity.Property(e => e.IdUtilCobrado).HasColumnName("idUtilCobrado");
            entity.Property(e => e.IdUtilFecho).HasColumnName("idUtilFecho");
            entity.Property(e => e.IdUtilFin).HasColumnName("idUtilFin");
            entity.Property(e => e.IdUtilIntrod).HasColumnName("idUtilIntrod");
            entity.Property(e => e.IdUtilNaoConferir).HasColumnName("idUtilNaoConferir");
            entity.Property(e => e.IdUtilUltAct).HasColumnName("idUtilUltAct");
            entity.Property(e => e.IsConfValidSap).HasColumnName("isConfValidSAP");
            entity.Property(e => e.MoradaAlt)
                .HasMaxLength(100)
                .HasColumnName("moradaAlt");
            entity.Property(e => e.NrAvisoLiqSap)
                .HasMaxLength(50)
                .HasColumnName("NrAvisoLiqSAP");
            entity.Property(e => e.NrCheque)
                .HasMaxLength(50)
                .HasColumnName("nrCheque");
            entity.Property(e => e.NrDebitoAgente).HasMaxLength(100);
            entity.Property(e => e.ObsCobrado)
                .HasMaxLength(500)
                .HasColumnName("obsCobrado");
            entity.Property(e => e.ObsFecho)
                .HasMaxLength(500)
                .HasColumnName("obsFecho");
            entity.Property(e => e.Observacoes)
                .HasMaxLength(500)
                .HasColumnName("observacoes");
            entity.Property(e => e.ObservacoesDebito)
                .HasMaxLength(500)
                .HasColumnName("observacoesDebito");
            entity.Property(e => e.Recebido).HasColumnName("recebido");
            entity.Property(e => e.ReembolsoAwb)
                .HasMaxLength(20)
                .HasColumnName("reembolsoAWB");
            entity.Property(e => e.TelfAlt)
                .HasMaxLength(15)
                .HasColumnName("telfAlt");
            entity.Property(e => e.Tratado)
                .HasDefaultValueSql("((0))")
                .HasComment("indica se o estaf. ja tentou cobrar")
                .HasColumnName("tratado");
            entity.Property(e => e.ValCobrado)
                .HasDefaultValueSql("((0))")
                .HasColumnType("money")
                .HasColumnName("valCobrado");
            entity.Property(e => e.Valcobrar)
                .HasDefaultValueSql("((0))")
                .HasColumnType("money")
                .HasColumnName("valcobrar");
            entity.Property(e => e.ValidToSap).HasColumnName("validToSAP");
        });

        modelBuilder.Entity<CobrancaAduaneiraCobranca>(entity =>
        {
            entity.HasKey(e => e.IdCobrancaAduaneira);

            entity.ToTable("CobrancaAduaneiraCobranca");

            entity.HasIndex(e => new { e.IdCobranca, e.IdCobrancaAduaneira }, "idx_idCobranca_idCab");

            entity.Property(e => e.IdCobrancaAduaneira)
                .ValueGeneratedNever()
                .HasColumnName("idCobrancaAduaneira");
            entity.Property(e => e.IdCobranca).HasColumnName("idCobranca");
        });

        modelBuilder.Entity<CobrancaAduaneiraFicheiro>(entity =>
        {
            entity.HasNoKey();

            entity.Property(e => e.Data)
                .HasDefaultValueSql("(getdate())")
                .HasColumnType("datetime")
                .HasColumnName("data");
            entity.Property(e => e.Id)
                .ValueGeneratedOnAdd()
                .HasColumnName("id");
            entity.Property(e => e.IdUtil).HasColumnName("idUtil");
            entity.Property(e => e.LocalOrigem)
                .HasMaxLength(50)
                .HasColumnName("localOrigem");
            entity.Property(e => e.LocaldDestino)
                .HasMaxLength(50)
                .HasColumnName("localdDestino");
            entity.Property(e => e.NomeDestino)
                .HasMaxLength(50)
                .HasColumnName("nomeDestino");
            entity.Property(e => e.NomeOrigem)
                .HasMaxLength(50)
                .HasColumnName("nomeOrigem");
        });

        modelBuilder.Entity<CobrancaAduaneiraVgcab>(entity =>
        {
            entity.HasKey(e => new { e.Peri, e.Depart, e.DocId, e.DocNum }).HasName("PK_CobrancasAduaneiraVGCab");

            entity.ToTable("CobrancaAduaneiraVGCab");

            entity.HasIndex(e => e.ModoPto, "IDx_ModoPto").HasFillFactor(80);

            entity.HasIndex(e => e.Integrada, "Idx_int");

            entity.HasIndex(e => new { e.Integrada, e.IdEntidade }, "Idx_integrada_idEntidade");

            entity.HasIndex(e => e.DocNum, "idx_Doc_Num").HasFillFactor(80);

            entity.HasIndex(e => new { e.Awb, e.DocId, e.DocNum, e.Entidade, e.ModoPto, e.Integrada }, "idx_awb_doc_id_doc_num_Entidade_ModoPto_Integrada").HasFillFactor(80);

            entity.HasIndex(e => e.Id, "idx_id").HasFillFactor(80);

            entity.HasIndex(e => e.Integrada, "idx_integrada").HasFillFactor(80);

            entity.Property(e => e.Depart).HasMaxLength(11);
            entity.Property(e => e.DocId)
                .HasMaxLength(10)
                .HasColumnName("Doc_Id");
            entity.Property(e => e.DocNum)
                .HasMaxLength(11)
                .HasColumnName("Doc_Num");
            entity.Property(e => e.Agrupa).HasDefaultValueSql("((0))");
            entity.Property(e => e.Arm)
                .HasMaxLength(10)
                .HasDefaultValueSql("('Sede')");
            entity.Property(e => e.Autoriza)
                .HasMaxLength(5)
                .HasDefaultValueSql("('')");
            entity.Property(e => e.Awb)
                .HasMaxLength(50)
                .HasColumnName("AWB");
            entity.Property(e => e.AwbGidwin)
                .HasMaxLength(100)
                .HasColumnName("awb_gidwin");
            entity.Property(e => e.Cambio).HasDefaultValueSql("((1))");
            entity.Property(e => e.CargaData)
                .HasColumnType("smalldatetime")
                .HasColumnName("Carga_Data");
            entity.Property(e => e.CargaHora)
                .HasMaxLength(5)
                .HasColumnName("Carga_Hora");
            entity.Property(e => e.Ccusto)
                .HasMaxLength(20)
                .HasDefaultValueSql("('')")
                .HasColumnName("CCusto");
            entity.Property(e => e.CodGidWin)
                .HasMaxLength(18)
                .HasColumnName("codGidWin");
            entity.Property(e => e.Comercial)
                .HasMaxLength(10)
                .HasDefaultValueSql("('Aduaneiro')");
            entity.Property(e => e.Comissao)
                .HasDefaultValueSql("((0))")
                .HasColumnType("money");
            entity.Property(e => e.Contrato)
                .HasMaxLength(50)
                .HasDefaultValueSql("('')");
            entity.Property(e => e.CounterCabSaidasA).HasColumnName("counterCab_Saidas_A");
            entity.Property(e => e.CounterCcor)
                .HasDefaultValueSql("((0))")
                .HasColumnName("CounterCCor");
            entity.Property(e => e.CustoVendas)
                .HasDefaultValueSql("((0))")
                .HasColumnType("money");
            entity.Property(e => e.DataEmit).HasColumnType("smalldatetime");
            entity.Property(e => e.Descarga)
                .HasMaxLength(50)
                .HasDefaultValueSql("('')");
            entity.Property(e => e.Despachante).HasDefaultValueSql("((0))");
            entity.Property(e => e.DocContab)
                .HasMaxLength(15)
                .HasDefaultValueSql("('')");
            entity.Property(e => e.DocData)
                .HasColumnType("smalldatetime")
                .HasColumnName("Doc_Data");
            entity.Property(e => e.DtIntegr)
                .HasColumnType("datetime")
                .HasColumnName("dtIntegr");
            entity.Property(e => e.DtIntrod)
                .HasColumnType("datetime")
                .HasColumnName("dtIntrod");
            entity.Property(e => e.DtManu).HasColumnType("smalldatetime");
            entity.Property(e => e.DtVto).HasColumnType("smalldatetime");
            entity.Property(e => e.ES)
                .HasMaxLength(1)
                .HasDefaultValueSql("('S')")
                .HasColumnName("E_S");
            entity.Property(e => e.Entrega).HasDefaultValueSql("((0))");
            entity.Property(e => e.Id)
                .ValueGeneratedOnAdd()
                .HasColumnName("id");
            entity.Property(e => e.IdEntidade).HasColumnName("idEntidade");
            entity.Property(e => e.IdFicheiro).HasColumnName("idFicheiro");
            entity.Property(e => e.IdManifesto).HasColumnName("idManifesto");
            entity.Property(e => e.IdTerc)
                .HasDefaultValueSql("((0))")
                .HasColumnName("Id_Terc");
            entity.Property(e => e.IdUtilIntegr).HasColumnName("idUtilIntegr");
            entity.Property(e => e.IdUtilIntrod).HasColumnName("idUtilIntrod");
            entity.Property(e => e.Integrada).HasColumnName("integrada");
            entity.Property(e => e.IsCondEntr)
                .HasDefaultValueSql("((0))")
                .HasColumnName("IS_CondEntr");
            entity.Property(e => e.IsLocEs)
                .HasDefaultValueSql("((0))")
                .HasColumnName("IS_LocES");
            entity.Property(e => e.IsModoTransp)
                .HasMaxLength(50)
                .HasDefaultValueSql("('')")
                .HasColumnName("IS_ModoTransp");
            entity.Property(e => e.IsNatTrans1)
                .HasMaxLength(50)
                .HasDefaultValueSql("('')")
                .HasColumnName("IS_NatTrans1");
            entity.Property(e => e.IsNatTrans2)
                .HasMaxLength(50)
                .HasDefaultValueSql("('')")
                .HasColumnName("IS_NatTrans2");
            entity.Property(e => e.IsRegDest)
                .HasDefaultValueSql("((0))")
                .HasColumnName("IS_RegDest");
            entity.Property(e => e.Iva0Cod)
                .HasDefaultValueSql("((0))")
                .HasColumnName("IVA_0_Cod");
            entity.Property(e => e.Iva0Inc)
                .HasDefaultValueSql("((0))")
                .HasColumnType("money")
                .HasColumnName("IVA_0_Inc");
            entity.Property(e => e.Iva0IncM)
                .HasDefaultValueSql("((0))")
                .HasColumnType("money")
                .HasColumnName("IVA_0_Inc_M");
            entity.Property(e => e.Iva0Val)
                .HasDefaultValueSql("((0))")
                .HasColumnType("money")
                .HasColumnName("IVA_0_Val");
            entity.Property(e => e.Iva0ValM)
                .HasDefaultValueSql("((0))")
                .HasColumnType("money")
                .HasColumnName("IVA_0_Val_M");
            entity.Property(e => e.Iva1Cod).HasColumnName("IVA_1_Cod");
            entity.Property(e => e.Iva1Inc)
                .HasColumnType("money")
                .HasColumnName("IVA_1_Inc");
            entity.Property(e => e.Iva1IncM)
                .HasColumnType("money")
                .HasColumnName("IVA_1_Inc_M");
            entity.Property(e => e.Iva1Val)
                .HasColumnType("money")
                .HasColumnName("IVA_1_Val");
            entity.Property(e => e.Iva1ValM)
                .HasColumnType("money")
                .HasColumnName("IVA_1_Val_M");
            entity.Property(e => e.Iva2Cod)
                .HasDefaultValueSql("((-1))")
                .HasColumnName("IVA_2_Cod");
            entity.Property(e => e.Iva2Inc)
                .HasDefaultValueSql("((0))")
                .HasColumnType("money")
                .HasColumnName("IVA_2_Inc");
            entity.Property(e => e.Iva2IncM)
                .HasDefaultValueSql("((0))")
                .HasColumnType("money")
                .HasColumnName("IVA_2_Inc_M");
            entity.Property(e => e.Iva2Val)
                .HasDefaultValueSql("((0))")
                .HasColumnType("money")
                .HasColumnName("IVA_2_Val");
            entity.Property(e => e.Iva2ValM)
                .HasDefaultValueSql("((0))")
                .HasColumnType("money")
                .HasColumnName("IVA_2_Val_M");
            entity.Property(e => e.Iva3Cod)
                .HasDefaultValueSql("((-1))")
                .HasColumnName("IVA_3_Cod");
            entity.Property(e => e.Iva3Inc)
                .HasDefaultValueSql("((0))")
                .HasColumnType("money")
                .HasColumnName("IVA_3_Inc");
            entity.Property(e => e.Iva3IncM)
                .HasDefaultValueSql("((0))")
                .HasColumnType("money")
                .HasColumnName("IVA_3_Inc_M");
            entity.Property(e => e.Iva3Val)
                .HasDefaultValueSql("((0))")
                .HasColumnType("money")
                .HasColumnName("IVA_3_Val");
            entity.Property(e => e.Iva3ValM)
                .HasDefaultValueSql("((0))")
                .HasColumnType("money")
                .HasColumnName("IVA_3_Val_M");
            entity.Property(e => e.Ivaincl)
                .HasMaxLength(1)
                .HasDefaultValueSql("('N')")
                .HasColumnName("IVAincl");
            entity.Property(e => e.MatViat)
                .HasMaxLength(20)
                .HasDefaultValueSql("('')");
            entity.Property(e => e.MeioPto)
                .HasMaxLength(5)
                .HasDefaultValueSql("('')");
            entity.Property(e => e.ModoPtoTxt)
                .HasMaxLength(255)
                .HasDefaultValueSql("('')")
                .HasColumnName("ModoPto_Txt");
            entity.Property(e => e.Moeda)
                .HasMaxLength(3)
                .HasDefaultValueSql("('EUR')");
            entity.Property(e => e.MotViat)
                .HasMaxLength(50)
                .HasDefaultValueSql("('')");
            entity.Property(e => e.MvalAjuste)
                .HasDefaultValueSql("((0))")
                .HasColumnType("money")
                .HasColumnName("MValAjuste");
            entity.Property(e => e.MvalDescCab)
                .HasDefaultValueSql("((0))")
                .HasColumnType("money")
                .HasColumnName("MValDescCab");
            entity.Property(e => e.MvalDescLinha)
                .HasDefaultValueSql("((0))")
                .HasColumnType("money")
                .HasColumnName("MValDescLinha");
            entity.Property(e => e.MvalDescPp)
                .HasDefaultValueSql("((0))")
                .HasColumnType("money")
                .HasColumnName("MValDescPP");
            entity.Property(e => e.MvalDoc)
                .HasColumnType("money")
                .HasColumnName("MValDoc");
            entity.Property(e => e.MvalIva)
                .HasColumnType("money")
                .HasColumnName("MValIVA");
            entity.Property(e => e.MvalOutros)
                .HasColumnType("money")
                .HasColumnName("MValOutros");
            entity.Property(e => e.MvalProd)
                .HasDefaultValueSql("((0))")
                .HasColumnType("money")
                .HasColumnName("MValProd");
            entity.Property(e => e.MvalTaras)
                .HasDefaultValueSql("((0))")
                .HasColumnType("money")
                .HasColumnName("MValTaras");
            entity.Property(e => e.Natureza)
                .HasMaxLength(3)
                .HasColumnName("natureza");
            entity.Property(e => e.Nlinhas)
                .HasDefaultValueSql("((0))")
                .HasColumnName("NLinhas");
            entity.Property(e => e.NoViasEmit)
                .HasDefaultValueSql("((0))")
                .HasColumnName("noViasEmit");
            entity.Property(e => e.NoVolumes).HasDefaultValueSql("((0))");
            entity.Property(e => e.NumeroProcesso).HasColumnName("numeroProcesso");
            entity.Property(e => e.Obs)
                .HasDefaultValueSql("('')")
                .HasColumnType("ntext");
            entity.Property(e => e.PaisDest)
                .HasMaxLength(15)
                .HasDefaultValueSql("('PORTUGAL')")
                .HasColumnName("Pais_Dest");
            entity.Property(e => e.PesoDoc)
                .HasDefaultValueSql("((0))")
                .HasColumnType("money");
            entity.Property(e => e.PesoSaida)
                .HasDefaultValueSql("((0))")
                .HasColumnType("money");
            entity.Property(e => e.Process).HasDefaultValueSql("((0))");
            entity.Property(e => e.Psicotropicos)
                .HasMaxLength(1)
                .HasDefaultValueSql("('N')");
            entity.Property(e => e.RecusaDescontos)
                .HasMaxLength(1)
                .HasDefaultValueSql("('N')");
            entity.Property(e => e.Resumo).HasDefaultValueSql("((0))");
            entity.Property(e => e.SinValor)
                .HasDefaultValueSql("((0))")
                .HasColumnType("money")
                .HasColumnName("Sin_Valor");
            entity.Property(e => e.StEnvio).HasDefaultValueSql("((0))");
            entity.Property(e => e.StatusAnul).HasDefaultValueSql("((0))");
            entity.Property(e => e.StatusCred)
                .HasMaxLength(1)
                .HasDefaultValueSql("('1')");
            entity.Property(e => e.TabPrecos)
                .HasMaxLength(20)
                .HasDefaultValueSql("('')")
                .HasColumnName("Tab_Precos");
            entity.Property(e => e.TemGr)
                .HasMaxLength(1)
                .HasDefaultValueSql("('N')")
                .HasColumnName("TemGR");
            entity.Property(e => e.TpEnt).HasDefaultValueSql("((152))");
            entity.Property(e => e.TpEntrega)
                .HasDefaultValueSql("((0))")
                .HasColumnName("tpEntrega");
            entity.Property(e => e.TpLiq)
                .HasDefaultValueSql("((0))")
                .HasColumnName("tpLiq");
            entity.Property(e => e.TpMercadoria)
                .HasMaxLength(50)
                .HasDefaultValueSql("('')")
                .HasColumnName("tpMercadoria");
            entity.Property(e => e.TpTransp)
                .HasDefaultValueSql("((0))")
                .HasColumnName("tpTransp");
            entity.Property(e => e.TrajC).HasDefaultValueSql("((0))");
            entity.Property(e => e.TrajE).HasDefaultValueSql("((0))");
            entity.Property(e => e.TrajV).HasDefaultValueSql("((0))");
            entity.Property(e => e.Transitario).HasDefaultValueSql("((0))");
            entity.Property(e => e.Transp)
                .HasMaxLength(50)
                .HasDefaultValueSql("((0))");
            entity.Property(e => e.TrjCOrdem)
                .HasDefaultValueSql("((0))")
                .HasColumnName("TrjC_Ordem");
            entity.Property(e => e.TrjEOrdem)
                .HasDefaultValueSql("((0))")
                .HasColumnName("TrjE_Ordem");
            entity.Property(e => e.TxComis)
                .HasDefaultValueSql("((0))")
                .HasColumnType("money");
            entity.Property(e => e.TxDescCab).HasDefaultValueSql("((0))");
            entity.Property(e => e.TxDescCab1).HasDefaultValueSql("((0))");
            entity.Property(e => e.TxDescCab2).HasDefaultValueSql("((0))");
            entity.Property(e => e.TxDescPp)
                .HasDefaultValueSql("((0))")
                .HasColumnName("TxDescPP");
            entity.Property(e => e.Utiliz).HasDefaultValueSql("((1975))");
            entity.Property(e => e.ValAjuste)
                .HasDefaultValueSql("((0))")
                .HasColumnType("money");
            entity.Property(e => e.ValDescCab)
                .HasDefaultValueSql("((0))")
                .HasColumnType("money");
            entity.Property(e => e.ValDescLinha)
                .HasDefaultValueSql("((0))")
                .HasColumnType("money");
            entity.Property(e => e.ValDescPp)
                .HasDefaultValueSql("((0))")
                .HasColumnType("money")
                .HasColumnName("ValDescPP");
            entity.Property(e => e.ValDoc).HasColumnType("money");
            entity.Property(e => e.ValIva)
                .HasColumnType("money")
                .HasColumnName("ValIVA");
            entity.Property(e => e.ValMSDesc)
                .HasDefaultValueSql("((0))")
                .HasColumnType("money")
                .HasColumnName("ValM_sDesc");
            entity.Property(e => e.ValOutros).HasColumnType("money");
            entity.Property(e => e.ValProd)
                .HasDefaultValueSql("((0))")
                .HasColumnType("money");
            entity.Property(e => e.ValReemb)
                .HasDefaultValueSql("((0))")
                .HasColumnType("money");
            entity.Property(e => e.ValTaras)
                .HasDefaultValueSql("((0))")
                .HasColumnType("money");
            entity.Property(e => e.ValorExtenso)
                .HasMaxLength(255)
                .HasDefaultValueSql("('')");
            entity.Property(e => e.ViasaEmit).HasDefaultValueSql("((0))");
            entity.Property(e => e.Vrefer)
                .HasMaxLength(20)
                .HasDefaultValueSql("('')")
                .HasColumnName("VRefer");
        });

        modelBuilder.Entity<CobrancaAduaneiraVglin>(entity =>
        {
            entity.HasKey(e => new { e.Peri, e.Depart, e.DocId, e.DocNum, e.Lin });

            entity.ToTable("CobrancaAduaneiraVGLin");

            entity.HasIndex(e => e.Data, "idx_data").HasFillFactor(80);

            entity.HasIndex(e => e.Id, "idx_id").HasFillFactor(80);

            entity.HasIndex(e => new { e.Integrada, e.DtIntegr }, "idx_integrada_dt").HasFillFactor(80);

            entity.Property(e => e.Depart).HasMaxLength(11);
            entity.Property(e => e.DocId)
                .HasMaxLength(10)
                .HasColumnName("Doc_Id");
            entity.Property(e => e.DocNum)
                .HasMaxLength(11)
                .HasColumnName("Doc_Num");
            entity.Property(e => e.Arm)
                .HasMaxLength(10)
                .HasDefaultValueSql("('Sede')");
            entity.Property(e => e.CalcE).HasDefaultValueSql("((0))");
            entity.Property(e => e.Cambio).HasDefaultValueSql("(1)");
            entity.Property(e => e.Ccusto)
                .HasMaxLength(5)
                .HasDefaultValueSql("('0')")
                .HasColumnName("CCusto");
            entity.Property(e => e.CgTipVis)
                .HasDefaultValueSql("((0))")
                .HasColumnName("CG_TipVis");
            entity.Property(e => e.Ciclo).HasDefaultValueSql("((0))");
            entity.Property(e => e.CodIva)
                .HasMaxLength(10)
                .HasColumnName("codIVA");
            entity.Property(e => e.Comercial)
                .HasMaxLength(10)
                .HasDefaultValueSql("('Aduaneiro')");
            entity.Property(e => e.ContaPocC)
                .HasMaxLength(16)
                .HasDefaultValueSql("((0))")
                .HasColumnName("ContaPoc_C");
            entity.Property(e => e.ContaPocD)
                .HasMaxLength(16)
                .HasDefaultValueSql("((0))")
                .HasColumnName("ContaPoc_D");
            entity.Property(e => e.CountLote).HasDefaultValueSql("((0))");
            entity.Property(e => e.Data).HasColumnType("smalldatetime");
            entity.Property(e => e.DataRegisto).HasColumnType("smalldatetime");
            entity.Property(e => e.DtIntegr)
                .HasColumnType("datetime")
                .HasColumnName("dtIntegr");
            entity.Property(e => e.DtIntrod)
                .HasColumnType("datetime")
                .HasColumnName("dtIntrod");
            entity.Property(e => e.ES)
                .HasMaxLength(1)
                .HasDefaultValueSql("('S')")
                .HasColumnName("E_S");
            entity.Property(e => e.EncLin)
                .HasDefaultValueSql("((0))")
                .HasColumnName("Enc_Lin");
            entity.Property(e => e.Familia)
                .HasMaxLength(10)
                .HasDefaultValueSql("('Aduaneira')");
            entity.Property(e => e.FichaDespesas)
                .HasDefaultValueSql("((0))")
                .HasColumnName("Ficha_Despesas");
            entity.Property(e => e.Id)
                .ValueGeneratedOnAdd()
                .HasColumnName("id");
            entity.Property(e => e.IdEntidade).HasColumnName("idEntidade");
            entity.Property(e => e.IdFicheiro).HasColumnName("idFicheiro");
            entity.Property(e => e.IdUtilIntegr).HasColumnName("idUtilIntegr");
            entity.Property(e => e.IdUtilIntrod).HasColumnName("idUtilIntrod");
            entity.Property(e => e.Integrada).HasColumnName("integrada");
            entity.Property(e => e.IsValStat)
                .HasColumnType("money")
                .HasColumnName("IS_ValStat");
            entity.Property(e => e.Ivaincl)
                .HasMaxLength(1)
                .HasDefaultValueSql("('N')")
                .HasColumnName("IVAincl");
            entity.Property(e => e.Medidas).HasDefaultValueSql("((0))");
            entity.Property(e => e.Moeda)
                .HasMaxLength(3)
                .HasDefaultValueSql("('EUR')");
            entity.Property(e => e.MotivoCg)
                .HasDefaultValueSql("((0))")
                .HasColumnName("MotivoCG");
            entity.Property(e => e.MotivoDesc)
                .HasMaxLength(255)
                .HasDefaultValueSql("((0))");
            entity.Property(e => e.MovGen)
                .HasMaxLength(4)
                .HasDefaultValueSql("('Pro')")
                .HasColumnName("Mov_Gen");
            entity.Property(e => e.MovQuant).HasDefaultValueSql("((2))");
            entity.Property(e => e.MovTipo)
                .HasMaxLength(5)
                .HasDefaultValueSql("('Vend')")
                .HasColumnName("Mov_Tipo");
            entity.Property(e => e.Obs)
                .HasDefaultValueSql("('')")
                .HasColumnType("ntext");
            entity.Property(e => e.PaQtStockMs)
                .HasDefaultValueSql("((0))")
                .HasColumnType("money")
                .HasColumnName("PA_QtStockMS");
            entity.Property(e => e.PaValStockMs)
                .HasDefaultValueSql("((0))")
                .HasColumnType("money")
                .HasColumnName("PA_ValStockMS");
            entity.Property(e => e.PrazoVto).HasDefaultValueSql("((0))");
            entity.Property(e => e.ProdCurto)
                .HasMaxLength(50)
                .HasColumnName("Prod_curto");
            entity.Property(e => e.ProdNome)
                .HasMaxLength(255)
                .HasDefaultValueSql("('')")
                .HasColumnName("Prod_Nome");
            entity.Property(e => e.PromCounter)
                .HasDefaultValueSql("((0))")
                .HasColumnName("Prom_Counter");
            entity.Property(e => e.Promocao)
                .HasMaxLength(15)
                .HasDefaultValueSql("('0')");
            entity.Property(e => e.Quant)
                .HasDefaultValueSql("((1))")
                .HasColumnType("money");
            entity.Property(e => e.QuantStock)
                .HasDefaultValueSql("((1))")
                .HasColumnType("money")
                .HasColumnName("Quant_Stock");
            entity.Property(e => e.RefYx)
                .HasMaxLength(255)
                .HasDefaultValueSql("('')")
                .HasColumnName("RefYX");
            entity.Property(e => e.SerieEq)
                .HasMaxLength(20)
                .HasDefaultValueSql("('0')");
            entity.Property(e => e.StArrum)
                .HasMaxLength(1)
                .HasDefaultValueSql("('0')");
            entity.Property(e => e.StFase).HasDefaultValueSql("((0))");
            entity.Property(e => e.StatusAnul).HasDefaultValueSql("((0))");
            entity.Property(e => e.StatusTr)
                .HasDefaultValueSql("((1))")
                .HasColumnName("StatusTR");
            entity.Property(e => e.TabPrecos)
                .HasMaxLength(20)
                .HasDefaultValueSql("('')")
                .HasColumnName("Tab_Precos");
            entity.Property(e => e.TipoAreg)
                .HasDefaultValueSql("((0))")
                .HasColumnName("TipoAReg");
            entity.Property(e => e.TipoBonus).HasDefaultValueSql("((0))");
            entity.Property(e => e.TipoDesc).HasDefaultValueSql("((0))");
            entity.Property(e => e.TpEnt).HasDefaultValueSql("((152))");
            entity.Property(e => e.TxCom)
                .HasDefaultValueSql("((0))")
                .HasColumnType("money")
                .HasColumnName("Tx_Com");
            entity.Property(e => e.TxDescLin)
                .HasDefaultValueSql("((0))")
                .HasColumnName("Tx_Desc_Lin");
            entity.Property(e => e.TxDescLin1)
                .HasDefaultValueSql("((0))")
                .HasColumnName("Tx_Desc_Lin1");
            entity.Property(e => e.TxDescLin2)
                .HasDefaultValueSql("((0))")
                .HasColumnName("Tx_Desc_Lin2");
            entity.Property(e => e.TxIva).HasColumnName("Tx_IVA");
            entity.Property(e => e.Unid)
                .HasMaxLength(5)
                .HasDefaultValueSql("('UN')");
            entity.Property(e => e.ValCustoAdicional)
                .HasDefaultValueSql("((0))")
                .HasColumnType("money")
                .HasColumnName("Val_Custo_Adicional");
            entity.Property(e => e.ValCustoMs)
                .HasDefaultValueSql("((0))")
                .HasColumnType("money")
                .HasColumnName("ValCustoMS");
            entity.Property(e => e.ValCustoMsContab)
                .HasDefaultValueSql("((0))")
                .HasColumnType("money")
                .HasColumnName("ValCustoMS_Contab");
            entity.Property(e => e.ValCustoQt)
                .HasDefaultValueSql("((0))")
                .HasColumnType("money")
                .HasColumnName("Val_Custo_Qt");
            entity.Property(e => e.ValDescDoc)
                .HasDefaultValueSql("((0))")
                .HasColumnType("money")
                .HasColumnName("Val_Desc_Doc");
            entity.Property(e => e.ValDescForn)
                .HasDefaultValueSql("((0))")
                .HasColumnType("money")
                .HasColumnName("Val_Desc_Forn");
            entity.Property(e => e.ValDescLin)
                .HasDefaultValueSql("((0))")
                .HasColumnType("money")
                .HasColumnName("Val_Desc_Lin");
            entity.Property(e => e.ValIva)
                .HasColumnType("money")
                .HasColumnName("Val_IVA");
            entity.Property(e => e.ValMDescLin)
                .HasDefaultValueSql("((0))")
                .HasColumnType("money")
                .HasColumnName("ValM_Desc_Lin");
            entity.Property(e => e.ValMIva)
                .HasColumnType("money")
                .HasColumnName("ValM_IVA");
            entity.Property(e => e.ValMPrUnit)
                .HasColumnType("money")
                .HasColumnName("ValM_PrUnit");
            entity.Property(e => e.ValMPromLin)
                .HasDefaultValueSql("((0))")
                .HasColumnType("money")
                .HasColumnName("ValM_Prom_Lin");
            entity.Property(e => e.ValMQt)
                .HasColumnType("money")
                .HasColumnName("ValM_Qt");
            entity.Property(e => e.ValPrUnit)
                .HasColumnType("money")
                .HasColumnName("Val_PrUnit");
            entity.Property(e => e.ValPromLin)
                .HasDefaultValueSql("((0))")
                .HasColumnType("money")
                .HasColumnName("Val_Prom_Lin");
            entity.Property(e => e.ValQt)
                .HasColumnType("money")
                .HasColumnName("Val_Qt");
            entity.Property(e => e.ValRegMs)
                .HasDefaultValueSql("((0))")
                .HasColumnType("money")
                .HasColumnName("ValRegMS");
            entity.Property(e => e.ZonaVendas).HasMaxLength(10);
        });

        modelBuilder.Entity<CobrancaDetalhe>(entity =>
        {
            entity.ToTable(tb => tb.HasTrigger("CobrancaDetalhesINSERT"));

            entity.HasIndex(e => new { e.IdCobranca, e.DtIntrod }, "idx_IdCobranca").HasFillFactor(80);

            entity.HasIndex(e => new { e.IdCobranca, e.IdTipoDetalhe }, "idx_idCobr_idTipoDetalhe_idUtilIntrod").HasFillFactor(80);

            entity.HasIndex(e => e.IdTipoDetalhe, "idx_idTipoDetalhe_idCobr_idUtilIntrod").HasFillFactor(80);

            entity.Property(e => e.Id).HasColumnName("id");
            entity.Property(e => e.DtIntrod)
                .HasDefaultValueSql("(getdate())")
                .HasColumnType("datetime")
                .HasColumnName("dtIntrod");
            entity.Property(e => e.IdCobranca).HasColumnName("idCobranca");
            entity.Property(e => e.IdDeptAreaDestino).HasColumnName("idDeptAreaDestino");
            entity.Property(e => e.IdScan).HasColumnName("idScan");
            entity.Property(e => e.IdTipoDetalhe).HasColumnName("idTipoDetalhe");
            entity.Property(e => e.IdUtilIntrod).HasColumnName("idUtilIntrod");
            entity.Property(e => e.Observacoes)
                .HasMaxLength(500)
                .HasColumnName("observacoes");
        });

        modelBuilder.Entity<CobrancaLog>(entity =>
        {
            entity.HasKey(e => e.IdTrigger).HasName("PK__Cobranca__B20B187653CDF47B");

            entity.ToTable("Cobranca_Log");

            entity.HasIndex(e => e.Id, "idx_idCob").HasFillFactor(80);

            entity.Property(e => e.IdTrigger).HasColumnName("idTrigger");
            entity.Property(e => e.Anulado).HasColumnName("anulado");
            entity.Property(e => e.Awb)
                .HasMaxLength(50)
                .HasColumnName("awb");
            entity.Property(e => e.Billfedex).HasColumnName("billfedex");
            entity.Property(e => e.Cheque).HasColumnName("cheque");
            entity.Property(e => e.Cobrado).HasColumnName("cobrado");
            entity.Property(e => e.CobrancaLocal).HasColumnName("cobrancaLocal");
            entity.Property(e => e.Conferido).HasColumnName("conferido");
            entity.Property(e => e.ContactoAlt)
                .HasMaxLength(50)
                .HasColumnName("contactoAlt");
            entity.Property(e => e.DtAnulado)
                .HasColumnType("datetime")
                .HasColumnName("dtAnulado");
            entity.Property(e => e.DtBillFedEx)
                .HasColumnType("datetime")
                .HasColumnName("dtBillFedEx");
            entity.Property(e => e.DtCobrado)
                .HasColumnType("datetime")
                .HasColumnName("dtCobrado");
            entity.Property(e => e.DtCobrar)
                .HasColumnType("datetime")
                .HasColumnName("dtCobrar");
            entity.Property(e => e.DtConfValidSap).HasColumnName("dtConfValidSAP");
            entity.Property(e => e.DtEnvInterface)
                .HasColumnType("datetime")
                .HasColumnName("dtEnvInterface");
            entity.Property(e => e.DtExportSap)
                .HasColumnType("datetime")
                .HasColumnName("dtExportSAP");
            entity.Property(e => e.DtFactura)
                .HasColumnType("datetime")
                .HasColumnName("dtFactura");
            entity.Property(e => e.DtFechadoVang)
                .HasColumnType("datetime")
                .HasColumnName("dtFechadoVang");
            entity.Property(e => e.DtFecho)
                .HasColumnType("datetime")
                .HasColumnName("dtFecho");
            entity.Property(e => e.DtFinalizado)
                .HasColumnType("datetime")
                .HasColumnName("dtFinalizado");
            entity.Property(e => e.DtIntrod)
                .HasColumnType("datetime")
                .HasColumnName("dtIntrod");
            entity.Property(e => e.DtTrigger)
                .HasDefaultValueSql("(getdate())")
                .HasColumnType("datetime")
                .HasColumnName("dtTrigger");
            entity.Property(e => e.DtUltAct)
                .HasColumnType("datetime")
                .HasColumnName("dtUltAct");
            entity.Property(e => e.Encerrado).HasColumnName("encerrado");
            entity.Property(e => e.EnvInterface).HasColumnName("envInterface");
            entity.Property(e => e.Factura)
                .HasMaxLength(10)
                .HasColumnName("factura");
            entity.Property(e => e.Fechado).HasColumnName("fechado");
            entity.Property(e => e.FechadoVang).HasColumnName("fechadoVang");
            entity.Property(e => e.Finalizar).HasColumnName("finalizar");
            entity.Property(e => e.Id).HasColumnName("id");
            entity.Property(e => e.IdCabSaidasA).HasColumnName("idCab_Saidas_A");
            entity.Property(e => e.IdCliMorada).HasColumnName("idCliMorada");
            entity.Property(e => e.IdCliente).HasColumnName("idCliente");
            entity.Property(e => e.IdCobrancaAdicional).HasColumnName("idCobrancaAdicional");
            entity.Property(e => e.IdCpostalAlt).HasColumnName("idCPostalAlt");
            entity.Property(e => e.IdDeposito).HasColumnName("idDeposito");
            entity.Property(e => e.IdDeptAreaDestino).HasColumnName("idDeptAreaDestino");
            entity.Property(e => e.IdDistribuidor).HasColumnName("idDistribuidor");
            entity.Property(e => e.IdEntidade).HasColumnName("idEntidade");
            entity.Property(e => e.IdFornecedor).HasColumnName("idFornecedor");
            entity.Property(e => e.IdImportacaoManifesto).HasColumnName("idImportacaoManifesto");
            entity.Property(e => e.IdManifesto).HasColumnName("idManifesto");
            entity.Property(e => e.IdManifestoReembolso).HasColumnName("idManifestoReembolso");
            entity.Property(e => e.IdMaterialPedidos).HasColumnName("idMaterialPedidos");
            entity.Property(e => e.IdMotivoEncerrar).HasColumnName("idMotivoEncerrar");
            entity.Property(e => e.IdMotivoNaoConferir).HasColumnName("idMotivoNaoConferir");
            entity.Property(e => e.IdPickup).HasColumnName("idPickup");
            entity.Property(e => e.IdPlataforma).HasColumnName("idPlataforma");
            entity.Property(e => e.IdRota).HasColumnName("idRota");
            entity.Property(e => e.IdTipoCobranca).HasColumnName("idTipoCobranca");
            entity.Property(e => e.IdTipoRecebimento).HasColumnName("idTipoRecebimento");
            entity.Property(e => e.IdUtilAnulado).HasColumnName("idUtilAnulado");
            entity.Property(e => e.IdUtilBillFedEx).HasColumnName("idUtilBillFedEx");
            entity.Property(e => e.IdUtilCobrado).HasColumnName("idUtilCobrado");
            entity.Property(e => e.IdUtilFecho).HasColumnName("idUtilFecho");
            entity.Property(e => e.IdUtilFin).HasColumnName("idUtilFin");
            entity.Property(e => e.IdUtilIntrod).HasColumnName("idUtilIntrod");
            entity.Property(e => e.IdUtilNaoConferir).HasColumnName("idUtilNaoConferir");
            entity.Property(e => e.IdUtilUltAct).HasColumnName("idUtilUltAct");
            entity.Property(e => e.IsConfValidSap).HasColumnName("isConfValidSAP");
            entity.Property(e => e.MoradaAlt)
                .HasMaxLength(100)
                .HasColumnName("moradaAlt");
            entity.Property(e => e.NrAvisoLiqSap)
                .HasMaxLength(50)
                .HasColumnName("NrAvisoLiqSAP");
            entity.Property(e => e.NrCheque)
                .HasMaxLength(50)
                .HasColumnName("nrCheque");
            entity.Property(e => e.NrDebitoAgente).HasMaxLength(100);
            entity.Property(e => e.ObsCobrado)
                .HasMaxLength(500)
                .HasColumnName("obsCobrado");
            entity.Property(e => e.ObsFecho)
                .HasMaxLength(500)
                .HasColumnName("obsFecho");
            entity.Property(e => e.Observacoes)
                .HasMaxLength(500)
                .HasColumnName("observacoes");
            entity.Property(e => e.ObservacoesDebito)
                .HasMaxLength(500)
                .HasColumnName("observacoesDebito");
            entity.Property(e => e.Recebido).HasColumnName("recebido");
            entity.Property(e => e.ReembolsoAwb)
                .HasMaxLength(20)
                .HasColumnName("reembolsoAWB");
            entity.Property(e => e.TelfAlt)
                .HasMaxLength(15)
                .HasColumnName("telfAlt");
            entity.Property(e => e.Tratado).HasColumnName("tratado");
            entity.Property(e => e.ValCobrado)
                .HasColumnType("money")
                .HasColumnName("valCobrado");
            entity.Property(e => e.Valcobrar)
                .HasColumnType("money")
                .HasColumnName("valcobrar");
            entity.Property(e => e.ValidToSap).HasColumnName("validToSAP");
        });

        modelBuilder.Entity<CobrancaMotivosEncerrarT>(entity =>
        {
            entity.ToTable("CobrancaMotivosEncerrar_T");

            entity.HasIndex(e => e.Codigo, "idx_codigo");

            entity.Property(e => e.Id).HasColumnName("id");
            entity.Property(e => e.Codigo)
                .HasMaxLength(15)
                .HasColumnName("codigo");
            entity.Property(e => e.Descricao)
                .HasMaxLength(50)
                .HasColumnName("descricao");
            entity.Property(e => e.Manual).HasColumnName("manual");
        });

        modelBuilder.Entity<CobrancaMotivosNaoConferirT>(entity =>
        {
            entity.HasKey(e => e.Id).HasName("PK_CobrancaMotivoNaoConferir_T");

            entity.ToTable("CobrancaMotivosNaoConferir_T");

            entity.Property(e => e.Id).HasColumnName("id");
            entity.Property(e => e.Codigo)
                .HasMaxLength(10)
                .IsFixedLength()
                .HasColumnName("codigo");
            entity.Property(e => e.Descricao)
                .HasMaxLength(50)
                .HasColumnName("descricao");
            entity.Property(e => e.IdDepartAreaDestino).HasColumnName("idDepartAreaDestino");
            entity.Property(e => e.IdDepartUtil).HasColumnName("idDepartUtil");
        });

        modelBuilder.Entity<CobrancaRecebimentosTipoT>(entity =>
        {
            entity.HasKey(e => e.Id).HasName("PK_CobrancasRecebimentosTipos_T");

            entity.ToTable("CobrancaRecebimentosTipo_T");

            entity.Property(e => e.Id).HasColumnName("id");
            entity.Property(e => e.Activo)
                .IsRequired()
                .HasDefaultValueSql("((1))")
                .HasColumnName("activo");
            entity.Property(e => e.Codigo)
                .HasMaxLength(15)
                .HasColumnName("codigo");
            entity.Property(e => e.Descricao)
                .HasMaxLength(50)
                .HasColumnName("descricao");
            entity.Property(e => e.Expedir).HasColumnName("expedir");
            entity.Property(e => e.VisivelMapa).HasColumnName("visivelMapa");
        });

        modelBuilder.Entity<CobrancaTipoDetalhesT>(entity =>
        {
            entity.HasKey(e => e.Id).HasName("PK_CobrancaTipoDetalhes");

            entity.ToTable("CobrancaTipoDetalhes_T");

            entity.Property(e => e.Id).HasColumnName("id");
            entity.Property(e => e.Activo)
                .IsRequired()
                .HasDefaultValueSql("((1))")
                .HasColumnName("activo");
            entity.Property(e => e.Codigo)
                .HasMaxLength(15)
                .HasColumnName("codigo");
            entity.Property(e => e.Descricao)
                .HasMaxLength(50)
                .HasColumnName("descricao");
            entity.Property(e => e.Detalhe)
                .HasMaxLength(150)
                .HasColumnName("detalhe");
            entity.Property(e => e.Ordem).HasColumnName("ordem");
        });

        modelBuilder.Entity<CobrancaTipoT>(entity =>
        {
            entity.ToTable("CobrancaTipo_T");

            entity.HasIndex(e => e.Codigo, "idx_codigo");

            entity.Property(e => e.Id).HasColumnName("id");
            entity.Property(e => e.Activo)
                .IsRequired()
                .HasDefaultValueSql("((1))")
                .HasColumnName("activo");
            entity.Property(e => e.Codigo)
                .HasMaxLength(15)
                .HasColumnName("codigo");
            entity.Property(e => e.DescWeb)
                .HasMaxLength(50)
                .HasColumnName("descWeb");
            entity.Property(e => e.Descricao)
                .HasMaxLength(50)
                .HasColumnName("descricao");
            entity.Property(e => e.Manual).HasColumnName("manual");
        });

        modelBuilder.Entity<CodigosIataT>(entity =>
        {
            entity.HasKey(e => new { e.Codigo, e.IdPais });

            entity.ToTable("CodigosIATA_T");

            entity.Property(e => e.Codigo)
                .HasMaxLength(3)
                .IsUnicode(false)
                .HasColumnName("codigo");
            entity.Property(e => e.IdPais).HasColumnName("idPais");
            entity.Property(e => e.Default).HasColumnName("default");
            entity.Property(e => e.Pais)
                .HasMaxLength(2)
                .IsUnicode(false)
                .HasColumnName("pais");
        });

        modelBuilder.Entity<CodigosPostaisBuytragoT>(entity =>
        {
            entity.HasKey(e => e.Id).HasName("PK__CodigosP__3213E83F7B7F35D3");

            entity.ToTable("CodigosPostaisBuytrago_T");

            entity.HasIndex(e => new { e.IdPais, e.Cpostal }, "idx_IdPais_Cpostal").HasFillFactor(80);

            entity.Property(e => e.Id).HasColumnName("id");
            entity.Property(e => e.CodPais).HasMaxLength(2);
            entity.Property(e => e.Cpostal).HasMaxLength(6);
            entity.Property(e => e.IdPaisZona).HasColumnName("idPaisZona");
            entity.Property(e => e.NomeDelegacao).HasMaxLength(30);
            entity.Property(e => e.RotaInternacional).HasMaxLength(7);
            entity.Property(e => e.ZonaCpostalDest).HasColumnName("ZonaCPostalDest");
            entity.Property(e => e.ZonaCpostalOrig).HasColumnName("ZonaCPostalOrig");
        });

        modelBuilder.Entity<CodigosPostaisBuytragoT20130503>(entity =>
        {
            entity
                .HasNoKey()
                .ToTable("CodigosPostaisBuytrago_T20130503");

            entity.Property(e => e.CodPais).HasMaxLength(2);
            entity.Property(e => e.Cpostal).HasMaxLength(6);
            entity.Property(e => e.Id)
                .ValueGeneratedOnAdd()
                .HasColumnName("id");
            entity.Property(e => e.IdPaisZona).HasColumnName("idPaisZona");
            entity.Property(e => e.NomeDelegacao).HasMaxLength(30);
            entity.Property(e => e.RotaInternacional).HasMaxLength(7);
            entity.Property(e => e.ZonaCpostalDest).HasColumnName("ZonaCPostalDest");
            entity.Property(e => e.ZonaCpostalOrig).HasColumnName("ZonaCPostalOrig");
        });

        modelBuilder.Entity<CodigosPostaisBuytragoT20130930>(entity =>
        {
            entity
                .HasNoKey()
                .ToTable("CodigosPostaisBuytrago_T20130930");

            entity.Property(e => e.CodPais).HasMaxLength(2);
            entity.Property(e => e.Cpostal).HasMaxLength(6);
            entity.Property(e => e.Id)
                .ValueGeneratedOnAdd()
                .HasColumnName("id");
            entity.Property(e => e.IdPaisZona).HasColumnName("idPaisZona");
            entity.Property(e => e.NomeDelegacao).HasMaxLength(30);
            entity.Property(e => e.RotaInternacional).HasMaxLength(7);
            entity.Property(e => e.ZonaCpostalDest).HasColumnName("ZonaCPostalDest");
            entity.Property(e => e.ZonaCpostalOrig).HasColumnName("ZonaCPostalOrig");
        });

        modelBuilder.Entity<CodigosPostaisBuytragoT20131024>(entity =>
        {
            entity
                .HasNoKey()
                .ToTable("CodigosPostaisBuytrago_T20131024");

            entity.Property(e => e.CodPais).HasMaxLength(2);
            entity.Property(e => e.Cpostal).HasMaxLength(6);
            entity.Property(e => e.Id)
                .ValueGeneratedOnAdd()
                .HasColumnName("id");
            entity.Property(e => e.IdPaisZona).HasColumnName("idPaisZona");
            entity.Property(e => e.NomeDelegacao).HasMaxLength(30);
            entity.Property(e => e.RotaInternacional).HasMaxLength(7);
            entity.Property(e => e.ZonaCpostalDest).HasColumnName("ZonaCPostalDest");
            entity.Property(e => e.ZonaCpostalOrig).HasColumnName("ZonaCPostalOrig");
        });

        modelBuilder.Entity<CodigosPostaisBuytragoT20131111>(entity =>
        {
            entity
                .HasNoKey()
                .ToTable("CodigosPostaisBuytrago_T20131111");

            entity.Property(e => e.CodPais).HasMaxLength(2);
            entity.Property(e => e.Cpostal).HasMaxLength(6);
            entity.Property(e => e.Id)
                .ValueGeneratedOnAdd()
                .HasColumnName("id");
            entity.Property(e => e.IdPaisZona).HasColumnName("idPaisZona");
            entity.Property(e => e.NomeDelegacao).HasMaxLength(30);
            entity.Property(e => e.RotaInternacional).HasMaxLength(7);
            entity.Property(e => e.ZonaCpostalDest).HasColumnName("ZonaCPostalDest");
            entity.Property(e => e.ZonaCpostalOrig).HasColumnName("ZonaCPostalOrig");
        });

        modelBuilder.Entity<CodigosPostaisBuytragoTCopy>(entity =>
        {
            entity
                .HasNoKey()
                .ToTable("CodigosPostaisBuytrago_T_Copy");

            entity.Property(e => e.CodPais).HasMaxLength(2);
            entity.Property(e => e.Cpostal).HasMaxLength(6);
            entity.Property(e => e.Id)
                .ValueGeneratedOnAdd()
                .HasColumnName("id");
            entity.Property(e => e.IdPaisZona).HasColumnName("idPaisZona");
            entity.Property(e => e.NomeDelegacao).HasMaxLength(30);
            entity.Property(e => e.RotaInternacional).HasMaxLength(7);
            entity.Property(e => e.ZonaCpostalDest).HasColumnName("ZonaCPostalDest");
            entity.Property(e => e.ZonaCpostalOrig).HasColumnName("ZonaCPostalOrig");
        });

        modelBuilder.Entity<CodigosPostaisCompromissoT>(entity =>
        {
            entity.HasKey(e => new { e.IdEntidade, e.Cp4, e.IdPais });

            entity.ToTable("CodigosPostaisCompromisso_T");

            entity.HasIndex(e => e.IdServico, "IDX_idServico").HasFillFactor(80);

            entity.Property(e => e.IdEntidade)
                .HasDefaultValueSql("((1))")
                .HasColumnName("idEntidade");
            entity.Property(e => e.Cp4)
                .HasMaxLength(4)
                .HasColumnName("cp4");
            entity.Property(e => e.IdPais).HasColumnName("idPais");
            entity.Property(e => e.HoraLimite)
                .HasColumnType("datetime")
                .HasColumnName("horaLimite");
            entity.Property(e => e.IdServico).HasColumnName("idServico");
        });

        modelBuilder.Entity<CodigosPostaisEntidade>(entity =>
        {
            entity.HasKey(e => new { e.IdCpostal, e.IdEntidade });

            entity.HasIndex(e => new { e.IdPlataforma, e.Activo }, "Idx_idPlataforma_activo");

            entity.HasIndex(e => e.IdEquipaComercial, "idx_idEquipaComercial").HasFillFactor(80);

            entity.HasIndex(e => e.IdPlatZona, "idx_idPlatZona").HasFillFactor(80);

            entity.HasIndex(e => new { e.IdPlataforma, e.IdCpostal, e.IdEntidade }, "idx_idPlataforma_idCPostal_idEntidade").HasFillFactor(80);

            entity.HasIndex(e => new { e.IdRota, e.IdEntidade }, "idx_idrota_identidade").HasFillFactor(80);

            entity.Property(e => e.IdCpostal).HasColumnName("idCPostal");
            entity.Property(e => e.IdEntidade).HasColumnName("idEntidade");
            entity.Property(e => e.Activo)
                .IsRequired()
                .HasDefaultValueSql("((1))")
                .HasColumnName("activo");
            entity.Property(e => e.CodZona)
                .HasMaxLength(10)
                .IsUnicode(false)
                .HasColumnName("codZona");
            entity.Property(e => e.Conecta).HasColumnName("conecta");
            entity.Property(e => e.CutOffEnt1).HasColumnName("cutOffEnt1");
            entity.Property(e => e.CutOffEnt2).HasColumnName("cutOffEnt2");
            entity.Property(e => e.CutOffRec1).HasColumnName("cutOffRec1");
            entity.Property(e => e.CutOffRec2).HasColumnName("cutOffRec2");
            entity.Property(e => e.DiaEntrega).HasColumnName("diaEntrega");
            entity.Property(e => e.DiasIb).HasColumnName("diasIB");
            entity.Property(e => e.DiasOb).HasColumnName("diasOB");
            entity.Property(e => e.DtCriacao)
                .HasDefaultValueSql("(getdate())")
                .HasColumnType("datetime")
                .HasColumnName("dtCriacao");
            entity.Property(e => e.DtUltAlt)
                .HasColumnType("datetime")
                .HasColumnName("dtUltAlt");
            entity.Property(e => e.HoraEntrega)
                .HasColumnType("datetime")
                .HasColumnName("horaEntrega");
            entity.Property(e => e.HoraLimiteRec).HasColumnName("horaLimiteRec");
            entity.Property(e => e.IdEquipaComercial).HasColumnName("idEquipaComercial");
            entity.Property(e => e.IdPais).HasColumnName("idPais");
            entity.Property(e => e.IdPlatZona).HasColumnName("idPlatZona");
            entity.Property(e => e.IdPlataforma).HasColumnName("idPlataforma");
            entity.Property(e => e.IdPlataformaCtrl).HasColumnName("idPlataformaCtrl");
            entity.Property(e => e.IdRota).HasColumnName("idRota");
            entity.Property(e => e.IdUtilCriacao)
                .HasDefaultValueSql("((777))")
                .HasColumnName("idUtilCriacao");
            entity.Property(e => e.IdUtilUltAlt).HasColumnName("idUtilUltAlt");
            entity.Property(e => e.IdZonaPais).HasColumnName("idZonaPais");
        });

        modelBuilder.Entity<CodigosPostaisEntidadesBak>(entity =>
        {
            entity
                .HasNoKey()
                .ToTable("CodigosPostaisEntidades_BAK");

            entity.Property(e => e.Activo).HasColumnName("activo");
            entity.Property(e => e.CodZona)
                .HasMaxLength(10)
                .IsUnicode(false)
                .HasColumnName("codZona");
            entity.Property(e => e.Conecta).HasColumnName("conecta");
            entity.Property(e => e.CutOff1)
                .HasColumnType("datetime")
                .HasColumnName("cutOff1");
            entity.Property(e => e.CutOff2)
                .HasColumnType("datetime")
                .HasColumnName("cutOff2");
            entity.Property(e => e.CutOffEnt1).HasColumnName("cutOffEnt1");
            entity.Property(e => e.CutOffEnt2).HasColumnName("cutOffEnt2");
            entity.Property(e => e.CutOffRec1).HasColumnName("cutOffRec1");
            entity.Property(e => e.CutOffRec2).HasColumnName("cutOffRec2");
            entity.Property(e => e.DiaEntrega).HasColumnName("diaEntrega");
            entity.Property(e => e.DiasIb).HasColumnName("diasIB");
            entity.Property(e => e.DiasOb).HasColumnName("diasOB");
            entity.Property(e => e.DtCriacao)
                .HasColumnType("datetime")
                .HasColumnName("dtCriacao");
            entity.Property(e => e.DtUltAlt)
                .HasColumnType("datetime")
                .HasColumnName("dtUltAlt");
            entity.Property(e => e.HoraEntrega)
                .HasColumnType("datetime")
                .HasColumnName("horaEntrega");
            entity.Property(e => e.HoraLimite)
                .HasColumnType("datetime")
                .HasColumnName("horaLimite");
            entity.Property(e => e.HoraLimiteRec).HasColumnName("horaLimiteRec");
            entity.Property(e => e.IdCpostal).HasColumnName("idCPostal");
            entity.Property(e => e.IdEntidade).HasColumnName("idEntidade");
            entity.Property(e => e.IdEquipaComercial).HasColumnName("idEquipaComercial");
            entity.Property(e => e.IdPais).HasColumnName("idPais");
            entity.Property(e => e.IdPlatZona).HasColumnName("idPlatZona");
            entity.Property(e => e.IdPlataforma).HasColumnName("idPlataforma");
            entity.Property(e => e.IdPlataformaCtrl).HasColumnName("idPlataformaCtrl");
            entity.Property(e => e.IdRota).HasColumnName("idRota");
            entity.Property(e => e.IdUtilCriacao).HasColumnName("idUtilCriacao");
            entity.Property(e => e.IdUtilUltAlt).HasColumnName("idUtilUltAlt");
            entity.Property(e => e.IdZonaPais).HasColumnName("idZonaPais");
        });

        modelBuilder.Entity<CodigosPostaisEntidadesBk>(entity =>
        {
            entity
                .HasNoKey()
                .ToTable("CodigosPostaisEntidades_BK");

            entity.Property(e => e.Activo).HasColumnName("activo");
            entity.Property(e => e.Conecta).HasColumnName("conecta");
            entity.Property(e => e.CutOff1)
                .HasColumnType("datetime")
                .HasColumnName("cutOff1");
            entity.Property(e => e.CutOff2)
                .HasColumnType("datetime")
                .HasColumnName("cutOff2");
            entity.Property(e => e.CutOffEnt1).HasColumnName("cutOffEnt1");
            entity.Property(e => e.CutOffEnt2).HasColumnName("cutOffEnt2");
            entity.Property(e => e.CutOffRec1).HasColumnName("cutOffRec1");
            entity.Property(e => e.CutOffRec2).HasColumnName("cutOffRec2");
            entity.Property(e => e.DiaEntrega).HasColumnName("diaEntrega");
            entity.Property(e => e.DiasIb).HasColumnName("diasIB");
            entity.Property(e => e.DiasOb).HasColumnName("diasOB");
            entity.Property(e => e.DtCriacao)
                .HasColumnType("datetime")
                .HasColumnName("dtCriacao");
            entity.Property(e => e.DtUltAlt)
                .HasColumnType("datetime")
                .HasColumnName("dtUltAlt");
            entity.Property(e => e.HoraEntrega)
                .HasColumnType("datetime")
                .HasColumnName("horaEntrega");
            entity.Property(e => e.HoraLimite)
                .HasColumnType("datetime")
                .HasColumnName("horaLimite");
            entity.Property(e => e.HoraLimiteRec).HasColumnName("horaLimiteRec");
            entity.Property(e => e.IdCpostal).HasColumnName("idCPostal");
            entity.Property(e => e.IdEntidade).HasColumnName("idEntidade");
            entity.Property(e => e.IdEquipaComercial).HasColumnName("idEquipaComercial");
            entity.Property(e => e.IdPais).HasColumnName("idPais");
            entity.Property(e => e.IdPlatZona).HasColumnName("idPlatZona");
            entity.Property(e => e.IdPlataforma).HasColumnName("idPlataforma");
            entity.Property(e => e.IdPlataformaCtrl).HasColumnName("idPlataformaCtrl");
            entity.Property(e => e.IdRota).HasColumnName("idRota");
            entity.Property(e => e.IdUtilCriacao).HasColumnName("idUtilCriacao");
            entity.Property(e => e.IdUtilUltAlt).HasColumnName("idUtilUltAlt");
            entity.Property(e => e.IdZonaPais).HasColumnName("idZonaPais");
        });

        modelBuilder.Entity<CodigosPostaisRoutingLabel>(entity =>
        {
            entity.HasKey(e => e.IdCpostal);

            entity.ToTable("CodigosPostaisRoutingLabel");

            entity.Property(e => e.IdCpostal)
                .ValueGeneratedNever()
                .HasColumnName("idCPostal");
            entity.Property(e => e.DtIntrod)
                .HasColumnType("datetime")
                .HasColumnName("dtIntrod");
            entity.Property(e => e.DtUltAct)
                .HasColumnType("datetime")
                .HasColumnName("dtUltAct");
            entity.Property(e => e.IdUtilIntrod).HasColumnName("idUtilIntrod");
            entity.Property(e => e.IdUtilUltAct).HasColumnName("idUtilUltAct");
            entity.Property(e => e.NoonCode).HasMaxLength(20);
            entity.Property(e => e.RoutingCode).HasMaxLength(20);
        });

        modelBuilder.Entity<CodigosPostaisT>(entity =>
        {
            entity.HasKey(e => e.Id).HasName("PK_T_CodigosPostais_1");

            entity.ToTable("CodigosPostais_T");

            entity.HasIndex(e => new { e.IdPais, e.Activo, e.Cpostal }, "Idx_idPais_activo_cpostal").HasFillFactor(80);

            entity.HasIndex(e => e.Activo, "idx_activo_cp4_cp3_idpais").HasFillFactor(80);

            entity.HasIndex(e => new { e.Cp4, e.Cp3 }, "idx_cp4cp3").HasFillFactor(80);

            entity.HasIndex(e => e.Cpostal, "idx_cpostal").HasFillFactor(80);

            entity.Property(e => e.Id).HasColumnName("id");
            entity.Property(e => e.Activo)
                .IsRequired()
                .HasDefaultValueSql("((1))")
                .HasColumnName("activo");
            entity.Property(e => e.Cp3)
                .HasMaxLength(10)
                .HasColumnName("CP3");
            entity.Property(e => e.Cp4)
                .HasMaxLength(20)
                .HasColumnName("CP4");
            entity.Property(e => e.Cp7l)
                .HasMaxLength(44)
                .HasColumnName("CP7L");
            entity.Property(e => e.Cpostal)
                .HasMaxLength(30)
                .HasColumnName("cpostal");
            entity.Property(e => e.DtCriacao)
                .HasDefaultValueSql("(getdate())")
                .HasColumnType("datetime")
                .HasColumnName("dtCriacao");
            entity.Property(e => e.DtUltAlt)
                .HasColumnType("datetime")
                .HasColumnName("dtUltAlt");
            entity.Property(e => e.IdDistrito).HasColumnName("idDistrito");
            entity.Property(e => e.IdIvareg).HasColumnName("idIVAReg");
            entity.Property(e => e.IdPais).HasColumnName("idPais");
            entity.Property(e => e.IdUtilCriacao)
                .HasDefaultValueSql("((777))")
                .HasColumnName("idUtilCriacao");
            entity.Property(e => e.IdUtilUltAlt).HasColumnName("idUtilUltAlt");
            entity.Property(e => e.Localidade).HasMaxLength(50);
        });

        modelBuilder.Entity<CodigosPostaisTntstation>(entity =>
        {
            entity.HasKey(e => e.Id).HasName("PK__CodigosP__3213E83F5A2D58A9");

            entity.ToTable("CodigosPostaisTNTStations");

            entity.Property(e => e.Id).HasColumnName("id");
            entity.Property(e => e.CpostalIni)
                .HasMaxLength(7)
                .HasColumnName("cpostalIni");
            entity.Property(e => e.Cpostalfim)
                .HasMaxLength(7)
                .HasColumnName("cpostalfim");
            entity.Property(e => e.Station)
                .HasMaxLength(3)
                .HasColumnName("station");
            entity.Property(e => e.Town)
                .HasMaxLength(50)
                .HasColumnName("town");
        });

        modelBuilder.Entity<CodigosPostaisTotalT>(entity =>
        {
            entity.ToTable("CodigosPostais_Total_T");

            entity.Property(e => e.Id).HasColumnName("id");
            entity.Property(e => e.Activo).HasColumnName("activo");
            entity.Property(e => e.Concelho).HasMaxLength(35);
            entity.Property(e => e.Cp3)
                .HasMaxLength(3)
                .HasColumnName("CP3");
            entity.Property(e => e.Cp4)
                .HasMaxLength(4)
                .HasColumnName("CP4");
            entity.Property(e => e.Cpostal)
                .HasMaxLength(15)
                .HasColumnName("cpostal");
            entity.Property(e => e.Distrito).HasMaxLength(35);
            entity.Property(e => e.IdPais).HasColumnName("idPais");
            entity.Property(e => e.LocalCp)
                .HasMaxLength(35)
                .HasColumnName("LocalCP");
            entity.Property(e => e.Localidade).HasMaxLength(35);
            entity.Property(e => e.Morada).HasMaxLength(75);
        });

        modelBuilder.Entity<CodigosPostaisZonasPaisT>(entity =>
        {
            entity.HasKey(e => e.Id).HasName("PK_CodigosPostaisZonas_T");

            entity.ToTable("CodigosPostaisZonasPais_T");

            entity.Property(e => e.Id).HasColumnName("id");
            entity.Property(e => e.Activo).HasColumnName("activo");
            entity.Property(e => e.Descricao)
                .HasMaxLength(50)
                .HasColumnName("descricao");
            entity.Property(e => e.IdPais).HasColumnName("idPais");
            entity.Property(e => e.Sigla)
                .HasMaxLength(5)
                .HasColumnName("sigla");
        });

        modelBuilder.Entity<CodigosTabelasT>(entity =>
        {
            entity.HasKey(e => e.Id).HasName("PK__CodigosT__3213E83F6AB8207D");

            entity.ToTable("CodigosTabelas_T");

            entity.HasIndex(e => new { e.CodigoGeral, e.Activo }, "NonClusteredIndex-codigogeral");

            entity.Property(e => e.Id).HasColumnName("id");
            entity.Property(e => e.Activo).HasColumnName("activo");
            entity.Property(e => e.Codigo)
                .HasMaxLength(100)
                .HasColumnName("codigo");
            entity.Property(e => e.CodigoGeral)
                .HasMaxLength(100)
                .HasColumnName("codigoGeral");
            entity.Property(e => e.IdCodigo)
                .HasMaxLength(100)
                .HasColumnName("idCodigo");
            entity.Property(e => e.Valor)
                .HasMaxLength(100)
                .HasColumnName("valor");
        });

        modelBuilder.Entity<CodigospostaisTBackup>(entity =>
        {
            entity
                .HasNoKey()
                .ToTable("codigospostais_t_backup");

            entity.Property(e => e.Activo).HasColumnName("activo");
            entity.Property(e => e.Conecta).HasColumnName("conecta");
            entity.Property(e => e.Cp3)
                .HasMaxLength(10)
                .HasColumnName("CP3");
            entity.Property(e => e.Cp4)
                .HasMaxLength(20)
                .HasColumnName("CP4");
            entity.Property(e => e.Cp7l)
                .HasMaxLength(44)
                .HasColumnName("CP7L");
            entity.Property(e => e.Cpostal)
                .HasMaxLength(30)
                .HasColumnName("cpostal");
            entity.Property(e => e.CutOff1)
                .HasColumnType("datetime")
                .HasColumnName("cutOff1");
            entity.Property(e => e.CutOff2)
                .HasColumnType("datetime")
                .HasColumnName("cutOff2");
            entity.Property(e => e.DiaEntrega).HasColumnName("diaEntrega");
            entity.Property(e => e.DiasIb).HasColumnName("diasIB");
            entity.Property(e => e.DiasOb).HasColumnName("diasOB");
            entity.Property(e => e.DtCriacao)
                .HasColumnType("datetime")
                .HasColumnName("dtCriacao");
            entity.Property(e => e.DtUltAlt)
                .HasColumnType("datetime")
                .HasColumnName("dtUltAlt");
            entity.Property(e => e.HoraEntrega)
                .HasColumnType("datetime")
                .HasColumnName("horaEntrega");
            entity.Property(e => e.HoraLimite)
                .HasColumnType("datetime")
                .HasColumnName("horaLimite");
            entity.Property(e => e.Id)
                .ValueGeneratedOnAdd()
                .HasColumnName("id");
            entity.Property(e => e.IdDistrito).HasColumnName("idDistrito");
            entity.Property(e => e.IdEquipaComercial).HasColumnName("idEquipaComercial");
            entity.Property(e => e.IdIvareg).HasColumnName("idIVAReg");
            entity.Property(e => e.IdPais).HasColumnName("idPais");
            entity.Property(e => e.IdPlataforma).HasColumnName("idPlataforma");
            entity.Property(e => e.IdRota).HasColumnName("idRota");
            entity.Property(e => e.IdUtilCriacao).HasColumnName("idUtilCriacao");
            entity.Property(e => e.IdUtilUltAlt).HasColumnName("idUtilUltAlt");
            entity.Property(e => e.IdZonaPais).HasColumnName("idZonaPais");
            entity.Property(e => e.Localidade).HasMaxLength(50);
        });

        modelBuilder.Entity<CompanhiaAereaT>(entity =>
        {
            entity.ToTable("CompanhiaAerea_T");

            entity.Property(e => e.Id).HasColumnName("id");
            entity.Property(e => e.Activo).HasColumnName("activo");
            entity.Property(e => e.Nome)
                .HasMaxLength(50)
                .HasColumnName("nome");
        });

        modelBuilder.Entity<ConferenciaCustosDestinatario>(entity =>
        {
            entity.HasIndex(e => e.IdConferenciaCustosEnvios, "idx_idConferenciaCustosEnvios");

            entity.Property(e => e.Cidade).HasMaxLength(30);
            entity.Property(e => e.CodigoPostal).HasMaxLength(10);
            entity.Property(e => e.Companhia).HasMaxLength(35);
            entity.Property(e => e.EnderecoLinha1).HasMaxLength(35);
            entity.Property(e => e.EnderecoLinha2).HasMaxLength(35);
            entity.Property(e => e.Estado).HasMaxLength(2);
            entity.Property(e => e.IdConferenciaCustosEnvios).HasColumnName("idConferenciaCustosEnvios");
            entity.Property(e => e.ImportObjectName).HasMaxLength(50);
            entity.Property(e => e.NomeContacto).HasMaxLength(35);
            entity.Property(e => e.SiglaPais).HasMaxLength(2);
        });

        modelBuilder.Entity<ConferenciaCustosEntrega>(entity =>
        {
            entity.ToTable("ConferenciaCustosEntrega");

            entity.Property(e => e.Assinatura).HasMaxLength(22);
            entity.Property(e => e.CodigoEntrega).HasMaxLength(1);
            entity.Property(e => e.DataEntrega).HasColumnType("datetime");
            entity.Property(e => e.IdConferenciaCustosEnvios).HasColumnName("idConferenciaCustosEnvios");
            entity.Property(e => e.ImportObjectName).HasMaxLength(50);
            entity.Property(e => e.PrimeiraTentativa).HasColumnType("datetime");
        });

        modelBuilder.Entity<ConferenciaCustosEnvio>(entity =>
        {
            entity.HasIndex(e => new { e.Awb, e.TipoServico }, "IX_ConferenciaCustosEnvios_AWB_TipoServico").HasFillFactor(80);

            entity.HasIndex(e => e.IdConferenciaCustosFactura, "IX_ConferenciaCustosEnvios_idConferenciaCustosFactura").HasFillFactor(80);

            entity.HasIndex(e => e.IdConferenciaCustosFactura, "idX_idConferenciaCustosFactura");

            entity.HasIndex(e => new { e.TipoServico, e.ImportObjectName, e.DataEnvio }, "idx_TipoServico_ImportObjectName_DataEnvio");

            entity.Property(e => e.Awb)
                .HasMaxLength(50)
                .HasColumnName("AWB");
            entity.Property(e => e.Conferida).HasColumnName("conferida");
            entity.Property(e => e.CustoDadosDlink)
                .HasColumnType("money")
                .HasColumnName("CustoDadosDLink");
            entity.Property(e => e.CustoPrevisto).HasColumnType("money");
            entity.Property(e => e.CustoPrevistoOriginal).HasColumnType("money");
            entity.Property(e => e.CustoReal).HasColumnType("money");
            entity.Property(e => e.DataEnvio).HasColumnType("datetime");
            entity.Property(e => e.DtConferida)
                .HasColumnType("datetime")
                .HasColumnName("dtConferida");
            entity.Property(e => e.Euvatnumber)
                .HasMaxLength(25)
                .HasColumnName("EUVATNumber");
            entity.Property(e => e.IdCliente).HasColumnName("idCliente");
            entity.Property(e => e.IdConferenciaCustosFactura).HasColumnName("idConferenciaCustosFactura");
            entity.Property(e => e.IdLocPagaTransporte).HasColumnName("idLocPagaTransporte");
            entity.Property(e => e.IdManifesto).HasColumnName("idManifesto");
            entity.Property(e => e.IdMoeda).HasColumnName("idMoeda");
            entity.Property(e => e.IdServico).HasColumnName("idServico");
            entity.Property(e => e.IdTipoConferencia).HasColumnName("idTipoConferencia");
            entity.Property(e => e.IdUtilConferida).HasColumnName("idUtilConferida");
            entity.Property(e => e.ImportObjectName).HasMaxLength(50);
            entity.Property(e => e.Observacoes).HasMaxLength(200);
            entity.Property(e => e.PesoFacturado).HasColumnType("decimal(7, 1)");
            entity.Property(e => e.PesoOriginal).HasColumnType("decimal(7, 1)");
            entity.Property(e => e.Referencia1).HasMaxLength(40);
            entity.Property(e => e.Referencia2).HasMaxLength(30);
            entity.Property(e => e.Referencia3).HasMaxLength(30);
            entity.Property(e => e.TipoServico).HasMaxLength(2);
            entity.Property(e => e.UnidadePeso).HasMaxLength(1);
            entity.Property(e => e.ValorFactDadosDlink)
                .HasColumnType("money")
                .HasColumnName("ValorFactDadosDLink");
            entity.Property(e => e.ValorFacturado).HasColumnType("money");
            entity.Property(e => e.ValorFacturadoOriginal).HasColumnType("money");
            entity.Property(e => e.ValorLiquido).HasColumnType("money");
        });

        modelBuilder.Entity<ConferenciaCustosExpedidore>(entity =>
        {
            entity.HasIndex(e => e.IdConferenciaCustosEnvios, "idx_idConferenciaCustosEnvios");

            entity.Property(e => e.Cidade).HasMaxLength(30);
            entity.Property(e => e.CodigoPostal).HasMaxLength(10);
            entity.Property(e => e.Companhia).HasMaxLength(35);
            entity.Property(e => e.EnderecoLinha1).HasMaxLength(35);
            entity.Property(e => e.EnderecoLinha2).HasMaxLength(35);
            entity.Property(e => e.Estado).HasMaxLength(2);
            entity.Property(e => e.IdConferenciaCustosEnvios).HasColumnName("idConferenciaCustosEnvios");
            entity.Property(e => e.ImportObjectName).HasMaxLength(50);
            entity.Property(e => e.NomeContacto).HasMaxLength(35);
            entity.Property(e => e.SiglaPais).HasMaxLength(2);
        });

        modelBuilder.Entity<ConferenciaCustosFactura>(entity =>
        {
            entity.Property(e => e.Id).HasColumnName("id");
            entity.Property(e => e.CodigoResolucao).HasMaxLength(1);
            entity.Property(e => e.CodigoResolucaoMotivo).HasMaxLength(3);
            entity.Property(e => e.DataDocumento).HasColumnType("datetime");
            entity.Property(e => e.DtIntrod)
                .HasColumnType("datetime")
                .HasColumnName("dtIntrod");
            entity.Property(e => e.IdCliente).HasColumnName("idCliente");
            entity.Property(e => e.IdEntidade).HasColumnName("idEntidade");
            entity.Property(e => e.IdMoeda)
                .HasMaxLength(3)
                .HasColumnName("idMoeda");
            entity.Property(e => e.ImportObjectName).HasMaxLength(50);
            entity.Property(e => e.NumContaAfacturar)
                .HasMaxLength(12)
                .HasColumnName("NumContaAFacturar");
            entity.Property(e => e.NumeroDocumento).HasMaxLength(15);
            entity.Property(e => e.PaisFacturacao).HasMaxLength(2);
            entity.Property(e => e.TipoDocumento).HasMaxLength(1);
            entity.Property(e => e.ValorCreditado).HasColumnType("decimal(16, 2)");
            entity.Property(e => e.ValorOriginalAjuste).HasMaxLength(3);
            entity.Property(e => e.ValorReclamado).HasColumnType("decimal(16, 2)");
            entity.Property(e => e.ValorTotal).HasColumnType("money");
            entity.Property(e => e.ValorTotalAjustado).HasColumnType("decimal(16, 2)");
        });

        modelBuilder.Entity<ConferenciaCustosFedEx>(entity =>
        {
            entity.ToTable("ConferenciaCustosFedEx");

            entity.HasIndex(e => e.Conferida, "Idx_Conferida").HasFillFactor(80);

            entity.HasIndex(e => e.TipoServico, "Idx_TipoServico").HasFillFactor(80);

            entity.HasIndex(e => e.IdDlinkInvoice, "idx_idDLinkInvoice");

            entity.HasIndex(e => e.IdDlinkShipment, "idx_idDLinkShipment").HasFillFactor(80);

            entity.HasIndex(e => e.IdExportacao, "idx_idExportacao").HasFillFactor(80);

            entity.HasIndex(e => e.IdImportacao, "idx_idImportacao").HasFillFactor(80);

            entity.HasIndex(e => new { e.IdManifesto, e.TipoServico }, "idx_idManifesto_tipoServico").HasFillFactor(80);

            entity.HasIndex(e => new { e.IdDlinkShipment, e.TipoServico, e.IdExportacao, e.IdImportacao, e.Conferida }, "idx_idTipoServico_shipment").HasFillFactor(80);

            entity.HasIndex(e => new { e.Awbnumber, e.TipoServico }, "idx_tiposervico_awb").HasFillFactor(80);

            entity.Property(e => e.Id).HasColumnName("id");
            entity.Property(e => e.Awbnumber)
                .HasMaxLength(20)
                .HasColumnName("awbnumber");
            entity.Property(e => e.Conferida)
                .HasDefaultValueSql("((0))")
                .HasColumnName("conferida");
            entity.Property(e => e.CustoCreditado)
                .HasColumnType("money")
                .HasColumnName("custoCreditado");
            entity.Property(e => e.CustoDadosDlink)
                .HasColumnType("money")
                .HasColumnName("custoDadosDLink");
            entity.Property(e => e.CustoPrevisto)
                .HasColumnType("money")
                .HasColumnName("custoPrevisto");
            entity.Property(e => e.CustoPrevistoOriginal)
                .HasColumnType("money")
                .HasColumnName("custoPrevistoOriginal");
            entity.Property(e => e.CustoReal)
                .HasColumnType("money")
                .HasColumnName("custoReal");
            entity.Property(e => e.CustoReclamado)
                .HasColumnType("money")
                .HasColumnName("custoReclamado");
            entity.Property(e => e.DtConferida)
                .HasColumnType("datetime")
                .HasColumnName("dtConferida");
            entity.Property(e => e.DtCustoCreditado)
                .HasColumnType("datetime")
                .HasColumnName("dtCustoCreditado");
            entity.Property(e => e.DtCustoReclamado)
                .HasColumnType("datetime")
                .HasColumnName("dtCustoReclamado");
            entity.Property(e => e.DtFactura)
                .HasColumnType("datetime")
                .HasColumnName("dtFactura");
            entity.Property(e => e.Factura)
                .HasMaxLength(15)
                .HasColumnName("factura");
            entity.Property(e => e.IdDlinkInvoice).HasColumnName("idDLinkInvoice");
            entity.Property(e => e.IdDlinkShipment).HasColumnName("idDLinkShipment");
            entity.Property(e => e.IdExportacao).HasColumnName("idExportacao");
            entity.Property(e => e.IdImportacao).HasColumnName("idImportacao");
            entity.Property(e => e.IdManifesto).HasColumnName("idManifesto");
            entity.Property(e => e.IdTipoConferencia).HasColumnName("idTipoConferencia");
            entity.Property(e => e.IdUtilConferida).HasColumnName("idUtilConferida");
            entity.Property(e => e.Observacoes)
                .HasMaxLength(200)
                .HasColumnName("observacoes");
            entity.Property(e => e.TipoServico)
                .HasMaxLength(1)
                .HasColumnName("tipoServico");
            entity.Property(e => e.ValorFactDadosDlink)
                .HasColumnType("money")
                .HasColumnName("valorFactDadosDLink");
            entity.Property(e => e.ValorFacturado)
                .HasColumnType("money")
                .HasColumnName("valorFacturado");
            entity.Property(e => e.ValorFacturadoOriginal)
                .HasColumnType("money")
                .HasColumnName("valorFacturadoOriginal");
        });

        modelBuilder.Entity<ConferenciaCustosFedExReclamaLog>(entity =>
        {
            entity.ToTable("ConferenciaCustosFedExReclamaLog");

            entity.Property(e => e.Id).HasColumnName("id");
            entity.Property(e => e.Credito)
                .HasColumnType("money")
                .HasColumnName("credito");
            entity.Property(e => e.DtIntrod)
                .HasColumnType("datetime")
                .HasColumnName("dtIntrod");
            entity.Property(e => e.IdConf).HasColumnName("idConf");
            entity.Property(e => e.IdUtilIntrod).HasColumnName("idUtilIntrod");
            entity.Property(e => e.Observacoes)
                .HasMaxLength(500)
                .HasColumnName("observacoes");
        });

        modelBuilder.Entity<ConferenciaCustosFedExTiposT>(entity =>
        {
            entity.ToTable("ConferenciaCustosFedExTipos_T");

            entity.Property(e => e.Id).HasColumnName("id");
            entity.Property(e => e.CentroCusto)
                .HasMaxLength(50)
                .HasColumnName("centroCusto");
            entity.Property(e => e.Codigo)
                .HasMaxLength(2)
                .HasColumnName("codigo");
            entity.Property(e => e.Descricao)
                .HasMaxLength(50)
                .HasColumnName("descricao");
        });

        modelBuilder.Entity<ConferenciaCustosFedexReclamaco>(entity =>
        {
            entity.HasIndex(e => e.IdConf, "IDX_idConferencia").HasFillFactor(80);

            entity.Property(e => e.Id).HasColumnName("id");
            entity.Property(e => e.CustoCreditado)
                .HasColumnType("money")
                .HasColumnName("custoCreditado");
            entity.Property(e => e.CustoReclamado)
                .HasColumnType("money")
                .HasColumnName("custoReclamado");
            entity.Property(e => e.DtCustoCreditado)
                .HasColumnType("datetime")
                .HasColumnName("dtCustoCreditado");
            entity.Property(e => e.DtCustoReclamado)
                .HasColumnType("datetime")
                .HasColumnName("dtCustoReclamado");
            entity.Property(e => e.DtIntrod)
                .HasDefaultValueSql("(getdate())")
                .HasColumnType("datetime")
                .HasColumnName("dtIntrod");
            entity.Property(e => e.DtUltAct)
                .HasColumnType("datetime")
                .HasColumnName("dtUltAct");
            entity.Property(e => e.Encerrada).HasColumnName("encerrada");
            entity.Property(e => e.IdConf).HasColumnName("idConf");
            entity.Property(e => e.IdUtilIntrod).HasColumnName("idUtilIntrod");
            entity.Property(e => e.IdUtilUltAct).HasColumnName("idUtilUltAct");
            entity.Property(e => e.ObsCreditado)
                .HasMaxLength(500)
                .HasColumnName("obsCreditado");
            entity.Property(e => e.ObsReclamado)
                .HasMaxLength(500)
                .HasColumnName("obsReclamado");
        });

        modelBuilder.Entity<ConferenciaCustosItem>(entity =>
        {
            entity.HasIndex(e => e.IdConferenciaCustosEnvios, "Idx_idConferenciaCustosEnvios");

            entity.Property(e => e.Description).HasMaxLength(50);
            entity.Property(e => e.IdConferenciaCustosEnvios).HasColumnName("idConferenciaCustosEnvios");
            entity.Property(e => e.IdServicoDet).HasColumnName("idServicoDet");
            entity.Property(e => e.ImportObjectName).HasMaxLength(50);
            entity.Property(e => e.Valor).HasColumnType("money");
        });

        modelBuilder.Entity<ConferenciaCustosVolume>(entity =>
        {
            entity.HasIndex(e => e.IdConferenciaCustosEnvios, "IDX_CCVol_idConfCustoEnvio");

            entity.Property(e => e.IdConferenciaCustosEnvios).HasColumnName("idConferenciaCustosEnvios");
            entity.Property(e => e.ImportObjectName).HasMaxLength(50);
            entity.Property(e => e.Moeda).HasMaxLength(3);
            entity.Property(e => e.Peso).HasColumnType("decimal(7, 1)");
            entity.Property(e => e.PesoOriginal).HasColumnType("decimal(7, 1)");
            entity.Property(e => e.UnidadeMedida).HasMaxLength(3);
            entity.Property(e => e.UnidadePeso).HasMaxLength(1);
            entity.Property(e => e.ValorAlfandega).HasColumnType("money");
        });

        modelBuilder.Entity<ConferenciaTiposT>(entity =>
        {
            entity.ToTable("ConferenciaTipos_T");

            entity.Property(e => e.Id).HasColumnName("id");
            entity.Property(e => e.Aceita).HasColumnName("aceita");
            entity.Property(e => e.Automatico).HasColumnName("automatico");
            entity.Property(e => e.Codigo)
                .HasMaxLength(50)
                .HasColumnName("codigo");
            entity.Property(e => e.Descricao)
                .HasMaxLength(50)
                .HasColumnName("descricao");
            entity.Property(e => e.Factura).HasColumnName("factura");
            entity.Property(e => e.ObrigaObs).HasColumnName("obrigaObs");
            entity.Property(e => e.Reclama).HasColumnName("reclama");
            entity.Property(e => e.Visivel).HasColumnName("visivel");
        });

        modelBuilder.Entity<ConferenciaTxDespAlf>(entity =>
        {
            entity.ToTable("ConferenciaTxDespAlf");

            entity.Property(e => e.Id).HasColumnName("id");
            entity.Property(e => e.Activo).HasColumnName("activo");
            entity.Property(e => e.DtFim)
                .HasColumnType("datetime")
                .HasColumnName("dtFim");
            entity.Property(e => e.DtInicio)
                .HasColumnType("datetime")
                .HasColumnName("dtInicio");
            entity.Property(e => e.IdEntidade).HasColumnName("idEntidade");
            entity.Property(e => e.IdMoeda).HasColumnName("idMoeda");
            entity.Property(e => e.TxDespAlf)
                .HasColumnType("money")
                .HasColumnName("txDespAlf");
        });

        modelBuilder.Entity<Consolidado>(entity =>
        {
            entity.HasNoKey();

            entity.Property(e => e.Activo)
                .IsRequired()
                .HasDefaultValueSql("((1))")
                .HasColumnName("activo");
            entity.Property(e => e.Awb)
                .HasMaxLength(50)
                .HasColumnName("awb");
            entity.Property(e => e.Consolidado1)
                .HasMaxLength(25)
                .HasColumnName("consolidado");
            entity.Property(e => e.DtInsert)
                .HasColumnType("date")
                .HasColumnName("dtInsert");
            entity.Property(e => e.Id)
                .ValueGeneratedOnAdd()
                .HasColumnName("id");
            entity.Property(e => e.Idempresa).HasColumnName("idempresa");
            entity.Property(e => e.Linehaul).HasColumnName("linehaul");
        });

        modelBuilder.Entity<ConsolidadosTipoT>(entity =>
        {
            entity.HasKey(e => e.Id).HasName("PK__Consolid__3213E83F1EFDE393");

            entity.ToTable("ConsolidadosTipo_T");

            entity.Property(e => e.Id).HasColumnName("id");
            entity.Property(e => e.Activo).HasColumnName("activo");
            entity.Property(e => e.Codigo)
                .HasMaxLength(15)
                .HasColumnName("codigo");
            entity.Property(e => e.Descricao)
                .HasMaxLength(100)
                .HasColumnName("descricao");
            entity.Property(e => e.DtIntrod)
                .HasColumnType("datetime")
                .HasColumnName("dtIntrod");
            entity.Property(e => e.IdUtilItrod).HasColumnName("idUtilItrod");
        });

        modelBuilder.Entity<ConsumosClatLog>(entity =>
        {
            entity
                .HasNoKey()
                .ToTable("ConsumosCLAT_Log");

            entity.Property(e => e.CodPostalDest)
                .HasMaxLength(50)
                .IsUnicode(false);
            entity.Property(e => e.CodPostalRecolha)
                .HasMaxLength(50)
                .IsUnicode(false);
            entity.Property(e => e.ContactoDestino)
                .HasMaxLength(50)
                .IsUnicode(false);
            entity.Property(e => e.ContactoRecolha)
                .HasMaxLength(50)
                .IsUnicode(false);
            entity.Property(e => e.DataEnvioCliente)
                .HasDefaultValueSql("(getdate())")
                .HasColumnType("datetime");
            entity.Property(e => e.DataServico)
                .HasMaxLength(50)
                .IsUnicode(false);
            entity.Property(e => e.Destinatario)
                .HasMaxLength(50)
                .IsUnicode(false);
            entity.Property(e => e.IdExportacao).HasColumnName("idExportacao");
            entity.Property(e => e.IdManifesto).HasColumnName("idManifesto");
            entity.Property(e => e.Localidade)
                .HasMaxLength(50)
                .IsUnicode(false);
            entity.Property(e => e.LocalidadeRecolha)
                .HasMaxLength(50)
                .IsUnicode(false);
            entity.Property(e => e.Morada)
                .HasMaxLength(50)
                .IsUnicode(false);
            entity.Property(e => e.MoradaRecolha)
                .HasMaxLength(50)
                .IsUnicode(false);
            entity.Property(e => e.Nvolumes).HasColumnName("NVolumes");
            entity.Property(e => e.Objecto)
                .HasMaxLength(50)
                .IsUnicode(false);
            entity.Property(e => e.Observacoes)
                .HasMaxLength(50)
                .IsUnicode(false);
            entity.Property(e => e.Peso).HasColumnType("money");
            entity.Property(e => e.Recolha)
                .HasMaxLength(50)
                .IsUnicode(false);
            entity.Property(e => e.Ref)
                .HasMaxLength(50)
                .IsUnicode(false);
            entity.Property(e => e.TipoExpedicao)
                .HasMaxLength(50)
                .IsUnicode(false);
            entity.Property(e => e.TipoServico)
                .HasMaxLength(50)
                .IsUnicode(false);
        });

        modelBuilder.Entity<ConsumosGologisticLog>(entity =>
        {
            entity
                .HasNoKey()
                .ToTable("ConsumosGOLOGISTIC_Log");

            entity.Property(e => e.Awb)
                .HasMaxLength(20)
                .HasColumnName("awb");
            entity.Property(e => e.Destinatario)
                .HasMaxLength(100)
                .HasColumnName("destinatario");
            entity.Property(e => e.DtIntrod)
                .HasColumnType("datetime")
                .HasColumnName("dtIntrod");
            entity.Property(e => e.IdExportacao).HasColumnName("idExportacao");
            entity.Property(e => e.IdManifesto).HasColumnName("idManifesto");
            entity.Property(e => e.Morada)
                .HasMaxLength(100)
                .HasColumnName("morada");
            entity.Property(e => e.NVolumes).HasColumnName("nVolumes");
            entity.Property(e => e.Peso)
                .HasColumnType("money")
                .HasColumnName("peso");
            entity.Property(e => e.Pod)
                .HasMaxLength(5)
                .HasColumnName("POD");
            entity.Property(e => e.Ref)
                .HasMaxLength(40)
                .HasColumnName("ref");
            entity.Property(e => e.ValorReemb)
                .HasColumnType("money")
                .HasColumnName("valorReemb");
        });

        modelBuilder.Entity<ConsumosPtcredesLog>(entity =>
        {
            entity
                .HasNoKey()
                .ToTable("ConsumosPTCREDES_Log");

            entity.HasIndex(e => e.IdManifesto, "idx_idManifesto");

            entity.Property(e => e.CodPostalDest)
                .HasMaxLength(50)
                .IsUnicode(false);
            entity.Property(e => e.CodPostalRecolha)
                .HasMaxLength(50)
                .IsUnicode(false);
            entity.Property(e => e.ContactoDestino)
                .HasMaxLength(50)
                .IsUnicode(false);
            entity.Property(e => e.ContactoRecolha)
                .HasMaxLength(50)
                .IsUnicode(false);
            entity.Property(e => e.DataEnvioCliente)
                .HasDefaultValueSql("(getdate())")
                .HasColumnType("datetime");
            entity.Property(e => e.DataServico)
                .HasMaxLength(50)
                .IsUnicode(false);
            entity.Property(e => e.Destinatario)
                .HasMaxLength(50)
                .IsUnicode(false);
            entity.Property(e => e.IdExportacao).HasColumnName("idExportacao");
            entity.Property(e => e.IdManifesto).HasColumnName("idManifesto");
            entity.Property(e => e.Localidade)
                .HasMaxLength(50)
                .IsUnicode(false);
            entity.Property(e => e.LocalidadeRecolha)
                .HasMaxLength(50)
                .IsUnicode(false);
            entity.Property(e => e.Morada)
                .HasMaxLength(50)
                .IsUnicode(false);
            entity.Property(e => e.MoradaRecolha)
                .HasMaxLength(50)
                .IsUnicode(false);
            entity.Property(e => e.Nvolumes).HasColumnName("NVolumes");
            entity.Property(e => e.Objecto)
                .HasMaxLength(50)
                .IsUnicode(false);
            entity.Property(e => e.Observacoes)
                .HasMaxLength(50)
                .IsUnicode(false);
            entity.Property(e => e.Peso).HasColumnType("money");
            entity.Property(e => e.Recolha)
                .HasMaxLength(50)
                .IsUnicode(false);
            entity.Property(e => e.Ref)
                .HasMaxLength(50)
                .IsUnicode(false);
            entity.Property(e => e.TipoExpedicao)
                .HasMaxLength(50)
                .IsUnicode(false);
            entity.Property(e => e.TipoServico)
                .HasMaxLength(50)
                .IsUnicode(false);
        });

        modelBuilder.Entity<Contencioso>(entity =>
        {
            entity.ToTable("Contencioso");

            entity.HasIndex(e => new { e.IdCliente, e.IdEntidade }, "idx_idCliente_idEntidade").HasFillFactor(80);

            entity.Property(e => e.Id).HasColumnName("id");
            entity.Property(e => e.Ano).HasColumnName("ano");
            entity.Property(e => e.Anulado).HasColumnName("anulado");
            entity.Property(e => e.Capital)
                .HasColumnType("money")
                .HasColumnName("capital");
            entity.Property(e => e.Codigo).HasColumnName("codigo");
            entity.Property(e => e.Contacto)
                .HasMaxLength(50)
                .HasColumnName("contacto");
            entity.Property(e => e.CustasAccaoDecl)
                .HasColumnType("money")
                .HasColumnName("custasAccaoDecl");
            entity.Property(e => e.CustasExecucao)
                .HasColumnType("money")
                .HasColumnName("custasExecucao");
            entity.Property(e => e.CustasInjuncao)
                .HasColumnType("money")
                .HasColumnName("custasInjuncao");
            entity.Property(e => e.DtAbertura)
                .HasColumnType("datetime")
                .HasColumnName("dtAbertura");
            entity.Property(e => e.DtIntrod)
                .HasColumnType("datetime")
                .HasColumnName("dtIntrod");
            entity.Property(e => e.Email)
                .HasMaxLength(50)
                .HasColumnName("email");
            entity.Property(e => e.Fax)
                .HasMaxLength(50)
                .HasColumnName("fax");
            entity.Property(e => e.HonorariosAdvogado)
                .HasColumnType("money")
                .HasColumnName("honorariosAdvogado");
            entity.Property(e => e.IdAdvogado).HasColumnName("idAdvogado");
            entity.Property(e => e.IdCliMorada).HasColumnName("idCliMorada");
            entity.Property(e => e.IdCliente).HasColumnName("idCliente");
            entity.Property(e => e.IdEntidade)
                .HasDefaultValueSql("((1))")
                .HasColumnName("idEntidade");
            entity.Property(e => e.IdFase).HasColumnName("idFase");
            entity.Property(e => e.IdUtilIntrod).HasColumnName("idUtilIntrod");
            entity.Property(e => e.JurosAccaoDecl)
                .HasColumnType("money")
                .HasColumnName("jurosAccaoDecl");
            entity.Property(e => e.JurosExecucao)
                .HasColumnType("money")
                .HasColumnName("jurosExecucao");
            entity.Property(e => e.JurosInjuncao)
                .HasColumnType("money")
                .HasColumnName("jurosInjuncao");
            entity.Property(e => e.Morada)
                .HasMaxLength(50)
                .HasColumnName("morada");
            entity.Property(e => e.NAccaoDecl)
                .HasMaxLength(50)
                .HasColumnName("nAccaoDecl");
            entity.Property(e => e.NExecucao)
                .HasMaxLength(50)
                .HasColumnName("nExecucao");
            entity.Property(e => e.NInjuncao)
                .HasMaxLength(50)
                .HasColumnName("nInjuncao");
            entity.Property(e => e.NProcInsolvencia)
                .HasMaxLength(50)
                .HasColumnName("nProcInsolvencia");
            entity.Property(e => e.ObsCoface)
                .HasMaxLength(500)
                .HasColumnName("obsCoface");
            entity.Property(e => e.ObsTestemunhas)
                .HasMaxLength(500)
                .HasColumnName("obsTestemunhas");
            entity.Property(e => e.ProvisaoExecucao)
                .HasColumnType("money")
                .HasColumnName("provisaoExecucao");
            entity.Property(e => e.Telefone)
                .HasMaxLength(50)
                .HasColumnName("telefone");
            entity.Property(e => e.ValorCobrado)
                .HasColumnType("money")
                .HasColumnName("valorCobrado");
            entity.Property(e => e.ValorCreditado)
                .HasColumnType("money")
                .HasColumnName("valorCreditado");
            entity.Property(e => e.ValorIncobravel)
                .HasColumnType("money")
                .HasColumnName("valorIncobravel");
            entity.Property(e => e.ValorReduzido)
                .HasColumnType("money")
                .HasColumnName("valorReduzido");
        });

        modelBuilder.Entity<ContenciosoAdvogadoT>(entity =>
        {
            entity.HasKey(e => e.Id).HasName("PK_Advogado");

            entity.ToTable("ContenciosoAdvogado_T");

            entity.Property(e => e.Id).HasColumnName("id");
            entity.Property(e => e.IdEntidade)
                .HasDefaultValueSql("(1)")
                .HasColumnName("idEntidade");
            entity.Property(e => e.Nome)
                .HasMaxLength(100)
                .HasColumnName("nome");
        });

        modelBuilder.Entity<ContenciosoDocumento>(entity =>
        {
            entity.HasKey(e => e.Id).HasName("PK_ContenciosoDocumentos");

            entity.ToTable("ContenciosoDocumento");

            entity.Property(e => e.Id).HasColumnName("id");
            entity.Property(e => e.Descricao)
                .HasMaxLength(200)
                .HasColumnName("descricao");
            entity.Property(e => e.DtElim)
                .HasColumnType("datetime")
                .HasColumnName("dtElim");
            entity.Property(e => e.DtIntrod)
                .HasColumnType("datetime")
                .HasColumnName("dtIntrod");
            entity.Property(e => e.Eliminado).HasColumnName("eliminado");
            entity.Property(e => e.IdContencioso).HasColumnName("idContencioso");
            entity.Property(e => e.IdDocumentoTipo).HasColumnName("idDocumentoTipo");
            entity.Property(e => e.IdUtilElim).HasColumnName("idUtilElim");
            entity.Property(e => e.IdUtilIntrod).HasColumnName("idUtilIntrod");
            entity.Property(e => e.Url)
                .HasMaxLength(200)
                .HasColumnName("url");
        });

        modelBuilder.Entity<ContenciosoDocumento1>(entity =>
        {
            entity.HasKey(e => e.Id).HasName("PK_ContenciosoDocumentos_1");

            entity.ToTable("ContenciosoDocumentos");

            entity.Property(e => e.Id).HasColumnName("id");
            entity.Property(e => e.Descricao)
                .HasMaxLength(50)
                .IsUnicode(false)
                .HasColumnName("descricao");
            entity.Property(e => e.DtIntrod)
                .HasColumnType("datetime")
                .HasColumnName("dtIntrod");
            entity.Property(e => e.Guid)
                .HasMaxLength(50)
                .IsUnicode(false)
                .HasColumnName("GUID");
            entity.Property(e => e.IdContencioso).HasColumnName("idContencioso");
            entity.Property(e => e.IdUtilIntrod).HasColumnName("idUtilIntrod");
            entity.Property(e => e.MimeType)
                .HasMaxLength(50)
                .IsUnicode(false)
                .HasColumnName("mimeType");
            entity.Property(e => e.Nome)
                .HasMaxLength(500)
                .IsUnicode(false)
                .HasColumnName("nome");
            entity.Property(e => e.ServerLocation)
                .HasMaxLength(250)
                .IsUnicode(false)
                .HasColumnName("serverLocation");
            entity.Property(e => e.Tamanho).HasColumnName("tamanho");
        });

        modelBuilder.Entity<ContenciosoDocumentoTipoT>(entity =>
        {
            entity.HasKey(e => e.Id).HasName("PK_ContenciosoDocumentosTipo_T");

            entity.ToTable("ContenciosoDocumentoTipo_T");

            entity.Property(e => e.Id).HasColumnName("id");
            entity.Property(e => e.Descricao)
                .HasMaxLength(100)
                .HasColumnName("descricao");
            entity.Property(e => e.IdEntidade)
                .HasDefaultValueSql("(1)")
                .HasColumnName("idEntidade");
        });

        modelBuilder.Entity<ContenciosoFase>(entity =>
        {
            entity.HasKey(e => e.Id).HasName("PK_ContenciosoFase_1");

            entity.ToTable("ContenciosoFase");

            entity.Property(e => e.Id).HasColumnName("id");
            entity.Property(e => e.DtFase)
                .HasColumnType("datetime")
                .HasColumnName("dtFase");
            entity.Property(e => e.DtIntrod)
                .HasColumnType("datetime")
                .HasColumnName("dtIntrod");
            entity.Property(e => e.IdContencioso).HasColumnName("idContencioso");
            entity.Property(e => e.IdFase).HasColumnName("idFase");
            entity.Property(e => e.IdUtilIntrod).HasColumnName("idUtilIntrod");
            entity.Property(e => e.ObsFase)
                .HasMaxLength(500)
                .HasColumnName("obsFase");
        });

        modelBuilder.Entity<ContenciosoFaseT>(entity =>
        {
            entity.HasKey(e => e.Id).HasName("PK_Fase");

            entity.ToTable("ContenciosoFase_T");

            entity.Property(e => e.Id).HasColumnName("id");
            entity.Property(e => e.Descricao)
                .HasMaxLength(30)
                .HasColumnName("descricao");
            entity.Property(e => e.Encerrado).HasColumnName("encerrado");
            entity.Property(e => e.IdEntidade)
                .HasDefaultValueSql("(1)")
                .HasColumnName("idEntidade");
        });

        modelBuilder.Entity<ContenciosoValorCobrado>(entity =>
        {
            entity.ToTable("ContenciosoValorCobrado");

            entity.Property(e => e.Id).HasColumnName("id");
            entity.Property(e => e.DtIntrod)
                .HasColumnType("datetime")
                .HasColumnName("dtIntrod");
            entity.Property(e => e.DtValorCobrado)
                .HasColumnType("datetime")
                .HasColumnName("dtValorCobrado");
            entity.Property(e => e.IdContencioso).HasColumnName("idContencioso");
            entity.Property(e => e.IdUtilIntrod).HasColumnName("idUtilIntrod");
            entity.Property(e => e.ObsValorCobrado)
                .HasMaxLength(500)
                .HasColumnName("obsValorCobrado");
            entity.Property(e => e.ValorCobrado)
                .HasColumnType("money")
                .HasColumnName("valorCobrado");
        });

        modelBuilder.Entity<ContenciosoValorCreditado>(entity =>
        {
            entity.ToTable("ContenciosoValorCreditado");

            entity.Property(e => e.Id).HasColumnName("id");
            entity.Property(e => e.DtIntrod)
                .HasColumnType("datetime")
                .HasColumnName("dtIntrod");
            entity.Property(e => e.DtValorCreditado)
                .HasColumnType("datetime")
                .HasColumnName("dtValorCreditado");
            entity.Property(e => e.IdContencioso).HasColumnName("idContencioso");
            entity.Property(e => e.IdUtilIntrod).HasColumnName("idUtilIntrod");
            entity.Property(e => e.ObsValorCreditado)
                .HasMaxLength(500)
                .HasColumnName("obsValorCreditado");
            entity.Property(e => e.ValorCreditado)
                .HasColumnType("money")
                .HasColumnName("valorCreditado");
        });

        modelBuilder.Entity<ControloPalete>(entity =>
        {
            entity.HasKey(e => e.Id).HasName("PK__Controlo__3213E83F4998BA82");

            entity.HasIndex(e => new { e.IdCliente, e.IdRota, e.Data }, "idx_idCliente_idRota_data");

            entity.Property(e => e.Id).HasColumnName("id");
            entity.Property(e => e.Data)
                .HasColumnType("datetime")
                .HasColumnName("data");
            entity.Property(e => e.Dtintrod)
                .HasColumnType("datetime")
                .HasColumnName("dtintrod");
            entity.Property(e => e.IdCliente).HasColumnName("idCliente");
            entity.Property(e => e.IdRota).HasColumnName("idRota");
            entity.Property(e => e.IdUtilIntrod).HasColumnName("idUtilIntrod");
            entity.Property(e => e.NrPaletes).HasColumnName("nrPaletes");
        });

        modelBuilder.Entity<ControloPaletesDevoluco>(entity =>
        {
            entity.HasKey(e => e.Id).HasName("PK__Controlo__3213E83F5139DC4A");

            entity.ToTable("ControloPaletes_Devolucoes");

            entity.HasIndex(e => new { e.IdCliente, e.IdManifesto, e.Entregue }, "idx_idCliente_idManifesto_entregue");

            entity.HasIndex(e => new { e.IdManifesto, e.Entregue, e.Anulada }, "idx_idManifesto");

            entity.Property(e => e.Id).HasColumnName("id");
            entity.Property(e => e.Anulada).HasColumnName("anulada");
            entity.Property(e => e.DtIntrod)
                .HasColumnType("datetime")
                .HasColumnName("dtIntrod");
            entity.Property(e => e.DtUltAct)
                .HasColumnType("datetime")
                .HasColumnName("dtUltAct");
            entity.Property(e => e.IdCliente).HasColumnName("idCliente");
            entity.Property(e => e.IdManifesto).HasColumnName("idManifesto");
            entity.Property(e => e.IdUtilUltAct).HasColumnName("idUtilUltAct");
            entity.Property(e => e.IdUtilintrod).HasColumnName("idUtilintrod");
        });

        modelBuilder.Entity<ControloPaletesTotai>(entity =>
        {
            entity.HasKey(e => e.Id).HasName("PK__Controlo__3213E83F4D694B66");

            entity.ToTable("ControloPaletes_Totais");

            entity.HasIndex(e => e.IdCliente, "idx_idCliente");

            entity.Property(e => e.Id).HasColumnName("id");
            entity.Property(e => e.IdCliente).HasColumnName("idCliente");
        });

        modelBuilder.Entity<Conversa>(entity =>
        {
            entity.HasKey(e => e.Id).HasName("PK_Conversa");

            entity.HasIndex(e => e.IdUtil, "idx_idutil").HasFillFactor(80);

            entity.Property(e => e.Id).HasColumnName("id");
            entity.Property(e => e.DtFim)
                .HasColumnType("datetime")
                .HasColumnName("dtFim");
            entity.Property(e => e.DtIntrod)
                .HasColumnType("datetime")
                .HasColumnName("dtIntrod");
            entity.Property(e => e.IdUtil).HasColumnName("idUtil");
        });

        modelBuilder.Entity<ConversasMensagen>(entity =>
        {
            entity.Property(e => e.Id).HasColumnName("id");
            entity.Property(e => e.DtIntrod)
                .HasColumnType("datetime")
                .HasColumnName("dtIntrod");
            entity.Property(e => e.IdConversa).HasColumnName("idConversa");
            entity.Property(e => e.IdUtilDest).HasColumnName("idUtilDest");
            entity.Property(e => e.Observacoes)
                .HasMaxLength(250)
                .HasColumnName("observacoes");
            entity.Property(e => e.Prio).HasColumnName("prio");
            entity.Property(e => e.Util)
                .HasMaxLength(50)
                .HasColumnName("util");
        });

        modelBuilder.Entity<ConversasMensagensLog>(entity =>
        {
            entity.HasKey(e => e.Id).HasName("PK_Mensagens");

            entity.ToTable("ConversasMensagensLog");

            entity.HasIndex(e => e.IdConversa, "idx_idconversa").HasFillFactor(80);

            entity.HasIndex(e => e.IdUtil, "idx_idutil").HasFillFactor(80);

            entity.Property(e => e.Id).HasColumnName("id");
            entity.Property(e => e.DtIntrod)
                .HasColumnType("datetime")
                .HasColumnName("dtIntrod");
            entity.Property(e => e.IdConversa).HasColumnName("idConversa");
            entity.Property(e => e.IdUtil).HasColumnName("idUtil");
            entity.Property(e => e.Observacoes)
                .HasMaxLength(250)
                .HasColumnName("observacoes");
        });

        modelBuilder.Entity<ConversasUtil>(entity =>
        {
            entity.HasKey(e => e.Id).HasName("PK_ConversaUtils");

            entity.HasIndex(e => new { e.IdConversa, e.DtFim }, "idx_idconversa").HasFillFactor(80);

            entity.HasIndex(e => e.IdUtil, "idx_idutil").HasFillFactor(80);

            entity.Property(e => e.Id).HasColumnName("id");
            entity.Property(e => e.DtFim)
                .HasColumnType("datetime")
                .HasColumnName("dtFim");
            entity.Property(e => e.DtIntrod)
                .HasColumnType("datetime")
                .HasColumnName("dtIntrod");
            entity.Property(e => e.IdConversa).HasColumnName("idConversa");
            entity.Property(e => e.IdUtil).HasColumnName("idUtil");
        });

        modelBuilder.Entity<Correio>(entity =>
        {
            entity.ToTable("Correio");

            entity.Property(e => e.Id).HasColumnName("id");
            entity.Property(e => e.Codigo)
                .HasMaxLength(20)
                .HasColumnName("codigo");
            entity.Property(e => e.DtIntrod)
                .HasDefaultValueSql("(getdate())")
                .HasColumnType("datetime")
                .HasColumnName("dtIntrod");
            entity.Property(e => e.DtRecepcao)
                .HasDefaultValueSql("(getdate())")
                .HasColumnType("datetime")
                .HasColumnName("dtRecepcao");
            entity.Property(e => e.IdCliMorada).HasColumnName("idCliMorada");
            entity.Property(e => e.IdCliente).HasColumnName("idCliente");
            entity.Property(e => e.IdDepartDest).HasColumnName("idDepartDest");
            entity.Property(e => e.IdEntidade)
                .HasDefaultValueSql("((1))")
                .HasColumnName("idEntidade");
            entity.Property(e => e.IdEstado).HasColumnName("idEstado");
            entity.Property(e => e.IdTipo).HasColumnName("idTipo");
            entity.Property(e => e.IdUtilDest).HasColumnName("idUtilDest");
            entity.Property(e => e.IdUtilIntrod).HasColumnName("idUtilIntrod");
            entity.Property(e => e.Obs)
                .HasMaxLength(200)
                .HasColumnName("obs");
        });

        modelBuilder.Entity<CorreioDetalhe>(entity =>
        {
            entity.HasNoKey();

            entity.Property(e => e.DtIntrod)
                .HasDefaultValueSql("(getdate())")
                .HasColumnType("datetime")
                .HasColumnName("dtIntrod");
            entity.Property(e => e.Id)
                .ValueGeneratedOnAdd()
                .HasColumnName("id");
            entity.Property(e => e.IdCorreio).HasColumnName("idCorreio");
            entity.Property(e => e.IdDepart).HasColumnName("idDepart");
            entity.Property(e => e.IdEstado).HasColumnName("idEstado");
            entity.Property(e => e.IdUtil).HasColumnName("idUtil");
            entity.Property(e => e.IdUtilIntrod).HasColumnName("idUtilIntrod");
            entity.Property(e => e.Obs)
                .HasMaxLength(200)
                .HasColumnName("obs");
        });

        modelBuilder.Entity<CorreioDocumento>(entity =>
        {
            entity.Property(e => e.Id).HasColumnName("id");
            entity.Property(e => e.Descricao)
                .HasMaxLength(50)
                .IsUnicode(false)
                .HasColumnName("descricao");
            entity.Property(e => e.DtIntrod)
                .HasColumnType("datetime")
                .HasColumnName("dtIntrod");
            entity.Property(e => e.Guid)
                .HasMaxLength(50)
                .IsUnicode(false)
                .HasColumnName("GUID");
            entity.Property(e => e.IdCorreio).HasColumnName("idCorreio");
            entity.Property(e => e.IdUtilIntrod).HasColumnName("idUtilIntrod");
            entity.Property(e => e.MimeType)
                .HasMaxLength(50)
                .IsUnicode(false)
                .HasColumnName("mimeType");
            entity.Property(e => e.Nome)
                .HasMaxLength(50)
                .IsUnicode(false)
                .HasColumnName("nome");
            entity.Property(e => e.ServerLocation)
                .HasMaxLength(250)
                .IsUnicode(false)
                .HasColumnName("serverLocation");
            entity.Property(e => e.Tamanho).HasColumnName("tamanho");
        });

        modelBuilder.Entity<CorreioEstadoT>(entity =>
        {
            entity
                .HasNoKey()
                .ToTable("CorreioEstado_T");

            entity.Property(e => e.Activo)
                .IsRequired()
                .HasDefaultValueSql("((1))")
                .HasColumnName("activo");
            entity.Property(e => e.Descricao)
                .HasMaxLength(100)
                .HasColumnName("descricao");
            entity.Property(e => e.Finaliza).HasColumnName("finaliza");
            entity.Property(e => e.Id)
                .ValueGeneratedOnAdd()
                .HasColumnName("id");
            entity.Property(e => e.Nome)
                .HasMaxLength(50)
                .HasColumnName("nome");
        });

        modelBuilder.Entity<CorreioTipoT>(entity =>
        {
            entity
                .HasNoKey()
                .ToTable("CorreioTipo_T");

            entity.Property(e => e.Activo)
                .IsRequired()
                .HasDefaultValueSql("((1))")
                .HasColumnName("activo");
            entity.Property(e => e.Descricao)
                .HasMaxLength(100)
                .HasColumnName("descricao");
            entity.Property(e => e.Id)
                .ValueGeneratedOnAdd()
                .HasColumnName("id");
            entity.Property(e => e.Nome)
                .HasMaxLength(30)
                .HasColumnName("nome");
        });

        modelBuilder.Entity<Cotacao>(entity =>
        {
            entity.HasKey(e => e.Id).HasName("PK_T_COT");

            entity.ToTable("Cotacao");

            entity.Property(e => e.Id).HasColumnName("id");
            entity.Property(e => e.Altura)
                .HasColumnType("money")
                .HasColumnName("altura");
            entity.Property(e => e.Anulado)
                .HasDefaultValueSql("((0))")
                .HasColumnName("anulado");
            entity.Property(e => e.Comprimento)
                .HasColumnType("money")
                .HasColumnName("comprimento");
            entity.Property(e => e.ContaFedEx).HasColumnName("contaFedEx");
            entity.Property(e => e.ContactoCot)
                .HasMaxLength(50)
                .HasColumnName("contactoCot");
            entity.Property(e => e.ContactoDest)
                .HasMaxLength(50)
                .HasColumnName("contactoDest");
            entity.Property(e => e.CpostalDest)
                .HasMaxLength(15)
                .HasColumnName("cpostalDest");
            entity.Property(e => e.DangerousGoods)
                .HasDefaultValueSql("((0))")
                .HasColumnName("dangerousGoods");
            entity.Property(e => e.DepartamentoFact)
                .HasMaxLength(50)
                .IsUnicode(false)
                .HasColumnName("departamentoFact");
            entity.Property(e => e.DtAnulacao)
                .HasColumnType("datetime")
                .HasColumnName("dtAnulacao");
            entity.Property(e => e.DtCotacao)
                .HasColumnType("datetime")
                .HasColumnName("dtCotacao");
            entity.Property(e => e.DtEnviado)
                .HasColumnType("datetime")
                .HasColumnName("dtEnviado");
            entity.Property(e => e.DtEnviadoMan)
                .HasColumnType("datetime")
                .HasColumnName("dtEnviadoMan");
            entity.Property(e => e.DtPedido)
                .HasDefaultValueSql("(getdate())")
                .HasColumnType("datetime")
                .HasColumnName("dtPedido");
            entity.Property(e => e.DtUltAct)
                .HasColumnType("datetime")
                .HasColumnName("dtUltAct");
            entity.Property(e => e.Dtrecolhido)
                .HasColumnType("datetime")
                .HasColumnName("dtrecolhido");
            entity.Property(e => e.EmpresaAlt)
                .HasMaxLength(60)
                .IsUnicode(false)
                .HasColumnName("empresaAlt");
            entity.Property(e => e.EmpresaDest)
                .HasMaxLength(100)
                .HasColumnName("empresaDest");
            entity.Property(e => e.Enviado)
                .HasDefaultValueSql("((0))")
                .HasColumnName("enviado");
            entity.Property(e => e.EnviadoMan).HasColumnName("enviadoMan");
            entity.Property(e => e.Fef)
                .HasDefaultValueSql("((0))")
                .HasColumnName("fef");
            entity.Property(e => e.Fif).HasColumnName("FIF");
            entity.Property(e => e.Fixo)
                .HasDefaultValueSql("((0))")
                .HasColumnName("fixo");
            entity.Property(e => e.HoraAtribuicao)
                .HasColumnType("datetime")
                .HasColumnName("horaAtribuicao");
            entity.Property(e => e.HoraDisponivel)
                .HasColumnType("datetime")
                .HasColumnName("horaDisponivel");
            entity.Property(e => e.HoraFecho)
                .HasColumnType("datetime")
                .HasColumnName("horaFecho");
            entity.Property(e => e.IdClasseOrigem).HasColumnName("idClasseOrigem");
            entity.Property(e => e.IdCliMorada).HasColumnName("idCliMorada");
            entity.Property(e => e.IdCliMoradaPaga).HasColumnName("idCliMoradaPaga");
            entity.Property(e => e.IdCliente).HasColumnName("idCliente");
            entity.Property(e => e.IdCpostal).HasColumnName("idCpostal");
            entity.Property(e => e.IdCpostalDest).HasColumnName("idCPostalDest");
            entity.Property(e => e.IdDestinatario).HasColumnName("idDestinatario");
            entity.Property(e => e.IdDistribuidor)
                .HasDefaultValueSql("((1))")
                .HasColumnName("idDistribuidor");
            entity.Property(e => e.IdEntidade).HasColumnName("idEntidade");
            entity.Property(e => e.IdGps).HasColumnName("idGps");
            entity.Property(e => e.IdLocalPagamento).HasColumnName("idLocalPagamento");
            entity.Property(e => e.IdMotivo).HasColumnName("idMotivo");
            entity.Property(e => e.IdOrigem).HasColumnName("idOrigem");
            entity.Property(e => e.IdPaisDestino).HasColumnName("idPaisDestino");
            entity.Property(e => e.IdPaisOrigem).HasColumnName("idPaisOrigem");
            entity.Property(e => e.IdPaisPaga).HasColumnName("idPaisPaga");
            entity.Property(e => e.IdPlataforma).HasColumnName("idPlataforma");
            entity.Property(e => e.IdRota)
                .HasDefaultValueSql("((0))")
                .HasColumnName("idRota");
            entity.Property(e => e.IdSegmento).HasColumnName("idSegmento");
            entity.Property(e => e.IdServico).HasColumnName("idServico");
            entity.Property(e => e.IdTipoDangGoods).HasColumnName("idTipoDangGoods");
            entity.Property(e => e.IdTipoIss).HasColumnName("idTipoISS");
            entity.Property(e => e.IdTipoProduto).HasColumnName("idTipoProduto");
            entity.Property(e => e.IdTratamento).HasColumnName("idTratamento");
            entity.Property(e => e.IdUtilAnulacao).HasColumnName("idUtilAnulacao");
            entity.Property(e => e.IdUtilAtribuicao).HasColumnName("idUtilAtribuicao");
            entity.Property(e => e.IdUtilEnviadoMan).HasColumnName("idUtilEnviadoMan");
            entity.Property(e => e.IdUtilPedido).HasColumnName("idUtilPedido");
            entity.Property(e => e.IdUtilRecolhido).HasColumnName("idUtilRecolhido");
            entity.Property(e => e.IdUtilUltAct).HasColumnName("idUtilUltAct");
            entity.Property(e => e.Largura)
                .HasColumnType("money")
                .HasColumnName("largura");
            entity.Property(e => e.LocalidadeCot)
                .HasMaxLength(50)
                .HasColumnName("localidadeCot");
            entity.Property(e => e.LocalidadeDest)
                .HasMaxLength(50)
                .HasColumnName("localidadeDest");
            entity.Property(e => e.M3).HasColumnType("money");
            entity.Property(e => e.MoradaCot)
                .HasMaxLength(100)
                .HasColumnName("moradaCot");
            entity.Property(e => e.MoradaDest)
                .HasMaxLength(100)
                .HasColumnName("moradaDest");
            entity.Property(e => e.NifCot).HasColumnName("nifCot");
            entity.Property(e => e.Nifpagamento)
                .HasMaxLength(20)
                .HasColumnName("NIFPagamento");
            entity.Property(e => e.NumeroEnvios).HasColumnName("numeroEnvios");
            entity.Property(e => e.NumeroVolumes).HasColumnName("numeroVolumes");
            entity.Property(e => e.Observacoes)
                .HasMaxLength(500)
                .HasColumnName("observacoes");
            entity.Property(e => e.Peso)
                .HasColumnType("money")
                .HasColumnName("peso");
            entity.Property(e => e.PesoVolumetrico)
                .HasColumnType("money")
                .HasColumnName("pesoVolumetrico");
            entity.Property(e => e.RefShipper)
                .HasMaxLength(40)
                .HasColumnName("refShipper");
            entity.Property(e => e.Scancode)
                .HasMaxLength(2)
                .HasColumnName("scancode");
            entity.Property(e => e.Seguro).HasColumnName("seguro");
            entity.Property(e => e.TelefoneCot).HasColumnName("telefoneCot");
            entity.Property(e => e.TelefoneDest).HasColumnName("telefoneDest");
            entity.Property(e => e.TrataVolume).HasColumnName("trataVolume");
            entity.Property(e => e.ValorManual).HasColumnName("valorManual");
            entity.Property(e => e.ValorPrevisto)
                .HasColumnType("money")
                .HasColumnName("valorPrevisto");
            entity.Property(e => e.ValorReembolso)
                .HasColumnType("money")
                .HasColumnName("valorReembolso");
            entity.Property(e => e.ValorSegurado)
                .HasColumnType("money")
                .HasColumnName("valorSegurado");
            entity.Property(e => e.VendaDinheiro).HasColumnName("vendaDinheiro");
        });

        modelBuilder.Entity<CotacoesItem>(entity =>
        {
            entity.Property(e => e.Id).HasColumnName("id");
            entity.Property(e => e.Activo).HasColumnName("activo");
            entity.Property(e => e.CodIva)
                .HasMaxLength(10)
                .HasColumnName("codIva");
            entity.Property(e => e.DtIntrod)
                .HasColumnType("datetime")
                .HasColumnName("dtIntrod");
            entity.Property(e => e.DtUltAct)
                .HasColumnType("datetime")
                .HasColumnName("dtUltAct");
            entity.Property(e => e.IdIvareg).HasColumnName("idIVAREG");
            entity.Property(e => e.IdPickup).HasColumnName("idPickup");
            entity.Property(e => e.IdServico).HasColumnName("idServico");
            entity.Property(e => e.IdServicoDet).HasColumnName("idServicoDet");
            entity.Property(e => e.IdUtilIntrod).HasColumnName("idUtilIntrod");
            entity.Property(e => e.IdUtilUltAct).HasColumnName("idUtilUltAct");
            entity.Property(e => e.Idtipoiva).HasColumnName("idtipoiva");
            entity.Property(e => e.Valor)
                .HasColumnType("money")
                .HasColumnName("valor");
        });

        modelBuilder.Entity<CotacoesPickup>(entity =>
        {
            entity.HasKey(e => e.Id).HasName("PK_T_COTPUP");

            entity.ToTable("CotacoesPickup");

            entity.Property(e => e.Id).HasColumnName("id");
            entity.Property(e => e.DtIntrod)
                .HasDefaultValueSql("(getdate())")
                .HasColumnType("datetime")
                .HasColumnName("dtIntrod");
            entity.Property(e => e.IdCotacao).HasColumnName("idCotacao");
            entity.Property(e => e.IdPickup).HasColumnName("idPickup");
        });

        modelBuilder.Entity<CpAgrupamentosStop>(entity =>
        {
            entity.HasKey(e => e.Id).HasName("PK__CP_Agrup__3213E83F43632473");

            entity.ToTable("CP_AgrupamentosStops", tb => tb.HasTrigger("CP_AgrupamentosStops_LOG_Trigger"));

            entity.HasIndex(e => e.CsMorada2, "idx_cs_morada2").HasFillFactor(80);

            entity.HasIndex(e => e.IdStop, "idx_idStop").HasFillFactor(80);

            entity.Property(e => e.Id).HasColumnName("id");
            entity.Property(e => e.Activo).HasColumnName("activo");
            entity.Property(e => e.CsMorada)
                .HasComputedColumnSql("(checksum([morada]))", false)
                .HasColumnName("cs_morada");
            entity.Property(e => e.CsMorada2)
                .HasComputedColumnSql("(checksum([morada2]))", false)
                .HasColumnName("cs_morada2");
            entity.Property(e => e.DtIntrod)
                .HasColumnType("datetime")
                .HasColumnName("dtIntrod");
            entity.Property(e => e.DtUltAct)
                .HasColumnType("datetime")
                .HasColumnName("dtUltAct");
            entity.Property(e => e.IdStop).HasColumnName("idStop");
            entity.Property(e => e.IdUtilIntrod).HasColumnName("idUtilIntrod");
            entity.Property(e => e.IdUtilUltAct).HasColumnName("idUtilUltAct");
            entity.Property(e => e.Morada).HasColumnName("morada");
            entity.Property(e => e.Morada2).HasColumnName("morada2");
        });

        modelBuilder.Entity<CpAgrupamentosStopsLog>(entity =>
        {
            entity.HasKey(e => e.IdTrigger).HasName("PK__CP_Agrup__B20B18764BF86A74");

            entity.ToTable("CP_AgrupamentosStops_LOG");

            entity.Property(e => e.IdTrigger).HasColumnName("idTrigger");
            entity.Property(e => e.Activo).HasColumnName("activo");
            entity.Property(e => e.DtIntrod)
                .HasColumnType("datetime")
                .HasColumnName("dtIntrod");
            entity.Property(e => e.DtUltAct)
                .HasColumnType("datetime")
                .HasColumnName("dtUltAct");
            entity.Property(e => e.Id).HasColumnName("id");
            entity.Property(e => e.IdStop).HasColumnName("idStop");
            entity.Property(e => e.IdUtilIntrod).HasColumnName("idUtilIntrod");
            entity.Property(e => e.IdUtilUltAct).HasColumnName("idUtilUltAct");
            entity.Property(e => e.Morada).HasColumnName("morada");
        });

        modelBuilder.Entity<CpApsCtt>(entity =>
        {
            entity
                .HasNoKey()
                .ToTable("CP_APS_CTT");

            entity.Property(e => e.ApaFim).HasColumnName("APA_FIM");
            entity.Property(e => e.ApaIni).HasColumnName("APA_INI");
            entity.Property(e => e.Cp3Bloco).HasColumnName("CP3_BLOCO");
            entity.Property(e => e.Cp3Ind).HasColumnName("CP3_IND");
            entity.Property(e => e.Cp4Bloco).HasColumnName("CP4_BLOCO");
            entity.Property(e => e.Cp4Ind).HasColumnName("CP4_IND");
            entity.Property(e => e.CpalfBloco)
                .HasMaxLength(255)
                .HasColumnName("CPALF_BLOCO");
            entity.Property(e => e.CpalfInd)
                .HasMaxLength(255)
                .HasColumnName("CPALF_IND");
            entity.Property(e => e.Ep)
                .HasMaxLength(255)
                .HasColumnName("EP");
        });

        modelBuilder.Entity<CpCtt>(entity =>
        {
            entity
                .HasNoKey()
                .ToTable("CP_CTT");

            entity.Property(e => e.Cp3).HasColumnName("cp3");
            entity.Property(e => e.Cp4).HasColumnName("cp4");
            entity.Property(e => e.Cpalf)
                .HasMaxLength(255)
                .HasColumnName("cpalf");
            entity.Property(e => e.F10).HasMaxLength(255);
            entity.Property(e => e.F11).HasMaxLength(255);
            entity.Property(e => e.F12).HasMaxLength(255);
            entity.Property(e => e.F13).HasMaxLength(255);
            entity.Property(e => e.F14).HasMaxLength(255);
            entity.Property(e => e.F5).HasMaxLength(255);
            entity.Property(e => e.F6).HasMaxLength(255);
            entity.Property(e => e.F7).HasMaxLength(255);
            entity.Property(e => e.F8).HasMaxLength(255);
            entity.Property(e => e.F9).HasMaxLength(255);
            entity.Property(e => e.IdConcelho).HasColumnName("idConcelho");
            entity.Property(e => e.IdDistrito).HasColumnName("idDistrito");
            entity.Property(e => e.Localidade).HasMaxLength(255);
        });

        modelBuilder.Entity<Cpfrff>(entity =>
        {
            entity
                .HasNoKey()
                .ToTable("CPFRFF");

            entity.Property(e => e.F1).HasMaxLength(255);
            entity.Property(e => e.F11).HasMaxLength(255);
            entity.Property(e => e.F2).HasMaxLength(255);
            entity.Property(e => e.F3).HasMaxLength(255);
            entity.Property(e => e.F4).HasMaxLength(255);
            entity.Property(e => e.F6).HasMaxLength(255);
            entity.Property(e => e.F8).HasMaxLength(255);
        });

        modelBuilder.Entity<CprFf>(entity =>
        {
            entity
                .HasNoKey()
                .ToTable("cprFF");

            entity.Property(e => e.Ab)
                .HasMaxLength(255)
                .HasColumnName("AB");
            entity.Property(e => e.Abruzzi).HasMaxLength(255);
            entity.Property(e => e.Aq)
                .HasMaxLength(255)
                .HasColumnName("AQ");
            entity.Property(e => e.Cp).HasColumnName("cp");
            entity.Property(e => e.F8).HasMaxLength(255);
            entity.Property(e => e.F9).HasMaxLength(255);
            entity.Property(e => e.It)
                .HasMaxLength(255)
                .HasColumnName("IT");
            entity.Property(e => e.LAquila)
                .HasMaxLength(255)
                .HasColumnName("L'Aquila");
            entity.Property(e => e.Localidade)
                .HasMaxLength(255)
                .HasColumnName("localidade");
            entity.Property(e => e._132821)
                .HasMaxLength(255)
                .HasColumnName("13#2821");
            entity.Property(e => e._4).HasColumnName("4");
            entity.Property(e => e._424505)
                .HasMaxLength(255)
                .HasColumnName("42#4505");
        });

        modelBuilder.Entity<CprIt>(entity =>
        {
            entity
                .HasNoKey()
                .ToTable("cprIT");

            entity.Property(e => e.Ab)
                .HasMaxLength(255)
                .HasColumnName("AB");
            entity.Property(e => e.Abruzzi).HasMaxLength(255);
            entity.Property(e => e.Aq)
                .HasMaxLength(255)
                .HasColumnName("AQ");
            entity.Property(e => e.Barete).HasMaxLength(255);
            entity.Property(e => e.F8).HasMaxLength(255);
            entity.Property(e => e.F9).HasMaxLength(255);
            entity.Property(e => e.It)
                .HasMaxLength(255)
                .HasColumnName("IT");
            entity.Property(e => e.LAquila)
                .HasMaxLength(255)
                .HasColumnName("L'Aquila");
            entity.Property(e => e._132821)
                .HasMaxLength(255)
                .HasColumnName("13#2821");
            entity.Property(e => e._4).HasColumnName("4");
            entity.Property(e => e._424505)
                .HasMaxLength(255)
                .HasColumnName("42#4505");
            entity.Property(e => e._67010).HasColumnName("67010");
        });

        modelBuilder.Entity<CrossDockingFacturacaoT>(entity =>
        {
            entity
                .HasNoKey()
                .ToTable("crossDockingFacturacao_T");

            entity.Property(e => e.IdCliMorada).HasColumnName("idCliMorada");
            entity.Property(e => e.IdCliente).HasColumnName("idCliente");
            entity.Property(e => e.IdClienteFact).HasColumnName("idClienteFact");
            entity.Property(e => e.IdEntidade).HasColumnName("idEntidade");
            entity.Property(e => e.NomeClienteFact)
                .HasMaxLength(100)
                .IsUnicode(false)
                .HasColumnName("nomeClienteFact");
        });

        modelBuilder.Entity<CustomHtmlField>(entity =>
        {
            entity.HasKey(e => e.CustomHtmlFieldsId).HasName("PK__CustomHT__B585957008C7F4FA");

            entity.ToTable("CustomHTMlFields");

            entity.Property(e => e.CustomHtmlFieldsId).HasColumnName("CustomHTMlFieldsId");
            entity.Property(e => e.Activo).HasColumnName("activo");
            entity.Property(e => e.CodigoGeral)
                .HasMaxLength(100)
                .HasColumnName("codigoGeral");
            entity.Property(e => e.Descricao)
                .HasMaxLength(100)
                .HasColumnName("descricao");
            entity.Property(e => e.IdCodigo)
                .HasMaxLength(50)
                .HasColumnName("idCodigo");
            entity.Property(e => e.Valor)
                .HasMaxLength(100)
                .HasColumnName("valor");
        });

        modelBuilder.Entity<DangerousGood>(entity =>
        {
            entity.Property(e => e.Id).HasColumnName("id");
            entity.Property(e => e.Activo)
                .IsRequired()
                .HasDefaultValueSql("((1))")
                .HasColumnName("activo");
            entity.Property(e => e.Codigo)
                .HasMaxLength(15)
                .HasColumnName("codigo");
            entity.Property(e => e.Descricao)
                .HasMaxLength(50)
                .HasColumnName("descricao");
            entity.Property(e => e.FactClienteKg)
                .HasColumnType("money")
                .HasColumnName("factClienteKg");
            entity.Property(e => e.FactFedex)
                .HasColumnType("money")
                .HasColumnName("factFedex");
            entity.Property(e => e.IdProduto).HasColumnName("idProduto");
            entity.Property(e => e.SiglaCosmos)
                .HasMaxLength(2)
                .HasColumnName("siglaCosmos");
        });

        modelBuilder.Entity<DeleteMe>(entity =>
        {
            entity
                .HasNoKey()
                .ToTable("deleteME");

            entity.Property(e => e.Data)
                .HasColumnType("datetime")
                .HasColumnName("data");
            entity.Property(e => e.Value)
                .IsUnicode(false)
                .HasColumnName("value");
        });

        modelBuilder.Entity<DepartamentosAreasGrupo>(entity =>
        {
            entity.HasKey(e => new { e.IdDeptArea, e.IdUtilGrupo });

            entity.Property(e => e.IdDeptArea).HasColumnName("idDeptArea");
            entity.Property(e => e.IdUtilGrupo).HasColumnName("idUtilGrupo");
            entity.Property(e => e.Id)
                .ValueGeneratedOnAdd()
                .HasColumnName("id");
        });

        modelBuilder.Entity<DepartamentosAreasT>(entity =>
        {
            entity.HasKey(e => e.Id).HasName("PK_CobrancasDestinatarios_T");

            entity.ToTable("DepartamentosAreas_T");

            entity.Property(e => e.Id).HasColumnName("id");
            entity.Property(e => e.Activo)
                .IsRequired()
                .HasDefaultValueSql("((1))")
                .HasColumnName("activo");
            entity.Property(e => e.Codigo)
                .HasMaxLength(15)
                .HasColumnName("codigo");
            entity.Property(e => e.Descricao)
                .HasMaxLength(50)
                .HasColumnName("descricao");
            entity.Property(e => e.IdDepartamento).HasColumnName("idDepartamento");
        });

        modelBuilder.Entity<DepartamentosT>(entity =>
        {
            entity.HasKey(e => e.Id).HasName("PK_T_Departamento");

            entity.ToTable("Departamentos_T");

            entity.HasIndex(e => new { e.Codigo, e.Id }, "idx_codigo_id").IsUnique();

            entity.Property(e => e.Id)
                .ValueGeneratedNever()
                .HasColumnName("id");
            entity.Property(e => e.CallBackCommitment).HasDefaultValueSql("((1))");
            entity.Property(e => e.Codigo)
                .HasMaxLength(15)
                .HasColumnName("codigo");
            entity.Property(e => e.Descricao)
                .HasMaxLength(50)
                .HasColumnName("descricao");
        });

        modelBuilder.Entity<DepositoCobranca>(entity =>
        {
            entity.HasKey(e => e.Id).HasName("PK__Deposito__3213E83F6A3CF214");

            entity.Property(e => e.Id).HasColumnName("id");
            entity.Property(e => e.Data)
                .HasColumnType("datetime")
                .HasColumnName("data");
            entity.Property(e => e.DtEstadoFin)
                .HasColumnType("datetime")
                .HasColumnName("dtEstadoFin");
            entity.Property(e => e.DtEstadoOps)
                .HasColumnType("datetime")
                .HasColumnName("dtEstadoOps");
            entity.Property(e => e.DtUltAct)
                .HasColumnType("datetime")
                .HasColumnName("dtUltAct");
            entity.Property(e => e.DtValidacaoMapa)
                .HasColumnType("datetime")
                .HasColumnName("dtValidacaoMapa");
            entity.Property(e => e.DtvalidadoFin)
                .HasColumnType("datetime")
                .HasColumnName("dtvalidadoFIN");
            entity.Property(e => e.IdEntidade).HasColumnName("idEntidade");
            entity.Property(e => e.IdEstadoFin).HasColumnName("idEstadoFin");
            entity.Property(e => e.IdEstadoOps).HasColumnName("idEstadoOps");
            entity.Property(e => e.IdPlataforma).HasColumnName("idPlataforma");
            entity.Property(e => e.IdUtilUltAct).HasColumnName("idUtilUltAct");
            entity.Property(e => e.Obs).HasMaxLength(500);
            entity.Property(e => e.ValidadoFin).HasColumnName("validadoFIN");
            entity.Property(e => e.ValorConferido)
                .HasColumnType("money")
                .HasColumnName("valorConferido");
            entity.Property(e => e.ValorDepositado)
                .HasColumnType("money")
                .HasColumnName("valorDepositado");
        });

        modelBuilder.Entity<DepositoCobrancasEstadosT>(entity =>
        {
            entity.HasKey(e => e.Id).HasName("PK__Deposito__3213E83F6E0D82F8");

            entity.ToTable("DepositoCobrancasEstados_T");

            entity.Property(e => e.Id).HasColumnName("id");
            entity.Property(e => e.Activo).HasColumnName("activo");
            entity.Property(e => e.Codigo)
                .HasMaxLength(20)
                .HasColumnName("codigo");
            entity.Property(e => e.Cor)
                .HasMaxLength(20)
                .HasColumnName("cor");
            entity.Property(e => e.Descricao)
                .HasMaxLength(500)
                .HasColumnName("descricao");
            entity.Property(e => e.Origem).HasMaxLength(20);
        });

        modelBuilder.Entity<DepositoCobrancasLog>(entity =>
        {
            entity.HasKey(e => e.Id).HasName("PK__Deposito__3213E83F71DE13DC");

            entity.ToTable("DepositoCobrancas_log");

            entity.HasIndex(e => e.IdDepositoCobrancas, "idx_idDepositoCobranca");

            entity.Property(e => e.Id).HasColumnName("id");
            entity.Property(e => e.Campo)
                .HasMaxLength(50)
                .HasColumnName("campo");
            entity.Property(e => e.DataAlteracao)
                .HasColumnType("datetime")
                .HasColumnName("dataAlteracao");
            entity.Property(e => e.DtValidacaoMapa)
                .HasColumnType("datetime")
                .HasColumnName("dtValidacaoMapa");
            entity.Property(e => e.IdDepositoCobrancas).HasColumnName("idDepositoCobrancas");
            entity.Property(e => e.IdUtilAlteracao).HasColumnName("idUtilAlteracao");
            entity.Property(e => e.MsgAlteracao)
                .HasMaxLength(500)
                .HasColumnName("msgAlteracao");
            entity.Property(e => e.Valor)
                .HasMaxLength(50)
                .HasColumnName("valor");
        });

        modelBuilder.Entity<DescargasConfigT>(entity =>
        {
            entity.HasKey(e => e.Id).HasName("PK__Descarga__3213E83F71C0E642");

            entity.ToTable("DescargasConfig_T");

            entity.Property(e => e.Id).HasColumnName("id");
            entity.Property(e => e.Activo).HasColumnName("activo");
            entity.Property(e => e.AplicaScan).HasColumnName("aplicaScan");
            entity.Property(e => e.IdCliente).HasColumnName("idCliente");
            entity.Property(e => e.TamanhoLeitura).HasColumnName("tamanhoLeitura");
            entity.Property(e => e.TipoLeitura)
                .HasMaxLength(100)
                .HasColumnName("tipoLeitura");
        });

        modelBuilder.Entity<Destinatario>(entity =>
        {
            entity.HasKey(e => e.Id).HasName("PK_Destinatarios");

            entity.ToTable("Destinatario", tb => tb.HasTrigger("UPDATE_Destinatario"));

            entity.HasIndex(e => new { e.IdEntidade, e.IdCliente, e.IdPais, e.IdCliMorada, e.Nome, e.Morada, e.Cpostal, e.Telefone, e.Nif, e.Localidade }, "IX_Destinatario_idE_idC_idCliM_idPais_nome_morada_CPostal_telefone_nif_localidade").HasFillFactor(80);

            entity.HasIndex(e => new { e.IdEntidade, e.IdCliente, e.IdCliMorada }, "IX_Destinatario_idEntidade_idCliente_idCliMorada").HasFillFactor(80);

            entity.HasIndex(e => new { e.IdEntidade, e.IdPais }, "IX_Destinatario_idEntidade_idPais").HasFillFactor(80);

            entity.Property(e => e.Id).HasColumnName("id");
            entity.Property(e => e.Contacto).HasMaxLength(100);
            entity.Property(e => e.Cpostal)
                .HasMaxLength(15)
                .HasColumnName("CPostal");
            entity.Property(e => e.DtIntrod)
                .HasColumnType("datetime")
                .HasColumnName("dtIntrod");
            entity.Property(e => e.DtUltAct)
                .HasColumnType("datetime")
                .HasColumnName("dtUltAct");
            entity.Property(e => e.IdClassDest).HasColumnName("idClassDest");
            entity.Property(e => e.IdCliMorada).HasColumnName("idCliMorada");
            entity.Property(e => e.IdCliente).HasColumnName("idCliente");
            entity.Property(e => e.IdCpostal).HasColumnName("idCPostal");
            entity.Property(e => e.IdEntidade)
                .HasDefaultValueSql("((4))")
                .HasColumnName("idEntidade");
            entity.Property(e => e.IdPais)
                .HasDefaultValueSql("((100))")
                .HasColumnName("idPais");
            entity.Property(e => e.IdUtilIntrod).HasColumnName("idUtilIntrod");
            entity.Property(e => e.IdUtilUltAct).HasColumnName("idUtilUltAct");
            entity.Property(e => e.Localidade)
                .HasMaxLength(50)
                .HasColumnName("localidade");
            entity.Property(e => e.Morada)
                .HasMaxLength(100)
                .HasColumnName("morada");
            entity.Property(e => e.Nif)
                .HasMaxLength(15)
                .HasColumnName("nif");
            entity.Property(e => e.Nome)
                .HasMaxLength(100)
                .HasColumnName("nome");
            entity.Property(e => e.PropCli).HasColumnName("propCli");
            entity.Property(e => e.Telefone)
                .HasMaxLength(15)
                .HasColumnName("telefone");
        });

        modelBuilder.Entity<DestinatarioClassificacaoT>(entity =>
        {
            entity.ToTable("DestinatarioClassificacao_T");

            entity.Property(e => e.Id).HasColumnName("id");
            entity.Property(e => e.Activo)
                .IsRequired()
                .HasDefaultValueSql("((1))")
                .HasColumnName("activo");
            entity.Property(e => e.Codigo)
                .HasMaxLength(50)
                .HasColumnName("codigo");
            entity.Property(e => e.Descricao)
                .HasMaxLength(50)
                .HasColumnName("descricao");
        });

        modelBuilder.Entity<DestinatarioLog>(entity =>
        {
            entity.ToTable("DestinatarioLog");

            entity.HasIndex(e => e.IdDestinatario, "IDX_DestinatarioLog_idDest").HasFillFactor(80);

            entity.Property(e => e.Id).HasColumnName("id");
            entity.Property(e => e.Cpostal)
                .HasMaxLength(15)
                .HasColumnName("CPostal");
            entity.Property(e => e.DtIntrod)
                .HasColumnType("datetime")
                .HasColumnName("dtIntrod");
            entity.Property(e => e.DtTrigger)
                .HasDefaultValueSql("(getdate())")
                .HasColumnType("datetime")
                .HasColumnName("dtTrigger");
            entity.Property(e => e.DtUltAct)
                .HasColumnType("datetime")
                .HasColumnName("dtUltAct");
            entity.Property(e => e.IdClassDest).HasColumnName("idClassDest");
            entity.Property(e => e.IdCliMorada).HasColumnName("idCliMorada");
            entity.Property(e => e.IdCliente).HasColumnName("idCliente");
            entity.Property(e => e.IdCpostal).HasColumnName("idCPostal");
            entity.Property(e => e.IdDestinatario).HasColumnName("idDestinatario");
            entity.Property(e => e.IdEntidade).HasColumnName("idEntidade");
            entity.Property(e => e.IdPais).HasColumnName("idPais");
            entity.Property(e => e.IdUtilIntrod).HasColumnName("idUtilIntrod");
            entity.Property(e => e.IdUtilUltAct).HasColumnName("idUtilUltAct");
            entity.Property(e => e.Localidade)
                .HasMaxLength(50)
                .HasColumnName("localidade");
            entity.Property(e => e.Morada)
                .HasMaxLength(100)
                .HasColumnName("morada");
            entity.Property(e => e.Nif)
                .HasMaxLength(15)
                .HasColumnName("nif");
            entity.Property(e => e.Nome)
                .HasMaxLength(100)
                .HasColumnName("nome");
            entity.Property(e => e.PropCli).HasColumnName("propCli");
            entity.Property(e => e.Telefone)
                .HasMaxLength(15)
                .HasColumnName("telefone");
        });

        modelBuilder.Entity<DestinatarioRepetido>(entity =>
        {
            entity.HasNoKey();

            entity.Property(e => e.Cpostal)
                .HasMaxLength(15)
                .HasColumnName("CPostal");
            entity.Property(e => e.DtIntrod)
                .HasColumnType("datetime")
                .HasColumnName("dtIntrod");
            entity.Property(e => e.DtUltAct)
                .HasColumnType("datetime")
                .HasColumnName("dtUltAct");
            entity.Property(e => e.Id).HasColumnName("id");
            entity.Property(e => e.IdClassDest).HasColumnName("idClassDest");
            entity.Property(e => e.IdCliMorada).HasColumnName("idCliMorada");
            entity.Property(e => e.IdCliente).HasColumnName("idCliente");
            entity.Property(e => e.IdCpostal).HasColumnName("idCPostal");
            entity.Property(e => e.IdEntidade).HasColumnName("idEntidade");
            entity.Property(e => e.IdPais).HasColumnName("idPais");
            entity.Property(e => e.IdUtilIntrod).HasColumnName("idUtilIntrod");
            entity.Property(e => e.IdUtilUltAct).HasColumnName("idUtilUltAct");
            entity.Property(e => e.Localidade)
                .HasMaxLength(50)
                .HasColumnName("localidade");
            entity.Property(e => e.Morada)
                .HasMaxLength(100)
                .HasColumnName("morada");
            entity.Property(e => e.Nif)
                .HasMaxLength(15)
                .HasColumnName("nif");
            entity.Property(e => e.Nome)
                .HasMaxLength(100)
                .HasColumnName("nome");
            entity.Property(e => e.PropCli).HasColumnName("propCli");
            entity.Property(e => e.Telefone)
                .HasMaxLength(15)
                .HasColumnName("telefone");
        });

        modelBuilder.Entity<DestinatarioTemp>(entity =>
        {
            entity.HasKey(e => e.Id).HasName("PK__Destinat__3213E83F12D79C0D");

            entity.ToTable("Destinatario_TEMP");

            entity.Property(e => e.Id)
                .ValueGeneratedNever()
                .HasColumnName("id");
            entity.Property(e => e.Cpostal)
                .HasMaxLength(55)
                .HasColumnName("CPostal");
            entity.Property(e => e.IdClassDest).HasColumnName("idClassDest");
            entity.Property(e => e.IdCliMorada).HasColumnName("idCliMorada");
            entity.Property(e => e.IdCliente).HasColumnName("idCliente");
            entity.Property(e => e.IdCpostal).HasColumnName("idCPostal");
            entity.Property(e => e.IdEntidade).HasColumnName("idEntidade");
            entity.Property(e => e.IdPais).HasColumnName("idPais");
            entity.Property(e => e.Localidade)
                .HasMaxLength(200)
                .HasColumnName("localidade");
            entity.Property(e => e.Morada)
                .HasMaxLength(200)
                .HasColumnName("morada");
            entity.Property(e => e.Nif)
                .HasMaxLength(55)
                .HasColumnName("nif");
            entity.Property(e => e.Nome)
                .HasMaxLength(200)
                .HasColumnName("nome");
            entity.Property(e => e.Processado)
                .HasDefaultValueSql("((0))")
                .HasColumnName("processado");
            entity.Property(e => e.PropCli).HasColumnName("propCli");
            entity.Property(e => e.Telefone)
                .HasMaxLength(55)
                .HasColumnName("telefone");
            entity.Property(e => e.TotalRepetidas).HasColumnName("totalRepetidas");
        });

        modelBuilder.Entity<DestinatariosGrandSup>(entity =>
        {
            entity.HasKey(e => e.Id).HasName("PK__Destinat__3213E83F0AABC446");

            entity.ToTable("DestinatariosGrandSup");

            entity.HasIndex(e => e.CsMorada, "idx_cs_morada");

            entity.Property(e => e.Id).HasColumnName("id");
            entity.Property(e => e.Activo).HasColumnName("activo");
            entity.Property(e => e.CsMorada)
                .HasComputedColumnSql("(checksum([Morada]))", false)
                .HasColumnName("cs_Morada");
            entity.Property(e => e.DtIntrod)
                .HasColumnType("datetime")
                .HasColumnName("dtIntrod");
            entity.Property(e => e.DtUltAct)
                .HasColumnType("datetime")
                .HasColumnName("dtUltAct");
            entity.Property(e => e.IdUtilIntrod).HasColumnName("idUtilIntrod");
            entity.Property(e => e.IdUtilUltAct).HasColumnName("idUtilUltAct");
        });

        modelBuilder.Entity<DevolucaoGuiasRemessa>(entity =>
        {
            entity.HasKey(e => e.IdExportacao);

            entity.ToTable("DevolucaoGuiasRemessa");

            entity.HasIndex(e => e.AwbOriginal, "idx_DGR_awb_original")
                .IsUnique()
                .HasFillFactor(80);

            entity.HasIndex(e => new { e.AwbDevolucao, e.Finalizar }, "idx_GDR_awb_devolucao").HasFillFactor(80);

            entity.Property(e => e.IdExportacao)
                .ValueGeneratedNever()
                .HasColumnName("idExportacao");
            entity.Property(e => e.AwbDevolucao)
                .HasMaxLength(20)
                .HasColumnName("awb_devolucao");
            entity.Property(e => e.AwbOriginal)
                .HasMaxLength(20)
                .HasColumnName("awb_original");
            entity.Property(e => e.DtIntrod)
                .HasColumnType("datetime")
                .HasColumnName("dtIntrod");
            entity.Property(e => e.DtUltAct)
                .HasColumnType("datetime")
                .HasColumnName("dtUltAct");
            entity.Property(e => e.DtUtilFin)
                .HasColumnType("datetime")
                .HasColumnName("dtUtilFin");
            entity.Property(e => e.DtUtilGerouDevolucao)
                .HasColumnType("datetime")
                .HasColumnName("dtUtilGerouDevolucao");
            entity.Property(e => e.Finalizar).HasColumnName("finalizar");
            entity.Property(e => e.IdManifestoDev).HasColumnName("idManifestoDev");
            entity.Property(e => e.IdUtilFin).HasColumnName("idUtilFin");
            entity.Property(e => e.IdUtilGerouDevolucao).HasColumnName("idUtilGerouDevolucao");
            entity.Property(e => e.IdUtilIntrod).HasColumnName("idUtilIntrod");
            entity.Property(e => e.IdUtilUltAct).HasColumnName("idUtilUltAct");
        });

        modelBuilder.Entity<DevolucaoGuiasRemessaDetalhe>(entity =>
        {
            entity.HasIndex(e => e.AwbOriginal, "idx_dgrd_awb_original").HasFillFactor(80);

            entity.Property(e => e.Id).HasColumnName("id");
            entity.Property(e => e.AwbDevolucao)
                .HasMaxLength(20)
                .HasColumnName("awb_devolucao");
            entity.Property(e => e.AwbOriginal)
                .HasMaxLength(20)
                .HasColumnName("awb_original");
            entity.Property(e => e.DtEstado)
                .HasColumnType("datetime")
                .HasColumnName("dtEstado");
            entity.Property(e => e.IdEstado).HasColumnName("idEstado");
            entity.Property(e => e.IdUtilEstado).HasColumnName("idUtilEstado");
        });

        modelBuilder.Entity<DevolucaoGuiasRemessaEstadosT>(entity =>
        {
            entity
                .HasNoKey()
                .ToTable("DevolucaoGuiasRemessaEstados_T");

            entity.Property(e => e.Activo).HasColumnName("activo");
            entity.Property(e => e.Codigo)
                .HasMaxLength(20)
                .HasColumnName("codigo");
            entity.Property(e => e.Descricao)
                .HasMaxLength(50)
                .HasColumnName("descricao");
            entity.Property(e => e.Expedido).HasColumnName("expedido");
            entity.Property(e => e.Id).HasColumnName("id");
            entity.Property(e => e.Recebido).HasColumnName("recebido");
        });

        modelBuilder.Entity<DinamicaComercialT>(entity =>
        {
            entity.HasKey(e => e.Id).HasName("PK__Dinamica__3213E83F14834854");

            entity.ToTable("DinamicaComercial_T");

            entity.Property(e => e.Id).HasColumnName("id");
            entity.Property(e => e.Activo).HasColumnName("activo");
            entity.Property(e => e.Codigo)
                .HasMaxLength(25)
                .HasColumnName("codigo");
            entity.Property(e => e.Descricao)
                .HasMaxLength(25)
                .HasColumnName("descricao");
            entity.Property(e => e.IdEntidade).HasColumnName("idEntidade");
            entity.Property(e => e.IsDefault)
                .HasDefaultValueSql("((0))")
                .HasColumnName("isDefault");
        });

        modelBuilder.Entity<DistribuicaoEntidadesT>(entity =>
        {
            entity.HasKey(e => e.Id).HasName("PK_ImportacaoEntidades");

            entity.ToTable("DistribuicaoEntidades_T");

            entity.Property(e => e.Id).HasColumnName("id");
            entity.Property(e => e.Activo)
                .IsRequired()
                .HasDefaultValueSql("((1))")
                .HasColumnName("activo");
            entity.Property(e => e.ActivoSap).HasColumnName("activoSAP");
            entity.Property(e => e.AppName)
                .HasMaxLength(100)
                .HasColumnName("appName");
            entity.Property(e => e.AppNameAlt)
                .HasMaxLength(100)
                .HasColumnName("appNameAlt");
            entity.Property(e => e.CodSap)
                .HasMaxLength(4)
                .HasColumnName("codSAP");
            entity.Property(e => e.CorClienteBar)
                .HasMaxLength(8)
                .HasColumnName("corClienteBar");
            entity.Property(e => e.Descricao)
                .HasMaxLength(50)
                .HasColumnName("descricao");
            entity.Property(e => e.DivVolumetrico)
                .HasColumnType("money")
                .HasColumnName("divVolumetrico");
            entity.Property(e => e.GuardarDestinatario).HasColumnName("guardarDestinatario");
            entity.Property(e => e.HeaderImg)
                .HasMaxLength(50)
                .HasColumnName("headerImg");
            entity.Property(e => e.IdCliMorada).HasColumnName("idCliMorada");
            entity.Property(e => e.IdCliente).HasColumnName("idCliente");
            entity.Property(e => e.IdMoedaDefaultTarifa).HasColumnName("idMoedaDefaultTarifa");
            entity.Property(e => e.IdPais).HasColumnName("idPais");
            entity.Property(e => e.IdUnidadeMonetaria).HasColumnName("idUnidadeMonetaria");
            entity.Property(e => e.IdUtilSistema).HasColumnName("idUtilSistema");
            entity.Property(e => e.IsDestinatarioBoff).HasColumnName("isDestinatarioBOff");
            entity.Property(e => e.IsDestinatarioCrm).HasColumnName("isDestinatarioCRM");
            entity.Property(e => e.IsDestinatarioCrossSelling)
                .HasDefaultValueSql("((0))")
                .HasColumnName("isDestinatarioCrossSelling");
            entity.Property(e => e.IsDistribuidor)
                .IsRequired()
                .HasDefaultValueSql("((1))")
                .HasColumnName("isDistribuidor");
            entity.Property(e => e.IsEntidade)
                .IsRequired()
                .HasDefaultValueSql("((1))")
                .HasColumnName("isEntidade");
            entity.Property(e => e.IsWorking).HasColumnName("isWorking");
            entity.Property(e => e.LogoImg)
                .HasMaxLength(50)
                .HasColumnName("logoImg");
            entity.Property(e => e.MandanteSap)
                .HasMaxLength(3)
                .HasColumnName("mandanteSAP");
            entity.Property(e => e.PlatSap)
                .HasMaxLength(2)
                .HasColumnName("platSAP");
            entity.Property(e => e.Sigla)
                .HasMaxLength(20)
                .HasColumnName("sigla");
        });

        modelBuilder.Entity<DistritosT>(entity =>
        {
            entity.HasKey(e => e.Id).HasName("PK__Distrito__3213E83F62E7D798");

            entity.ToTable("Distritos_T");

            entity.Property(e => e.Id)
                .ValueGeneratedNever()
                .HasColumnName("id");
            entity.Property(e => e.Codigo)
                .HasMaxLength(50)
                .HasColumnName("codigo");
            entity.Property(e => e.Descricao)
                .HasMaxLength(100)
                .IsUnicode(false)
                .HasColumnName("descricao");
            entity.Property(e => e.IdPais).HasColumnName("idPais");
        });

        modelBuilder.Entity<DlinkDelivery>(entity =>
        {
            entity.HasKey(e => e.PkeyDelivery);

            entity.ToTable("DLinkDelivery");

            entity.HasIndex(e => e.ShipmentKey, "idx_shipmentkey").HasFillFactor(80);

            entity.Property(e => e.PkeyDelivery)
                .ValueGeneratedNever()
                .HasColumnName("PKeyDelivery");
            entity.Property(e => e.AttemptDate).HasColumnType("datetime");
            entity.Property(e => e.DeliveryAddr).HasMaxLength(30);
            entity.Property(e => e.DeliveryDate).HasColumnType("datetime");
            entity.Property(e => e.DeliveryType).HasMaxLength(1);
            entity.Property(e => e.DestinationId).HasMaxLength(3);
            entity.Property(e => e.Disposition).HasMaxLength(2);
            entity.Property(e => e.Exception).HasMaxLength(3);
            entity.Property(e => e.InvoiceNum).HasMaxLength(15);
            entity.Property(e => e.OriginId).HasMaxLength(3);
            entity.Property(e => e.ReleasedBy).HasMaxLength(30);
            entity.Property(e => e.RequestRef).HasMaxLength(20);
            entity.Property(e => e.Schedule).HasMaxLength(2);
            entity.Property(e => e.ServiceLevel).HasMaxLength(3);
            entity.Property(e => e.Signature).HasMaxLength(22);
            entity.Property(e => e.SignatureImage)
                .HasMaxLength(50)
                .IsFixedLength();
            entity.Property(e => e.StatusCode).HasMaxLength(6);
            entity.Property(e => e.StatusMessage).HasMaxLength(80);
            entity.Property(e => e.TrackingId).HasMaxLength(30);
        });

        modelBuilder.Entity<DlinkInvoice>(entity =>
        {
            entity.HasKey(e => e.PkeyInvoice);

            entity.ToTable("DLinkInvoice");

            entity.Property(e => e.PkeyInvoice)
                .ValueGeneratedNever()
                .HasColumnName("PKeyInvoice");
            entity.Property(e => e.AmtDue).HasColumnType("money");
            entity.Property(e => e.AmtDueKey).HasColumnType("money");
            entity.Property(e => e.BillRecipientCharges).HasColumnType("money");
            entity.Property(e => e.BillRecipientWeight).HasColumnType("money");
            entity.Property(e => e.BillRecipientWeightUnit).HasMaxLength(1);
            entity.Property(e => e.BillSenderCharges).HasColumnType("money");
            entity.Property(e => e.BillSenderWeight).HasColumnType("money");
            entity.Property(e => e.BillSenderWeightUnit).HasMaxLength(1);
            entity.Property(e => e.BillThirdCharges).HasColumnType("money");
            entity.Property(e => e.BillThirdWeight).HasColumnType("money");
            entity.Property(e => e.BillThirdWeightUnit).HasMaxLength(1);
            entity.Property(e => e.BillToAcct).HasMaxLength(12);
            entity.Property(e => e.Composition).HasMaxLength(3);
            entity.Property(e => e.Conferida)
                .HasDefaultValueSql("(0)")
                .HasColumnName("conferida");
            entity.Property(e => e.Currency).HasMaxLength(3);
            entity.Property(e => e.CustomerStoreNum).HasMaxLength(10);
            entity.Property(e => e.DtConferida)
                .HasColumnType("datetime")
                .HasColumnName("dtConferida");
            entity.Property(e => e.Gsacontract)
                .HasMaxLength(25)
                .HasColumnName("GSAContract");
            entity.Property(e => e.InvoiceDate).HasColumnType("datetime");
            entity.Property(e => e.InvoiceNum).HasMaxLength(15);
            entity.Property(e => e.InvoiceType).HasMaxLength(1);
            entity.Property(e => e.MasterEdiacct)
                .HasMaxLength(12)
                .HasColumnName("MasterEDIAcct");
            entity.Property(e => e.NetCharge).HasColumnType("money");
            entity.Property(e => e.Notes).HasMaxLength(240);
            entity.Property(e => e.Qualifier).HasMaxLength(2);
            entity.Property(e => e.Received).HasColumnType("datetime");
            entity.Property(e => e.SettlementOption).HasMaxLength(2);
            entity.Property(e => e.TotalWeight).HasColumnType("money");
            entity.Property(e => e.TotalWeightUnit).HasMaxLength(1);
        });

        modelBuilder.Entity<DlinkPackage>(entity =>
        {
            entity.HasKey(e => e.PkeyPackages);

            entity.ToTable("DLinkPackages");

            entity.HasIndex(e => e.Length, "Idx_DLinkPAckages").HasFillFactor(80);

            entity.HasIndex(e => e.ShipmentKey, "idx_shipmentkey").HasFillFactor(80);

            entity.Property(e => e.PkeyPackages)
                .ValueGeneratedNever()
                .HasColumnName("PKeyPackages");
            entity.Property(e => e.AdditionalLineItems).HasMaxLength(3);
            entity.Property(e => e.ClearancePort).HasMaxLength(3);
            entity.Property(e => e.CustomsCurrency).HasMaxLength(3);
            entity.Property(e => e.CustomsEntryNum).HasMaxLength(15);
            entity.Property(e => e.CustomsValue).HasColumnType("money");
            entity.Property(e => e.DangerousGoods).HasMaxLength(1);
            entity.Property(e => e.DeclaredValue).HasColumnType("money");
            entity.Property(e => e.DimUnit).HasMaxLength(1);
            entity.Property(e => e.DutyTaxWaiver).HasMaxLength(1);
            entity.Property(e => e.GsadefaultWeight)
                .HasMaxLength(1)
                .HasColumnName("GSADefaultWeight");
            entity.Property(e => e.InvoiceNum).HasMaxLength(15);
            entity.Property(e => e.MultiweightWeight).HasColumnType("money");
            entity.Property(e => e.OriginalWeight).HasColumnType("money");
            entity.Property(e => e.Oversized).HasMaxLength(1);
            entity.Property(e => e.RevenueThreshold).HasColumnType("money");
            entity.Property(e => e.TrackingId).HasMaxLength(30);
            entity.Property(e => e.Weight).HasColumnType("money");
            entity.Property(e => e.WeightUnit).HasMaxLength(1);
        });

        modelBuilder.Entity<DlinkRecipient>(entity =>
        {
            entity.HasKey(e => e.PkeyRecipient);

            entity.ToTable("DLinkRecipient");

            entity.HasIndex(e => e.ShipmentKey, "idx_ShipmentKey").HasFillFactor(80);

            entity.Property(e => e.PkeyRecipient)
                .ValueGeneratedNever()
                .HasColumnName("PKeyRecipient");
            entity.Property(e => e.Account).HasMaxLength(12);
            entity.Property(e => e.Addr1).HasMaxLength(35);
            entity.Property(e => e.Addr2).HasMaxLength(35);
            entity.Property(e => e.City).HasMaxLength(30);
            entity.Property(e => e.Company).HasMaxLength(35);
            entity.Property(e => e.Contact).HasMaxLength(35);
            entity.Property(e => e.Country).HasMaxLength(2);
            entity.Property(e => e.InvoiceNum).HasMaxLength(15);
            entity.Property(e => e.State).HasMaxLength(2);
            entity.Property(e => e.TrackingId).HasMaxLength(30);
            entity.Property(e => e.Zip).HasMaxLength(10);
        });

        modelBuilder.Entity<DlinkShipment>(entity =>
        {
            entity.HasKey(e => e.PkeyShipment);

            entity.ToTable("DLinkShipment");

            entity.HasIndex(e => e.InvoiceKey, "idx_invoiceKey").HasFillFactor(80);

            entity.HasIndex(e => e.ShipDate, "idx_shipdate").HasFillFactor(80);

            entity.Property(e => e.PkeyShipment)
                .ValueGeneratedNever()
                .HasColumnName("PKeyShipment");
            entity.Property(e => e.AmtDue).HasColumnType("money");
            entity.Property(e => e.AmtDueKey).HasColumnType("money");
            entity.Property(e => e.AutomationDeviceName).HasMaxLength(5);
            entity.Property(e => e.BillToAcct).HasMaxLength(12);
            entity.Property(e => e.BillingSource).HasMaxLength(2);
            entity.Property(e => e.Cod)
                .HasMaxLength(1)
                .HasColumnName("COD");
            entity.Property(e => e.Codamount)
                .HasColumnType("money")
                .HasColumnName("CODAmount");
            entity.Property(e => e.CodcrossRefTrackingId)
                .HasMaxLength(30)
                .HasColumnName("CODCrossRefTrackingId");
            entity.Property(e => e.CommerceType).HasMaxLength(2);
            entity.Property(e => e.CommitDate).HasColumnType("datetime");
            entity.Property(e => e.Conferida)
                .HasDefaultValueSql("((0))")
                .HasColumnName("conferida");
            entity.Property(e => e.ConsolidatedAccount).HasMaxLength(12);
            entity.Property(e => e.CostAllocation).HasMaxLength(50);
            entity.Property(e => e.Crreference)
                .HasMaxLength(30)
                .HasColumnName("CRReference");
            entity.Property(e => e.Currency).HasMaxLength(3);
            entity.Property(e => e.CustomerDept).HasMaxLength(25);
            entity.Property(e => e.CustomerInvoiceNum).HasMaxLength(25);
            entity.Property(e => e.CustomerPo)
                .HasMaxLength(25)
                .HasColumnName("CustomerPO");
            entity.Property(e => e.DtConferida)
                .HasColumnType("datetime")
                .HasColumnName("dtConferida");
            entity.Property(e => e.Exception).HasMaxLength(1);
            entity.Property(e => e.ExceptionProcess).HasMaxLength(6);
            entity.Property(e => e.FormId).HasMaxLength(4);
            entity.Property(e => e.GroundServiceCode).HasMaxLength(3);
            entity.Property(e => e.GroundTrackingId).HasMaxLength(30);
            entity.Property(e => e.HasPod)
                .HasMaxLength(1)
                .HasColumnName("HasPOD");
            entity.Property(e => e.HasTrack).HasMaxLength(1);
            entity.Property(e => e.IdUtilConferida).HasColumnName("idUtilConferida");
            entity.Property(e => e.InvoiceDate).HasColumnType("datetime");
            entity.Property(e => e.InvoiceNum).HasMaxLength(15);
            entity.Property(e => e.MultiweightIdOrPerformancePricingId).HasColumnName("MultiweightID_Or_PerformancePricingID");
            entity.Property(e => e.NetCharge).HasColumnType("money");
            entity.Property(e => e.NonDuplicateIndicator).HasMaxLength(1);
            entity.Property(e => e.Notes).HasMaxLength(240);
            entity.Property(e => e.PastDue).HasMaxLength(1);
            entity.Property(e => e.PastDueInvoiceNum).HasMaxLength(15);
            entity.Property(e => e.Prerated).HasMaxLength(1);
            entity.Property(e => e.PsbundleNum).HasColumnName("PSBundleNum");
            entity.Property(e => e.RateScale).HasMaxLength(7);
            entity.Property(e => e.Rebill).HasMaxLength(1);
            entity.Property(e => e.Received).HasColumnType("datetime");
            entity.Property(e => e.Reference).HasMaxLength(40);
            entity.Property(e => e.ReturnedMerchandiseAuthorizationNum).HasMaxLength(20);
            entity.Property(e => e.ShipDate).HasColumnType("datetime");
            entity.Property(e => e.ShipperDept).HasMaxLength(25);
            entity.Property(e => e.Sireference)
                .HasMaxLength(30)
                .HasColumnName("SIReference");
            entity.Property(e => e.TrackingId).HasMaxLength(30);
        });

        modelBuilder.Entity<DlinkShipmentCommerceTypeLookup>(entity =>
        {
            entity.ToTable("DLinkShipment_CommerceType_lookup");

            entity.Property(e => e.Id)
                .HasMaxLength(2)
                .HasColumnName("id");
            entity.Property(e => e.Value).HasMaxLength(50);
            entity.Property(e => e.Version3).HasMaxLength(50);
        });

        modelBuilder.Entity<DlinkShipmentServiceBaseLookup>(entity =>
        {
            entity.ToTable("DLinkShipment_ServiceBase_lookup");

            entity.Property(e => e.Id).ValueGeneratedNever();
            entity.Property(e => e.Value).HasMaxLength(50);
        });

        modelBuilder.Entity<DlinkShipmentServicePackagingLookup>(entity =>
        {
            entity.HasKey(e => e.Id).HasName("PK_DLink_ServicePackaging_lookup");

            entity.ToTable("DLinkShipment_ServicePackaging_lookup");

            entity.Property(e => e.Id).ValueGeneratedNever();
            entity.Property(e => e.Value).HasMaxLength(50);
        });

        modelBuilder.Entity<DlinkShipper>(entity =>
        {
            entity.HasKey(e => e.PkeyShipper);

            entity.ToTable("DLinkShipper");

            entity.HasIndex(e => e.ShipmentKey, "idx_shipmentkey").HasFillFactor(80);

            entity.Property(e => e.PkeyShipper)
                .ValueGeneratedNever()
                .HasColumnName("PKeyShipper");
            entity.Property(e => e.Account).HasMaxLength(12);
            entity.Property(e => e.Addr1).HasMaxLength(35);
            entity.Property(e => e.Addr2).HasMaxLength(35);
            entity.Property(e => e.City).HasMaxLength(30);
            entity.Property(e => e.Company).HasMaxLength(35);
            entity.Property(e => e.Contact).HasMaxLength(35);
            entity.Property(e => e.Country).HasMaxLength(2);
            entity.Property(e => e.InvoiceNum).HasMaxLength(15);
            entity.Property(e => e.State).HasMaxLength(2);
            entity.Property(e => e.TrackingId).HasMaxLength(30);
            entity.Property(e => e.Zip).HasMaxLength(10);
        });

        modelBuilder.Entity<DocLinsProvisorio>(entity =>
        {
            entity.HasIndex(e => e.IdCabTemp, "IDX_idCabTemp");

            entity.HasIndex(e => new { e.LinhaAuto, e.IdLinOrigem, e.IdManifestoItem }, "IDx_linhaAuto_idLinOrigem_idManifestoItem");

            entity.HasIndex(e => e.Awbnumber, "Idx_AwbNumber").HasFillFactor(80);

            entity.HasIndex(e => new { e.LinhaAuto, e.IdLinOrigem }, "Idx_LinhaAuto_idLinOrigem").HasFillFactor(80);

            entity.HasIndex(e => new { e.IdEntidade, e.IdLinOrigem }, "Idx_idEntidade_idLinOrigem").HasFillFactor(80);

            entity.HasIndex(e => new { e.SpIdFact, e.DtProduto }, "Idx_spIdFact_dtProduto").HasFillFactor(80);

            entity.HasIndex(e => new { e.IdEntidade, e.DtProduto }, "idx_idEntidade_dtProduto").HasFillFactor(80);

            entity.HasIndex(e => new { e.IdLinOrigem, e.IdManifesto }, "idx_idLinOrigem_idManifesto").HasFillFactor(80);

            entity.HasIndex(e => new { e.IdTipoDoc, e.IdDepartamentoDoc, e.IdCliente, e.IdEntidade, e.IdCliMorada }, "idx_idTipoDoc_idDepartamentoDoc_idCliente_idEntidade_idCliMorada");

            entity.HasIndex(e => new { e.IdTipoDoc, e.IdEntidade, e.IdClienteQuebra, e.IdCliente, e.IdServico, e.IdServicoDet, e.DtProduto }, "idx_idTipoDoc_idEntidade_idClienteQuebra_idCliente_idServico_idServicoDet_dtProduto").HasFillFactor(80);

            entity.Property(e => e.Id).HasColumnName("id");
            entity.Property(e => e.Awbnumber)
                .HasMaxLength(50)
                .HasComment("awb facturada")
                .HasColumnName("awbnumber");
            entity.Property(e => e.Cambio)
                .HasDefaultValueSql("((1))")
                .HasComment("cambio da moeda em relacao à unidade monetaria “default” do sistema")
                .HasColumnType("money")
                .HasColumnName("cambio");
            entity.Property(e => e.CodIva)
                .HasMaxLength(10)
                .HasColumnName("codIva");
            entity.Property(e => e.DescProduto)
                .HasMaxLength(250)
                .HasComment("descricao do produto facturado")
                .HasColumnName("descProduto");
            entity.Property(e => e.Dimensoes)
                .HasMaxLength(50)
                .HasComment("dimensoes")
                .HasColumnName("dimensoes");
            entity.Property(e => e.DtIntrod)
                .HasDefaultValueSql("(getdate())")
                .HasColumnType("datetime")
                .HasColumnName("dtIntrod");
            entity.Property(e => e.DtProcess)
                .HasColumnType("datetime")
                .HasColumnName("dtProcess");
            entity.Property(e => e.DtProduto)
                .HasComment("data do produto facturado")
                .HasColumnType("datetime")
                .HasColumnName("dtProduto");
            entity.Property(e => e.ExtCidade)
                .HasMaxLength(50)
                .HasComment("cidade")
                .HasColumnName("extCidade");
            entity.Property(e => e.ExtCpostal)
                .HasMaxLength(15)
                .HasComment("cpostal")
                .HasColumnName("extCPostal");
            entity.Property(e => e.ExtEmpresa)
                .HasMaxLength(60)
                .HasComment("empresa assoc. ao servico")
                .HasColumnName("extEmpresa");
            entity.Property(e => e.ExtIdPais).HasColumnName("extIdPais");
            entity.Property(e => e.ExtMorada)
                .HasMaxLength(100)
                .HasComment("morada")
                .HasColumnName("extMorada");
            entity.Property(e => e.ExtPais)
                .HasMaxLength(50)
                .HasComment("pais assoc. ao servico")
                .HasColumnName("extPais");
            entity.Property(e => e.FacturaIndividual)
                .HasDefaultValueSql("((0))")
                .HasComment("indica se documento deve ser referente a apenas um (=1) ou varios (<>1)  items\r\nobservacoes\r\n")
                .HasColumnName("facturaIndividual");
            entity.Property(e => e.IdAgrupamento).HasColumnName("idAgrupamento");
            entity.Property(e => e.IdCabTemp).HasColumnName("idCabTemp");
            entity.Property(e => e.IdCliMorada).HasColumnName("idCliMorada");
            entity.Property(e => e.IdCliMoradaQuebra).HasColumnName("idCliMoradaQuebra");
            entity.Property(e => e.IdCliente)
                .HasComment("codigo do cliente a que o documento diz respeito")
                .HasColumnName("idCliente");
            entity.Property(e => e.IdClienteQuebra).HasColumnName("idClienteQuebra");
            entity.Property(e => e.IdDepartamentoDoc)
                .HasComment("departamento de facturacao (DocumentosDepartamentos_T)")
                .HasColumnName("idDepartamentoDoc");
            entity.Property(e => e.IdEntidade)
                .HasDefaultValueSql("((1))")
                .HasComment("entidade owner (empresa rangel/fedex) associada ao documento")
                .HasColumnName("idEntidade");
            entity.Property(e => e.IdEntregaMaterial)
                .HasComment("codigo da entrega de material (MaterialPedido)")
                .HasColumnName("idEntregaMaterial");
            entity.Property(e => e.IdEntregaMaterialItem).HasColumnName("idEntregaMaterialItem");
            entity.Property(e => e.IdExportacao)
                .HasComment("codigo da exportacao (ExportacaoManifesto)")
                .HasColumnName("idExportacao");
            entity.Property(e => e.IdExportacaoItem).HasColumnName("idExportacaoItem");
            entity.Property(e => e.IdImportacao)
                .HasComment("codigo da importacao (ImportacaoManifesto)")
                .HasColumnName("idImportacao");
            entity.Property(e => e.IdImportacaoItem).HasColumnName("idImportacaoItem");
            entity.Property(e => e.IdIvareg).HasColumnName("idIVAREG");
            entity.Property(e => e.IdLinOrigem)
                .HasComment("codigo da linha (documentosLin) que deu origem a esta")
                .HasColumnName("idLinOrigem");
            entity.Property(e => e.IdManifesto).HasColumnName("idManifesto");
            entity.Property(e => e.IdManifestoItem).HasColumnName("idManifestoItem");
            entity.Property(e => e.IdMoeda)
                .HasComment("codigo da moeda (UnidadesMonetarias_T) a que o valor se refere")
                .HasColumnName("idMoeda");
            entity.Property(e => e.IdProduto)
                .HasComment("produto de facturacao (ProdutoTipos_T)")
                .HasColumnName("idProduto");
            entity.Property(e => e.IdRegime).HasColumnName("idRegime");
            entity.Property(e => e.IdServico).HasColumnName("idServico");
            entity.Property(e => e.IdServicoDet).HasColumnName("idServicoDet");
            entity.Property(e => e.IdTarifa)
                .HasComment("tarifa utilizada para obter valor")
                .HasColumnName("idTarifa");
            entity.Property(e => e.IdTipoDoc)
                .HasComment("tipo de documento (DocumentosTipos_T)")
                .HasColumnName("idTipoDoc");
            entity.Property(e => e.IdTipoIva)
                .HasComment("tipo de iva associado ao servico (IVATipo_T)")
                .HasColumnName("idTipoIVA");
            entity.Property(e => e.IdUtilIntrod).HasColumnName("idUtilIntrod");
            entity.Property(e => e.LinhaAuto)
                .HasDefaultValueSql("((0))")
                .HasComment("linha criada automaticamente")
                .HasColumnName("linhaAuto");
            entity.Property(e => e.M3)
                .HasColumnType("money")
                .HasColumnName("m3");
            entity.Property(e => e.NumVolumes)
                .HasComment("numero de volumes associados ao produto facturado")
                .HasColumnName("numVolumes");
            entity.Property(e => e.ObsOrig)
                .HasMaxLength(200)
                .HasComment("observacoes relativas a correccoes automaticas de dados do servico")
                .HasColumnName("obsOrig");
            entity.Property(e => e.Observacoes)
                .HasMaxLength(1000)
                .HasColumnName("observacoes");
            entity.Property(e => e.Peso)
                .HasComment("peso")
                .HasColumnType("money")
                .HasColumnName("peso");
            entity.Property(e => e.PesoVol)
                .HasComment("peso volumetrico")
                .HasColumnType("money")
                .HasColumnName("pesoVol");
            entity.Property(e => e.PodDate)
                .HasComment("data de entrega do produto")
                .HasColumnType("datetime")
                .HasColumnName("podDate");
            entity.Property(e => e.PodSignature)
                .HasMaxLength(50)
                .HasComment("assinatura da entrega do produto")
                .HasColumnName("podSignature");
            entity.Property(e => e.Process).HasColumnName("process");
            entity.Property(e => e.ProdCidade)
                .HasMaxLength(50)
                .HasComment("cidade")
                .HasColumnName("prodCidade");
            entity.Property(e => e.ProdCpostal)
                .HasMaxLength(15)
                .HasComment("cpostal")
                .HasColumnName("prodCPostal");
            entity.Property(e => e.ProdEmpresa)
                .HasMaxLength(60)
                .HasComment("empresa assoc. ao servico")
                .HasColumnName("prodEmpresa");
            entity.Property(e => e.ProdIdPais).HasColumnName("prodIdPais");
            entity.Property(e => e.ProdMorada)
                .HasMaxLength(100)
                .HasComment("morada")
                .HasColumnName("prodMorada");
            entity.Property(e => e.ProdPais)
                .HasMaxLength(50)
                .HasComment("pais assoc. ao servico")
                .HasColumnName("prodPais");
            entity.Property(e => e.ProdRef)
                .HasMaxLength(50)
                .HasComment("referencia do servico (introd. pelo cliente) ")
                .HasColumnName("prodRef");
            entity.Property(e => e.Quantidade)
                .HasDefaultValueSql("((1))")
                .HasComment("quantidade associada ao servico")
                .HasColumnType("money")
                .HasColumnName("quantidade");
            entity.Property(e => e.QuebraFactClassOri).HasColumnName("quebraFactClassOri");
            entity.Property(e => e.QuebraFactDepart)
                .HasMaxLength(50)
                .HasColumnName("quebraFactDepart");
            entity.Property(e => e.QuebraFactServico).HasColumnName("quebraFactServico");
            entity.Property(e => e.Sentido)
                .HasDefaultValueSql("((1))")
                .HasComment("1 ou -1 conforme é débito ou crédito ao cliente.")
                .HasColumnName("sentido");
            entity.Property(e => e.Servico)
                .HasMaxLength(15)
                .HasComment("descricao do servico facturado")
                .HasColumnName("servico");
            entity.Property(e => e.SpIdFact).HasColumnName("spIdFact");
            entity.Property(e => e.TaxaIva)
                .HasComment("taxa de iva a aplicar")
                .HasColumnType("money")
                .HasColumnName("taxaIVA");
            entity.Property(e => e.ValorSiva)
                .HasComment("valor total sem iva")
                .HasColumnType("money")
                .HasColumnName("valorSIVA");
            entity.Property(e => e.ValorUnitario)
                .HasComment("valor unitario")
                .HasColumnType("money")
                .HasColumnName("valorUnitario");
        });

        modelBuilder.Entity<DocLinsProvisoriosTempitem>(entity =>
        {
            entity.HasKey(e => new { e.IdManifesto, e.IdItem, e.IdRegime });

            entity.ToTable("DocLinsProvisorios_TEMPITEMS");

            entity.HasIndex(e => e.SpId, "idx_spid");

            entity.Property(e => e.IdManifesto).HasColumnName("idManifesto");
            entity.Property(e => e.IdItem).HasColumnName("idItem");
            entity.Property(e => e.IdRegime).HasColumnName("idRegime");
            entity.Property(e => e.SpId).HasColumnName("spID");
        });

        modelBuilder.Entity<DocServerTiposT>(entity =>
        {
            entity.ToTable("DocServerTipos_T");

            entity.Property(e => e.Id)
                .ValueGeneratedNever()
                .HasColumnName("id");
            entity.Property(e => e.Codigo)
                .HasMaxLength(20)
                .IsUnicode(false)
                .HasColumnName("codigo");
            entity.Property(e => e.Descricao)
                .HasMaxLength(50)
                .IsUnicode(false)
                .HasColumnName("descricao");
        });

        modelBuilder.Entity<DoclinsBk>(entity =>
        {
            entity
                .HasNoKey()
                .ToTable("Doclins_BK");

            entity.Property(e => e.Awbnumber)
                .HasMaxLength(50)
                .HasColumnName("awbnumber");
            entity.Property(e => e.Cambio)
                .HasColumnType("money")
                .HasColumnName("cambio");
            entity.Property(e => e.CodIva)
                .HasMaxLength(10)
                .HasColumnName("codIva");
            entity.Property(e => e.DescProduto)
                .HasMaxLength(250)
                .HasColumnName("descProduto");
            entity.Property(e => e.Dimensoes)
                .HasMaxLength(50)
                .HasColumnName("dimensoes");
            entity.Property(e => e.DtAnulacao)
                .HasColumnType("datetime")
                .HasColumnName("dtAnulacao");
            entity.Property(e => e.DtComis)
                .HasColumnType("datetime")
                .HasColumnName("dtComis");
            entity.Property(e => e.DtCreditada)
                .HasColumnType("datetime")
                .HasColumnName("dtCreditada");
            entity.Property(e => e.DtExport)
                .HasColumnType("datetime")
                .HasColumnName("dtExport");
            entity.Property(e => e.DtExportSap)
                .HasColumnType("datetime")
                .HasColumnName("dtExportSAP");
            entity.Property(e => e.DtIntrod)
                .HasColumnType("datetime")
                .HasColumnName("dtIntrod");
            entity.Property(e => e.DtProduto)
                .HasColumnType("datetime")
                .HasColumnName("dtProduto");
            entity.Property(e => e.ExtCidade)
                .HasMaxLength(50)
                .HasColumnName("extCidade");
            entity.Property(e => e.ExtCpostal)
                .HasMaxLength(15)
                .HasColumnName("extCPostal");
            entity.Property(e => e.ExtEmpresa)
                .HasMaxLength(60)
                .HasColumnName("extEmpresa");
            entity.Property(e => e.ExtIdPais).HasColumnName("extIdPais");
            entity.Property(e => e.ExtMorada)
                .HasMaxLength(100)
                .HasColumnName("extMorada");
            entity.Property(e => e.ExtPais)
                .HasMaxLength(50)
                .HasColumnName("extPais");
            entity.Property(e => e.FaltaValorUnitario).HasColumnName("faltaValorUnitario");
            entity.Property(e => e.Id).HasColumnName("id");
            entity.Property(e => e.IdAgrupamento).HasColumnName("idAgrupamento");
            entity.Property(e => e.IdCab).HasColumnName("idCab");
            entity.Property(e => e.IdEntregaMaterial).HasColumnName("idEntregaMaterial");
            entity.Property(e => e.IdEntregaMaterialItem).HasColumnName("idEntregaMaterialItem");
            entity.Property(e => e.IdEquipaComis).HasColumnName("idEquipaComis");
            entity.Property(e => e.IdExport).HasColumnName("idExport");
            entity.Property(e => e.IdExportacao).HasColumnName("idExportacao");
            entity.Property(e => e.IdExportacaoItem).HasColumnName("idExportacaoItem");
            entity.Property(e => e.IdImportacao).HasColumnName("idImportacao");
            entity.Property(e => e.IdImportacaoItem).HasColumnName("idImportacaoItem");
            entity.Property(e => e.IdIvareg).HasColumnName("idIVAREG");
            entity.Property(e => e.IdLinOrigem).HasColumnName("idLinOrigem");
            entity.Property(e => e.IdManifesto).HasColumnName("idManifesto");
            entity.Property(e => e.IdManifestoItem).HasColumnName("idManifestoItem");
            entity.Property(e => e.IdMoeda).HasColumnName("idMoeda");
            entity.Property(e => e.IdProduto).HasColumnName("idProduto");
            entity.Property(e => e.IdRegime).HasColumnName("idRegime");
            entity.Property(e => e.IdServico).HasColumnName("idServico");
            entity.Property(e => e.IdServicoDet).HasColumnName("idServicoDet");
            entity.Property(e => e.IdTarifa).HasColumnName("idTarifa");
            entity.Property(e => e.IdTipoComis).HasColumnName("idTipoComis");
            entity.Property(e => e.IdTipoIva).HasColumnName("idTipoIVA");
            entity.Property(e => e.IdUtilAnulacao).HasColumnName("idUtilAnulacao");
            entity.Property(e => e.IdUtilComis).HasColumnName("idUtilComis");
            entity.Property(e => e.IdUtilCreditada).HasColumnName("idUtilCreditada");
            entity.Property(e => e.IdUtilIntrod).HasColumnName("idUtilIntrod");
            entity.Property(e => e.Lin).HasColumnName("lin");
            entity.Property(e => e.LinhaAuto).HasColumnName("linhaAuto");
            entity.Property(e => e.M3)
                .HasColumnType("money")
                .HasColumnName("m3");
            entity.Property(e => e.NumVolumes).HasColumnName("numVolumes");
            entity.Property(e => e.ObsOrig)
                .HasMaxLength(200)
                .HasColumnName("obsOrig");
            entity.Property(e => e.Observacoes)
                .HasMaxLength(1000)
                .HasColumnName("observacoes");
            entity.Property(e => e.Peso)
                .HasColumnType("money")
                .HasColumnName("peso");
            entity.Property(e => e.PesoVol)
                .HasColumnType("money")
                .HasColumnName("pesoVol");
            entity.Property(e => e.PodDate)
                .HasColumnType("datetime")
                .HasColumnName("podDate");
            entity.Property(e => e.PodSignature)
                .HasMaxLength(50)
                .HasColumnName("podSignature");
            entity.Property(e => e.ProdCidade)
                .HasMaxLength(50)
                .HasColumnName("prodCidade");
            entity.Property(e => e.ProdCpostal)
                .HasMaxLength(15)
                .HasColumnName("prodCPostal");
            entity.Property(e => e.ProdEmpresa)
                .HasMaxLength(60)
                .HasColumnName("prodEmpresa");
            entity.Property(e => e.ProdIdPais).HasColumnName("prodIdPais");
            entity.Property(e => e.ProdMorada)
                .HasMaxLength(100)
                .HasColumnName("prodMorada");
            entity.Property(e => e.ProdPais)
                .HasMaxLength(50)
                .HasColumnName("prodPais");
            entity.Property(e => e.ProdRef)
                .HasMaxLength(50)
                .HasColumnName("prodRef");
            entity.Property(e => e.Quantidade)
                .HasColumnType("money")
                .HasColumnName("quantidade");
            entity.Property(e => e.RefTipoComis)
                .HasMaxLength(20)
                .HasColumnName("refTipoComis");
            entity.Property(e => e.Servico)
                .HasMaxLength(15)
                .HasColumnName("servico");
            entity.Property(e => e.TaxaIva)
                .HasColumnType("money")
                .HasColumnName("taxaIVA");
            entity.Property(e => e.ValComis)
                .HasColumnType("money")
                .HasColumnName("valComis");
            entity.Property(e => e.ValorCiva)
                .HasColumnType("money")
                .HasColumnName("valorCIVA");
            entity.Property(e => e.ValorIva)
                .HasColumnType("money")
                .HasColumnName("valorIVA");
            entity.Property(e => e.ValorProduto)
                .HasColumnType("money")
                .HasColumnName("valorProduto");
            entity.Property(e => e.ValorSiva)
                .HasColumnType("money")
                .HasColumnName("valorSIVA");
            entity.Property(e => e.ValorUnitario)
                .HasColumnType("money")
                .HasColumnName("valorUnitario");
        });

        modelBuilder.Entity<DocumentosAduaneirosCreditar>(entity =>
        {
            entity.ToTable("DocumentosAduaneirosCreditar");

            entity.HasIndex(e => e.IdDocCredito, "idx_IdDocCredito").HasFillFactor(80);

            entity.HasIndex(e => e.CliCounter, "idx_cli_counter").HasFillFactor(80);

            entity.HasIndex(e => e.IdCabVang, "idx_idCabVang").HasFillFactor(80);

            entity.HasIndex(e => e.IdCliente, "idx_idCliente").HasFillFactor(80);

            entity.HasIndex(e => e.DocOrig, "idx_idDocOrig").HasFillFactor(80);

            entity.Property(e => e.Id).HasColumnName("id");
            entity.Property(e => e.Awb)
                .HasMaxLength(50)
                .HasColumnName("awb");
            entity.Property(e => e.CliCounter).HasColumnName("cli_counter");
            entity.Property(e => e.DocNovo)
                .HasMaxLength(10)
                .HasColumnName("docNovo");
            entity.Property(e => e.DocOrig)
                .HasMaxLength(10)
                .HasColumnName("docOrig");
            entity.Property(e => e.DtIntrod)
                .HasDefaultValueSql("(getdate())")
                .HasColumnType("datetime")
                .HasColumnName("dtIntrod");
            entity.Property(e => e.IdCabVang).HasColumnName("idCabVang");
            entity.Property(e => e.IdCliMorada).HasColumnName("idCliMorada");
            entity.Property(e => e.IdCliente).HasColumnName("idCliente");
            entity.Property(e => e.IdDocCredito).HasColumnName("idDocCredito");
            entity.Property(e => e.IdUtilCliente).HasColumnName("idUtilCliente");
            entity.Property(e => e.IdUtilIntrod).HasColumnName("idUtilIntrod");
        });

        modelBuilder.Entity<DocumentosCab>(entity =>
        {
            entity.HasKey(e => new { e.IdEstado, e.IdTipoDoc, e.AnoDoc, e.IdDepartamentoDoc, e.NumeradorDoc });

            entity.ToTable("DocumentosCab");

            entity.HasIndex(e => new { e.AnoDoc, e.DtFecho }, "IDx_anoDoc_dtFecho").HasFillFactor(80);

            entity.HasIndex(e => new { e.DtFecho, e.IdEntidade, e.IdCliente, e.Id }, "IDx_dtFecho_idEntidade_idCliente_id").HasFillFactor(80);

            entity.HasIndex(e => e.DtFecho, "Idx_dtFecho").HasFillFactor(80);

            entity.HasIndex(e => new { e.EmissaoExtra, e.DtFecho }, "Idx_emissaoExtra_dtFecho").HasFillFactor(80);

            entity.HasIndex(e => new { e.IdDepartamentoDoc, e.IdEntidade, e.DtFecho }, "Idx_idDepartamentoDoc_idEntidade_dtFecho").HasFillFactor(80);

            entity.HasIndex(e => new { e.IdTipoDoc, e.DtFecho }, "Idx_idTipoDoc_dtFecho").HasFillFactor(80);

            entity.HasIndex(e => new { e.IdTipoDoc, e.EmissaoExtra, e.IdEntidade, e.DtFecho }, "Idx_idTipoDoc_emissaoExtra_idEntidade_dtFecho").HasFillFactor(80);

            entity.HasIndex(e => new { e.IdTipoDoc, e.IdDepartamentoDoc, e.IdEntidade, e.DtFecho }, "Idx_idTipoDoc_idDepartamentoDoc_idEntidade_dtFecho").HasFillFactor(80);

            entity.HasIndex(e => new { e.Sentido, e.DtCreditada, e.IdEntidade }, "Idx_sentido_dtCreditada_idEntidade").HasFillFactor(80);

            entity.HasIndex(e => new { e.Sentido, e.DtFecho, e.DtAnulacao, e.DtCreditada }, "Idx_sentido_dtFecho_dtAnulacao_dtCreditada").HasFillFactor(80);

            entity.HasIndex(e => new { e.DtExportSap, e.DtEmissao }, "idx_dtExportSAP_dtEmissao").HasFillFactor(80);

            entity.HasIndex(e => new { e.DtEmissao, e.Id, e.IdEstado, e.IdTipoDoc, e.IdDepartamentoDoc, e.NumDoc, e.DtDoc, e.IdCliente, e.DtVencimento, e.ValorDoc, e.DtCreditada }, "idx_dtemissao_id_idEstado_idTipoDoc_idDept").HasFillFactor(80);

            entity.HasIndex(e => new { e.IdEntidade, e.IdCliente, e.DtDoc, e.DtEmissao }, "idx_idEntidade_idcliente_dtDoc_dtEmissao").HasFillFactor(80);

            entity.HasIndex(e => new { e.IdTipoDoc, e.AnoDoc, e.IdDepartamentoDoc, e.DtDoc }, "idx_idTipoDoc_anoDoc_idDeptDoc_dtDoc").HasFillFactor(80);

            entity.HasIndex(e => new { e.IdTipoDoc, e.AnoDoc, e.IdDepartamentoDoc, e.IdEntidade, e.DtFecho }, "idx_idTipoDoc_anoDoc_idDept_idEntidade_dtFecho").HasFillFactor(80);

            entity.HasIndex(e => new { e.Id, e.DtFecho }, "idx_id_dtFecho").HasFillFactor(80);

            entity.HasIndex(e => new { e.NumDoc, e.IdEntidade }, "idx_numDoc_idEntidade").HasFillFactor(80);

            entity.HasIndex(e => e.NumVias, "idx_numvias").HasFillFactor(80);

            entity.Property(e => e.IdEstado)
                .HasComment("indica se doc. está emitido/fechado ou é provisorio (apenas documentos fechados sao documentos reais) ")
                .HasColumnName("idEstado");
            entity.Property(e => e.IdTipoDoc)
                .HasComment("tipo de documento (DocumentosTipos_T)")
                .HasColumnName("idTipoDoc");
            entity.Property(e => e.AnoDoc)
                .HasComment("ano do documento")
                .HasColumnName("anoDoc");
            entity.Property(e => e.IdDepartamentoDoc)
                .HasComment("departamento de facturacao (DocumentosDepartamentos_T)")
                .HasColumnName("idDepartamentoDoc");
            entity.Property(e => e.NumeradorDoc)
                .HasComment("numerador (contador) do documento (tem em conta o tipo, ano e departamento)")
                .HasColumnName("numeradorDoc");
            entity.Property(e => e.Cambio)
                .HasDefaultValueSql("((1))")
                .HasComment("cambio da moeda em relacao à unidade monetaria “default” do sistema")
                .HasColumnType("money")
                .HasColumnName("cambio");
            entity.Property(e => e.DescTipoDoc)
                .HasMaxLength(50)
                .HasColumnName("descTipoDoc");
            entity.Property(e => e.DtAnulacao)
                .HasComment("data em que documento foi anulado (nao utilizado/implementado, foi decidido com a Dir. Financeira que nao haverá anulacao de documentos)")
                .HasColumnType("datetime")
                .HasColumnName("dtAnulacao");
            entity.Property(e => e.DtCreditada)
                .HasComment("data em que documento teve todas as suas linhas creditadas")
                .HasColumnType("datetime")
                .HasColumnName("dtCreditada");
            entity.Property(e => e.DtDoc)
                .HasComment("data do documento")
                .HasColumnType("datetime")
                .HasColumnName("dtDoc");
            entity.Property(e => e.DtEmissao)
                .HasComment("data em que documento foi emitido (impresso)")
                .HasColumnType("datetime")
                .HasColumnName("dtEmissao");
            entity.Property(e => e.DtExport)
                .HasComment("data em que foi exportado para o Vanguarda")
                .HasColumnType("datetime")
                .HasColumnName("dtExport");
            entity.Property(e => e.DtExportSap)
                .HasColumnType("datetime")
                .HasColumnName("dtExportSAP");
            entity.Property(e => e.DtExportSdd)
                .HasComment("data em que foi exportado para DD")
                .HasColumnType("datetime")
                .HasColumnName("dtExportSDD");
            entity.Property(e => e.DtFecho)
                .HasComment("data em que documento foi fechado (passou a ser um documento real)")
                .HasColumnType("datetime")
                .HasColumnName("dtFecho");
            entity.Property(e => e.DtIntrod)
                .HasComment("data criacao registo")
                .HasColumnType("datetime")
                .HasColumnName("dtIntrod");
            entity.Property(e => e.DtUltAct)
                .HasComment("– data da ultima alteracao ao registo")
                .HasColumnType("datetime")
                .HasColumnName("dtUltAct");
            entity.Property(e => e.DtVencimento)
                .HasComment("data de vencimento do documento")
                .HasColumnType("datetime")
                .HasColumnName("dtVencimento");
            entity.Property(e => e.EmissaoExtra)
                .HasDefaultValueSql("((0))")
                .HasColumnName("emissaoExtra");
            entity.Property(e => e.ExportSdd)
                .HasComment("exportar para Debitos Directos")
                .HasColumnName("ExportSDD");
            entity.Property(e => e.FacturaIndividual)
                .HasDefaultValueSql("((0))")
                .HasComment("indica se documento deve ser referente a apenas um (=1) ou varios (<>1)  items\r\nobservacoes\r\n")
                .HasColumnName("facturaIndividual");
            entity.Property(e => e.Id)
                .ValueGeneratedOnAdd()
                .HasColumnName("id");
            entity.Property(e => e.IdCliMorada).HasColumnName("idCliMorada");
            entity.Property(e => e.IdCliMoradaQuebra).HasColumnName("idCliMoradaQuebra");
            entity.Property(e => e.IdCliente)
                .HasComment("codigo do cliente a que o documento diz respeito")
                .HasColumnName("idCliente");
            entity.Property(e => e.IdClienteQuebra).HasColumnName("idClienteQuebra");
            entity.Property(e => e.IdEntidade)
                .HasDefaultValueSql("((1))")
                .HasComment("entidade owner (empresa rangel/fedex) associada ao documento")
                .HasColumnName("idEntidade");
            entity.Property(e => e.IdExport)
                .HasComment("codigo “deste” cabecalho na tabela do Vanguarda")
                .HasColumnName("idExport");
            entity.Property(e => e.IdModoPagamento)
                .HasComment("modo de pagamento (DocumentosModosPagamento_T)")
                .HasColumnName("idModoPagamento");
            entity.Property(e => e.IdMoeda)
                .HasComment("codigo da moeda (UnidadesMonetarias_T) a que o valor se refere")
                .HasColumnName("idMoeda");
            entity.Property(e => e.IdUtilAnulacao).HasColumnName("idUtilAnulacao");
            entity.Property(e => e.IdUtilCreditada)
                .HasComment("utilizador que creditou")
                .HasColumnName("idUtilCreditada");
            entity.Property(e => e.IdUtilEmissao)
                .HasComment("utilizador que imprimiu o documento")
                .HasColumnName("idUtilEmissao");
            entity.Property(e => e.IdUtilFecho)
                .HasComment("utilizador que fechou (facturou) o documento")
                .HasColumnName("idUtilFecho");
            entity.Property(e => e.IdUtilIntrod)
                .HasComment("utilizador criacao do registo")
                .HasColumnName("idUtilIntrod");
            entity.Property(e => e.Libertados).HasColumnName("libertados");
            entity.Property(e => e.NumDoc)
                .HasMaxLength(12)
                .HasComment("numero do documento")
                .HasColumnName("numDoc");
            entity.Property(e => e.NumDocAdos).HasColumnName("numDocAdos");
            entity.Property(e => e.NumVias)
                .HasComment("numero de vias emitidas.")
                .HasColumnName("numVias");
            entity.Property(e => e.Observacoes)
                .HasMaxLength(2000)
                .HasColumnName("observacoes");
            entity.Property(e => e.QuebraFactClassOri).HasColumnName("quebraFactClassOri");
            entity.Property(e => e.QuebraFactDepart)
                .HasMaxLength(50)
                .HasColumnName("quebraFactDepart");
            entity.Property(e => e.QuebraFactServico).HasColumnName("quebraFactServico");
            entity.Property(e => e.Sentido)
                .HasDefaultValueSql("((1))")
                .HasComment("1 ou -1 conforme é débito ou crédito ao cliente.")
                .HasColumnName("sentido");
            entity.Property(e => e.ValorDoc)
                .HasComment("valor do documento")
                .HasColumnType("money")
                .HasColumnName("valorDoc");
            entity.Property(e => e.ValorIva)
                .HasComment("valor total do iva")
                .HasColumnType("money")
                .HasColumnName("valorIVA");
            entity.Property(e => e.ValorSiva)
                .HasComment("valor sem iva")
                .HasColumnType("money")
                .HasColumnName("valorSIVA");
        });

        modelBuilder.Entity<DocumentosCfg>(entity =>
        {
            entity.ToTable("DocumentosCfg");

            entity.Property(e => e.Id).HasColumnName("id");
            entity.Property(e => e.Activo).HasColumnName("activo");
            entity.Property(e => e.Ano)
                .HasMaxLength(2)
                .HasColumnName("ano");
            entity.Property(e => e.IdEntidade)
                .HasDefaultValueSql("(1)")
                .HasColumnName("idEntidade");
        });

        modelBuilder.Entity<DocumentosComissoesTipoT>(entity =>
        {
            entity.ToTable("DocumentosComissoesTipo_T");

            entity.HasIndex(e => new { e.IdEntidade, e.Codigo }, "idx_idEntidade_codigo").HasFillFactor(80);

            entity.Property(e => e.Id).HasColumnName("id");
            entity.Property(e => e.Activo)
                .IsRequired()
                .HasDefaultValueSql("((1))")
                .HasColumnName("activo");
            entity.Property(e => e.Codigo)
                .HasMaxLength(15)
                .HasColumnName("codigo");
            entity.Property(e => e.Default).HasColumnName("default");
            entity.Property(e => e.Descricao)
                .HasMaxLength(50)
                .HasColumnName("descricao");
            entity.Property(e => e.IdEntidade)
                .HasDefaultValueSql("((1))")
                .HasColumnName("idEntidade");
            entity.Property(e => e.IsComissionavel)
                .IsRequired()
                .HasDefaultValueSql("((1))")
                .HasColumnName("isComissionavel");
            entity.Property(e => e.NumMesesSfact).HasColumnName("numMesesSFact");
        });

        modelBuilder.Entity<DocumentosDatasFecho>(entity =>
        {
            entity.HasKey(e => new { e.IdTipoDoc, e.IdDepartamentoDoc, e.AnoDoc });

            entity.ToTable("DocumentosDatasFecho");

            entity.Property(e => e.IdTipoDoc).HasColumnName("idTipoDoc");
            entity.Property(e => e.IdDepartamentoDoc).HasColumnName("idDepartamentoDoc");
            entity.Property(e => e.AnoDoc).HasColumnName("anoDoc");
            entity.Property(e => e.DtFecho)
                .HasColumnType("datetime")
                .HasColumnName("dtFecho");
        });

        modelBuilder.Entity<DocumentosDepartamentosT>(entity =>
        {
            entity.ToTable("DocumentosDepartamentos_T");

            entity.Property(e => e.Id).HasColumnName("id");
            entity.Property(e => e.Automatica).HasColumnName("automatica");
            entity.Property(e => e.Codigo)
                .HasMaxLength(10)
                .HasColumnName("codigo");
            entity.Property(e => e.CodigoFact)
                .HasMaxLength(3)
                .HasDefaultValueSql("('')")
                .HasColumnName("codigoFact");
            entity.Property(e => e.CredAdu).HasColumnName("credAdu");
            entity.Property(e => e.Descricao)
                .HasMaxLength(50)
                .HasColumnName("descricao");
            entity.Property(e => e.Exportacao).HasColumnName("exportacao");
            entity.Property(e => e.IdEntidade)
                .HasDefaultValueSql("((1))")
                .HasColumnName("idEntidade");
            entity.Property(e => e.IdPlataforma).HasColumnName("idPlataforma");
            entity.Property(e => e.IdRegime).HasColumnName("idRegime");
            entity.Property(e => e.Importacao).HasColumnName("importacao");
            entity.Property(e => e.Manual).HasColumnName("manual");
            entity.Property(e => e.Material).HasColumnName("material");
            entity.Property(e => e.TemPlataforma).HasColumnName("temPlataforma");
            entity.Property(e => e.ValidoBp).HasColumnName("validoBP");
        });

        modelBuilder.Entity<DocumentosDigitalizacao>(entity =>
        {
            entity.HasKey(e => new { e.IdCab, e.IdTipoDigit });

            entity.ToTable("DocumentosDigitalizacao");

            entity.Property(e => e.IdCab).HasColumnName("idCab");
            entity.Property(e => e.IdTipoDigit).HasColumnName("idTipoDigit");
            entity.Property(e => e.DtAdos)
                .HasColumnType("datetime")
                .HasColumnName("dtAdos");
            entity.Property(e => e.DtIntrod)
                .HasDefaultValueSql("(getdate())")
                .HasColumnType("datetime")
                .HasColumnName("dtIntrod");
            entity.Property(e => e.NumDocAdos).HasColumnName("numDocAdos");
        });

        modelBuilder.Entity<DocumentosDigitalizacaoTipoT>(entity =>
        {
            entity.ToTable("DocumentosDigitalizacaoTipo_T");

            entity.Property(e => e.Id).HasColumnName("id");
            entity.Property(e => e.CatAdos)
                .HasMaxLength(10)
                .HasColumnName("catADOS");
            entity.Property(e => e.Codigo)
                .HasMaxLength(10)
                .HasColumnName("codigo");
            entity.Property(e => e.Descricao)
                .HasMaxLength(50)
                .HasColumnName("descricao");
            entity.Property(e => e.IdEntidade).HasColumnName("idEntidade");
            entity.Property(e => e.Report)
                .HasMaxLength(50)
                .HasColumnName("report");
        });

        modelBuilder.Entity<DocumentosEnvioPortal>(entity =>
        {
            entity.ToTable("DocumentosEnvioPortal");

            entity.Property(e => e.Id).HasColumnName("id");
            entity.Property(e => e.DtEnvio)
                .HasColumnType("datetime")
                .HasColumnName("dtEnvio");
            entity.Property(e => e.DtIntrod)
                .HasColumnType("datetime")
                .HasColumnName("dtIntrod");
            entity.Property(e => e.IdAdos).HasColumnName("idADOS");
            entity.Property(e => e.IdClienteEmailing).HasColumnName("idClienteEmailing");
            entity.Property(e => e.IdDoc).HasColumnName("idDoc");
            entity.Property(e => e.IdUtilEnvioManual).HasColumnName("idUtilEnvioManual");
            entity.Property(e => e.Rosto).HasColumnName("rosto");
        });

        modelBuilder.Entity<DocumentosFormatoEmissaoT>(entity =>
        {
            entity.ToTable("DocumentosFormatoEmissao_T");

            entity.Property(e => e.Id)
                .ValueGeneratedOnAdd()
                .HasColumnName("id");
            entity.Property(e => e.Activo)
                .IsRequired()
                .HasDefaultValueSql("((1))")
                .HasColumnName("activo");
            entity.Property(e => e.Codigo)
                .HasMaxLength(15)
                .HasColumnName("codigo");
            entity.Property(e => e.Descricao)
                .HasMaxLength(50)
                .HasColumnName("descricao");
            entity.Property(e => e.IdEntidade).HasColumnName("idEntidade");
            entity.Property(e => e.IsDefault).HasColumnName("isDefault");
            entity.Property(e => e.IsManual).HasColumnName("isManual");
        });

        modelBuilder.Entity<DocumentosInterface>(entity =>
        {
            entity.HasKey(e => new { e.IdCab, e.IdInterface });

            entity.ToTable("DocumentosInterface");

            entity.Property(e => e.IdCab).HasColumnName("idCab");
            entity.Property(e => e.IdInterface).HasColumnName("idInterface");
            entity.Property(e => e.DtEnv)
                .HasColumnType("datetime")
                .HasColumnName("dtEnv");
            entity.Property(e => e.DtUltAct)
                .HasColumnType("datetime")
                .HasColumnName("dtUltAct");
            entity.Property(e => e.Env).HasColumnName("env");
        });

        modelBuilder.Entity<DocumentosInterfaceTipoT>(entity =>
        {
            entity.ToTable("DocumentosInterfaceTipo_T");

            entity.Property(e => e.Id).HasColumnName("id");
            entity.Property(e => e.Codigo)
                .HasMaxLength(20)
                .HasColumnName("codigo");
            entity.Property(e => e.Descricao)
                .HasMaxLength(50)
                .HasColumnName("descricao");
        });

        modelBuilder.Entity<DocumentosLin>(entity =>
        {
            entity.HasKey(e => new { e.IdCab, e.Lin });

            entity.ToTable("DocumentosLin");

            entity.HasIndex(e => e.Awbnumber, "idx_awbnumber").HasFillFactor(80);

            entity.HasIndex(e => e.DtComis, "idx_dtComis").HasFillFactor(80);

            entity.HasIndex(e => new { e.DtCreditada, e.IdExportacao, e.IdImportacao, e.IdEntregaMaterial, e.LinhaAuto, e.DtAnulacao, e.Id }, "idx_dtCreditada_idExportacao_idImportacao_idEntregaMaterial_linhaAuto_dtAnulacao_id").HasFillFactor(80);

            entity.HasIndex(e => e.DtExportSap, "idx_dtExportSAP").HasFillFactor(80);

            entity.HasIndex(e => e.DtProduto, "idx_dtProduto").HasFillFactor(80);

            entity.HasIndex(e => e.Id, "idx_id").HasFillFactor(80);

            entity.HasIndex(e => new { e.IdCab, e.DtAnulacao }, "idx_idCab_dtAnulacao").HasFillFactor(80);

            entity.HasIndex(e => new { e.IdCab, e.DtCreditada }, "idx_idCab_dtCreditada_id").HasFillFactor(80);

            entity.HasIndex(e => e.IdEntregaMaterial, "idx_idEntregaMaterial").HasFillFactor(80);

            entity.HasIndex(e => e.IdImportacao, "idx_idImportacao").HasFillFactor(80);

            entity.HasIndex(e => e.IdLinOrigem, "idx_idLinOrigem").HasFillFactor(80);

            entity.HasIndex(e => new { e.IdManifesto, e.IdManifestoItem, e.IdServicoDet }, "idx_idManifesto_idManifestoItem_idServicoDet").HasFillFactor(80);

            entity.HasIndex(e => new { e.IdTipoComis, e.ValComis, e.DtComis }, "idx_idTipoComis_valComis_dtComis").HasFillFactor(80);

            entity.HasIndex(e => new { e.IdTipoComis, e.IdEquipaComis, e.IdUtilComis, e.DtComis }, "idx_idtipocomis, idequipacomis_idutilcoms_dtcomis").HasFillFactor(80);

            entity.Property(e => e.IdCab)
                .HasComment("id do cabecalho (DocumentosCab)")
                .HasColumnName("idCab");
            entity.Property(e => e.Lin)
                .HasComment("numerador da linha")
                .HasColumnName("lin");
            entity.Property(e => e.Awbnumber)
                .HasMaxLength(50)
                .HasComment("awb facturada")
                .HasColumnName("awbnumber");
            entity.Property(e => e.Cambio)
                .HasColumnType("money")
                .HasColumnName("cambio");
            entity.Property(e => e.CodIva)
                .HasMaxLength(10)
                .HasColumnName("codIva");
            entity.Property(e => e.DescProduto)
                .HasMaxLength(250)
                .HasComment("descricao do produto facturado")
                .HasColumnName("descProduto");
            entity.Property(e => e.Dimensoes)
                .HasMaxLength(50)
                .HasComment("dimensoes")
                .HasColumnName("dimensoes");
            entity.Property(e => e.DtAnulacao)
                .HasColumnType("datetime")
                .HasColumnName("dtAnulacao");
            entity.Property(e => e.DtComis)
                .HasColumnType("datetime")
                .HasColumnName("dtComis");
            entity.Property(e => e.DtCreditada)
                .HasComment("data em que linha foi creditada")
                .HasColumnType("datetime")
                .HasColumnName("dtCreditada");
            entity.Property(e => e.DtExport)
                .HasColumnType("datetime")
                .HasColumnName("dtExport");
            entity.Property(e => e.DtExportSap)
                .HasColumnType("datetime")
                .HasColumnName("dtExportSAP");
            entity.Property(e => e.DtIntrod)
                .HasDefaultValueSql("(getdate())")
                .HasColumnType("datetime")
                .HasColumnName("dtIntrod");
            entity.Property(e => e.DtProduto)
                .HasComment("data do produto facturado")
                .HasColumnType("datetime")
                .HasColumnName("dtProduto");
            entity.Property(e => e.ExtCidade)
                .HasMaxLength(50)
                .HasComment("cidade")
                .HasColumnName("extCidade");
            entity.Property(e => e.ExtCpostal)
                .HasMaxLength(15)
                .HasComment("cpostal")
                .HasColumnName("extCPostal");
            entity.Property(e => e.ExtEmpresa)
                .HasMaxLength(60)
                .HasComment("empresa assoc. ao servico")
                .HasColumnName("extEmpresa");
            entity.Property(e => e.ExtIdPais).HasColumnName("extIdPais");
            entity.Property(e => e.ExtMorada)
                .HasMaxLength(100)
                .HasComment("morada")
                .HasColumnName("extMorada");
            entity.Property(e => e.ExtPais)
                .HasMaxLength(50)
                .HasComment("pais assoc. ao servico")
                .HasColumnName("extPais");
            entity.Property(e => e.FaltaValorUnitario).HasColumnName("faltaValorUnitario");
            entity.Property(e => e.Id)
                .ValueGeneratedOnAdd()
                .HasColumnName("id");
            entity.Property(e => e.IdAgrupamento).HasColumnName("idAgrupamento");
            entity.Property(e => e.IdEntregaMaterial)
                .HasComment("codigo da entrega de material (MaterialPedido)")
                .HasColumnName("idEntregaMaterial");
            entity.Property(e => e.IdEntregaMaterialItem).HasColumnName("idEntregaMaterialItem");
            entity.Property(e => e.IdEquipaComis).HasColumnName("idEquipaComis");
            entity.Property(e => e.IdExport).HasColumnName("idExport");
            entity.Property(e => e.IdExportacao)
                .HasComment("codigo da exportacao (ExportacaoManifesto)")
                .HasColumnName("idExportacao");
            entity.Property(e => e.IdExportacaoItem).HasColumnName("idExportacaoItem");
            entity.Property(e => e.IdImportacao)
                .HasComment("codigo da importacao (ImportacaoManifesto)")
                .HasColumnName("idImportacao");
            entity.Property(e => e.IdImportacaoItem).HasColumnName("idImportacaoItem");
            entity.Property(e => e.IdIvareg).HasColumnName("idIVAREG");
            entity.Property(e => e.IdLinOrigem)
                .HasComment("codigo da linha (documentosLin) que deu origem a esta")
                .HasColumnName("idLinOrigem");
            entity.Property(e => e.IdManifesto).HasColumnName("idManifesto");
            entity.Property(e => e.IdManifestoItem).HasColumnName("idManifestoItem");
            entity.Property(e => e.IdMoeda)
                .HasDefaultValueSql("((1))")
                .HasColumnName("idMoeda");
            entity.Property(e => e.IdProduto)
                .HasComment("produto de facturacao (ProdutoTipos_T)")
                .HasColumnName("idProduto");
            entity.Property(e => e.IdRegime).HasColumnName("idRegime");
            entity.Property(e => e.IdServico).HasColumnName("idServico");
            entity.Property(e => e.IdServicoDet).HasColumnName("idServicoDet");
            entity.Property(e => e.IdTarifa)
                .HasComment("tarifa utilizada para obter valor")
                .HasColumnName("idTarifa");
            entity.Property(e => e.IdTipoComis).HasColumnName("idTipoComis");
            entity.Property(e => e.IdTipoIva)
                .HasComment("tipo de iva associado ao servico (IVATipo_T)")
                .HasColumnName("idTipoIVA");
            entity.Property(e => e.IdUtilAnulacao).HasColumnName("idUtilAnulacao");
            entity.Property(e => e.IdUtilComis).HasColumnName("idUtilComis");
            entity.Property(e => e.IdUtilCreditada).HasColumnName("idUtilCreditada");
            entity.Property(e => e.IdUtilIntrod).HasColumnName("idUtilIntrod");
            entity.Property(e => e.LinhaAuto)
                .HasDefaultValueSql("((0))")
                .HasComment("linha criada automaticamente")
                .HasColumnName("linhaAuto");
            entity.Property(e => e.M3)
                .HasColumnType("money")
                .HasColumnName("m3");
            entity.Property(e => e.NumVolumes)
                .HasComment("numero de volumes associados ao produto facturado")
                .HasColumnName("numVolumes");
            entity.Property(e => e.ObsOrig)
                .HasMaxLength(200)
                .HasComment("observacoes relativas a correccoes automaticas de dados do servico")
                .HasColumnName("obsOrig");
            entity.Property(e => e.Observacoes)
                .HasMaxLength(1000)
                .HasColumnName("observacoes");
            entity.Property(e => e.Peso)
                .HasComment("peso")
                .HasColumnType("money")
                .HasColumnName("peso");
            entity.Property(e => e.PesoVol)
                .HasComment("peso volumetrico")
                .HasColumnType("money")
                .HasColumnName("pesoVol");
            entity.Property(e => e.PodDate)
                .HasComment("data de entrega do produto")
                .HasColumnType("datetime")
                .HasColumnName("podDate");
            entity.Property(e => e.PodSignature)
                .HasMaxLength(50)
                .HasComment("assinatura da entrega do produto")
                .HasColumnName("podSignature");
            entity.Property(e => e.ProdCidade)
                .HasMaxLength(50)
                .HasComment("cidade")
                .HasColumnName("prodCidade");
            entity.Property(e => e.ProdCpostal)
                .HasMaxLength(15)
                .HasComment("cpostal")
                .HasColumnName("prodCPostal");
            entity.Property(e => e.ProdEmpresa)
                .HasMaxLength(60)
                .HasComment("empresa assoc. ao servico")
                .HasColumnName("prodEmpresa");
            entity.Property(e => e.ProdIdPais).HasColumnName("prodIdPais");
            entity.Property(e => e.ProdMorada)
                .HasMaxLength(100)
                .HasComment("morada")
                .HasColumnName("prodMorada");
            entity.Property(e => e.ProdPais)
                .HasMaxLength(50)
                .HasComment("pais assoc. ao servico")
                .HasColumnName("prodPais");
            entity.Property(e => e.ProdRef)
                .HasMaxLength(50)
                .HasComment("referencia do servico (introd. pelo cliente) ")
                .HasColumnName("prodRef");
            entity.Property(e => e.Quantidade)
                .HasDefaultValueSql("((1))")
                .HasComment("quantidade associada ao servico")
                .HasColumnType("money")
                .HasColumnName("quantidade");
            entity.Property(e => e.RefTipoComis)
                .HasMaxLength(20)
                .HasColumnName("refTipoComis");
            entity.Property(e => e.Servico)
                .HasMaxLength(15)
                .HasComment("descricao do servico facturado")
                .HasColumnName("servico");
            entity.Property(e => e.TaxaIva)
                .HasComment("taxa de iva a aplicar")
                .HasColumnType("money")
                .HasColumnName("taxaIVA");
            entity.Property(e => e.ValComis)
                .HasColumnType("money")
                .HasColumnName("valComis");
            entity.Property(e => e.ValorCiva)
                .HasComment("valor total com iva incluido")
                .HasColumnType("money")
                .HasColumnName("valorCIVA");
            entity.Property(e => e.ValorIva)
                .HasComment("valor do iva")
                .HasColumnType("money")
                .HasColumnName("valorIVA");
            entity.Property(e => e.ValorProduto)
                .HasComment("valor do produto (valorunitario * quantidade)")
                .HasColumnType("money")
                .HasColumnName("valorProduto");
            entity.Property(e => e.ValorSiva)
                .HasComment("valor total sem iva")
                .HasColumnType("money")
                .HasColumnName("valorSIVA");
            entity.Property(e => e.ValorUnitario)
                .HasComment("valor unitario")
                .HasColumnType("money")
                .HasColumnName("valorUnitario");
        });

        modelBuilder.Entity<DocumentosLinBk>(entity =>
        {
            entity
                .HasNoKey()
                .ToTable("DocumentosLin_BK");

            entity.Property(e => e.Awbnumber)
                .HasMaxLength(50)
                .HasColumnName("awbnumber");
            entity.Property(e => e.Cambio)
                .HasColumnType("money")
                .HasColumnName("cambio");
            entity.Property(e => e.CodIva)
                .HasMaxLength(10)
                .HasColumnName("codIva");
            entity.Property(e => e.DescProduto)
                .HasMaxLength(250)
                .HasColumnName("descProduto");
            entity.Property(e => e.Dimensoes)
                .HasMaxLength(50)
                .HasColumnName("dimensoes");
            entity.Property(e => e.DtAnulacao)
                .HasColumnType("datetime")
                .HasColumnName("dtAnulacao");
            entity.Property(e => e.DtComis)
                .HasColumnType("datetime")
                .HasColumnName("dtComis");
            entity.Property(e => e.DtCreditada)
                .HasColumnType("datetime")
                .HasColumnName("dtCreditada");
            entity.Property(e => e.DtExport)
                .HasColumnType("datetime")
                .HasColumnName("dtExport");
            entity.Property(e => e.DtExportSap)
                .HasColumnType("datetime")
                .HasColumnName("dtExportSAP");
            entity.Property(e => e.DtIntrod)
                .HasColumnType("datetime")
                .HasColumnName("dtIntrod");
            entity.Property(e => e.DtProduto)
                .HasColumnType("datetime")
                .HasColumnName("dtProduto");
            entity.Property(e => e.ExtCidade)
                .HasMaxLength(50)
                .HasColumnName("extCidade");
            entity.Property(e => e.ExtCpostal)
                .HasMaxLength(15)
                .HasColumnName("extCPostal");
            entity.Property(e => e.ExtEmpresa)
                .HasMaxLength(60)
                .HasColumnName("extEmpresa");
            entity.Property(e => e.ExtIdPais).HasColumnName("extIdPais");
            entity.Property(e => e.ExtMorada)
                .HasMaxLength(100)
                .HasColumnName("extMorada");
            entity.Property(e => e.ExtPais)
                .HasMaxLength(50)
                .HasColumnName("extPais");
            entity.Property(e => e.FaltaValorUnitario).HasColumnName("faltaValorUnitario");
            entity.Property(e => e.Id).HasColumnName("id");
            entity.Property(e => e.IdAgrupamento).HasColumnName("idAgrupamento");
            entity.Property(e => e.IdCab).HasColumnName("idCab");
            entity.Property(e => e.IdEntregaMaterial).HasColumnName("idEntregaMaterial");
            entity.Property(e => e.IdEntregaMaterialItem).HasColumnName("idEntregaMaterialItem");
            entity.Property(e => e.IdEquipaComis).HasColumnName("idEquipaComis");
            entity.Property(e => e.IdExport).HasColumnName("idExport");
            entity.Property(e => e.IdExportacao).HasColumnName("idExportacao");
            entity.Property(e => e.IdExportacaoItem).HasColumnName("idExportacaoItem");
            entity.Property(e => e.IdImportacao).HasColumnName("idImportacao");
            entity.Property(e => e.IdImportacaoItem).HasColumnName("idImportacaoItem");
            entity.Property(e => e.IdIvareg).HasColumnName("idIVAREG");
            entity.Property(e => e.IdLinOrigem).HasColumnName("idLinOrigem");
            entity.Property(e => e.IdManifesto).HasColumnName("idManifesto");
            entity.Property(e => e.IdManifestoItem).HasColumnName("idManifestoItem");
            entity.Property(e => e.IdMoeda).HasColumnName("idMoeda");
            entity.Property(e => e.IdProduto).HasColumnName("idProduto");
            entity.Property(e => e.IdRegime).HasColumnName("idRegime");
            entity.Property(e => e.IdServico).HasColumnName("idServico");
            entity.Property(e => e.IdServicoDet).HasColumnName("idServicoDet");
            entity.Property(e => e.IdTarifa).HasColumnName("idTarifa");
            entity.Property(e => e.IdTipoComis).HasColumnName("idTipoComis");
            entity.Property(e => e.IdTipoIva).HasColumnName("idTipoIVA");
            entity.Property(e => e.IdUtilAnulacao).HasColumnName("idUtilAnulacao");
            entity.Property(e => e.IdUtilComis).HasColumnName("idUtilComis");
            entity.Property(e => e.IdUtilCreditada).HasColumnName("idUtilCreditada");
            entity.Property(e => e.IdUtilIntrod).HasColumnName("idUtilIntrod");
            entity.Property(e => e.Lin).HasColumnName("lin");
            entity.Property(e => e.LinhaAuto).HasColumnName("linhaAuto");
            entity.Property(e => e.M3)
                .HasColumnType("money")
                .HasColumnName("m3");
            entity.Property(e => e.NumVolumes).HasColumnName("numVolumes");
            entity.Property(e => e.ObsOrig)
                .HasMaxLength(200)
                .HasColumnName("obsOrig");
            entity.Property(e => e.Observacoes)
                .HasMaxLength(1000)
                .HasColumnName("observacoes");
            entity.Property(e => e.Peso)
                .HasColumnType("money")
                .HasColumnName("peso");
            entity.Property(e => e.PesoVol)
                .HasColumnType("money")
                .HasColumnName("pesoVol");
            entity.Property(e => e.PodDate)
                .HasColumnType("datetime")
                .HasColumnName("podDate");
            entity.Property(e => e.PodSignature)
                .HasMaxLength(50)
                .HasColumnName("podSignature");
            entity.Property(e => e.ProdCidade)
                .HasMaxLength(50)
                .HasColumnName("prodCidade");
            entity.Property(e => e.ProdCpostal)
                .HasMaxLength(15)
                .HasColumnName("prodCPostal");
            entity.Property(e => e.ProdEmpresa)
                .HasMaxLength(60)
                .HasColumnName("prodEmpresa");
            entity.Property(e => e.ProdIdPais).HasColumnName("prodIdPais");
            entity.Property(e => e.ProdMorada)
                .HasMaxLength(100)
                .HasColumnName("prodMorada");
            entity.Property(e => e.ProdPais)
                .HasMaxLength(50)
                .HasColumnName("prodPais");
            entity.Property(e => e.ProdRef)
                .HasMaxLength(50)
                .HasColumnName("prodRef");
            entity.Property(e => e.Quantidade)
                .HasColumnType("money")
                .HasColumnName("quantidade");
            entity.Property(e => e.RefTipoComis)
                .HasMaxLength(20)
                .HasColumnName("refTipoComis");
            entity.Property(e => e.Servico)
                .HasMaxLength(15)
                .HasColumnName("servico");
            entity.Property(e => e.TaxaIva)
                .HasColumnType("money")
                .HasColumnName("taxaIVA");
            entity.Property(e => e.ValComis)
                .HasColumnType("money")
                .HasColumnName("valComis");
            entity.Property(e => e.ValorCiva)
                .HasColumnType("money")
                .HasColumnName("valorCIVA");
            entity.Property(e => e.ValorIva)
                .HasColumnType("money")
                .HasColumnName("valorIVA");
            entity.Property(e => e.ValorProduto)
                .HasColumnType("money")
                .HasColumnName("valorProduto");
            entity.Property(e => e.ValorSiva)
                .HasColumnType("money")
                .HasColumnName("valorSIVA");
            entity.Property(e => e.ValorUnitario)
                .HasColumnType("money")
                .HasColumnName("valorUnitario");
        });

        modelBuilder.Entity<DocumentosModosPagamentoT>(entity =>
        {
            entity.ToTable("DocumentosModosPagamento_T");

            entity.Property(e => e.Id).HasColumnName("id");
            entity.Property(e => e.Activo).HasColumnName("activo");
            entity.Property(e => e.CodigoSap)
                .HasMaxLength(4)
                .HasColumnName("codigoSAP");
            entity.Property(e => e.CodigoVanguarda).HasColumnName("codigoVanguarda");
            entity.Property(e => e.Descricao)
                .HasMaxLength(50)
                .HasColumnName("descricao");
            entity.Property(e => e.IdEntidade)
                .HasDefaultValueSql("(1)")
                .HasColumnName("idEntidade");
            entity.Property(e => e.NumDias).HasColumnName("numDias");
        });

        modelBuilder.Entity<DocumentosNumeroMaskT>(entity =>
        {
            entity.ToTable("DocumentosNumeroMask_T");

            entity.Property(e => e.Id).HasColumnName("id");
            entity.Property(e => e.Activo)
                .IsRequired()
                .HasDefaultValueSql("((1))")
                .HasColumnName("activo");
            entity.Property(e => e.IdDepartamento).HasColumnName("idDepartamento");
            entity.Property(e => e.IdEntidade).HasColumnName("idEntidade");
            entity.Property(e => e.IdTipoDoc).HasColumnName("idTipoDoc");
            entity.Property(e => e.Length).HasColumnName("length");
            entity.Property(e => e.Mask)
                .HasMaxLength(50)
                .HasColumnName("mask");
        });

        modelBuilder.Entity<DocumentosTiposT>(entity =>
        {
            entity.ToTable("DocumentosTipos_T");

            entity.Property(e => e.Id).HasColumnName("id");
            entity.Property(e => e.Activo)
                .IsRequired()
                .HasDefaultValueSql("((1))")
                .HasColumnName("activo");
            entity.Property(e => e.Codigo)
                .HasMaxLength(10)
                .HasDefaultValueSql("('')")
                .HasColumnName("codigo");
            entity.Property(e => e.CodigoFact)
                .HasMaxLength(2)
                .HasDefaultValueSql("('')")
                .HasColumnName("codigoFact");
            entity.Property(e => e.CodigoSap)
                .HasMaxLength(2)
                .HasColumnName("codigoSAP");
            entity.Property(e => e.DescCliente)
                .HasMaxLength(50)
                .HasColumnName("descCliente");
            entity.Property(e => e.Descricao)
                .HasMaxLength(50)
                .HasColumnName("descricao");
            entity.Property(e => e.IdEntidade)
                .HasDefaultValueSql("((1))")
                .HasColumnName("idEntidade");
            entity.Property(e => e.IsValidSdd)
                .IsRequired()
                .HasDefaultValueSql("((1))")
                .HasColumnName("isValidSDD");
            entity.Property(e => e.PCreditar)
                .IsRequired()
                .HasDefaultValueSql("((1))")
                .HasColumnName("pCreditar");
            entity.Property(e => e.PeriodicidadeCliente).HasColumnName("periodicidadeCliente");
            entity.Property(e => e.Sinal).HasColumnName("sinal");
            entity.Property(e => e.Visivel)
                .IsRequired()
                .HasDefaultValueSql("((1))")
                .HasColumnName("visivel");
        });

        modelBuilder.Entity<DutiesTaxesT>(entity =>
        {
            entity.HasKey(e => e.Id).HasName("PK_T_SDE_DutiesTaxes");

            entity.ToTable("DutiesTaxes_T");

            entity.Property(e => e.Id).HasColumnName("id");
            entity.Property(e => e.Activo).HasColumnName("activo");
            entity.Property(e => e.CodigoAwb)
                .HasMaxLength(1)
                .HasColumnName("codigoAWB");
            entity.Property(e => e.CodigoGidwin)
                .HasMaxLength(1)
                .HasColumnName("codigoGidwin");
            entity.Property(e => e.CodigoGraspIb)
                .HasMaxLength(1)
                .HasColumnName("codigoGraspIB");
            entity.Property(e => e.CodigoGraspOb)
                .HasMaxLength(1)
                .HasColumnName("codigoGraspOB");
            entity.Property(e => e.Descricao)
                .HasMaxLength(15)
                .HasColumnName("descricao");
        });

        modelBuilder.Entity<DutyTypeMapeamento>(entity =>
        {
            entity.HasKey(e => e.Id).HasName("PK__DutyType__3213E83F5B4CC9D3");

            entity.ToTable("DutyTypeMapeamento");

            entity.Property(e => e.Id).HasColumnName("id");
            entity.Property(e => e.Dt)
                .HasMaxLength(5)
                .HasColumnName("dt");
            entity.Property(e => e.Dtmap)
                .HasMaxLength(2)
                .HasColumnName("dtmap");
        });

        modelBuilder.Entity<EmaMastersDup>(entity =>
        {
            entity
                .HasNoKey()
                .ToTable("ema_masters_dup");

            entity.Property(e => e.AwbNumber)
                .HasMaxLength(20)
                .HasColumnName("awb_number");
            entity.Property(e => e.MaxDtEnvio)
                .HasColumnType("datetime")
                .HasColumnName("max_dtEnvio");
            entity.Property(e => e.MinDtEnvio)
                .HasColumnType("datetime")
                .HasColumnName("min_dtEnvio");
            entity.Property(e => e.MinId).HasColumnName("min_id");
            entity.Property(e => e.NumRecs).HasColumnName("numRecs");
        });

        modelBuilder.Entity<Email>(entity =>
        {
            entity.ToTable("email");

            entity.HasIndex(e => new { e.Concluido, e.DtEnviar }, "idx_concluido_dtEnviar");

            entity.Property(e => e.Id).HasColumnName("id");
            entity.Property(e => e.Concluido).HasColumnName("concluido");
            entity.Property(e => e.DtEnviado)
                .HasColumnType("datetime")
                .HasColumnName("dtEnviado");
            entity.Property(e => e.DtEnviar)
                .HasColumnType("datetime")
                .HasColumnName("dtEnviar");
            entity.Property(e => e.DtFalhaEnv)
                .HasColumnType("datetime")
                .HasColumnName("dtFalhaEnv");
            entity.Property(e => e.DtIntrod)
                .HasColumnType("datetime")
                .HasColumnName("dtIntrod");
            entity.Property(e => e.IdUtilIntrod).HasColumnName("idUtilIntrod");
            entity.Property(e => e.Message)
                .HasColumnType("ntext")
                .HasColumnName("message");
            entity.Property(e => e.Recipient)
                .HasMaxLength(50)
                .HasColumnName("recipient");
            entity.Property(e => e.RetryDelay)
                .HasDefaultValueSql("((15))")
                .HasColumnName("retryDelay");
            entity.Property(e => e.Sender)
                .HasMaxLength(50)
                .HasColumnName("sender");
            entity.Property(e => e.Subject)
                .HasMaxLength(100)
                .HasColumnName("subject");
        });

        modelBuilder.Entity<EmailDestinatario>(entity =>
        {
            entity.ToTable("emailDestinatarios");

            entity.HasIndex(e => new { e.IdEmail, e.Destinatario }, "idx_idEmail_destinatario").HasFillFactor(80);

            entity.Property(e => e.Id).HasColumnName("id");
            entity.Property(e => e.Destinatario)
                .HasMaxLength(50)
                .HasColumnName("destinatario");
            entity.Property(e => e.IdEmail).HasColumnName("idEmail");
        });

        modelBuilder.Entity<EmailRecolhaLog>(entity =>
        {
            entity.HasKey(e => e.Id).HasName("PK__EmailRec__3214EC27052CBD53");

            entity.ToTable("EmailRecolhaLog");

            entity.Property(e => e.Id).HasColumnName("ID");
            entity.Property(e => e.DtUltAct)
                .HasColumnType("datetime")
                .HasColumnName("dtUltAct");
            entity.Property(e => e.Sender).HasMaxLength(75);
        });

        modelBuilder.Entity<EmailRelatorio>(entity =>
        {
            entity.HasIndex(e => new { e.Activo, e.Idutil, e.Idcliente, e.Horainicio, e.Lastemail }, "idx_idUtil_activo").HasFillFactor(80);

            entity.Property(e => e.Id).HasColumnName("id");
            entity.Property(e => e.Activo).HasColumnName("activo");
            entity.Property(e => e.DtIntrod)
                .HasDefaultValueSql("(getdate())")
                .HasColumnType("datetime")
                .HasColumnName("dtIntrod");
            entity.Property(e => e.Ficheiro)
                .HasMaxLength(300)
                .HasColumnName("ficheiro");
            entity.Property(e => e.Formato)
                .HasMaxLength(4)
                .HasColumnName("formato");
            entity.Property(e => e.Horainicio)
                .HasColumnType("datetime")
                .HasColumnName("horainicio");
            entity.Property(e => e.IdEntidade).HasColumnName("idEntidade");
            entity.Property(e => e.Idcliente).HasColumnName("idcliente");
            entity.Property(e => e.Idutil).HasColumnName("idutil");
            entity.Property(e => e.Lastemail)
                .HasColumnType("datetime")
                .HasColumnName("lastemail");
            entity.Property(e => e.Params)
                .HasMaxLength(1000)
                .HasColumnName("params");
            entity.Property(e => e.Recipient)
                .HasMaxLength(1000)
                .HasColumnName("recipient");
            entity.Property(e => e.SendEmpty).HasColumnName("sendEmpty");
            entity.Property(e => e.Sender)
                .HasMaxLength(50)
                .HasColumnName("sender");
            entity.Property(e => e.Texto)
                .HasMaxLength(500)
                .HasColumnName("texto");
            entity.Property(e => e.Titulo)
                .HasMaxLength(100)
                .HasColumnName("titulo");
        });

        modelBuilder.Entity<EmailRelatoriosRegulare>(entity =>
        {
            entity.HasIndex(e => new { e.Horainicio, e.Horafim, e.UltHora, e.Lastemail, e.Regularidade, e.Dias, e.Workdayonly }, "idx_horarios").HasFillFactor(80);

            entity.HasIndex(e => new { e.Idutil, e.Activo }, "idx_idUtil_activo").HasFillFactor(80);

            entity.Property(e => e.Id).HasColumnName("id");
            entity.Property(e => e.Activo).HasColumnName("activo");
            entity.Property(e => e.Dias)
                .HasMaxLength(50)
                .HasColumnName("dias");
            entity.Property(e => e.Ficheiro)
                .HasMaxLength(300)
                .HasColumnName("ficheiro");
            entity.Property(e => e.Formato)
                .HasMaxLength(4)
                .HasColumnName("formato");
            entity.Property(e => e.Horafim)
                .HasColumnType("datetime")
                .HasColumnName("horafim");
            entity.Property(e => e.Horainicio)
                .HasColumnType("datetime")
                .HasColumnName("horainicio");
            entity.Property(e => e.IdEntidade).HasColumnName("idEntidade");
            entity.Property(e => e.Idcliente).HasColumnName("idcliente");
            entity.Property(e => e.Idutil).HasColumnName("idutil");
            entity.Property(e => e.Lastemail)
                .HasColumnType("datetime")
                .HasColumnName("lastemail");
            entity.Property(e => e.MaxSizeKb)
                .HasDefaultValueSql("((-1))")
                .HasColumnName("maxSizeKB");
            entity.Property(e => e.Params)
                .HasMaxLength(1000)
                .HasColumnName("params");
            entity.Property(e => e.Recipient)
                .HasMaxLength(1000)
                .HasColumnName("recipient");
            entity.Property(e => e.Regularidade).HasColumnName("regularidade");
            entity.Property(e => e.SendEmpty).HasColumnName("sendEmpty");
            entity.Property(e => e.Sender)
                .HasMaxLength(50)
                .HasColumnName("sender");
            entity.Property(e => e.Texto)
                .HasMaxLength(250)
                .HasColumnName("texto");
            entity.Property(e => e.Titulo)
                .HasMaxLength(100)
                .HasColumnName("titulo");
            entity.Property(e => e.UltHora)
                .HasColumnType("datetime")
                .HasColumnName("ultHora");
            entity.Property(e => e.Workdayonly).HasColumnName("workdayonly");
        });

        modelBuilder.Entity<EmailSalesLeadLog>(entity =>
        {
            entity.HasKey(e => e.Id).HasName("PK__EmailSal__3214EC270C4AF545");

            entity.ToTable("EmailSalesLeadLog");

            entity.Property(e => e.Id).HasColumnName("ID");
            entity.Property(e => e.DtUltAct)
                .HasColumnType("datetime")
                .HasColumnName("dtUltAct");
            entity.Property(e => e.Sender).HasMaxLength(75);
        });

        modelBuilder.Entity<EmpresasRatingsLog>(entity =>
        {
            entity.ToTable("EmpresasRatingsLog");

            entity.HasIndex(e => new { e.NrContrib, e.Data }, "idx_nrContrib_data").IsDescending(false, true);

            entity.Property(e => e.Id).HasColumnName("id");
            entity.Property(e => e.Data)
                .HasColumnType("datetime")
                .HasColumnName("data");
            entity.Property(e => e.DtIntrod)
                .HasColumnType("datetime")
                .HasColumnName("dtIntrod");
            entity.Property(e => e.IdUtilIntrod).HasColumnName("idUtilIntrod");
            entity.Property(e => e.NrContrib)
                .HasMaxLength(15)
                .HasColumnName("nrContrib");
            entity.Property(e => e.Observacoes)
                .HasMaxLength(100)
                .HasColumnName("observacoes");
            entity.Property(e => e.Rating).HasColumnName("rating");
            entity.Property(e => e.Score).HasColumnName("score");
        });

        modelBuilder.Entity<EntregasIncidenciasClatLog>(entity =>
        {
            entity
                .HasNoKey()
                .ToTable("EntregasIncidencias_CLAT_LOG");

            entity.Property(e => e.AwbNumber)
                .HasMaxLength(50)
                .HasColumnName("awbNumber");
            entity.Property(e => e.Destinatario)
                .HasMaxLength(50)
                .IsUnicode(false)
                .HasColumnName("destinatario");
            entity.Property(e => e.DtEnvio)
                .HasDefaultValueSql("(getdate())")
                .HasColumnType("datetime")
                .HasColumnName("dtEnvio");
            entity.Property(e => e.Estado)
                .HasMaxLength(50)
                .IsUnicode(false)
                .HasColumnName("estado");
            entity.Property(e => e.IdCausa).HasColumnName("idCausa");
            entity.Property(e => e.IdCliMorada).HasColumnName("idCliMorada");
            entity.Property(e => e.IdCliente).HasColumnName("idCliente");
            entity.Property(e => e.IdEntidade).HasColumnName("idEntidade");
            entity.Property(e => e.IdScan).HasColumnName("idScan");
            entity.Property(e => e.RefCliente)
                .HasMaxLength(50)
                .IsUnicode(false)
                .HasColumnName("refCliente");
            entity.Property(e => e.ScanDate)
                .HasColumnType("datetime")
                .HasColumnName("scanDate");
        });

        modelBuilder.Entity<EntregasIncidenciasPtproTmnLog>(entity =>
        {
            entity
                .HasNoKey()
                .ToTable("EntregasIncidencias_PTPRO_TMN_LOG");

            entity.HasIndex(e => e.AwbNumber, "idx_EIPTCTMN_AwbNumber");

            entity.HasIndex(e => e.IdCliente, "idx_idCliente").HasFillFactor(80);

            entity.HasIndex(e => e.IdScan, "idx_idScan").HasFillFactor(80);

            entity.HasIndex(e => new { e.RefCliente, e.AwbNumber, e.IdScan }, "idx_refcliente_awb_idScan");

            entity.Property(e => e.AwbNumber)
                .HasMaxLength(50)
                .IsUnicode(false)
                .HasColumnName("awbNumber");
            entity.Property(e => e.Destinatario)
                .HasMaxLength(50)
                .IsUnicode(false)
                .HasColumnName("destinatario");
            entity.Property(e => e.DtEnvio)
                .HasDefaultValueSql("(getdate())")
                .HasColumnType("datetime")
                .HasColumnName("dtEnvio");
            entity.Property(e => e.Estado)
                .HasMaxLength(50)
                .IsUnicode(false)
                .HasColumnName("estado");
            entity.Property(e => e.IdCausa).HasColumnName("idCausa");
            entity.Property(e => e.IdCliMorada).HasColumnName("idCliMorada");
            entity.Property(e => e.IdCliente).HasColumnName("idCliente");
            entity.Property(e => e.IdEntidade).HasColumnName("idEntidade");
            entity.Property(e => e.IdScan).HasColumnName("idScan");
            entity.Property(e => e.NumTransportePt)
                .HasMaxLength(50)
                .HasColumnName("NumTransportePT");
            entity.Property(e => e.RefCliente)
                .HasMaxLength(50)
                .IsUnicode(false)
                .HasColumnName("refCliente");
            entity.Property(e => e.ScanDate)
                .HasColumnType("datetime")
                .HasColumnName("scanDate");
            entity.Property(e => e.Signature)
                .HasMaxLength(30)
                .IsUnicode(false)
                .HasColumnName("signature");
        });

        modelBuilder.Entity<EntrevistaDocumento>(entity =>
        {
            entity.Property(e => e.Id).HasColumnName("id");
            entity.Property(e => e.Descricao)
                .HasMaxLength(50)
                .IsUnicode(false)
                .HasColumnName("descricao");
            entity.Property(e => e.DtIntrod)
                .HasColumnType("datetime")
                .HasColumnName("dtIntrod");
            entity.Property(e => e.Guid)
                .HasMaxLength(50)
                .IsUnicode(false)
                .HasColumnName("GUID");
            entity.Property(e => e.IdEntrevista).HasColumnName("idEntrevista");
            entity.Property(e => e.IdUtilIntrod).HasColumnName("idUtilIntrod");
            entity.Property(e => e.MimeType)
                .HasMaxLength(50)
                .IsUnicode(false)
                .HasColumnName("mimeType");
            entity.Property(e => e.Nome)
                .HasMaxLength(500)
                .IsUnicode(false)
                .HasColumnName("nome");
            entity.Property(e => e.ServerLocation)
                .HasMaxLength(250)
                .IsUnicode(false)
                .HasColumnName("serverLocation");
            entity.Property(e => e.Tamanho).HasColumnName("tamanho");
        });

        modelBuilder.Entity<EntrevistaEntraveAcesso>(entity =>
        {
            entity.HasKey(e => new { e.IdEntrave, e.IdUtilizadorDepartamento });

            entity.ToTable("EntrevistaEntraveAcesso");

            entity.Property(e => e.IdEntrave).HasColumnName("idEntrave");
            entity.Property(e => e.IdUtilizadorDepartamento).HasColumnName("idUtilizadorDepartamento");
            entity.Property(e => e.Id)
                .ValueGeneratedOnAdd()
                .HasColumnName("id");
        });

        modelBuilder.Entity<EntrevistaEntraveT>(entity =>
        {
            entity.ToTable("EntrevistaEntrave_T");

            entity.Property(e => e.Id).HasColumnName("id");
            entity.Property(e => e.Activo)
                .IsRequired()
                .HasDefaultValueSql("((1))")
                .HasColumnName("activo");
            entity.Property(e => e.Descricao)
                .HasMaxLength(50)
                .HasColumnName("descricao");
        });

        modelBuilder.Entity<EntrevistaFormatoAcesso>(entity =>
        {
            entity.HasKey(e => new { e.IdEntrevistaFormato, e.IdUtilizadorGrupo }).HasName("PK_T_EntrevistaFormatoAcesso");

            entity.ToTable("EntrevistaFormatoAcesso");

            entity.Property(e => e.IdEntrevistaFormato).HasColumnName("idEntrevistaFormato");
            entity.Property(e => e.IdUtilizadorGrupo).HasColumnName("idUtilizadorGrupo");
            entity.Property(e => e.Id)
                .ValueGeneratedOnAdd()
                .HasColumnName("id");
        });

        modelBuilder.Entity<EntrevistaFormatoT>(entity =>
        {
            entity.HasKey(e => e.Id).HasName("PK_T_EntrevistaFormato");

            entity.ToTable("EntrevistaFormato_T");

            entity.HasIndex(e => new { e.Descricao, e.IdEntidade, e.Activo }, "descricao_idEntidade_activo");

            entity.Property(e => e.Id).HasColumnName("id");
            entity.Property(e => e.Activo)
                .HasDefaultValueSql("(1)")
                .HasColumnName("activo");
            entity.Property(e => e.Descricao)
                .HasMaxLength(15)
                .HasColumnName("descricao");
            entity.Property(e => e.IdEntidade)
                .HasDefaultValueSql("(1)")
                .HasColumnName("idEntidade");
        });

        modelBuilder.Entity<EntrevistaObjectivo>(entity =>
        {
            entity.ToTable("EntrevistaObjectivo");

            entity.HasIndex(e => e.IdGrupoUtil, "idx_idgrupo").HasFillFactor(80);

            entity.Property(e => e.Id).HasColumnName("id");
            entity.Property(e => e.IdEntidade).HasColumnName("idEntidade");
            entity.Property(e => e.IdGrupoUtil).HasColumnName("idGrupoUtil");
            entity.Property(e => e.ObjCapt)
                .HasColumnType("decimal(19, 4)")
                .HasColumnName("objCapt");
            entity.Property(e => e.ObjManut)
                .HasColumnType("decimal(19, 4)")
                .HasColumnName("objManut");
        });

        modelBuilder.Entity<EntrevistaResultadosT>(entity =>
        {
            entity.ToTable("EntrevistaResultados_T");

            entity.Property(e => e.Id).HasColumnName("id");
            entity.Property(e => e.Codigo)
                .HasMaxLength(20)
                .HasColumnName("codigo");
            entity.Property(e => e.Descricao)
                .HasMaxLength(50)
                .HasColumnName("descricao");
        });

        modelBuilder.Entity<EntrevistaSugestaoCriteriosLog>(entity =>
        {
            entity.ToTable("EntrevistaSugestaoCriteriosLog");

            entity.Property(e => e.Id).HasColumnName("id");
            entity.Property(e => e.DtFim)
                .HasColumnType("date")
                .HasColumnName("dtFim");
            entity.Property(e => e.DtInicio)
                .HasColumnType("date")
                .HasColumnName("dtInicio");
            entity.Property(e => e.IdCriterio).HasColumnName("idCriterio");
            entity.Property(e => e.IdEntidade).HasColumnName("idEntidade");
            entity.Property(e => e.IdEntrevistaTipo).HasColumnName("idEntrevistaTipo");
            entity.Property(e => e.MultValor)
                .HasColumnType("money")
                .HasColumnName("multValor");
            entity.Property(e => e.NumDiasSemContacto).HasColumnName("numDiasSemContacto");
            entity.Property(e => e.ValorMax)
                .HasColumnType("sql_variant")
                .HasColumnName("valorMax");
            entity.Property(e => e.ValorMin)
                .HasColumnType("sql_variant")
                .HasColumnName("valorMin");
            entity.Property(e => e.Valorizacao).HasColumnName("valorizacao");
        });

        modelBuilder.Entity<EntrevistaSugestaoCriteriosT>(entity =>
        {
            entity.ToTable("EntrevistaSugestaoCriterios_T");

            entity.Property(e => e.Id)
                .ValueGeneratedNever()
                .HasColumnName("id");
            entity.Property(e => e.Activo)
                .IsRequired()
                .HasDefaultValueSql("((1))")
                .HasColumnName("activo");
            entity.Property(e => e.Codigo)
                .HasMaxLength(30)
                .HasColumnName("codigo");
            entity.Property(e => e.Descricao)
                .HasMaxLength(50)
                .HasColumnName("descricao");
            entity.Property(e => e.IdDepartamentoDestino).HasColumnName("idDepartamentoDestino");
        });

        modelBuilder.Entity<EntrevistaSugestaoCriteriosTipo>(entity =>
        {
            entity.HasKey(e => new { e.IdEntrevistaCriterio, e.IdEntidade, e.IdEntrevistaTipo });

            entity.Property(e => e.IdEntrevistaCriterio).HasColumnName("idEntrevistaCriterio");
            entity.Property(e => e.IdEntidade).HasColumnName("idEntidade");
            entity.Property(e => e.IdEntrevistaTipo).HasColumnName("idEntrevistaTipo");
        });

        modelBuilder.Entity<EntrevistaSugestaoLog>(entity =>
        {
            entity.ToTable("EntrevistaSugestaoLog");

            entity.Property(e => e.Id).HasColumnName("id");
            entity.Property(e => e.DtAgendada)
                .HasColumnType("datetime")
                .HasColumnName("dtAgendada");
            entity.Property(e => e.DtFecho)
                .HasColumnType("datetime")
                .HasColumnName("dtFecho");
            entity.Property(e => e.DtIntrod)
                .HasColumnType("datetime")
                .HasColumnName("dtIntrod");
            entity.Property(e => e.IdCliente).HasColumnName("idCliente");
            entity.Property(e => e.IdCriterio).HasColumnName("idCriterio");
            entity.Property(e => e.IdEntidade).HasColumnName("idEntidade");
            entity.Property(e => e.IdEntrevista).HasColumnName("idEntrevista");
            entity.Property(e => e.IdEntrevistaTipo).HasColumnName("idEntrevistaTipo");
            entity.Property(e => e.IdEsvvalorizacoesLog).HasColumnName("idESVValorizacoesLog");
            entity.Property(e => e.IdTipoFecho).HasColumnName("idTipoFecho");
            entity.Property(e => e.IdUtilFecho).HasColumnName("idUtilFecho");
            entity.Property(e => e.IdUtilIntrod).HasColumnName("idUtilIntrod");
            entity.Property(e => e.IdUtilResp).HasColumnName("idUtilResp");
            entity.Property(e => e.ObsFecho)
                .HasMaxLength(250)
                .HasColumnName("obsFecho");
            entity.Property(e => e.ObsSugestao)
                .HasMaxLength(250)
                .HasColumnName("obsSugestao");
        });

        modelBuilder.Entity<EntrevistaSugestaoTipoFechoT>(entity =>
        {
            entity.ToTable("EntrevistaSugestaoTipoFecho_T");

            entity.Property(e => e.Id).HasColumnName("id");
            entity.Property(e => e.Activo)
                .IsRequired()
                .HasDefaultValueSql("((1))")
                .HasColumnName("activo");
            entity.Property(e => e.Codigo)
                .HasMaxLength(15)
                .HasColumnName("codigo");
            entity.Property(e => e.Descricao)
                .HasMaxLength(50)
                .HasColumnName("descricao");
        });

        modelBuilder.Entity<EntrevistaSugestaoValorizacoesLog>(entity =>
        {
            entity.ToTable("EntrevistaSugestaoValorizacoesLog");

            entity.HasIndex(e => new { e.IdEntidade, e.IdCriterio, e.Data }, "idx_idEntidade_idCriterio_Data");

            entity.Property(e => e.Id).HasColumnName("id");
            entity.Property(e => e.Data)
                .HasColumnType("datetime")
                .HasColumnName("data");
            entity.Property(e => e.DtEntrevAnterior)
                .HasColumnType("datetime")
                .HasColumnName("dtEntrevAnterior");
            entity.Property(e => e.IdCliente).HasColumnName("idCliente");
            entity.Property(e => e.IdCriterio).HasColumnName("idCriterio");
            entity.Property(e => e.IdCriterioLog).HasColumnName("idCriterioLog");
            entity.Property(e => e.IdEntidade).HasColumnName("idEntidade");
            entity.Property(e => e.IdEntrevistaTipo).HasColumnName("idEntrevistaTipo");
            entity.Property(e => e.Valor)
                .HasColumnType("sql_variant")
                .HasColumnName("valor");
            entity.Property(e => e.Valorizacao).HasColumnName("valorizacao");
        });

        modelBuilder.Entity<EntrevistaTipoAcesso>(entity =>
        {
            entity.HasKey(e => new { e.IdEntrevistaTipo, e.IdUtilizadorGrupo }).HasName("PK_T_EntrevistaTipoAcesso");

            entity.ToTable("EntrevistaTipoAcesso");

            entity.Property(e => e.IdEntrevistaTipo).HasColumnName("idEntrevistaTipo");
            entity.Property(e => e.IdUtilizadorGrupo).HasColumnName("idUtilizadorGrupo");
            entity.Property(e => e.Id)
                .ValueGeneratedOnAdd()
                .HasColumnName("id");
        });

        modelBuilder.Entity<EntrevistaTipoT>(entity =>
        {
            entity.HasKey(e => e.Id).HasName("PK_T_EntrevistaTipo");

            entity.ToTable("EntrevistaTipo_T");

            entity.HasIndex(e => e.Descricao, "idx_descricao").HasFillFactor(80);

            entity.Property(e => e.Id).HasColumnName("id");
            entity.Property(e => e.Acordo).HasColumnName("acordo");
            entity.Property(e => e.Activo)
                .HasDefaultValueSql("((1))")
                .HasColumnName("activo");
            entity.Property(e => e.Captacao).HasColumnName("captacao");
            entity.Property(e => e.Descricao)
                .HasMaxLength(15)
                .HasColumnName("descricao");
            entity.Property(e => e.IdEntidade)
                .HasDefaultValueSql("((1))")
                .HasColumnName("idEntidade");
            entity.Property(e => e.Manutencao).HasColumnName("manutencao");
            entity.Property(e => e.PedeResultado).HasColumnName("pedeResultado");
        });

        modelBuilder.Entity<EntrevistaTlog>(entity =>
        {
            entity.HasKey(e => e.IdTrigger);

            entity.ToTable("Entrevista_TLog");

            entity.Property(e => e.IdTrigger).HasColumnName("idTrigger");
            entity.Property(e => e.Anulada)
                .HasDefaultValueSql("(0)")
                .HasColumnName("anulada");
            entity.Property(e => e.Automatica).HasColumnName("automatica");
            entity.Property(e => e.Awb)
                .HasMaxLength(50)
                .HasColumnName("awb");
            entity.Property(e => e.DtAnulada)
                .HasColumnType("datetime")
                .HasColumnName("dtAnulada");
            entity.Property(e => e.DtCriacao)
                .HasDefaultValueSql("(getdate())")
                .HasComment("data em que e marcada ou introduzida")
                .HasColumnType("datetime")
                .HasColumnName("dtCriacao");
            entity.Property(e => e.DtInicio)
                .HasColumnType("datetime")
                .HasColumnName("dtInicio");
            entity.Property(e => e.DtIntrod)
                .HasComment("data em q entrevista e' introduzida (nao marcada)")
                .HasColumnType("datetime")
                .HasColumnName("dtIntrod");
            entity.Property(e => e.DtMarcada)
                .HasColumnType("datetime")
                .HasColumnName("dtMarcada");
            entity.Property(e => e.DtTrigger)
                .HasDefaultValueSql("(getdate())")
                .HasColumnType("datetime")
                .HasColumnName("dtTrigger");
            entity.Property(e => e.DtUltAct)
                .HasColumnType("datetime")
                .HasColumnName("dtUltAct");
            entity.Property(e => e.Duracao)
                .HasDefaultValueSql("(0)")
                .HasColumnName("duracao");
            entity.Property(e => e.Efectuada)
                .HasDefaultValueSql("(1)")
                .HasColumnName("efectuada");
            entity.Property(e => e.Id).HasColumnName("id");
            entity.Property(e => e.IGCOM2Userserta).HasColumnName("iGCOM2Userserta");
            entity.Property(e => e.IdCliMorada).HasColumnName("idCliMorada");
            entity.Property(e => e.IdCliente).HasColumnName("idCliente");
            entity.Property(e => e.IdEntidade)
                .HasDefaultValueSql("(1)")
                .HasColumnName("idEntidade");
            entity.Property(e => e.IdEntrevistaOrigem).HasColumnName("idEntrevistaOrigem");
            entity.Property(e => e.IdEntrevistaResposta).HasColumnName("idEntrevistaResposta");
            entity.Property(e => e.IdFormato)
                .HasDefaultValueSql("(0)")
                .HasColumnName("idFormato");
            entity.Property(e => e.IdResultado).HasColumnName("idResultado");
            entity.Property(e => e.IdTipo)
                .HasDefaultValueSql("(0)")
                .HasColumnName("idTipo");
            entity.Property(e => e.IdUtil).HasColumnName("idUtil");
            entity.Property(e => e.IdUtilAnulada).HasColumnName("idUtilAnulada");
            entity.Property(e => e.IdUtilCriacao).HasColumnName("idUtilCriacao");
            entity.Property(e => e.IdUtilMarcada).HasColumnName("idUtilMarcada");
            entity.Property(e => e.IdUtilUltAct).HasColumnName("idUtilUltAct");
            entity.Property(e => e.NaoAtendeu)
                .HasDefaultValueSql("(0)")
                .HasColumnName("naoAtendeu");
            entity.Property(e => e.ObsEntrave)
                .HasMaxLength(500)
                .HasColumnName("obsEntrave");
            entity.Property(e => e.ObsObjectivo)
                .HasMaxLength(500)
                .HasColumnName("obsObjectivo");
            entity.Property(e => e.ObsPlanoAccao)
                .HasMaxLength(500)
                .HasColumnName("obsPlanoAccao");
            entity.Property(e => e.Observacoes)
                .HasMaxLength(1600)
                .HasColumnName("observacoes");
            entity.Property(e => e.Remarcada).HasColumnName("remarcada");
        });

        modelBuilder.Entity<EntrevistasSugerida>(entity =>
        {
            entity.Property(e => e.Id)
                .ValueGeneratedNever()
                .HasColumnName("id");
            entity.Property(e => e.Data)
                .HasColumnType("date")
                .HasColumnName("data");
            entity.Property(e => e.DtAgendada)
                .HasColumnType("datetime")
                .HasColumnName("dtAgendada");
            entity.Property(e => e.DtEfectuada)
                .HasColumnType("datetime")
                .HasColumnName("dtEfectuada");
            entity.Property(e => e.IdCliMorada).HasColumnName("idCliMorada");
            entity.Property(e => e.IdCliente).HasColumnName("idCliente");
            entity.Property(e => e.IdEntidade).HasColumnName("idEntidade");
            entity.Property(e => e.IdEntrevista).HasColumnName("idEntrevista");
            entity.Property(e => e.IdMotivo).HasColumnName("idMotivo");
            entity.Property(e => e.IdUtilPrevisto).HasColumnName("idUtilPrevisto");
            entity.Property(e => e.PesoMotivo)
                .HasColumnType("money")
                .HasColumnName("pesoMotivo");
            entity.Property(e => e.ValorMotivo)
                .HasColumnType("money")
                .HasColumnName("valorMotivo");
            entity.Property(e => e.ValorPesado)
                .HasColumnType("money")
                .HasColumnName("valorPesado");
        });

        modelBuilder.Entity<Entrevistum>(entity =>
        {
            entity.HasKey(e => e.Id).HasName("PK_T_Entrevista");

            entity.ToTable(tb =>
                {
                    tb.HasTrigger("EntrevistaDeleted_TLog_Trigger");
                    tb.HasTrigger("Entrevista_TLog_Trigger");
                });

            entity.HasIndex(e => e.IGCOM2Userserta, "idx_alerta").HasFillFactor(80);

            entity.HasIndex(e => new { e.Anulada, e.Efectuada, e.IdUtilMarcada, e.IdEntidade }, "idx_anulada_efectuada_idUtilMarcada_idEntidade");

            entity.HasIndex(e => new { e.Anulada, e.IdUtilMarcada, e.DtMarcada, e.DtInicio }, "idx_anulada_idUtilMarcada_dtMarcada_dtInicio").HasFillFactor(80);

            entity.HasIndex(e => new { e.Anulada, e.IdUtil, e.DtInicio }, "idx_anulada_idUtil_dtInicio");

            entity.HasIndex(e => e.IdEntrevistaOrigem, "idx_entrevistaorigem").HasFillFactor(80);

            entity.HasIndex(e => new { e.IdCliente, e.IdEntidade, e.IdUtil, e.DtInicio, e.IdFormato, e.IdTipo }, "idx_idCliente_idEntidade_idUtil_dtInicio").HasFillFactor(80);

            entity.HasIndex(e => new { e.IdEntidade, e.IdCliente, e.IdCliMorada, e.Anulada, e.DtInicio }, "idx_idEntidade_idCliente_idCliMorada_anulada_dtInicio").HasFillFactor(80);

            entity.HasIndex(e => new { e.IdCliente, e.IdEntidade, e.DtInicio }, "idx_idcliente_identidade_dtinicio").HasFillFactor(80);

            entity.Property(e => e.Id).HasColumnName("id");
            entity.Property(e => e.Anulada).HasColumnName("anulada");
            entity.Property(e => e.Automatica).HasColumnName("automatica");
            entity.Property(e => e.Awb)
                .HasMaxLength(50)
                .HasColumnName("awb");
            entity.Property(e => e.DtAnulada)
                .HasColumnType("datetime")
                .HasColumnName("dtAnulada");
            entity.Property(e => e.DtCriacao)
                .HasDefaultValueSql("(getdate())")
                .HasComment("data em que e marcada ou introduzida")
                .HasColumnType("datetime")
                .HasColumnName("dtCriacao");
            entity.Property(e => e.DtInicio)
                .HasColumnType("datetime")
                .HasColumnName("dtInicio");
            entity.Property(e => e.DtIntrod)
                .HasComment("data em q entrevista e' introduzida (nao marcada)")
                .HasColumnType("datetime")
                .HasColumnName("dtIntrod");
            entity.Property(e => e.DtMarcada)
                .HasColumnType("datetime")
                .HasColumnName("dtMarcada");
            entity.Property(e => e.DtUltAct)
                .HasColumnType("datetime")
                .HasColumnName("dtUltAct");
            entity.Property(e => e.Duracao)
                .HasDefaultValueSql("(0)")
                .HasColumnName("duracao");
            entity.Property(e => e.Efectuada)
                .HasDefaultValueSql("(1)")
                .HasColumnName("efectuada");
            entity.Property(e => e.IGCOM2Userserta).HasColumnName("iGCOM2Userserta");
            entity.Property(e => e.IdCliMorada).HasColumnName("idCliMorada");
            entity.Property(e => e.IdCliente).HasColumnName("idCliente");
            entity.Property(e => e.IdEntidade)
                .HasDefaultValueSql("(1)")
                .HasColumnName("idEntidade");
            entity.Property(e => e.IdEntrave).HasColumnName("idEntrave");
            entity.Property(e => e.IdEntrevistaOrigem).HasColumnName("idEntrevistaOrigem");
            entity.Property(e => e.IdEntrevistaResposta).HasColumnName("idEntrevistaResposta");
            entity.Property(e => e.IdFormato)
                .HasDefaultValueSql("(0)")
                .HasColumnName("idFormato");
            entity.Property(e => e.IdResultado).HasColumnName("idResultado");
            entity.Property(e => e.IdTipo)
                .HasDefaultValueSql("(0)")
                .HasColumnName("idTipo");
            entity.Property(e => e.IdUtil).HasColumnName("idUtil");
            entity.Property(e => e.IdUtilAnulada).HasColumnName("idUtilAnulada");
            entity.Property(e => e.IdUtilCriacao).HasColumnName("idUtilCriacao");
            entity.Property(e => e.IdUtilMarcada).HasColumnName("idUtilMarcada");
            entity.Property(e => e.IdUtilUltAct).HasColumnName("idUtilUltAct");
            entity.Property(e => e.NaoAtendeu)
                .HasDefaultValueSql("(0)")
                .HasColumnName("naoAtendeu");
            entity.Property(e => e.ObsEntrave)
                .HasMaxLength(500)
                .HasColumnName("obsEntrave");
            entity.Property(e => e.ObsObjectivo)
                .HasMaxLength(500)
                .HasColumnName("obsObjectivo");
            entity.Property(e => e.ObsPlanoAccao)
                .HasMaxLength(500)
                .HasColumnName("obsPlanoAccao");
            entity.Property(e => e.Observacoes)
                .HasMaxLength(1500)
                .HasColumnName("observacoes");
            entity.Property(e => e.Remarcada).HasColumnName("remarcada");
        });

        modelBuilder.Entity<EnviadosRexiibuytragoLog>(entity =>
        {
            entity
                .HasNoKey()
                .ToTable("enviadosREXIIBuytrago_log");

            entity.Property(e => e.DtEnvio)
                .HasColumnType("datetime")
                .HasColumnName("dtEnvio");
            entity.Property(e => e.Er)
                .HasMaxLength(1)
                .IsUnicode(false)
                .IsFixedLength()
                .HasColumnName("ER");
            entity.Property(e => e.Id).HasColumnName("id");
        });

        modelBuilder.Entity<EnvioPodsLog>(entity =>
        {
            entity
                .HasNoKey()
                .ToTable("EnvioPODs_Log");

            entity.Property(e => e.AwbNumber)
                .HasMaxLength(20)
                .IsUnicode(false)
                .HasColumnName("awbNumber");
            entity.Property(e => e.DtEnvio)
                .HasDefaultValueSql("(getdate())")
                .HasColumnType("datetime")
                .HasColumnName("dtEnvio");
            entity.Property(e => e.IdCliMorada).HasColumnName("idCliMorada");
            entity.Property(e => e.IdCliente).HasColumnName("idCliente");
            entity.Property(e => e.IdEntidade).HasColumnName("idEntidade");
            entity.Property(e => e.IdImportacaoManifesto).HasColumnName("idImportacaoManifesto");
        });

        modelBuilder.Entity<EnviosProvedorCriacao>(entity =>
        {
            entity.HasKey(e => e.Id).HasName("PK__ENVIOS_P__3213E83F152844DC");

            entity.ToTable("ENVIOS_PROVEDOR_CRIACAO");

            entity.Property(e => e.Id).HasColumnName("id");
            entity.Property(e => e.DtCriacaoProvedor)
                .HasColumnType("datetime")
                .HasColumnName("dtCriacaoProvedor");
            entity.Property(e => e.DtUltAct)
                .HasColumnType("datetime")
                .HasColumnName("dtUltAct");
            entity.Property(e => e.Dtintrod)
                .HasColumnType("datetime")
                .HasColumnName("dtintrod");
            entity.Property(e => e.IdManifesto).HasColumnName("idManifesto");
            entity.Property(e => e.IdParserHeader).HasColumnName("idParserHeader");
            entity.Property(e => e.IdProvedor).HasColumnName("idProvedor");
            entity.Property(e => e.IdUtilIntrod).HasColumnName("idUtilIntrod");
            entity.Property(e => e.Msg)
                .HasMaxLength(500)
                .HasColumnName("msg");
        });

        modelBuilder.Entity<EnviosProvedorIncidencia>(entity =>
        {
            entity.HasKey(e => e.Id).HasName("PK__ENVIOS_P__3213E83F12F47EC3");

            entity.ToTable("ENVIOS_PROVEDOR_INCIDENCIAS");

            entity.Property(e => e.Id).HasColumnName("id");
            entity.Property(e => e.CanalEntrada)
                .HasMaxLength(4000)
                .HasColumnName("canalEntrada");
            entity.Property(e => e.Cliente)
                .HasMaxLength(4000)
                .HasColumnName("cliente");
            entity.Property(e => e.CodPosDest)
                .HasMaxLength(4000)
                .HasColumnName("codPosDest");
            entity.Property(e => e.CodigoSolucion)
                .HasMaxLength(4000)
                .HasColumnName("codigoSolucion");
            entity.Property(e => e.ContactoDest)
                .HasMaxLength(4000)
                .HasColumnName("contactoDest");
            entity.Property(e => e.DomDest)
                .HasMaxLength(4000)
                .HasColumnName("domDest");
            entity.Property(e => e.DtProcessado)
                .HasColumnType("datetime")
                .HasColumnName("dtProcessado");
            entity.Property(e => e.Dtintrod)
                .HasDefaultValueSql("(getdate())")
                .HasColumnType("datetime")
                .HasColumnName("dtintrod");
            entity.Property(e => e.FechaEnvio).HasMaxLength(4000);
            entity.Property(e => e.FecharConcertada).HasMaxLength(4000);
            entity.Property(e => e.HorarioConcertado1).HasMaxLength(4000);
            entity.Property(e => e.HorarioConcertado2).HasMaxLength(4000);
            entity.Property(e => e.IdUtilIntrod).HasColumnName("idUtilIntrod");
            entity.Property(e => e.InstruccionesEntrega)
                .HasMaxLength(4000)
                .HasColumnName("instruccionesEntrega");
            entity.Property(e => e.Msg)
                .HasMaxLength(500)
                .HasColumnName("msg");
            entity.Property(e => e.NomeDest)
                .HasMaxLength(4000)
                .HasColumnName("nomeDest");
            entity.Property(e => e.NumEnvio)
                .HasMaxLength(4000)
                .HasColumnName("numEnvio");
            entity.Property(e => e.OfficinaCorreos).HasMaxLength(4000);
            entity.Property(e => e.Pass)
                .HasMaxLength(4000)
                .HasColumnName("pass");
            entity.Property(e => e.PobDest)
                .HasMaxLength(4000)
                .HasColumnName("pobDest");
            entity.Property(e => e.Processado).HasColumnName("processado");
            entity.Property(e => e.Referencia)
                .HasMaxLength(4000)
                .HasColumnName("referencia");
            entity.Property(e => e.Solicitante)
                .HasMaxLength(4000)
                .HasColumnName("solicitante");
            entity.Property(e => e.TelefDest)
                .HasMaxLength(4000)
                .HasColumnName("telefDest");
        });

        modelBuilder.Entity<EnviosSuspenso>(entity =>
        {
            entity.HasKey(e => e.IdManifesto).HasName("PK__EnviosSu__C64EFAE528995018");

            entity.Property(e => e.IdManifesto)
                .ValueGeneratedNever()
                .HasColumnName("idManifesto");
            entity.Property(e => e.Activo).HasColumnName("activo");
            entity.Property(e => e.DtIntrod)
                .HasColumnType("datetime")
                .HasColumnName("dtIntrod");
            entity.Property(e => e.DtLogProcessado)
                .HasColumnType("datetime")
                .HasColumnName("dtLogProcessado");
            entity.Property(e => e.DtultAct)
                .HasColumnType("datetime")
                .HasColumnName("dtultAct");
            entity.Property(e => e.IdUtilIntrod).HasColumnName("idUtilIntrod");
            entity.Property(e => e.IdUtilUltAct).HasColumnName("idUtilUltAct");
            entity.Property(e => e.Loginv).HasColumnName("loginv");
            entity.Property(e => e.SemExpedidor).HasColumnName("semExpedidor");
        });

        modelBuilder.Entity<EquipasComerciasRespTemp>(entity =>
        {
            entity.HasKey(e => e.Id).HasName("PK__EquipasC__3213E83F7F4074B0");

            entity.ToTable("EquipasComerciasRespTemp");

            entity.Property(e => e.Id).HasColumnName("id");
            entity.Property(e => e.DinamicaC)
                .HasMaxLength(50)
                .HasColumnName("dinamicaC");
            entity.Property(e => e.DtUltAct)
                .HasColumnType("datetime")
                .HasColumnName("dtUltAct");
            entity.Property(e => e.Entidade)
                .HasMaxLength(50)
                .HasColumnName("entidade");
            entity.Property(e => e.Equipa)
                .HasMaxLength(50)
                .HasColumnName("equipa");
            entity.Property(e => e.Idutil).HasColumnName("idutil");
            entity.Property(e => e.Resp)
                .HasMaxLength(10)
                .HasColumnName("resp");
        });

        modelBuilder.Entity<ErrosEtiquetasTdnlog>(entity =>
        {
            entity.HasKey(e => e.Id).HasName("PK__ErrosEti__3213E83F680CF713");

            entity.ToTable("ErrosEtiquetasTDNLog");

            entity.Property(e => e.Id).HasColumnName("id");
            entity.Property(e => e.AwbDeduzida)
                .HasMaxLength(50)
                .HasColumnName("awbDeduzida");
            entity.Property(e => e.AwbOriginal)
                .HasMaxLength(50)
                .HasColumnName("awbOriginal");
            entity.Property(e => e.DtIntrod)
                .HasColumnType("datetime")
                .HasColumnName("dtIntrod");
            entity.Property(e => e.IdPlataforma).HasColumnName("idPlataforma");
            entity.Property(e => e.RefExpedidor)
                .HasMaxLength(100)
                .HasColumnName("refExpedidor");
        });

        modelBuilder.Entity<EtlTmpManif>(entity =>
        {
            entity
                .HasNoKey()
                .ToTable("ETL_tmp_Manifs");

            entity.Property(e => e.Id).HasColumnName("id");
        });

        modelBuilder.Entity<EtlrefList>(entity =>
        {
            entity.HasKey(e => e.EtlrefList1);

            entity.ToTable("ETLRefList");

            entity.Property(e => e.EtlrefList1)
                .ValueGeneratedNever()
                .HasColumnName("ETLRefList");
            entity.Property(e => e.EtlrefListField2)
                .HasMaxLength(200)
                .HasColumnName("ETLRefListField2");
            entity.Property(e => e.EtlrefListField3)
                .HasMaxLength(200)
                .HasColumnName("ETLRefListField3");
            entity.Property(e => e.EtlrefListField4)
                .HasMaxLength(200)
                .HasColumnName("ETLRefListField4");
        });

        modelBuilder.Entity<ExcFedexAo>(entity =>
        {
            entity
                .HasNoKey()
                .ToTable("ExcFedexAO");

            entity.Property(e => e.Cliente)
                .HasMaxLength(255)
                .HasColumnName("CLIENTE");
            entity.Property(e => e.GcomCp)
                .HasMaxLength(255)
                .HasColumnName("GCOM CP");
            entity.Property(e => e.ZonaInt)
                .HasMaxLength(255)
                .HasColumnName("ZONA INT");
        });

        modelBuilder.Entity<ExcepDomesticoAo>(entity =>
        {
            entity
                .HasNoKey()
                .ToTable("ExcepDomesticoAO");

            entity.Property(e => e.CGcom).HasColumnName("C# GCOM");
            entity.Property(e => e.Cliente)
                .HasMaxLength(255)
                .HasColumnName("CLIENTE");
            entity.Property(e => e.ZonaNac)
                .HasMaxLength(255)
                .HasColumnName("ZONA NAC");
        });

        modelBuilder.Entity<ExepcoesTarifasEspeciaisFornecedor>(entity =>
        {
            entity.HasKey(e => e.Id).HasName("PK__Exepcoes__3213E83F4776D177");

            entity.ToTable("ExepcoesTarifasEspeciaisFornecedor");

            entity.Property(e => e.Id).HasColumnName("id");
            entity.Property(e => e.DtIntrod)
                .HasColumnType("datetime")
                .HasColumnName("dtIntrod");
            entity.Property(e => e.DtUltAct)
                .HasColumnType("datetime")
                .HasColumnName("dtUltAct");
            entity.Property(e => e.IdFornecedor).HasColumnName("idFornecedor");
            entity.Property(e => e.IdRota).HasColumnName("idRota");
            entity.Property(e => e.IdTarifaEspecialFornecedor).HasColumnName("idTarifaEspecialFornecedor");
            entity.Property(e => e.IdUtilIntrod).HasColumnName("idUtilIntrod");
            entity.Property(e => e.IdUtilUltAct).HasColumnName("idUtilUltAct");
        });

        modelBuilder.Entity<Exeption>(entity =>
        {
            entity
                .HasNoKey()
                .ToTable("exeptions");

            entity.Property(e => e.Equipa)
                .HasMaxLength(255)
                .HasColumnName("equipa");
            entity.Property(e => e.Id).HasColumnName("id");
        });

        modelBuilder.Entity<ExportacaoAgrupamento>(entity =>
        {
            entity.ToTable("ExportacaoAgrupamento");

            entity.Property(e => e.Id).HasColumnName("id");
            entity.Property(e => e.Codigo)
                .HasMaxLength(50)
                .HasColumnName("codigo");
            entity.Property(e => e.Data)
                .HasColumnType("datetime")
                .HasColumnName("data");
            entity.Property(e => e.IdCliMorada).HasColumnName("idCliMorada");
            entity.Property(e => e.IdCliente).HasColumnName("idCliente");
            entity.Property(e => e.IdEntidade).HasColumnName("idEntidade");
            entity.Property(e => e.IdTipoAgrupa).HasColumnName("idTipoAgrupa");
            entity.Property(e => e.Morada)
                .HasMaxLength(250)
                .HasColumnName("morada");
            entity.Property(e => e.NomeEmpresa)
                .HasMaxLength(50)
                .HasColumnName("nomeEmpresa");
        });

        modelBuilder.Entity<ExportacaoHandlingCodesT>(entity =>
        {
            entity.ToTable("ExportacaoHandlingCodes_T");

            entity.Property(e => e.Id)
                .ValueGeneratedNever()
                .HasColumnName("id");
            entity.Property(e => e.Activo).HasColumnName("activo");
            entity.Property(e => e.Codigo)
                .HasMaxLength(2)
                .HasColumnName("codigo");
            entity.Property(e => e.Descricao)
                .HasMaxLength(50)
                .HasColumnName("descricao");
        });

        modelBuilder.Entity<ExportacaoLocalPagamentoT>(entity =>
        {
            entity.HasKey(e => e.Id).HasName("PK__Exportac__3213E83F141D0C0F");

            entity.ToTable("ExportacaoLocalPagamento_T");

            entity.Property(e => e.Id).HasColumnName("id");
            entity.Property(e => e.Activo)
                .IsRequired()
                .HasDefaultValueSql("((1))")
                .HasColumnName("activo");
            entity.Property(e => e.Codigo)
                .HasMaxLength(15)
                .HasColumnName("codigo");
            entity.Property(e => e.Descricao)
                .HasMaxLength(50)
                .HasColumnName("descricao");
        });

        modelBuilder.Entity<ExportacaoManifestoCorreccoesCosmo>(entity =>
        {
            entity.HasIndex(e => new { e.AlteraValor, e.DtAlteracao }, "Idx_alteraValor_dtAlteracao").HasFillFactor(80);

            entity.HasIndex(e => e.DtAlteracao, "idx_dtAlteracao").HasFillFactor(80);

            entity.HasIndex(e => e.IdManifesto, "idx_idManifesto").HasFillFactor(80);

            entity.Property(e => e.Id).HasColumnName("id");
            entity.Property(e => e.AlteraValor)
                .HasDefaultValueSql("((0))")
                .HasColumnName("alteraValor");
            entity.Property(e => e.Altura)
                .HasColumnType("money")
                .HasColumnName("altura");
            entity.Property(e => e.Comprimento)
                .HasColumnType("money")
                .HasColumnName("comprimento");
            entity.Property(e => e.DtAlerta)
                .HasColumnType("datetime")
                .HasColumnName("dtAlerta");
            entity.Property(e => e.DtAlteraValor)
                .HasColumnType("datetime")
                .HasColumnName("dtAlteraValor");
            entity.Property(e => e.DtAlteracao)
                .HasColumnType("datetime")
                .HasColumnName("dtAlteracao");
            entity.Property(e => e.DtIntrod)
                .HasDefaultValueSql("(getdate())")
                .HasColumnType("datetime")
                .HasColumnName("dtIntrod");
            entity.Property(e => e.IdManifesto).HasColumnName("idManifesto");
            entity.Property(e => e.IdTipoProduto).HasColumnName("idTipoProduto");
            entity.Property(e => e.IdUnidadeMetrica).HasColumnName("idUnidadeMetrica");
            entity.Property(e => e.IdUnidadePeso).HasColumnName("idUnidadePeso");
            entity.Property(e => e.IdUnidadePesoVolumetrico).HasColumnName("idUnidadePesoVolumetrico");
            entity.Property(e => e.IdUtilAlteracao).HasColumnName("idUtilAlteracao");
            entity.Property(e => e.Largura)
                .HasColumnType("money")
                .HasColumnName("largura");
            entity.Property(e => e.NumPacotes).HasColumnName("numPacotes");
            entity.Property(e => e.Peso)
                .HasColumnType("money")
                .HasColumnName("peso");
            entity.Property(e => e.PesoVolumetrico)
                .HasColumnType("money")
                .HasColumnName("pesoVolumetrico");
        });

        modelBuilder.Entity<ExportacaoManifestoDescricoesProibidasT>(entity =>
        {
            entity.HasKey(e => e.Id).HasName("PK_ExportacaoDescricoesProibidas_T");

            entity.ToTable("ExportacaoManifestoDescricoesProibidas_T");

            entity.Property(e => e.Id).HasColumnName("id");
            entity.Property(e => e.Activo)
                .IsRequired()
                .HasDefaultValueSql("(1)")
                .HasColumnName("activo");
            entity.Property(e => e.Descricao)
                .HasMaxLength(75)
                .HasColumnName("descricao");
            entity.Property(e => e.Detalhe)
                .HasMaxLength(500)
                .HasColumnName("detalhe");
        });

        modelBuilder.Entity<ExportacaoManifestoFsm>(entity =>
        {
            entity.ToTable("ExportacaoManifestoFSM");

            entity.HasIndex(e => e.AwbNumber, "IDX_AWB_NUMBER").HasFillFactor(80);

            entity.HasIndex(e => new { e.MasterNumber, e.AwbNumber }, "idx_maxter_awb").HasFillFactor(80);

            entity.Property(e => e.Id)
                .ValueGeneratedNever()
                .HasColumnName("id");
            entity.Property(e => e.Altura)
                .HasColumnType("money")
                .HasColumnName("altura");
            entity.Property(e => e.AwbNumber)
                .HasMaxLength(20)
                .HasColumnName("awb_number");
            entity.Property(e => e.BatchNumber).HasColumnName("batchNumber");
            entity.Property(e => e.BrCidade)
                .HasMaxLength(12)
                .HasColumnName("brCidade");
            entity.Property(e => e.BrCpostal)
                .HasMaxLength(10)
                .HasColumnName("brCPostal");
            entity.Property(e => e.BrNome)
                .HasMaxLength(21)
                .HasColumnName("brNome");
            entity.Property(e => e.BrTelefone)
                .HasMaxLength(15)
                .HasColumnName("brTelefone");
            entity.Property(e => e.CargoAircraftOnly)
                .HasDefaultValueSql("((1))")
                .HasColumnName("cargo_aircraft_only");
            entity.Property(e => e.Cflag).HasColumnName("CFlag");
            entity.Property(e => e.CoCidade)
                .HasMaxLength(34)
                .HasColumnName("coCidade");
            entity.Property(e => e.CoCidadeFsm)
                .HasMaxLength(34)
                .HasColumnName("coCidadeFSM");
            entity.Property(e => e.CoCpostal)
                .HasMaxLength(10)
                .HasColumnName("coCPostal");
            entity.Property(e => e.CoCpostalFsm)
                .HasMaxLength(10)
                .HasColumnName("coCPostalFSM");
            entity.Property(e => e.CoDepartamento)
                .HasMaxLength(12)
                .HasColumnName("coDepartamento");
            entity.Property(e => e.CoEmpresa)
                .HasMaxLength(34)
                .HasColumnName("coEmpresa");
            entity.Property(e => e.CoEmpresaFsm)
                .HasMaxLength(34)
                .HasColumnName("coEmpresaFSM");
            entity.Property(e => e.CoEstado)
                .HasMaxLength(2)
                .HasColumnName("coEstado");
            entity.Property(e => e.CoMorada)
                .HasMaxLength(68)
                .HasColumnName("coMorada");
            entity.Property(e => e.CoMorada1Fsm)
                .HasMaxLength(34)
                .HasColumnName("coMorada1FSM");
            entity.Property(e => e.CoMorada2Fsm)
                .HasMaxLength(34)
                .HasColumnName("coMorada2FSM");
            entity.Property(e => e.CoNome)
                .HasMaxLength(34)
                .HasColumnName("coNome");
            entity.Property(e => e.CoNomeFsm)
                .HasMaxLength(34)
                .HasColumnName("coNomeFSM");
            entity.Property(e => e.CoPaisFsm)
                .HasMaxLength(2)
                .HasColumnName("CoPaisFSM");
            entity.Property(e => e.CoTelefone)
                .HasMaxLength(15)
                .HasColumnName("coTelefone");
            entity.Property(e => e.CoTelefoneFsm)
                .HasMaxLength(15)
                .HasColumnName("coTelefoneFSM");
            entity.Property(e => e.Comprimento)
                .HasColumnType("money")
                .HasColumnName("comprimento");
            entity.Property(e => e.CustoPrevisto)
                .HasColumnType("money")
                .HasColumnName("custoPrevisto");
            entity.Property(e => e.CustoReal)
                .HasColumnType("money")
                .HasColumnName("custoReal");
            entity.Property(e => e.DangerousGoodsFlag)
                .HasDefaultValueSql("((0))")
                .HasColumnName("dangerous_goods_flag");
            entity.Property(e => e.Descricao)
                .HasMaxLength(200)
                .HasColumnName("descricao");
            entity.Property(e => e.DescricaoFsm)
                .HasMaxLength(200)
                .HasColumnName("descricaoFSM");
            entity.Property(e => e.DtCustoPrevisto)
                .HasColumnType("datetime")
                .HasColumnName("dtCustoPrevisto");
            entity.Property(e => e.DtCustoReal)
                .HasColumnType("datetime")
                .HasColumnName("dtCustoReal");
            entity.Property(e => e.DtDu)
                .HasColumnType("datetime")
                .HasColumnName("dtDU");
            entity.Property(e => e.DtEnvio)
                .HasColumnType("datetime")
                .HasColumnName("dtEnvio");
            entity.Property(e => e.DtExpToFact)
                .HasColumnType("datetime")
                .HasColumnName("dtExp_to_fact");
            entity.Property(e => e.DtExpToGrasp)
                .HasColumnType("datetime")
                .HasColumnName("dtExp_to_grasp");
            entity.Property(e => e.DtIntrod)
                .HasDefaultValueSql("(getdate())")
                .HasColumnType("datetime")
                .HasColumnName("dtIntrod");
            entity.Property(e => e.DtUltAct)
                .HasColumnType("datetime")
                .HasColumnName("dtUltAct");
            entity.Property(e => e.DtValidToFact)
                .HasColumnType("datetime")
                .HasColumnName("dtValid_to_fact");
            entity.Property(e => e.DtValidToGrasp)
                .HasColumnType("datetime")
                .HasColumnName("dtValid_to_grasp");
            entity.Property(e => e.DtxAccount)
                .HasMaxLength(9)
                .HasColumnName("dtxAccount");
            entity.Property(e => e.DtxAccountFsm)
                .HasMaxLength(9)
                .HasColumnName("dtxAccountFSM");
            entity.Property(e => e.DutiesTaxesFsm)
                .HasMaxLength(1)
                .HasColumnName("DutiesTaxesFSM");
            entity.Property(e => e.EstacaoDestinoFsm)
                .HasMaxLength(5)
                .HasColumnName("EstacaoDestinoFSM");
            entity.Property(e => e.ExpToFact).HasColumnName("exp_to_fact");
            entity.Property(e => e.ExpToGrasp).HasColumnName("exp_to_grasp");
            entity.Property(e => e.ExportLicense).HasColumnName("exportLicense");
            entity.Property(e => e.ExtractedForTransfer).HasColumnName("extracted_for_transfer");
            entity.Property(e => e.FacturacaoIndividual).HasColumnName("facturacaoIndividual");
            entity.Property(e => e.FedexHandlingCode)
                .HasMaxLength(2)
                .HasColumnName("fedex_handling_code");
            entity.Property(e => e.FedexHandlingCode2)
                .HasMaxLength(2)
                .HasColumnName("fedex_handling_code2");
            entity.Property(e => e.Fef)
                .HasDefaultValueSql("((0))")
                .HasColumnName("fef");
            entity.Property(e => e.FormId)
                .HasMaxLength(4)
                .HasColumnName("form_id");
            entity.Property(e => e.FormIdFsm)
                .HasMaxLength(4)
                .HasColumnName("form_idFSM");
            entity.Property(e => e.HarmonizedCode)
                .HasMaxLength(80)
                .HasColumnName("harmonizedCode");
            entity.Property(e => e.HarmonizedCodeFsm)
                .HasMaxLength(80)
                .HasColumnName("harmonizedCodeFSM");
            entity.Property(e => e.HoldAtFedexFsm)
                .HasMaxLength(1)
                .HasColumnName("holdAtFedexFSM");
            entity.Property(e => e.IdAviao).HasColumnName("idAviao");
            entity.Property(e => e.IdBrPais).HasColumnName("idBrPais");
            entity.Property(e => e.IdCliMorada).HasColumnName("idCliMorada");
            entity.Property(e => e.IdCliente).HasColumnName("idCliente");
            entity.Property(e => e.IdCoCpostal).HasColumnName("idCoCPostal");
            entity.Property(e => e.IdCoPais).HasColumnName("idCoPais");
            entity.Property(e => e.IdDistribuidor)
                .HasDefaultValueSql("((1))")
                .HasColumnName("idDistribuidor");
            entity.Property(e => e.IdDutiesTaxes).HasColumnName("idDutiesTaxes");
            entity.Property(e => e.IdEntidade).HasColumnName("idEntidade");
            entity.Property(e => e.IdEstacaoDestino)
                .HasMaxLength(5)
                .HasColumnName("idEstacaoDestino");
            entity.Property(e => e.IdMoeda).HasColumnName("idMoeda");
            entity.Property(e => e.IdPaisManufactura).HasColumnName("idPaisManufactura");
            entity.Property(e => e.IdPlataforma).HasColumnName("idPlataforma");
            entity.Property(e => e.IdServico).HasColumnName("idServico");
            entity.Property(e => e.IdServicoDom).HasColumnName("idServicoDom");
            entity.Property(e => e.IdTarifa).HasColumnName("idTarifa");
            entity.Property(e => e.IdTipoProduto).HasColumnName("idTipoProduto");
            entity.Property(e => e.IdTransportCharges).HasColumnName("idTransportCharges");
            entity.Property(e => e.IdUnidadeMetrica).HasColumnName("idUnidadeMetrica");
            entity.Property(e => e.IdUnidadePeso).HasColumnName("idUnidadePeso");
            entity.Property(e => e.IdUnidadePesoVolumetrico).HasColumnName("idUnidadePesoVolumetrico");
            entity.Property(e => e.IdUtilDu).HasColumnName("idUtilDU");
            entity.Property(e => e.IdUtilExpToFact).HasColumnName("idUtilExp_to_fact");
            entity.Property(e => e.IdUtilExpToGrasp).HasColumnName("idUtilExp_to_grasp");
            entity.Property(e => e.IdUtilIntrod).HasColumnName("idUtilIntrod");
            entity.Property(e => e.IdUtilUltAct).HasColumnName("idUtilUltAct");
            entity.Property(e => e.IdUtilValidToFact).HasColumnName("idUtilValid_to_fact");
            entity.Property(e => e.IdUtilValidToGrasp).HasColumnName("idUtilValid_to_grasp");
            entity.Property(e => e.IdfedexServiceType)
                .HasDefaultValueSql("((1))")
                .HasColumnName("idfedex_service_type");
            entity.Property(e => e.Idpickup).HasColumnName("idpickup");
            entity.Property(e => e.Ipf).HasColumnName("ipf");
            entity.Property(e => e.Largura)
                .HasColumnType("money")
                .HasColumnName("largura");
            entity.Property(e => e.MasterNumber)
                .HasMaxLength(50)
                .HasColumnName("masterNumber");
            entity.Property(e => e.MoedaFsm)
                .HasMaxLength(3)
                .HasColumnName("MoedaFSM");
            entity.Property(e => e.NonComercialFlag).HasColumnName("non_comercial_flag");
            entity.Property(e => e.NumPacotes).HasColumnName("numPacotes");
            entity.Property(e => e.NumPacotesFsm).HasColumnName("numPacotesFSM");
            entity.Property(e => e.ObsCusto)
                .HasMaxLength(200)
                .HasColumnName("obsCusto");
            entity.Property(e => e.ObservacoesDu)
                .HasMaxLength(100)
                .HasColumnName("observacoesDU");
            entity.Property(e => e.PaisManufactura).HasMaxLength(2);
            entity.Property(e => e.Peso)
                .HasColumnType("money")
                .HasColumnName("peso");
            entity.Property(e => e.PesoFsm)
                .HasColumnType("money")
                .HasColumnName("pesoFSM");
            entity.Property(e => e.PesoVolumetrico)
                .HasColumnType("money")
                .HasColumnName("pesoVolumetrico");
            entity.Property(e => e.PesoVolumetricoFsm)
                .HasColumnType("money")
                .HasColumnName("pesoVolumetricoFSM");
            entity.Property(e => e.PlataformaFsm)
                .HasMaxLength(5)
                .HasColumnName("PlataformaFSM");
            entity.Property(e => e.ReceivedAt).HasColumnName("received_at");
            entity.Property(e => e.ReceivedAtFsm).HasColumnName("received_atFSM");
            entity.Property(e => e.RouteDate)
                .HasColumnType("datetime")
                .HasColumnName("route_date");
            entity.Property(e => e.Seguro).HasColumnName("seguro");
            entity.Property(e => e.ShNome)
                .HasMaxLength(34)
                .HasColumnName("shNome");
            entity.Property(e => e.ShNomeFsm)
                .HasMaxLength(34)
                .HasColumnName("shNomeFSM");
            entity.Property(e => e.ShNumContaFedex).HasColumnName("shNumContaFedex");
            entity.Property(e => e.ShNumContaFedexFsm).HasColumnName("shNumContaFedexFSM");
            entity.Property(e => e.ShPaisFsm)
                .HasMaxLength(2)
                .HasColumnName("shPaisFSM");
            entity.Property(e => e.ShReferencia)
                .HasMaxLength(24)
                .HasColumnName("shReferencia");
            entity.Property(e => e.ShReferenciaFsm)
                .HasMaxLength(24)
                .HasColumnName("shReferenciaFSM");
            entity.Property(e => e.ShipDateFsm)
                .HasColumnType("datetime")
                .HasColumnName("shipDateFSM");
            entity.Property(e => e.SvcFsm)
                .HasMaxLength(2)
                .HasColumnName("svcFSM");
            entity.Property(e => e.TcAccount)
                .HasMaxLength(9)
                .HasColumnName("tcAccount");
            entity.Property(e => e.TcAccountFsm)
                .HasMaxLength(9)
                .HasColumnName("tcAccountFSM");
            entity.Property(e => e.ThermalAwb).HasColumnName("thermalAWB");
            entity.Property(e => e.TipoProdutoFsm)
                .HasMaxLength(2)
                .HasColumnName("TipoProdutoFSM");
            entity.Property(e => e.TotalCharges)
                .HasColumnType("money")
                .HasColumnName("totalCharges");
            entity.Property(e => e.TransportChargesFsm)
                .HasMaxLength(1)
                .HasColumnName("TransportChargesFSM");
            entity.Property(e => e.UnidadePesoFsm)
                .HasMaxLength(1)
                .HasColumnName("UnidadePesoFSM");
            entity.Property(e => e.UnidadePesoVolumetricoFsm)
                .HasMaxLength(1)
                .HasColumnName("UnidadePesoVolumetricoFSM");
            entity.Property(e => e.ValidToFact)
                .HasDefaultValueSql("((0))")
                .HasColumnName("valid_to_fact");
            entity.Property(e => e.ValidToGrasp)
                .HasDefaultValueSql("((0))")
                .HasColumnName("valid_to_grasp");
            entity.Property(e => e.ValorAlfandega)
                .HasDefaultValueSql("((0))")
                .HasColumnType("money")
                .HasColumnName("valorAlfandega");
            entity.Property(e => e.ValorAlfandegaFsm)
                .HasColumnType("money")
                .HasColumnName("valorAlfandegaFSM");
            entity.Property(e => e.ValorCarriage)
                .HasDefaultValueSql("((0))")
                .HasColumnType("money")
                .HasColumnName("valorCarriage");
            entity.Property(e => e.ValorCarriageFsm)
                .HasColumnType("money")
                .HasColumnName("valorCarriageFSM");
            entity.Property(e => e.ValorFef)
                .HasColumnType("money")
                .HasColumnName("valorFEF");
            entity.Property(e => e.ValorReembolso)
                .HasColumnType("money")
                .HasColumnName("valorReembolso");
            entity.Property(e => e.ValorVendaDinheiro)
                .HasColumnType("money")
                .HasColumnName("valorVendaDinheiro");
            entity.Property(e => e.VendaDinheiro)
                .HasDefaultValueSql("((0))")
                .HasColumnName("vendaDinheiro");
        });

        modelBuilder.Entity<ExportacaoReceivedAtT>(entity =>
        {
            entity.HasKey(e => e.Id).HasName("PK_ExportacaoReceivedAt");

            entity.ToTable("ExportacaoReceivedAt_T");

            entity.Property(e => e.Id).HasColumnName("id");
            entity.Property(e => e.Activo)
                .IsRequired()
                .HasDefaultValueSql("(1)")
                .HasColumnName("activo");
            entity.Property(e => e.Descricao)
                .HasMaxLength(50)
                .HasColumnName("descricao");
        });

        modelBuilder.Entity<ExportacaoTipoCargaT>(entity =>
        {
            entity.HasKey(e => e.Id).HasName("PK__ExportacaoTipoCa__7330EBF5");

            entity.ToTable("ExportacaoTipoCarga_T");

            entity.HasIndex(e => e.Codigo, "IDX_Codigo").HasFillFactor(80);

            entity.Property(e => e.Id).HasColumnName("id");
            entity.Property(e => e.Activo).HasColumnName("activo");
            entity.Property(e => e.Codigo)
                .HasMaxLength(5)
                .HasColumnName("codigo");
            entity.Property(e => e.Descricao)
                .HasMaxLength(30)
                .HasColumnName("descricao");
        });

        modelBuilder.Entity<FacturaProformaCab>(entity =>
        {
            entity.HasKey(e => e.Id).HasName("PK__FacturaP__3213E83F364645F3");

            entity.ToTable("FacturaProformaCab");

            entity.Property(e => e.Id).HasColumnName("id");
            entity.Property(e => e.AnoDoc).HasColumnName("anoDoc");
            entity.Property(e => e.Anulado).HasColumnName("anulado");
            entity.Property(e => e.Cambio)
                .HasColumnType("money")
                .HasColumnName("cambio");
            entity.Property(e => e.DtAnulacao)
                .HasColumnType("datetime")
                .HasColumnName("dtAnulacao");
            entity.Property(e => e.DtDoc)
                .HasColumnType("datetime")
                .HasColumnName("dtDoc");
            entity.Property(e => e.DtEmissao)
                .HasColumnType("datetime")
                .HasColumnName("dtEmissao");
            entity.Property(e => e.DtFecho)
                .HasColumnType("datetime")
                .HasColumnName("dtFecho");
            entity.Property(e => e.DtIntrod)
                .HasColumnType("datetime")
                .HasColumnName("dtIntrod");
            entity.Property(e => e.DtUltAct)
                .HasColumnType("datetime")
                .HasColumnName("dtUltAct");
            entity.Property(e => e.DtVencimento)
                .HasColumnType("datetime")
                .HasColumnName("dtVencimento");
            entity.Property(e => e.IdCliMorada).HasColumnName("idCliMorada");
            entity.Property(e => e.IdCliente).HasColumnName("idCliente");
            entity.Property(e => e.IdEntidade).HasColumnName("idEntidade");
            entity.Property(e => e.IdEstado).HasColumnName("idEstado");
            entity.Property(e => e.IdMoeda).HasColumnName("idMoeda");
            entity.Property(e => e.IdUtilAnulacao).HasColumnName("idUtilAnulacao");
            entity.Property(e => e.IdUtilEmissao).HasColumnName("idUtilEmissao");
            entity.Property(e => e.IdUtilFecho).HasColumnName("idUtilFecho");
            entity.Property(e => e.IdUtilIntrod).HasColumnName("idUtilIntrod");
            entity.Property(e => e.NumDoc)
                .HasMaxLength(12)
                .HasColumnName("numDoc");
            entity.Property(e => e.NumeradorDoc).HasColumnName("numeradorDoc");
            entity.Property(e => e.Observacoes)
                .HasMaxLength(2000)
                .HasColumnName("observacoes");
            entity.Property(e => e.ValorDoc)
                .HasColumnType("money")
                .HasColumnName("valorDoc");
            entity.Property(e => e.ValorIva)
                .HasColumnType("money")
                .HasColumnName("valorIVA");
            entity.Property(e => e.ValorSiva)
                .HasColumnType("money")
                .HasColumnName("valorSIVA");
        });

        modelBuilder.Entity<FacturacaoServicosParceiro>(entity =>
        {
            entity.HasIndex(e => new { e.IdEntidade, e.Facturada, e.DtValor, e.ScanDate }, "Idx_idEntidade_facturada_dtValor_dtScan").HasFillFactor(80);

            entity.HasIndex(e => new { e.IdEntidade, e.ParaFacturar, e.Facturada, e.ScanDate }, "Idx_idEntidade_paraFacturar_facturada_scanDate").HasFillFactor(80);

            entity.HasIndex(e => new { e.Facturada, e.IdEntidade, e.ScanDate }, "idx_facturada_idEntidade_scandate").HasFillFactor(80);

            entity.HasIndex(e => new { e.IdEntidade, e.IdRegime, e.IdManifesto, e.Facturada, e.ScanDate }, "idx_idEntidade_idRegime_idManifesto_facturada_scandate").HasFillFactor(80);

            entity.Property(e => e.Id).HasColumnName("id");
            entity.Property(e => e.DtFacturada)
                .HasColumnType("datetime")
                .HasColumnName("dtFacturada");
            entity.Property(e => e.DtIntrod)
                .HasDefaultValueSql("(getdate())")
                .HasColumnType("datetime")
                .HasColumnName("dtIntrod");
            entity.Property(e => e.DtParaFacturar)
                .HasColumnType("datetime")
                .HasColumnName("dtParaFacturar");
            entity.Property(e => e.DtValor)
                .HasColumnType("datetime")
                .HasColumnName("dtValor");
            entity.Property(e => e.Facturada).HasColumnName("facturada");
            entity.Property(e => e.IdCliMoradaFact).HasColumnName("idCliMoradaFact");
            entity.Property(e => e.IdClienteFact).HasColumnName("idClienteFact");
            entity.Property(e => e.IdDoc).HasColumnName("idDoc");
            entity.Property(e => e.IdEntidade).HasColumnName("idEntidade");
            entity.Property(e => e.IdManifesto).HasColumnName("idManifesto");
            entity.Property(e => e.IdMotivoNaoFacturar).HasColumnName("idMotivoNaoFacturar");
            entity.Property(e => e.IdParent).HasColumnName("idParent");
            entity.Property(e => e.IdPickup).HasColumnName("idPickup");
            entity.Property(e => e.IdRegime).HasColumnName("idRegime");
            entity.Property(e => e.IdScan).HasColumnName("idScan");
            entity.Property(e => e.IdUtilFacturada).HasColumnName("idUtilFacturada");
            entity.Property(e => e.Obs)
                .HasMaxLength(50)
                .HasColumnName("obs");
            entity.Property(e => e.Obs2)
                .HasMaxLength(50)
                .HasColumnName("obs2");
            entity.Property(e => e.ParaFacturar)
                .IsRequired()
                .HasDefaultValueSql("((1))")
                .HasColumnName("paraFacturar");
            entity.Property(e => e.PesoFact)
                .HasColumnType("money")
                .HasColumnName("pesoFact");
            entity.Property(e => e.ScanCode)
                .HasMaxLength(2)
                .HasColumnName("scanCode");
            entity.Property(e => e.ScanDate)
                .HasColumnType("datetime")
                .HasColumnName("scanDate");
            entity.Property(e => e.SumPacs).HasColumnName("sumPacs");
            entity.Property(e => e.SumPeso)
                .HasColumnType("money")
                .HasColumnName("sumPeso");
            entity.Property(e => e.Valor)
                .HasColumnType("money")
                .HasColumnName("valor");
        });

        modelBuilder.Entity<FacturacaoServicosParceirosDocConfigT>(entity =>
        {
            entity.ToTable("FacturacaoServicosParceirosDocConfig_T");

            entity.Property(e => e.Id).HasColumnName("id");
            entity.Property(e => e.CodIva)
                .HasMaxLength(1)
                .IsUnicode(false)
                .HasColumnName("codIva");
            entity.Property(e => e.IdCliMorada).HasColumnName("idCliMorada");
            entity.Property(e => e.IdCliente).HasColumnName("idCliente");
            entity.Property(e => e.IdDepartamentoDoc).HasColumnName("idDepartamentoDoc");
            entity.Property(e => e.IdEntidade).HasColumnName("idEntidade");
            entity.Property(e => e.IdProdutoTipo).HasColumnName("idProdutoTipo");
            entity.Property(e => e.IdRegime).HasColumnName("idRegime");
            entity.Property(e => e.IdServicoDet).HasColumnName("idServicoDet");
            entity.Property(e => e.IdTipoDoc).HasColumnName("idTipoDoc");
            entity.Property(e => e.IdTipoIva).HasColumnName("idTipoIva");
            entity.Property(e => e.TextoDescricao)
                .HasMaxLength(250)
                .HasColumnName("textoDescricao");
        });

        modelBuilder.Entity<FacturacaoServicosParceirosItem>(entity =>
        {
            entity.HasIndex(e => e.IdFacturacaoServicoParceiro, "Idx_idFacturacaoServicoParceiro");

            entity.Property(e => e.Id).HasColumnName("id");
            entity.Property(e => e.Activo)
                .IsRequired()
                .HasDefaultValueSql("((1))")
                .HasColumnName("activo");
            entity.Property(e => e.CodIva)
                .HasMaxLength(10)
                .HasColumnName("codIva");
            entity.Property(e => e.CustoPrevisto)
                .HasColumnType("money")
                .HasColumnName("custoPrevisto");
            entity.Property(e => e.Descricao)
                .HasMaxLength(250)
                .HasColumnName("descricao");
            entity.Property(e => e.DtExpToFact)
                .HasColumnType("datetime")
                .HasColumnName("dtExp_to_fact");
            entity.Property(e => e.DtFact)
                .HasColumnType("datetime")
                .HasColumnName("dtFact");
            entity.Property(e => e.DtIsValidToFact)
                .HasColumnType("datetime")
                .HasColumnName("dt_is_valid_to_fact");
            entity.Property(e => e.DtUltAct)
                .HasColumnType("datetime")
                .HasColumnName("dtUltAct");
            entity.Property(e => e.DtValor)
                .HasColumnType("datetime")
                .HasColumnName("dtValor");
            entity.Property(e => e.EmErroValorizacao).HasColumnName("emErroValorizacao");
            entity.Property(e => e.ExpToFact).HasColumnName("exp_to_fact");
            entity.Property(e => e.Fact).HasColumnName("fact");
            entity.Property(e => e.IdFacturacaoServicoParceiro).HasColumnName("idFacturacaoServicoParceiro");
            entity.Property(e => e.IdIvareg).HasColumnName("idIVAReg");
            entity.Property(e => e.IdManifestoItem).HasColumnName("idManifestoItem");
            entity.Property(e => e.IdScan).HasColumnName("idScan");
            entity.Property(e => e.IdServicoDet).HasColumnName("idServicoDet");
            entity.Property(e => e.IdTarifa).HasColumnName("idTarifa");
            entity.Property(e => e.IdTipoAgrupa).HasColumnName("idTipoAgrupa");
            entity.Property(e => e.IdTipoAgrupaRep).HasColumnName("idTipoAgrupaRep");
            entity.Property(e => e.IdTipoIva).HasColumnName("idTipoIva");
            entity.Property(e => e.IdUtilIsValidToFact).HasColumnName("idUtil_is_valid_to_fact");
            entity.Property(e => e.IdUtilUltAct).HasColumnName("idUtilUltAct");
            entity.Property(e => e.IdUtilValor).HasColumnName("idUtilValor");
            entity.Property(e => e.IsValidToFact).HasColumnName("is_valid_to_fact");
            entity.Property(e => e.PercDesconto)
                .HasColumnType("money")
                .HasColumnName("percDesconto");
            entity.Property(e => e.ReqValidacao).HasColumnName("reqValidacao");
            entity.Property(e => e.Valor)
                .HasColumnType("money")
                .HasColumnName("valor");
            entity.Property(e => e.ValorManual).HasColumnName("valorManual");
            entity.Property(e => e.ValorRef)
                .HasColumnType("money")
                .HasColumnName("valorRef");
        });

        modelBuilder.Entity<FacturacaoServicosParceirosMotivosNaoFacturarT>(entity =>
        {
            entity.ToTable("FacturacaoServicosParceirosMotivosNaoFacturar_T");

            entity.Property(e => e.Id).HasColumnName("id");
            entity.Property(e => e.Activo).HasColumnName("activo");
            entity.Property(e => e.Codigo)
                .HasMaxLength(15)
                .HasColumnName("codigo");
            entity.Property(e => e.Descricao)
                .HasMaxLength(50)
                .HasColumnName("descricao");
            entity.Property(e => e.IdEntidade).HasColumnName("idEntidade");
        });

        modelBuilder.Entity<FedexIb>(entity =>
        {
            entity
                .HasNoKey()
                .ToTable("FedexIb");

            entity.Property(e => e.Correcto).HasMaxLength(255);
            entity.Property(e => e.Cosmos)
                .HasMaxLength(255)
                .HasColumnName("COSMOS");
            entity.Property(e => e.Cp4Digit).HasColumnName("CP 4 digit");
            entity.Property(e => e.ExcelFedEx).HasColumnName("Excel FedEx");
            entity.Property(e => e.Null)
                .HasMaxLength(255)
                .HasColumnName("NULL");
            entity.Property(e => e.VeredictoGcom).HasColumnName("veredicto GCOM");
            entity.Property(e => e._0).HasColumnName("0");
            entity.Property(e => e._1).HasColumnName("1");
            entity.Property(e => e._3)
                .HasMaxLength(255)
                .HasColumnName("3");
        });

        modelBuilder.Entity<FedexTarifa>(entity =>
        {
            entity
                .HasNoKey()
                .ToTable("FEDEX_TARIFAS");

            entity.Property(e => e.Codigo)
                .HasMaxLength(200)
                .HasColumnName("codigo");
            entity.Property(e => e.IdCliente).HasColumnName("idCliente");
            entity.Property(e => e.IdRegime).HasColumnName("idRegime");
            entity.Property(e => e.IdServico).HasColumnName("idServico");
        });

        modelBuilder.Entity<Feriado>(entity =>
        {
            entity.HasIndex(e => e.Dia, "idx_dia").HasFillFactor(80);

            entity.Property(e => e.Id).HasColumnName("id");
            entity.Property(e => e.Descricao)
                .HasMaxLength(50)
                .HasColumnName("descricao");
            entity.Property(e => e.Dia)
                .HasColumnType("datetime")
                .HasColumnName("dia");
            entity.Property(e => e.Fixo).HasColumnName("fixo");
            entity.Property(e => e.Local).HasColumnName("local");
        });

        modelBuilder.Entity<FeriadosPlataformasM>(entity =>
        {
            entity
                .HasNoKey()
                .ToTable("FeriadosPlataformas_M");

            entity.Property(e => e.Activo).HasColumnName("activo");
            entity.Property(e => e.DtUltAct)
                .HasColumnType("datetime")
                .HasColumnName("dtUltAct");
            entity.Property(e => e.DtUtilIntrod)
                .HasDefaultValueSql("(getdate())")
                .HasColumnType("datetime")
                .HasColumnName("dtUtilIntrod");
            entity.Property(e => e.Id)
                .ValueGeneratedOnAdd()
                .HasColumnName("id");
            entity.Property(e => e.IdFeriado).HasColumnName("idFeriado");
            entity.Property(e => e.IdPlataforma).HasColumnName("idPlataforma");
            entity.Property(e => e.IdUtilIntrod).HasColumnName("idUtilIntrod");
            entity.Property(e => e.IdUtilUltAct).HasColumnName("idUtilUltAct");
        });

        modelBuilder.Entity<FicheirosImportado>(entity =>
        {
            entity.Property(e => e.Id).HasColumnName("id");
            entity.Property(e => e.DataFicheiro)
                .HasColumnType("datetime")
                .HasColumnName("data_ficheiro");
            entity.Property(e => e.DataImport)
                .HasDefaultValueSql("(getdate())")
                .HasColumnType("datetime")
                .HasColumnName("data_import");
            entity.Property(e => e.IdCliMorada).HasColumnName("idCliMorada");
            entity.Property(e => e.IdCliente).HasColumnName("idCliente");
            entity.Property(e => e.IdUtil).HasColumnName("idUtil");
            entity.Property(e => e.NomeFicheiro)
                .HasMaxLength(150)
                .HasColumnName("nome_ficheiro");
            entity.Property(e => e.PathFicheiro)
                .HasMaxLength(150)
                .HasColumnName("path_ficheiro");
            entity.Property(e => e.TamanhoFicheiro).HasColumnName("tamanho_ficheiro");
            entity.Property(e => e.Tipo)
                .HasMaxLength(1)
                .IsFixedLength()
                .HasColumnName("tipo");
        });

        modelBuilder.Entity<FilaProcessamentoClasseT>(entity =>
        {
            entity.ToTable("FilaProcessamentoClasse_T");

            entity.Property(e => e.Id).HasColumnName("id");
            entity.Property(e => e.Activo)
                .IsRequired()
                .HasDefaultValueSql("((1))")
                .HasColumnName("activo");
            entity.Property(e => e.Codigo)
                .HasMaxLength(15)
                .HasColumnName("codigo");
            entity.Property(e => e.Descricao)
                .HasMaxLength(50)
                .HasColumnName("descricao");
        });

        modelBuilder.Entity<FilaProcessamentoInstrucaoT>(entity =>
        {
            entity.ToTable("FilaProcessamentoInstrucao_T");

            entity.Property(e => e.Id)
                .ValueGeneratedNever()
                .HasColumnName("id");
            entity.Property(e => e.Activo)
                .IsRequired()
                .HasDefaultValueSql("((1))")
                .HasColumnName("activo");
            entity.Property(e => e.Codigo)
                .HasMaxLength(50)
                .HasColumnName("codigo");
            entity.Property(e => e.Descricao)
                .HasMaxLength(100)
                .HasColumnName("descricao");
            entity.Property(e => e.IdClasse).HasColumnName("idClasse");
        });

        modelBuilder.Entity<FilaProcessamentoLog>(entity =>
        {
            entity.ToTable("FilaProcessamentoLog");

            entity.Property(e => e.Id)
                .ValueGeneratedNever()
                .HasColumnName("id");
            entity.Property(e => e.DtFimExec)
                .HasColumnType("datetime")
                .HasColumnName("dtFimExec");
            entity.Property(e => e.DtInicioExec)
                .HasDefaultValueSql("((0))")
                .HasColumnType("datetime")
                .HasColumnName("dtInicioExec");
            entity.Property(e => e.DtIntrod)
                .HasColumnType("datetime")
                .HasColumnName("dtIntrod");
            entity.Property(e => e.IdClasse).HasColumnName("idClasse");
            entity.Property(e => e.IdInstrucao).HasColumnName("idInstrucao");
            entity.Property(e => e.IdUtilIntrod).HasColumnName("idUtilIntrod");
            entity.Property(e => e.IsPrio).HasColumnName("isPrio");
        });

        modelBuilder.Entity<FilaProcessamentoParam>(entity =>
        {
            entity.HasKey(e => new { e.IdFila, e.CodParam });

            entity.Property(e => e.IdFila).HasColumnName("idFila");
            entity.Property(e => e.CodParam)
                .HasMaxLength(25)
                .HasColumnName("codParam");
            entity.Property(e => e.Id)
                .ValueGeneratedOnAdd()
                .HasColumnName("id");
            entity.Property(e => e.ValParam)
                .HasColumnType("sql_variant")
                .HasColumnName("valParam");
        });

        modelBuilder.Entity<FilaProcessamentoPend>(entity =>
        {
            entity.HasKey(e => e.Id).HasName("PK_FilaProcessamentoPendentes");

            entity.ToTable("FilaProcessamentoPend");

            entity.Property(e => e.Id).HasColumnName("id");
            entity.Property(e => e.DtIntrod)
                .HasColumnType("datetime")
                .HasColumnName("dtIntrod");
            entity.Property(e => e.IdClasse).HasColumnName("idClasse");
            entity.Property(e => e.IdInstrucao).HasColumnName("idInstrucao");
            entity.Property(e => e.IdUtilIntrod).HasColumnName("idUtilIntrod");
            entity.Property(e => e.IsPrio).HasColumnName("isPrio");
            entity.Property(e => e.IsReadyToExec).HasColumnName("isReadyToExec");
        });

        modelBuilder.Entity<FilaProcessamentoProc>(entity =>
        {
            entity.ToTable("FilaProcessamentoProc");

            entity.Property(e => e.Id)
                .ValueGeneratedNever()
                .HasColumnName("id");
            entity.Property(e => e.DtInicioExec)
                .HasColumnType("datetime")
                .HasColumnName("dtInicioExec");
        });

        modelBuilder.Entity<Fornecedor>(entity =>
        {
            entity.HasKey(e => new { e.Id, e.IdTipoFornecedor }).HasName("PK__Fornecedor");

            entity.ToTable("Fornecedor");

            entity.Property(e => e.Id).HasColumnName("id");
            entity.Property(e => e.IdTipoFornecedor).HasColumnName("idTipoFornecedor");
            entity.Property(e => e.Activo)
                .HasDefaultValueSql("((0))")
                .HasColumnName("activo");
            entity.Property(e => e.CodParceiro)
                .HasMaxLength(20)
                .HasColumnName("codParceiro");
            entity.Property(e => e.DtIntrod)
                .HasColumnType("datetime")
                .HasColumnName("dtIntrod");
            entity.Property(e => e.DtUltAct)
                .HasColumnType("datetime")
                .HasColumnName("dtUltAct");
            entity.Property(e => e.IdTipoContactoDefault).HasColumnName("idTipoContactoDefault");
            entity.Property(e => e.IdUtilIntrod).HasColumnName("idUtilIntrod");
            entity.Property(e => e.IdUtilUltAct).HasColumnName("idUtilUltAct");
        });

        modelBuilder.Entity<FornecedorContacto>(entity =>
        {
            entity.HasKey(e => e.Id).HasName("PK__Forneced__3213E83F1CE7B770");

            entity.ToTable("FornecedorContacto");

            entity.Property(e => e.Id).HasColumnName("id");
            entity.Property(e => e.Activo)
                .HasDefaultValueSql("((1))")
                .HasColumnName("activo");
            entity.Property(e => e.Contacto)
                .HasMaxLength(50)
                .IsUnicode(false)
                .HasColumnName("contacto");
            entity.Property(e => e.DtIntrod)
                .HasColumnType("datetime")
                .HasColumnName("dtIntrod");
            entity.Property(e => e.DtUltAct)
                .HasColumnType("datetime")
                .HasColumnName("dtUltAct");
            entity.Property(e => e.IdFornecedor).HasColumnName("idFornecedor");
            entity.Property(e => e.IdTipoFornecedorContacto).HasColumnName("idTipoFornecedorContacto");
            entity.Property(e => e.IdUtilIntrod).HasColumnName("idUtilIntrod");
            entity.Property(e => e.IdUtilUltAct).HasColumnName("idUtilUltAct");
            entity.Property(e => e.NomeContacto)
                .HasMaxLength(100)
                .IsUnicode(false)
                .HasColumnName("nomeContacto");
        });

        modelBuilder.Entity<FornecedorContactoTipoT>(entity =>
        {
            entity.HasKey(e => e.Id).HasName("PK__Clientes__3213E83F0A1D017D");

            entity.ToTable("FornecedorContactoTipo_T");

            entity.Property(e => e.Id).HasColumnName("id");
            entity.Property(e => e.Descricao)
                .HasMaxLength(50)
                .IsUnicode(false)
                .HasColumnName("descricao");
        });

        modelBuilder.Entity<FornecedorLineHaul>(entity =>
        {
            entity.HasNoKey();

            entity.Property(e => e.Custo).HasColumnType("money");
            entity.Property(e => e.DataInicio).HasColumnType("datetime");
            entity.Property(e => e.Datafim).HasColumnType("datetime");
            entity.Property(e => e.Id)
                .ValueGeneratedOnAdd()
                .HasColumnName("id");
            entity.Property(e => e.IdFornecedor).HasColumnName("idFornecedor");
            entity.Property(e => e.Percurso).HasMaxLength(50);
            entity.Property(e => e.Portagens).HasColumnType("money");
        });

        modelBuilder.Entity<FornecedorTarifa>(entity =>
        {
            entity.ToTable("FornecedorTarifa");

            entity.Property(e => e.Id).HasColumnName("id");
            entity.Property(e => e.Activa)
                .HasDefaultValueSql("(1)")
                .HasColumnName("activa");
            entity.Property(e => e.Codigo)
                .HasMaxLength(20)
                .HasColumnName("codigo");
            entity.Property(e => e.Default)
                .HasDefaultValueSql("(0)")
                .HasColumnName("default");
            entity.Property(e => e.Descricao)
                .HasMaxLength(50)
                .HasColumnName("descricao");
            entity.Property(e => e.DtFim)
                .HasColumnType("datetime")
                .HasColumnName("dtFim");
            entity.Property(e => e.DtInicio)
                .HasColumnType("datetime")
                .HasColumnName("dtInicio");
            entity.Property(e => e.DtIntrod)
                .HasColumnType("datetime")
                .HasColumnName("dtIntrod");
            entity.Property(e => e.IdEntidade)
                .HasDefaultValueSql("(1)")
                .HasColumnName("idEntidade");
            entity.Property(e => e.IdProximaTarifa).HasColumnName("idProximaTarifa");
            entity.Property(e => e.IdUtil).HasColumnName("idUtil");
            entity.Property(e => e.TarifaExp)
                .HasDefaultValueSql("(1)")
                .HasColumnName("tarifaExp");
            entity.Property(e => e.TarifaIc).HasColumnName("tarifaIC");
            entity.Property(e => e.TarifaIe).HasColumnName("tarifaIE");
            entity.Property(e => e.TarifaImp)
                .HasDefaultValueSql("(1)")
                .HasColumnName("tarifaImp");
            entity.Property(e => e.TarifaIp)
                .HasDefaultValueSql("(1)")
                .HasColumnName("tarifaIP");
            entity.Property(e => e.TarifaIpf)
                .HasDefaultValueSql("(0)")
                .HasColumnName("tarifaIPF");
            entity.Property(e => e.TarifaRe)
                .HasDefaultValueSql("(1)")
                .HasColumnName("tarifaRE");
            entity.Property(e => e.TarifaRm).HasColumnName("tarifaRM");
            entity.Property(e => e.Valida)
                .HasDefaultValueSql("(0)")
                .HasColumnName("valida");
        });

        modelBuilder.Entity<FornecedorTarifaDetalhe>(entity =>
        {
            entity.HasKey(e => new { e.IdTarifa, e.IdTipoProduto, e.Zona, e.Peso });

            entity.Property(e => e.IdTarifa).HasColumnName("idTarifa");
            entity.Property(e => e.IdTipoProduto).HasColumnName("idTipoProduto");
            entity.Property(e => e.Zona)
                .HasMaxLength(1)
                .HasColumnName("zona");
            entity.Property(e => e.Peso)
                .HasColumnType("money")
                .HasColumnName("peso");
            entity.Property(e => e.Id)
                .ValueGeneratedOnAdd()
                .HasColumnName("id");
            entity.Property(e => e.Incrementa).HasColumnName("incrementa");
            entity.Property(e => e.PesoSeguinte)
                .HasColumnType("money")
                .HasColumnName("pesoSeguinte");
            entity.Property(e => e.Valor)
                .HasColumnType("money")
                .HasColumnName("valor");
        });

        modelBuilder.Entity<FornecedorTipoT>(entity =>
        {
            entity.HasKey(e => e.Id).HasName("PK__Forneced__3213E83F68BC0DB2");

            entity.ToTable("FornecedorTipo_T");

            entity.Property(e => e.Id).HasColumnName("id");
            entity.Property(e => e.Activo)
                .HasDefaultValueSql("((1))")
                .HasColumnName("activo");
            entity.Property(e => e.Descricao)
                .HasMaxLength(50)
                .IsUnicode(false)
                .HasColumnName("descricao");
        });

        modelBuilder.Entity<FornecedorUtilizadore>(entity =>
        {
            entity.ToTable(tb => tb.HasTrigger("FornecedorUtilizadoresTrigger"));

            entity.HasIndex(e => new { e.IdUtil, e.Activo }, "idx_idUtil_activo");

            entity.Property(e => e.Id).HasColumnName("id");
            entity.Property(e => e.Activo)
                .IsRequired()
                .HasDefaultValueSql("((1))")
                .HasColumnName("activo");
            entity.Property(e => e.DtIntrod)
                .HasColumnType("datetime")
                .HasColumnName("dtIntrod");
            entity.Property(e => e.DtUltAct)
                .HasColumnType("datetime")
                .HasColumnName("dtUltAct");
            entity.Property(e => e.IdFornecedor).HasColumnName("idFornecedor");
            entity.Property(e => e.IdUtil).HasColumnName("idUtil");
            entity.Property(e => e.IdUtilIntrod).HasColumnName("idUtilIntrod");
            entity.Property(e => e.IdUtilUltAct).HasColumnName("idUtilUltAct");
        });

        modelBuilder.Entity<FornecedorUtilizadoresTlog>(entity =>
        {
            entity.HasKey(e => e.IdTrigger).HasName("PK__Forneced__B20B18767EC7BCCD");

            entity.ToTable("FornecedorUtilizadores_TLOG");

            entity.Property(e => e.IdTrigger).HasColumnName("idTrigger");
            entity.Property(e => e.Accao).HasMaxLength(1);
            entity.Property(e => e.Activo).HasColumnName("activo");
            entity.Property(e => e.DtIntrod)
                .HasColumnType("datetime")
                .HasColumnName("dtIntrod");
            entity.Property(e => e.DtTrigger)
                .HasColumnType("datetime")
                .HasColumnName("dtTrigger");
            entity.Property(e => e.DtUltAct)
                .HasColumnType("datetime")
                .HasColumnName("dtUltAct");
            entity.Property(e => e.Id).HasColumnName("id");
            entity.Property(e => e.IdFornecedor).HasColumnName("idFornecedor");
            entity.Property(e => e.IdUtil).HasColumnName("idUtil");
            entity.Property(e => e.IdUtilIntrod).HasColumnName("idUtilIntrod");
            entity.Property(e => e.IdUtilUltAct).HasColumnName("idUtilUltAct");
        });

        modelBuilder.Entity<Francisco>(entity =>
        {
            entity
                .HasNoKey()
                .ToTable("francisco");

            entity.Property(e => e.IdManifesto).HasColumnName("idManifesto");
        });

        modelBuilder.Entity<GcomnectConfigT>(entity =>
        {
            entity.ToTable("GCOMnectConfig_T");

            entity.Property(e => e.Id).HasColumnName("id");
            entity.Property(e => e.Activo).HasColumnName("activo");
            entity.Property(e => e.ActivoV2)
                .HasDefaultValueSql("((0))")
                .HasColumnName("activo_V2");
            entity.Property(e => e.AlertTime).HasColumnName("alert_Time");
            entity.Property(e => e.BeginTime).HasColumnName("beginTime");
            entity.Property(e => e.EndTime).HasColumnName("endTime");
            entity.Property(e => e.Interval).HasColumnName("interval");
            entity.Property(e => e.ServiceName).HasMaxLength(50);
            entity.Property(e => e.TimeToRun)
                .HasMaxLength(200)
                .HasColumnName("timeToRun");
            entity.Property(e => e.TimerClass).HasMaxLength(150);
            entity.Property(e => e.TimerName)
                .HasMaxLength(50)
                .HasColumnName("timer_name");
        });

        modelBuilder.Entity<GidwinProdutosM>(entity =>
        {
            entity.HasKey(e => new { e.CodGidwin, e.IdProdutoTipo, e.IdEntidade });

            entity.ToTable("GIDWIN_Produtos_M");

            entity.Property(e => e.CodGidwin).HasColumnName("Cod_Gidwin");
            entity.Property(e => e.IdProdutoTipo).HasColumnName("idProdutoTipo");
            entity.Property(e => e.IdEntidade).HasColumnName("idEntidade");
            entity.Property(e => e.CgTpProdutoVang).HasColumnName("cg_tpProdutoVang");
            entity.Property(e => e.Descricao)
                .HasMaxLength(200)
                .HasColumnName("descricao");
            entity.Property(e => e.Id)
                .ValueGeneratedOnAdd()
                .HasColumnName("id");
            entity.Property(e => e.TipoRubrica)
                .HasMaxLength(100)
                .HasColumnName("tipoRubrica");
        });

        modelBuilder.Entity<GidwinServicosMapeamento>(entity =>
        {
            entity
                .HasNoKey()
                .ToTable("gidwin_servicos_mapeamentos");

            entity.Property(e => e.CodServ)
                .HasMaxLength(3)
                .HasColumnName("codServ");
            entity.Property(e => e.Natureza)
                .HasMaxLength(10)
                .HasColumnName("natureza");
            entity.Property(e => e.Plat)
                .HasMaxLength(10)
                .HasColumnName("plat");
            entity.Property(e => e.Tipo)
                .HasMaxLength(10)
                .HasColumnName("tipo");
        });

        modelBuilder.Entity<GuiaRemessaDigitalizacaoControlo>(entity =>
        {
            entity.HasKey(e => e.Gr).HasName("PK__GuiaReme__3214FCEB4D674CF5");

            entity.ToTable("GuiaRemessaDigitalizacao_controlo");

            entity.HasIndex(e => new { e.IdManifesto, e.Processada }, "idx_idManifesto");

            entity.HasIndex(e => new { e.NumDocAdos, e.Processada }, "idx_numDocAdos");

            entity.Property(e => e.Gr)
                .HasMaxLength(50)
                .HasColumnName("GR");
            entity.Property(e => e.DtIntrod)
                .HasDefaultValueSql("(getdate())")
                .HasColumnType("datetime")
                .HasColumnName("dtIntrod");
            entity.Property(e => e.DtUltAct)
                .HasColumnType("datetime")
                .HasColumnName("dtUltAct");
            entity.Property(e => e.Dtprocessada)
                .HasColumnType("datetime")
                .HasColumnName("dtprocessada");
            entity.Property(e => e.Id)
                .ValueGeneratedOnAdd()
                .HasColumnName("id");
            entity.Property(e => e.IdManifesto).HasColumnName("idManifesto");
            entity.Property(e => e.IdUtilUltAct).HasColumnName("idUtilUltAct");
            entity.Property(e => e.NumDocAdos).HasColumnName("numDocAdos");
            entity.Property(e => e.NumPaginas).HasColumnName("numPaginas");
            entity.Property(e => e.Processada).HasColumnName("processada");
        });

        modelBuilder.Entity<GuiasCon>(entity =>
        {
            entity.HasKey(e => e.Id).HasName("PK__GuiasCon__3214EC27456815DD");

            entity.Property(e => e.Id).HasColumnName("ID");
            entity.Property(e => e.Guia)
                .HasMaxLength(255)
                .IsUnicode(false);
        });

        modelBuilder.Entity<GuiasImprimirLog>(entity =>
        {
            entity.HasKey(e => e.Pk).HasName("PK__guiasImp__321403CF61567170");

            entity.ToTable("guiasImprimir_Log");

            entity.HasIndex(e => e.FileName, "idx_fileName_id").HasFillFactor(80);

            entity.HasIndex(e => new { e.DtConfirmaImpressao, e.ScanGuiaImpressa }, "idx_scanGuiaImpressa_dtConfirmImpressao").HasFillFactor(80);

            entity.Property(e => e.Pk).HasColumnName("pk");
            entity.Property(e => e.Ano).HasColumnName("ano");
            entity.Property(e => e.AwbNumber)
                .HasMaxLength(50)
                .IsUnicode(false)
                .HasColumnName("awbNumber");
            entity.Property(e => e.AwbParam)
                .HasMaxLength(50)
                .IsUnicode(false)
                .HasColumnName("awbParam");
            entity.Property(e => e.CodPostalCliente)
                .HasMaxLength(10)
                .IsUnicode(false)
                .HasColumnName("codPostalCliente");
            entity.Property(e => e.CodPostalDestinatario)
                .HasMaxLength(15)
                .IsUnicode(false)
                .HasColumnName("codPostalDestinatario");
            entity.Property(e => e.ContactoCliente)
                .HasMaxLength(15)
                .IsUnicode(false)
                .HasColumnName("contactoCliente");
            entity.Property(e => e.ContactoDestinatario)
                .HasMaxLength(15)
                .IsUnicode(false)
                .HasColumnName("contactoDestinatario");
            entity.Property(e => e.Cubicagem)
                .HasMaxLength(20)
                .IsUnicode(false)
                .HasColumnName("cubicagem");
            entity.Property(e => e.DataParam)
                .HasColumnType("datetime")
                .HasColumnName("dataParam");
            entity.Property(e => e.DevGuiaAss).HasColumnName("devGuiaAss");
            entity.Property(e => e.Dia).HasColumnName("dia");
            entity.Property(e => e.DtConfirmaImpressao)
                .HasColumnType("datetime")
                .HasColumnName("dtConfirmaImpressao");
            entity.Property(e => e.DtIntrod)
                .HasDefaultValueSql("(getdate())")
                .HasColumnType("datetime")
                .HasColumnName("dtIntrod");
            entity.Property(e => e.FileName)
                .HasMaxLength(100)
                .IsUnicode(false)
                .HasColumnName("fileName");
            entity.Property(e => e.Id).HasColumnName("id");
            entity.Property(e => e.IdPickup).HasColumnName("idPickup");
            entity.Property(e => e.IdPlataformaParam).HasColumnName("idPlataformaParam");
            entity.Property(e => e.IdRotaParam).HasColumnName("idRotaParam");
            entity.Property(e => e.IdUtilReq).HasColumnName("idUtilReq");
            entity.Property(e => e.IdsParam)
                .HasColumnType("xml")
                .HasColumnName("idsParam");
            entity.Property(e => e.LocalPagamento)
                .HasMaxLength(15)
                .IsUnicode(false)
                .HasColumnName("localPagamento");
            entity.Property(e => e.LocalidadeCliente)
                .HasMaxLength(50)
                .IsUnicode(false)
                .HasColumnName("localidadeCliente");
            entity.Property(e => e.LocalidadeDestinatario)
                .HasMaxLength(50)
                .IsUnicode(false)
                .HasColumnName("localidadeDestinatario");
            entity.Property(e => e.Logo).HasColumnName("logo");
            entity.Property(e => e.MasterNumber)
                .HasMaxLength(50)
                .IsUnicode(false)
                .HasColumnName("masterNumber");
            entity.Property(e => e.Mes).HasColumnName("mes");
            entity.Property(e => e.MoradaCliente)
                .HasMaxLength(100)
                .IsUnicode(false)
                .HasColumnName("moradaCliente");
            entity.Property(e => e.MoradaDestinatario)
                .HasMaxLength(100)
                .IsUnicode(false)
                .HasColumnName("moradaDestinatario");
            entity.Property(e => e.NomeCliente)
                .HasMaxLength(100)
                .IsUnicode(false)
                .HasColumnName("nomeCliente");
            entity.Property(e => e.NomeDestinatario)
                .HasMaxLength(100)
                .IsUnicode(false)
                .HasColumnName("nomeDestinatario");
            entity.Property(e => e.Observacoes)
                .HasMaxLength(250)
                .IsUnicode(false)
                .HasColumnName("observacoes");
            entity.Property(e => e.PaisCliente)
                .HasMaxLength(50)
                .IsUnicode(false)
                .HasColumnName("paisCliente");
            entity.Property(e => e.PaisDestinatario)
                .HasMaxLength(50)
                .IsUnicode(false)
                .HasColumnName("paisDestinatario");
            entity.Property(e => e.Peso)
                .HasMaxLength(20)
                .IsUnicode(false)
                .HasColumnName("peso");
            entity.Property(e => e.PlaneadasParam).HasColumnName("planeadasParam");
            entity.Property(e => e.PlataformaTodaParam).HasColumnName("plataformaTodaParam");
            entity.Property(e => e.RemRefCli)
                .HasMaxLength(40)
                .IsUnicode(false)
                .HasColumnName("remRefCli");
            entity.Property(e => e.ScanGuiaImpressa)
                .HasDefaultValueSql("((0))")
                .HasColumnName("scanGuiaImpressa");
            entity.Property(e => e.TipoEmbalagem)
                .HasMaxLength(100)
                .IsUnicode(false)
                .HasColumnName("tipoEmbalagem");
            entity.Property(e => e.TipoProduto)
                .HasMaxLength(50)
                .IsUnicode(false)
                .HasColumnName("tipoProduto");
            entity.Property(e => e.TipoServico)
                .HasMaxLength(50)
                .IsUnicode(false)
                .HasColumnName("tipoServico");
            entity.Property(e => e.TodasParam).HasColumnName("todasParam");
            entity.Property(e => e.ValorPrevisto)
                .HasColumnType("money")
                .HasColumnName("valorPrevisto");
            entity.Property(e => e.ValorReemb)
                .HasColumnType("money")
                .HasColumnName("valorReemb");
            entity.Property(e => e.Volume).HasColumnName("volume");
        });

        modelBuilder.Entity<Ibmanifest>(entity =>
        {
            entity.HasKey(e => e.Id).HasName("PK____IBManifest__7F428876");

            entity.ToTable("__IBManifest");

            entity.HasIndex(e => e.DuoCpa2, "__IDXAWB").HasFillFactor(80);

            entity.Property(e => e.Id).HasColumnName("ID");
            entity.Property(e => e.DucDtvo)
                .HasColumnType("datetime")
                .HasColumnName("duc_dtvo");
            entity.Property(e => e.DucPnum).HasColumnName("duc_pnum");
            entity.Property(e => e.DuoCpa2)
                .HasMaxLength(35)
                .IsUnicode(false)
                .UseCollation("Latin1_General_CI_AI")
                .HasColumnName("duo_cpa2");
            entity.Property(e => e.SinCodi)
                .HasMaxLength(8)
                .IsUnicode(false)
                .UseCollation("Latin1_General_CI_AI")
                .HasColumnName("sin_codi");
        });

        modelBuilder.Entity<ImportacaoClientesCex>(entity =>
        {
            entity
                .HasNoKey()
                .ToTable("ImportacaoClientesCEX");

            entity.Property(e => e.ClaimNumber)
                .HasMaxLength(30)
                .HasColumnName("claim_number");
            entity.Property(e => e.ClientEmail)
                .HasMaxLength(50)
                .HasColumnName("client_email");
            entity.Property(e => e.ClientPhone)
                .HasMaxLength(30)
                .HasColumnName("client_phone");
            entity.Property(e => e.ContractNumber)
                .HasMaxLength(30)
                .HasColumnName("contract_number");
            entity.Property(e => e.DtIntrod)
                .HasMaxLength(30)
                .HasColumnName("dtIntrod");
            entity.Property(e => e.Id)
                .ValueGeneratedOnAdd()
                .HasColumnName("id");
            entity.Property(e => e.IdCliMorada).HasColumnName("idCliMorada");
            entity.Property(e => e.IdCliente).HasColumnName("idCliente");
            entity.Property(e => e.IdUtilIntrod).HasColumnName("idUtilIntrod");
        });

        modelBuilder.Entity<ImportacaoFacturasContasFedex>(entity =>
        {
            entity.ToTable("ImportacaoFacturas_ContasFedex");

            entity.Property(e => e.AccountNumber).HasMaxLength(9);
            entity.Property(e => e.IdEntidade).HasColumnName("idEntidade");
            entity.Property(e => e.SiglaPais)
                .HasMaxLength(2)
                .HasColumnName("siglaPais");
        });

        modelBuilder.Entity<ImportacaoFacturasFedex>(entity =>
        {
            entity.ToTable("ImportacaoFacturas_Fedex");

            entity.Property(e => e.AdditionalHandlingAmt).HasColumnType("decimal(15, 2)");
            entity.Property(e => e.AddressCorrectionAmt).HasColumnType("decimal(15, 2)");
            entity.Property(e => e.AmountDue).HasColumnType("decimal(15, 2)");
            entity.Property(e => e.AutomationDeviceName).HasMaxLength(5);
            entity.Property(e => e.AutomationDiscountAmt).HasColumnType("decimal(15, 2)");
            entity.Property(e => e.BillToCountry).HasMaxLength(2);
            entity.Property(e => e.BilledWeight).HasColumnType("decimal(7, 1)");
            entity.Property(e => e.BilltoAccountNumber).HasMaxLength(9);
            entity.Property(e => e.BundleMultiWeightIdno).HasColumnName("BundleMultiWeightIDNo");
            entity.Property(e => e.CallTagAccessCode).HasMaxLength(1);
            entity.Property(e => e.Charge1).HasMaxLength(3);
            entity.Property(e => e.Charge10).HasMaxLength(3);
            entity.Property(e => e.Charge11).HasMaxLength(3);
            entity.Property(e => e.Charge12).HasMaxLength(3);
            entity.Property(e => e.Charge13).HasMaxLength(3);
            entity.Property(e => e.Charge14).HasMaxLength(3);
            entity.Property(e => e.Charge15).HasMaxLength(3);
            entity.Property(e => e.Charge16).HasMaxLength(3);
            entity.Property(e => e.Charge17).HasMaxLength(3);
            entity.Property(e => e.Charge18).HasMaxLength(3);
            entity.Property(e => e.Charge19Misc).HasMaxLength(3);
            entity.Property(e => e.Charge2).HasMaxLength(3);
            entity.Property(e => e.Charge20Misc).HasMaxLength(3);
            entity.Property(e => e.Charge21Misc).HasMaxLength(3);
            entity.Property(e => e.Charge3).HasMaxLength(3);
            entity.Property(e => e.Charge4).HasMaxLength(3);
            entity.Property(e => e.Charge5).HasMaxLength(3);
            entity.Property(e => e.Charge6).HasMaxLength(3);
            entity.Property(e => e.Charge7).HasMaxLength(3);
            entity.Property(e => e.Charge8).HasMaxLength(3);
            entity.Property(e => e.Charge9).HasMaxLength(3);
            entity.Property(e => e.CodcheckAmount).HasColumnName("CODCheckAmount");
            entity.Property(e => e.CodcrossReferenceTracking)
                .HasMaxLength(12)
                .HasColumnName("CODCrossReferenceTracking");
            entity.Property(e => e.CompanyCode).HasMaxLength(1);
            entity.Property(e => e.ConsolidatedAcctNo).HasMaxLength(9);
            entity.Property(e => e.ControlCheckNumber).HasMaxLength(10);
            entity.Property(e => e.CrossReferenceTrackingNumber).HasMaxLength(20);
            entity.Property(e => e.CurrencyCode).HasMaxLength(3);
            entity.Property(e => e.CustLevelChargeCount).HasMaxLength(5);
            entity.Property(e => e.CustomerDepartmentNumber).HasMaxLength(25);
            entity.Property(e => e.CustomerInvoiceNumber).HasMaxLength(25);
            entity.Property(e => e.CustomsDeclaredValueCurrency).HasMaxLength(3);
            entity.Property(e => e.CustomsEntryNumber).HasMaxLength(15);
            entity.Property(e => e.CustomsValue).HasColumnType("decimal(15, 2)");
            entity.Property(e => e.DaschargeAmt)
                .HasColumnType("decimal(15, 2)")
                .HasColumnName("DASChargeAmt");
            entity.Property(e => e.DeclaredValue).HasColumnType("decimal(15, 2)");
            entity.Property(e => e.DeclaredValueAmt).HasColumnType("decimal(15, 2)");
            entity.Property(e => e.DeliveryExceptionCode).HasMaxLength(2);
            entity.Property(e => e.DeliveryFinalDispositionCode).HasMaxLength(2);
            entity.Property(e => e.DeliveryHandlingCode).HasMaxLength(1);
            entity.Property(e => e.DenialRejectReasonCode).HasMaxLength(3);
            entity.Property(e => e.DimUnit).HasMaxLength(1);
            entity.Property(e => e.DtIntrod)
                .HasColumnType("datetime")
                .HasColumnName("dtIntrod");
            entity.Property(e => e.DtProcessamento)
                .HasColumnType("datetime")
                .HasColumnName("dtProcessamento");
            entity.Property(e => e.DutyAdvancementFeeChargeAmt).HasColumnType("decimal(15, 2)");
            entity.Property(e => e.EarnedDiscountAmt).HasColumnType("decimal(15, 2)");
            entity.Property(e => e.EuropeFirstSurchargeBand).HasMaxLength(2);
            entity.Property(e => e.EuropeanUnionVatnumber)
                .HasMaxLength(25)
                .HasColumnName("EuropeanUnionVATNumber");
            entity.Property(e => e.ExchangeRate).HasColumnType("decimal(18, 9)");
            entity.Property(e => e.FedExRegisteredVatnumber)
                .HasMaxLength(25)
                .HasColumnName("FedExRegisteredVATNumber");
            entity.Property(e => e.FedExUseOnly).HasMaxLength(1);
            entity.Property(e => e.FreightChargeAmt).HasColumnType("decimal(15, 2)");
            entity.Property(e => e.FuelSurchargeAmt).HasColumnType("decimal(15, 2)");
            entity.Property(e => e.FuelSurchargeFactor).HasColumnType("decimal(15, 2)");
            entity.Property(e => e.GroundMiscDescription1).HasMaxLength(3);
            entity.Property(e => e.GroundMiscDescription2).HasMaxLength(3);
            entity.Property(e => e.GroundMiscDescription3).HasMaxLength(3);
            entity.Property(e => e.GroundMultiWeightPkgWeight).HasColumnType("decimal(8, 2)");
            entity.Property(e => e.GroundPonumber)
                .HasMaxLength(25)
                .HasColumnName("GroundPONumber");
            entity.Property(e => e.GroundServiceCode).HasMaxLength(3);
            entity.Property(e => e.GroundTrackingPrefix).HasMaxLength(8);
            entity.Property(e => e.GstchargeAmt)
                .HasColumnType("decimal(15, 2)")
                .HasColumnName("GSTChargeAmt");
            entity.Property(e => e.IdUtilIntrod).HasColumnName("idUtilIntrod");
            entity.Property(e => e.InternationalGroundShipmentNumber).HasMaxLength(15);
            entity.Property(e => e.InvoiceNumber).HasMaxLength(9);
            entity.Property(e => e.InvoiceType).HasMaxLength(1);
            entity.Property(e => e.MasterEdinumber)
                .HasMaxLength(9)
                .HasColumnName("MasterEDINumber");
            entity.Property(e => e.MiscCharge1Amt).HasColumnType("decimal(15, 2)");
            entity.Property(e => e.MiscCharge2Amt).HasColumnType("decimal(15, 2)");
            entity.Property(e => e.MiscCharge3Amt).HasColumnType("decimal(15, 2)");
            entity.Property(e => e.NetCharge).HasColumnType("decimal(15, 2)");
            entity.Property(e => e.NonDuplicateTrackingIndicator).HasMaxLength(1);
            entity.Property(e => e.OnCallPickupAmt).HasColumnType("decimal(15, 2)");
            entity.Property(e => e.OriginCurrencyCode).HasMaxLength(3);
            entity.Property(e => e.OriginalAdjustmentReasonCode).HasMaxLength(3);
            entity.Property(e => e.OriginalDutyChargeAmt).HasColumnType("decimal(15, 2)");
            entity.Property(e => e.OriginalRecipientAddressLine1).HasMaxLength(30);
            entity.Property(e => e.OriginalRecipientAddressLine2).HasMaxLength(30);
            entity.Property(e => e.OriginalRecipientCity).HasMaxLength(30);
            entity.Property(e => e.OriginalRecipientPostalCode).HasMaxLength(10);
            entity.Property(e => e.OriginalRecipientStateProvince).HasMaxLength(2);
            entity.Property(e => e.OriginalVatamt)
                .HasColumnType("decimal(15, 2)")
                .HasColumnName("OriginalVATAmt");
            entity.Property(e => e.OriginalWeight).HasColumnType("decimal(7, 1)");
            entity.Property(e => e.PastDueIndicator).HasMaxLength(1);
            entity.Property(e => e.PastDueInvoiceNumber).HasMaxLength(9);
            entity.Property(e => e.PerfPricingDiscountAmt).HasColumnType("decimal(15, 2)");
            entity.Property(e => e.RateScale).HasMaxLength(7);
            entity.Property(e => e.RebillIndicator).HasMaxLength(1);
            entity.Property(e => e.RecipientAddressLine1).HasMaxLength(30);
            entity.Property(e => e.RecipientAddressLine2).HasMaxLength(30);
            entity.Property(e => e.RecipientCity).HasMaxLength(30);
            entity.Property(e => e.RecipientCompany).HasMaxLength(30);
            entity.Property(e => e.RecipientCountryCode).HasMaxLength(2);
            entity.Property(e => e.RecipientName).HasMaxLength(30);
            entity.Property(e => e.RecipientPostalCode).HasMaxLength(10);
            entity.Property(e => e.RecipientSignature).HasMaxLength(22);
            entity.Property(e => e.RecipientStateProvince).HasMaxLength(2);
            entity.Property(e => e.Reference1).HasMaxLength(40);
            entity.Property(e => e.Reference2).HasMaxLength(30);
            entity.Property(e => e.Reference3).HasMaxLength(30);
            entity.Property(e => e.RegionCode).HasMaxLength(2);
            entity.Property(e => e.RequestedAdjustmentAmt).HasColumnType("decimal(15, 2)");
            entity.Property(e => e.ResidentialChargeAmt).HasColumnType("decimal(15, 2)");
            entity.Property(e => e.ResolutionCode).HasMaxLength(1);
            entity.Property(e => e.ReturnsMerchAuthorizationNumber).HasMaxLength(20);
            entity.Property(e => e.RevenueThresholdAmount).HasColumnType("decimal(18, 2)");
            entity.Property(e => e.SaturdayChargeAmt).HasColumnType("decimal(15, 2)");
            entity.Property(e => e.ServiceBase).HasMaxLength(25);
            entity.Property(e => e.ServiceLevelPercentage).HasMaxLength(3);
            entity.Property(e => e.SettlementOption).HasMaxLength(1);
            entity.Property(e => e.ShipperAddressLine1).HasMaxLength(30);
            entity.Property(e => e.ShipperAddressLine2).HasMaxLength(30);
            entity.Property(e => e.ShipperCity).HasMaxLength(30);
            entity.Property(e => e.ShipperCompany).HasMaxLength(30);
            entity.Property(e => e.ShipperCountryCode).HasMaxLength(2);
            entity.Property(e => e.ShipperDept).HasMaxLength(25);
            entity.Property(e => e.ShipperName).HasMaxLength(30);
            entity.Property(e => e.ShipperPostalCode).HasMaxLength(10);
            entity.Property(e => e.ShipperStateProvince).HasMaxLength(2);
            entity.Property(e => e.SignatureServiceAmt).HasColumnType("decimal(15, 2)");
            entity.Property(e => e.StoreNumber).HasMaxLength(10);
            entity.Property(e => e.TotalAmountAdjusted).HasColumnType("decimal(15, 2)");
            entity.Property(e => e.TotalInvoiceCharge).HasColumnType("decimal(15, 2)");
            entity.Property(e => e.TrackingNumber).HasMaxLength(12);
            entity.Property(e => e.TrackingNumberMessageCode).HasMaxLength(5);
            entity.Property(e => e.UsdelvyScheduleCode)
                .HasMaxLength(2)
                .HasColumnName("USDelvyScheduleCode");
            entity.Property(e => e.UsregionOriginZip)
                .HasMaxLength(3)
                .HasColumnName("USRegionOriginZip");
            entity.Property(e => e.VolumeDiscountAmt).HasColumnType("decimal(15, 2)");
            entity.Property(e => e.WeightUnit).HasMaxLength(1);
        });

        modelBuilder.Entity<ImportacaoFacturasItemsMap>(entity =>
        {
            entity.ToTable("ImportacaoFacturasItems_Map");

            entity.Property(e => e.ChargeMiscCode).HasMaxLength(3);
            entity.Property(e => e.Codigo).HasMaxLength(10);
            entity.Property(e => e.Description).HasMaxLength(50);
            entity.Property(e => e.IdEntidade).HasColumnName("idEntidade");
            entity.Property(e => e.IdServicoDet).HasColumnName("idServicoDet");
            entity.Property(e => e.NomeColuna).HasMaxLength(50);
        });

        modelBuilder.Entity<ImportacaoFacturasMapServico>(entity =>
        {
            entity.ToTable("ImportacaoFacturasMapServico");

            entity.Property(e => e.IdEntidade).HasColumnName("idEntidade");
            entity.Property(e => e.IdServico).HasColumnName("idServico");
            entity.Property(e => e.RefOrigem)
                .HasMaxLength(25)
                .HasColumnName("refOrigem");
        });

        modelBuilder.Entity<ImportacaoFacturasTnt>(entity =>
        {
            entity.ToTable("ImportacaoFacturas_TNT");

            entity.Property(e => e.AdditionalHandlingAmt).HasColumnType("decimal(15, 2)");
            entity.Property(e => e.AddressCorrectionAmt).HasColumnType("decimal(15, 2)");
            entity.Property(e => e.AmountDue).HasColumnType("decimal(15, 2)");
            entity.Property(e => e.AutomationDeviceName).HasMaxLength(5);
            entity.Property(e => e.AutomationDiscountAmt).HasColumnType("decimal(15, 2)");
            entity.Property(e => e.BillToCountry).HasMaxLength(2);
            entity.Property(e => e.BilledWeight).HasColumnType("decimal(7, 1)");
            entity.Property(e => e.BilltoAccountNumber).HasMaxLength(9);
            entity.Property(e => e.BundleMultiWeightIdno).HasColumnName("BundleMultiWeightIDNo");
            entity.Property(e => e.CallTagAccessCode).HasMaxLength(1);
            entity.Property(e => e.Charge1).HasMaxLength(3);
            entity.Property(e => e.Charge10).HasMaxLength(3);
            entity.Property(e => e.Charge11).HasMaxLength(3);
            entity.Property(e => e.Charge12).HasMaxLength(3);
            entity.Property(e => e.Charge13).HasMaxLength(3);
            entity.Property(e => e.Charge14).HasMaxLength(3);
            entity.Property(e => e.Charge15).HasMaxLength(3);
            entity.Property(e => e.Charge16).HasMaxLength(3);
            entity.Property(e => e.Charge17).HasMaxLength(3);
            entity.Property(e => e.Charge18).HasMaxLength(3);
            entity.Property(e => e.Charge19Misc).HasMaxLength(3);
            entity.Property(e => e.Charge2).HasMaxLength(3);
            entity.Property(e => e.Charge20Misc).HasMaxLength(3);
            entity.Property(e => e.Charge21Misc).HasMaxLength(3);
            entity.Property(e => e.Charge3).HasMaxLength(3);
            entity.Property(e => e.Charge4).HasMaxLength(3);
            entity.Property(e => e.Charge5).HasMaxLength(3);
            entity.Property(e => e.Charge6).HasMaxLength(3);
            entity.Property(e => e.Charge7).HasMaxLength(3);
            entity.Property(e => e.Charge8).HasMaxLength(3);
            entity.Property(e => e.Charge9).HasMaxLength(3);
            entity.Property(e => e.CodcheckAmount).HasColumnName("CODCheckAmount");
            entity.Property(e => e.CodcrossReferenceTracking)
                .HasMaxLength(12)
                .HasColumnName("CODCrossReferenceTracking");
            entity.Property(e => e.CompanyCode).HasMaxLength(1);
            entity.Property(e => e.ConsolidatedAcctNo).HasMaxLength(9);
            entity.Property(e => e.ControlCheckNumber).HasMaxLength(10);
            entity.Property(e => e.CrossReferenceTrackingNumber).HasMaxLength(20);
            entity.Property(e => e.CurrencyCode).HasMaxLength(3);
            entity.Property(e => e.CustLevelChargeCount).HasMaxLength(5);
            entity.Property(e => e.CustomerDepartmentNumber).HasMaxLength(25);
            entity.Property(e => e.CustomerInvoiceNumber).HasMaxLength(25);
            entity.Property(e => e.CustomsDeclaredValueCurrency).HasMaxLength(3);
            entity.Property(e => e.CustomsEntryNumber).HasMaxLength(15);
            entity.Property(e => e.CustomsValue).HasColumnType("decimal(15, 2)");
            entity.Property(e => e.DaschargeAmt)
                .HasColumnType("decimal(15, 2)")
                .HasColumnName("DASChargeAmt");
            entity.Property(e => e.DeclaredValue).HasColumnType("decimal(15, 2)");
            entity.Property(e => e.DeclaredValueAmt).HasColumnType("decimal(15, 2)");
            entity.Property(e => e.DeliveryExceptionCode).HasMaxLength(2);
            entity.Property(e => e.DeliveryFinalDispositionCode).HasMaxLength(2);
            entity.Property(e => e.DeliveryHandlingCode).HasMaxLength(1);
            entity.Property(e => e.DenialRejectReasonCode).HasMaxLength(3);
            entity.Property(e => e.DimUnit).HasMaxLength(1);
            entity.Property(e => e.DtIntrod)
                .HasColumnType("datetime")
                .HasColumnName("dtIntrod");
            entity.Property(e => e.DtProcessamento)
                .HasColumnType("datetime")
                .HasColumnName("dtProcessamento");
            entity.Property(e => e.DutyAdvancementFeeChargeAmt).HasColumnType("decimal(15, 2)");
            entity.Property(e => e.EarnedDiscountAmt).HasColumnType("decimal(15, 2)");
            entity.Property(e => e.EuropeFirstSurchargeBand).HasMaxLength(2);
            entity.Property(e => e.EuropeanUnionVatnumber)
                .HasMaxLength(25)
                .HasColumnName("EuropeanUnionVATNumber");
            entity.Property(e => e.ExchangeRate).HasColumnType("decimal(18, 9)");
            entity.Property(e => e.FreightChargeAmt).HasColumnType("decimal(15, 2)");
            entity.Property(e => e.FuelSurchargeAmt).HasColumnType("decimal(15, 2)");
            entity.Property(e => e.FuelSurchargeFactor).HasColumnType("decimal(15, 2)");
            entity.Property(e => e.GroundMiscDescription1).HasMaxLength(3);
            entity.Property(e => e.GroundMiscDescription2).HasMaxLength(3);
            entity.Property(e => e.GroundMiscDescription3).HasMaxLength(3);
            entity.Property(e => e.GroundMultiWeightPkgWeight).HasColumnType("decimal(8, 2)");
            entity.Property(e => e.GroundPonumber)
                .HasMaxLength(25)
                .HasColumnName("GroundPONumber");
            entity.Property(e => e.GroundServiceCode).HasMaxLength(3);
            entity.Property(e => e.GroundTrackingPrefix).HasMaxLength(8);
            entity.Property(e => e.GstchargeAmt)
                .HasColumnType("decimal(15, 2)")
                .HasColumnName("GSTChargeAmt");
            entity.Property(e => e.IdUtilIntrod).HasColumnName("idUtilIntrod");
            entity.Property(e => e.InternationalGroundShipmentNumber).HasMaxLength(15);
            entity.Property(e => e.InvoiceNumber).HasMaxLength(9);
            entity.Property(e => e.InvoiceType).HasMaxLength(1);
            entity.Property(e => e.MasterEdinumber)
                .HasMaxLength(9)
                .HasColumnName("MasterEDINumber");
            entity.Property(e => e.MiscCharge1Amt).HasColumnType("decimal(15, 2)");
            entity.Property(e => e.MiscCharge2Amt).HasColumnType("decimal(15, 2)");
            entity.Property(e => e.MiscCharge3Amt).HasColumnType("decimal(15, 2)");
            entity.Property(e => e.NetCharge).HasColumnType("decimal(15, 2)");
            entity.Property(e => e.NonDuplicateTrackingIndicator).HasMaxLength(1);
            entity.Property(e => e.OnCallPickupAmt).HasColumnType("decimal(15, 2)");
            entity.Property(e => e.OriginCurrencyCode).HasMaxLength(3);
            entity.Property(e => e.OriginalAdjustmentReasonCode).HasMaxLength(3);
            entity.Property(e => e.OriginalDutyChargeAmt).HasColumnType("decimal(15, 2)");
            entity.Property(e => e.OriginalRecipientAddressLine1).HasMaxLength(30);
            entity.Property(e => e.OriginalRecipientAddressLine2).HasMaxLength(30);
            entity.Property(e => e.OriginalRecipientCity).HasMaxLength(30);
            entity.Property(e => e.OriginalRecipientPostalCode).HasMaxLength(10);
            entity.Property(e => e.OriginalRecipientStateProvince).HasMaxLength(2);
            entity.Property(e => e.OriginalVatamt)
                .HasColumnType("decimal(15, 2)")
                .HasColumnName("OriginalVATAmt");
            entity.Property(e => e.OriginalWeight).HasColumnType("decimal(7, 1)");
            entity.Property(e => e.PastDueIndicator).HasMaxLength(1);
            entity.Property(e => e.PastDueInvoiceNumber).HasMaxLength(9);
            entity.Property(e => e.PerfPricingDiscountAmt).HasColumnType("decimal(15, 2)");
            entity.Property(e => e.RateScale).HasMaxLength(7);
            entity.Property(e => e.RebillIndicator).HasMaxLength(1);
            entity.Property(e => e.RecipientAddressLine1).HasMaxLength(30);
            entity.Property(e => e.RecipientAddressLine2).HasMaxLength(30);
            entity.Property(e => e.RecipientCity).HasMaxLength(30);
            entity.Property(e => e.RecipientCompany).HasMaxLength(30);
            entity.Property(e => e.RecipientCountryCode).HasMaxLength(2);
            entity.Property(e => e.RecipientName).HasMaxLength(30);
            entity.Property(e => e.RecipientPostalCode).HasMaxLength(10);
            entity.Property(e => e.RecipientSignature).HasMaxLength(22);
            entity.Property(e => e.RecipientStateProvince).HasMaxLength(2);
            entity.Property(e => e.Reference1).HasMaxLength(40);
            entity.Property(e => e.Reference2).HasMaxLength(30);
            entity.Property(e => e.Reference3).HasMaxLength(30);
            entity.Property(e => e.RegionCode).HasMaxLength(2);
            entity.Property(e => e.RequestedAdjustmentAmt).HasColumnType("decimal(15, 2)");
            entity.Property(e => e.ResidentialChargeAmt).HasColumnType("decimal(15, 2)");
            entity.Property(e => e.ResolutionCode).HasMaxLength(1);
            entity.Property(e => e.ReturnsMerchAuthorizationNumber).HasMaxLength(20);
            entity.Property(e => e.RevenueThresholdAmount).HasColumnType("decimal(18, 2)");
            entity.Property(e => e.SaturdayChargeAmt).HasColumnType("decimal(15, 2)");
            entity.Property(e => e.ServiceLevelPercentage).HasMaxLength(3);
            entity.Property(e => e.SettlementOption).HasMaxLength(1);
            entity.Property(e => e.ShipperAddressLine1).HasMaxLength(30);
            entity.Property(e => e.ShipperAddressLine2).HasMaxLength(30);
            entity.Property(e => e.ShipperCity).HasMaxLength(30);
            entity.Property(e => e.ShipperCompany).HasMaxLength(30);
            entity.Property(e => e.ShipperCountryCode).HasMaxLength(2);
            entity.Property(e => e.ShipperDept).HasMaxLength(25);
            entity.Property(e => e.ShipperName).HasMaxLength(30);
            entity.Property(e => e.ShipperPostalCode).HasMaxLength(10);
            entity.Property(e => e.ShipperStateProvince).HasMaxLength(2);
            entity.Property(e => e.SignatureServiceAmt).HasColumnType("decimal(15, 2)");
            entity.Property(e => e.StoreNumber).HasMaxLength(10);
            entity.Property(e => e.TntregisteredVatnumber)
                .HasMaxLength(25)
                .HasColumnName("TNTRegisteredVATNumber");
            entity.Property(e => e.TntuseOnly)
                .HasMaxLength(1)
                .HasColumnName("TNTUseOnly");
            entity.Property(e => e.TotalAmountAdjusted).HasColumnType("decimal(15, 2)");
            entity.Property(e => e.TotalInvoiceCharge).HasColumnType("decimal(15, 2)");
            entity.Property(e => e.TrackingNumber).HasMaxLength(12);
            entity.Property(e => e.TrackingNumberMessageCode).HasMaxLength(5);
            entity.Property(e => e.UsdelvyScheduleCode)
                .HasMaxLength(2)
                .HasColumnName("USDelvyScheduleCode");
            entity.Property(e => e.UsregionOriginZip)
                .HasMaxLength(3)
                .HasColumnName("USRegionOriginZip");
            entity.Property(e => e.VolumeDiscountAmt).HasColumnType("decimal(15, 2)");
            entity.Property(e => e.WeightUnit).HasMaxLength(1);
            entity.Property(e => e.XmlRubricas)
                .HasColumnType("xml")
                .HasColumnName("xmlRubricas");
        });

        modelBuilder.Entity<ImportacaoIncidencia>(entity =>
        {
            entity.HasIndex(e => new { e.IdManifesto, e.IdScan, e.Id }, "idx_idmanifesto_idscan_id").HasFillFactor(80);

            entity.Property(e => e.Id).HasColumnName("id");
            entity.Property(e => e.DtIntrod)
                .HasColumnType("datetime")
                .HasColumnName("dtIntrod");
            entity.Property(e => e.DtResolucao)
                .HasColumnType("datetime")
                .HasColumnName("dtResolucao");
            entity.Property(e => e.DtUltAct)
                .HasColumnType("datetime")
                .HasColumnName("dtUltAct");
            entity.Property(e => e.DtValidacao)
                .HasColumnType("datetime")
                .HasColumnName("dtValidacao");
            entity.Property(e => e.IdBoff).HasColumnName("idBOff");
            entity.Property(e => e.IdLocalOcorr).HasColumnName("idLocalOcorr");
            entity.Property(e => e.IdManifesto).HasColumnName("idManifesto");
            entity.Property(e => e.IdReclamacao).HasColumnName("idReclamacao");
            entity.Property(e => e.IdResolucao).HasColumnName("idResolucao");
            entity.Property(e => e.IdScan).HasColumnName("idScan");
            entity.Property(e => e.IdTipoIncidencia).HasColumnName("idTipoIncidencia");
            entity.Property(e => e.IdUtilIntrod).HasColumnName("idUtilIntrod");
            entity.Property(e => e.IdUtilResolucao).HasColumnName("idUtilResolucao");
            entity.Property(e => e.IdUtilUltAct).HasColumnName("idUtilUltAct");
            entity.Property(e => e.IdUtilValidacao).HasColumnName("idUtilValidacao");
            entity.Property(e => e.Obs)
                .HasMaxLength(250)
                .HasColumnName("obs");
        });

        modelBuilder.Entity<ImportacaoIncidenciasResolucoesT>(entity =>
        {
            entity.ToTable("ImportacaoIncidenciasResolucoes_T");

            entity.Property(e => e.Id).HasColumnName("id");
            entity.Property(e => e.Activo)
                .IsRequired()
                .HasDefaultValueSql("((1))")
                .HasColumnName("activo");
            entity.Property(e => e.Codigo)
                .HasMaxLength(50)
                .HasColumnName("codigo");
            entity.Property(e => e.Descricao)
                .HasMaxLength(50)
                .HasColumnName("descricao");
            entity.Property(e => e.Encerra).HasColumnName("encerra");
            entity.Property(e => e.IdEntidade).HasColumnName("idEntidade");
            entity.Property(e => e.OriginaNc).HasColumnName("originaNC");
        });

        modelBuilder.Entity<ImportacaoIncidenciasTipoT>(entity =>
        {
            entity.ToTable("ImportacaoIncidenciasTipo_T");

            entity.Property(e => e.Id).HasColumnName("id");
            entity.Property(e => e.Activo)
                .IsRequired()
                .HasDefaultValueSql("((1))")
                .HasColumnName("activo");
            entity.Property(e => e.Descricao)
                .HasMaxLength(50)
                .HasColumnName("descricao");
            entity.Property(e => e.IdEntidade).HasColumnName("idEntidade");
            entity.Property(e => e.IdTipoNc).HasColumnName("idTipoNC");
        });

        modelBuilder.Entity<ImportacaoManifestoAux>(entity =>
        {
            entity.ToTable("ImportacaoManifestoAUX");

            entity.HasIndex(e => e.AwbNumber, "idx_awbnumber").HasFillFactor(80);

            entity.Property(e => e.Id).HasColumnName("id");
            entity.Property(e => e.ArrivalDate)
                .HasColumnType("datetime")
                .HasColumnName("arrivalDate");
            entity.Property(e => e.AwbCategoryCustoms)
                .HasMaxLength(4)
                .HasColumnName("awbCategoryCustoms");
            entity.Property(e => e.AwbFormId)
                .HasMaxLength(4)
                .HasColumnName("awbFormId");
            entity.Property(e => e.AwbNumber)
                .HasMaxLength(50)
                .HasColumnName("awbNumber");
            entity.Property(e => e.BillDt)
                .HasMaxLength(1)
                .HasColumnName("billDT");
            entity.Property(e => e.BillTc)
                .HasMaxLength(1)
                .HasColumnName("billTC");
            entity.Property(e => e.Cflag).HasColumnName("cflag");
            entity.Property(e => e.DangerousGoods)
                .HasMaxLength(1)
                .HasColumnName("dangerousGoods");
            entity.Property(e => e.DataDownload)
                .HasMaxLength(8)
                .HasColumnName("dataDownload");
            entity.Property(e => e.DataOrigem).HasColumnType("datetime");
            entity.Property(e => e.DataVerifSf)
                .HasColumnType("smalldatetime")
                .HasColumnName("data_verif_sf");
            entity.Property(e => e.DateUpdated)
                .HasMaxLength(8)
                .HasColumnName("dateUpdated");
            entity.Property(e => e.DesCpostal)
                .HasMaxLength(12)
                .HasColumnName("desCPostal");
            entity.Property(e => e.DesEmpresa)
                .HasMaxLength(35)
                .HasColumnName("desEmpresa");
            entity.Property(e => e.DesEstado)
                .HasMaxLength(2)
                .HasColumnName("desEstado");
            entity.Property(e => e.DesLocalidade)
                .HasMaxLength(37)
                .HasColumnName("desLocalidade");
            entity.Property(e => e.DesMorada)
                .HasMaxLength(70)
                .HasColumnName("desMorada");
            entity.Property(e => e.DesPais)
                .HasMaxLength(2)
                .HasColumnName("desPais");
            entity.Property(e => e.DesResponsavel)
                .HasMaxLength(35)
                .HasColumnName("desResponsavel");
            entity.Property(e => e.DesTelefone)
                .HasMaxLength(15)
                .HasColumnName("desTelefone");
            entity.Property(e => e.Descricao)
                .HasMaxLength(100)
                .HasColumnName("descricao");
            entity.Property(e => e.Dirty).HasColumnName("dirty");
            entity.Property(e => e.DutyDue).HasColumnName("dutyDue");
            entity.Property(e => e.Enviado).HasColumnName("enviado");
            entity.Property(e => e.EstacaoDestino)
                .HasMaxLength(5)
                .HasColumnName("estacaoDestino");
            entity.Property(e => e.EstacaoOrigem)
                .HasMaxLength(5)
                .HasColumnName("estacaoOrigem");
            entity.Property(e => e.Extracted)
                .HasMaxLength(1)
                .HasColumnName("extracted");
            entity.Property(e => e.FlightDestination)
                .HasMaxLength(5)
                .HasColumnName("flightDestination");
            entity.Property(e => e.IdCliente).HasColumnName("idCliente");
            entity.Property(e => e.IdDesCpostal).HasColumnName("idDesCPostal");
            entity.Property(e => e.IdDistribuidor)
                .HasDefaultValueSql("((1))")
                .HasColumnName("idDistribuidor");
            entity.Property(e => e.IdEntidade).HasColumnName("idEntidade");
            entity.Property(e => e.IdEstacaoDestino).HasColumnName("idEstacaoDestino");
            entity.Property(e => e.IdPaisOrigem).HasColumnName("idPaisOrigem");
            entity.Property(e => e.IdServico).HasColumnName("idServico");
            entity.Property(e => e.IdTipoProduto).HasColumnName("idTipoProduto");
            entity.Property(e => e.MasterFormId)
                .HasMaxLength(4)
                .HasColumnName("masterFormId");
            entity.Property(e => e.MasterNumber)
                .HasMaxLength(20)
                .HasColumnName("masterNumber");
            entity.Property(e => e.Moeda)
                .HasMaxLength(3)
                .HasColumnName("moeda");
            entity.Property(e => e.NumeroPacotes).HasColumnName("numeroPacotes");
            entity.Property(e => e.PaisExportacao)
                .HasMaxLength(2)
                .HasColumnName("paisExportacao");
            entity.Property(e => e.PaisOrigem).HasMaxLength(2);
            entity.Property(e => e.PesoTotal)
                .HasColumnType("money")
                .HasColumnName("pesoTotal");
            entity.Property(e => e.RecordType)
                .HasMaxLength(1)
                .HasColumnName("recordType");
            entity.Property(e => e.RemCpostal)
                .HasMaxLength(10)
                .HasColumnName("remCPostal");
            entity.Property(e => e.RemEmpresa)
                .HasMaxLength(35)
                .HasColumnName("remEmpresa");
            entity.Property(e => e.RemEstado)
                .HasMaxLength(2)
                .HasColumnName("remEstado");
            entity.Property(e => e.RemIdPais).HasColumnName("remIdPais");
            entity.Property(e => e.RemLocalidade)
                .HasMaxLength(35)
                .HasColumnName("remLocalidade");
            entity.Property(e => e.RemMorada)
                .HasMaxLength(70)
                .HasColumnName("remMorada");
            entity.Property(e => e.RemPais)
                .HasMaxLength(2)
                .HasColumnName("remPais");
            entity.Property(e => e.RemResponsavel)
                .HasMaxLength(35)
                .HasColumnName("remResponsavel");
            entity.Property(e => e.RemTelefone)
                .HasMaxLength(15)
                .HasColumnName("remTelefone");
            entity.Property(e => e.ServiceType)
                .HasMaxLength(2)
                .HasColumnName("serviceType");
            entity.Property(e => e.Status)
                .HasMaxLength(1)
                .HasColumnName("status");
            entity.Property(e => e.StatusGraspCsp)
                .HasMaxLength(1)
                .HasColumnName("statusGraspCSP");
            entity.Property(e => e.TipoProduto).HasMaxLength(1);
            entity.Property(e => e.TransportCharges)
                .HasColumnType("money")
                .HasColumnName("transportCharges");
            entity.Property(e => e.TxBack).HasColumnName("txBack");
            entity.Property(e => e.ValorCarriage)
                .HasColumnType("money")
                .HasColumnName("valorCarriage");
            entity.Property(e => e.ValorTotal)
                .HasColumnType("money")
                .HasColumnName("valorTotal");
            entity.Property(e => e.Vatnumber)
                .HasMaxLength(15)
                .HasColumnName("VATNumber");
            entity.Property(e => e.VisaRoute)
                .HasMaxLength(6)
                .HasColumnName("visaRoute");
        });

        modelBuilder.Entity<ImportacaoManifestoOverage>(entity =>
        {
            entity.HasIndex(e => new { e.AwbNumber, e.RecordType }, "idx_awb").HasFillFactor(80);

            entity.HasIndex(e => e.AwbNumber, "idx_awbnumber").HasFillFactor(80);

            entity.HasIndex(e => new { e.IdEntidade, e.RecordType }, "idx_identidade_rectype_master_awb_id").HasFillFactor(80);

            entity.HasIndex(e => new { e.MasterNumber, e.AwbNumber, e.RecordType }, "idx_master_awb").HasFillFactor(80);

            entity.HasIndex(e => e.MasterNumber, "idx_masternumber").HasFillFactor(80);

            entity.Property(e => e.Id).HasColumnName("id");
            entity.Property(e => e.Altura)
                .HasColumnType("money")
                .HasColumnName("altura");
            entity.Property(e => e.ArrivalDate)
                .HasColumnType("datetime")
                .HasColumnName("arrivalDate");
            entity.Property(e => e.AwbCategoryCustoms)
                .HasMaxLength(4)
                .HasColumnName("awbCategoryCustoms");
            entity.Property(e => e.AwbFormId)
                .HasMaxLength(4)
                .HasColumnName("awbFormId");
            entity.Property(e => e.AwbNumber)
                .HasMaxLength(20)
                .HasColumnName("awbNumber");
            entity.Property(e => e.AwbRts)
                .HasMaxLength(12)
                .HasColumnName("awbRTS");
            entity.Property(e => e.BillDt)
                .HasMaxLength(1)
                .HasColumnName("billDT");
            entity.Property(e => e.BillDtaccount)
                .HasMaxLength(9)
                .HasColumnName("billDTAccount");
            entity.Property(e => e.BillTc)
                .HasMaxLength(1)
                .HasColumnName("billTC");
            entity.Property(e => e.BillTcaccount)
                .HasMaxLength(9)
                .HasColumnName("billTCAccount");
            entity.Property(e => e.Cambio)
                .HasDefaultValueSql("((1))")
                .HasColumnType("money")
                .HasColumnName("cambio");
            entity.Property(e => e.Cflag)
                .HasDefaultValueSql("((0))")
                .HasColumnName("cflag");
            entity.Property(e => e.Comprimento)
                .HasColumnType("money")
                .HasColumnName("comprimento");
            entity.Property(e => e.CustoFedEx)
                .HasColumnType("money")
                .HasColumnName("custoFedEx");
            entity.Property(e => e.CustoFuel)
                .HasColumnType("money")
                .HasColumnName("custoFuel");
            entity.Property(e => e.CustoSeguro)
                .HasColumnType("money")
                .HasColumnName("custoSeguro");
            entity.Property(e => e.DangerousGoods)
                .HasMaxLength(1)
                .HasColumnName("dangerousGoods");
            entity.Property(e => e.DataDownload)
                .HasMaxLength(8)
                .HasColumnName("dataDownload");
            entity.Property(e => e.DataOrigem).HasColumnType("datetime");
            entity.Property(e => e.DataVerifSf)
                .HasColumnType("smalldatetime")
                .HasColumnName("data_verif_sf");
            entity.Property(e => e.DateUpdated)
                .HasMaxLength(8)
                .HasColumnName("dateUpdated");
            entity.Property(e => e.DesCpostal)
                .HasMaxLength(12)
                .HasColumnName("desCPostal");
            entity.Property(e => e.DesEmpresa)
                .HasMaxLength(35)
                .HasColumnName("desEmpresa");
            entity.Property(e => e.DesEstado)
                .HasMaxLength(2)
                .HasColumnName("desEstado");
            entity.Property(e => e.DesLocalidade)
                .HasMaxLength(37)
                .HasColumnName("desLocalidade");
            entity.Property(e => e.DesMorada)
                .HasMaxLength(70)
                .HasColumnName("desMorada");
            entity.Property(e => e.DesPais)
                .HasMaxLength(2)
                .HasColumnName("desPais");
            entity.Property(e => e.DesResponsavel)
                .HasMaxLength(35)
                .HasColumnName("desResponsavel");
            entity.Property(e => e.DesTelefone)
                .HasMaxLength(15)
                .HasColumnName("desTelefone");
            entity.Property(e => e.Descricao)
                .HasMaxLength(100)
                .HasColumnName("descricao");
            entity.Property(e => e.Dirty).HasColumnName("dirty");
            entity.Property(e => e.DtActualizado)
                .HasColumnType("datetime")
                .HasColumnName("dtActualizado");
            entity.Property(e => e.DtConferencia)
                .HasColumnType("datetime")
                .HasColumnName("dtConferencia");
            entity.Property(e => e.DtCosmos)
                .HasColumnType("datetime")
                .HasColumnName("dtCosmos");
            entity.Property(e => e.DtEntregue)
                .HasColumnType("datetime")
                .HasColumnName("dtEntregue");
            entity.Property(e => e.DtExpToFact)
                .HasColumnType("datetime")
                .HasColumnName("dtExp_to_fact");
            entity.Property(e => e.DtFact)
                .HasColumnType("datetime")
                .HasColumnName("dtFact");
            entity.Property(e => e.DtFecho)
                .HasColumnType("datetime")
                .HasColumnName("dtFecho");
            entity.Property(e => e.DtIntrod)
                .HasColumnType("datetime")
                .HasColumnName("dtIntrod");
            entity.Property(e => e.DtRecolhido)
                .HasColumnType("datetime")
                .HasColumnName("dtRecolhido");
            entity.Property(e => e.DtRts)
                .HasColumnType("datetime")
                .HasColumnName("dtRTS");
            entity.Property(e => e.DtUltAct)
                .HasColumnType("datetime")
                .HasColumnName("dtUltAct");
            entity.Property(e => e.DtValidToFact)
                .HasColumnType("datetime")
                .HasColumnName("dtValid_to_fact");
            entity.Property(e => e.DtValor)
                .HasColumnType("datetime")
                .HasColumnName("dtValor");
            entity.Property(e => e.DutyDue).HasColumnName("dutyDue");
            entity.Property(e => e.Enviado).HasColumnName("enviado");
            entity.Property(e => e.EstacaoDestino)
                .HasMaxLength(5)
                .HasColumnName("estacaoDestino");
            entity.Property(e => e.EstacaoOrigem)
                .HasMaxLength(5)
                .HasColumnName("estacaoOrigem");
            entity.Property(e => e.ExpToFact)
                .HasDefaultValueSql("((0))")
                .HasColumnName("exp_to_fact");
            entity.Property(e => e.Extracted)
                .HasMaxLength(1)
                .HasColumnName("extracted");
            entity.Property(e => e.Fact)
                .HasDefaultValueSql("((0))")
                .HasColumnName("fact");
            entity.Property(e => e.FacturacaoIndividual)
                .HasDefaultValueSql("((0))")
                .HasColumnName("facturacaoIndividual");
            entity.Property(e => e.FlightDestination)
                .HasMaxLength(5)
                .HasColumnName("flightDestination");
            entity.Property(e => e.IdAssinatura).HasColumnName("idAssinatura");
            entity.Property(e => e.IdCliMorada).HasColumnName("idCliMorada");
            entity.Property(e => e.IdCliente).HasColumnName("idCliente");
            entity.Property(e => e.IdClienteFact).HasColumnName("idClienteFact");
            entity.Property(e => e.IdDistribuidor)
                .HasDefaultValueSql("((1))")
                .HasColumnName("idDistribuidor");
            entity.Property(e => e.IdEntidade).HasColumnName("idEntidade");
            entity.Property(e => e.IdEstacaoDestino).HasColumnName("idEstacaoDestino");
            entity.Property(e => e.IdMoeda).HasColumnName("idMoeda");
            entity.Property(e => e.IdPaisOrigem).HasColumnName("idPaisOrigem");
            entity.Property(e => e.IdServico).HasColumnName("idServico");
            entity.Property(e => e.IdTarifa).HasColumnName("idTarifa");
            entity.Property(e => e.IdTipoDangGoods).HasColumnName("idTipoDangGoods");
            entity.Property(e => e.IdTipoProduto).HasColumnName("idTipoProduto");
            entity.Property(e => e.IdUdims).HasColumnName("idUDims");
            entity.Property(e => e.IdUpeso).HasColumnName("idUPeso");
            entity.Property(e => e.IdUpesoVol).HasColumnName("idUPesoVol");
            entity.Property(e => e.IdUtilConferencia).HasColumnName("idUtilConferencia");
            entity.Property(e => e.IdUtilFecho).HasColumnName("idUtilFecho");
            entity.Property(e => e.IdUtilRts).HasColumnName("idUtilRTS");
            entity.Property(e => e.IdUtilUltAct).HasColumnName("idUtilUltAct");
            entity.Property(e => e.IdUtilValor).HasColumnName("idUtilValor");
            entity.Property(e => e.IdutilExpToFact).HasColumnName("idutilExp_to_fact");
            entity.Property(e => e.IdutilValidToFact).HasColumnName("idutilValid_to_fact");
            entity.Property(e => e.Ipf)
                .HasDefaultValueSql("((0))")
                .HasColumnName("IPF");
            entity.Property(e => e.Largura)
                .HasColumnType("money")
                .HasColumnName("largura");
            entity.Property(e => e.Macro)
                .HasMaxLength(3)
                .HasColumnName("macro");
            entity.Property(e => e.MasterFormId)
                .HasMaxLength(4)
                .HasColumnName("masterFormId");
            entity.Property(e => e.MasterNumber)
                .HasMaxLength(50)
                .HasColumnName("masterNumber");
            entity.Property(e => e.Moeda)
                .HasMaxLength(3)
                .HasColumnName("moeda");
            entity.Property(e => e.NumFacturaFedEx)
                .HasMaxLength(15)
                .HasColumnName("numFacturaFedEx");
            entity.Property(e => e.NumeroPacotes).HasColumnName("numeroPacotes");
            entity.Property(e => e.ObsVendaDinheiro)
                .HasMaxLength(250)
                .HasColumnName("obsVendaDinheiro");
            entity.Property(e => e.Observacoes)
                .HasMaxLength(100)
                .HasColumnName("observacoes");
            entity.Property(e => e.ObservacoesDaf)
                .HasMaxLength(100)
                .HasColumnName("observacoesDAF");
            entity.Property(e => e.PaisExportacao)
                .HasMaxLength(2)
                .HasColumnName("paisExportacao");
            entity.Property(e => e.PaisOrigem).HasMaxLength(2);
            entity.Property(e => e.PercDesconto)
                .HasColumnType("money")
                .HasColumnName("percDesconto");
            entity.Property(e => e.Peso)
                .HasColumnType("money")
                .HasColumnName("peso");
            entity.Property(e => e.PesoReal)
                .HasColumnType("money")
                .HasColumnName("pesoReal");
            entity.Property(e => e.PesoTotal)
                .HasColumnType("money")
                .HasColumnName("pesoTotal");
            entity.Property(e => e.PesoVol)
                .HasColumnType("money")
                .HasColumnName("pesoVol");
            entity.Property(e => e.Processo).HasColumnName("processo");
            entity.Property(e => e.ReclamarFedEx).HasColumnName("reclamarFedEx");
            entity.Property(e => e.RecordType)
                .HasMaxLength(1)
                .HasColumnName("recordType");
            entity.Property(e => e.RemCpostal)
                .HasMaxLength(10)
                .HasColumnName("remCPostal");
            entity.Property(e => e.RemEmpresa)
                .HasMaxLength(35)
                .HasColumnName("remEmpresa");
            entity.Property(e => e.RemEstado)
                .HasMaxLength(2)
                .HasColumnName("remEstado");
            entity.Property(e => e.RemIdPais).HasColumnName("remIdPais");
            entity.Property(e => e.RemLocalidade)
                .HasMaxLength(35)
                .HasColumnName("remLocalidade");
            entity.Property(e => e.RemMorada)
                .HasMaxLength(70)
                .HasColumnName("remMorada");
            entity.Property(e => e.RemPais)
                .HasMaxLength(2)
                .HasColumnName("remPais");
            entity.Property(e => e.RemResponsavel)
                .HasMaxLength(35)
                .HasColumnName("remResponsavel");
            entity.Property(e => e.RemTelefone)
                .HasMaxLength(15)
                .HasColumnName("remTelefone");
            entity.Property(e => e.ServiceType)
                .HasMaxLength(2)
                .HasColumnName("serviceType");
            entity.Property(e => e.SignEntregue)
                .HasMaxLength(50)
                .HasColumnName("signEntregue");
            entity.Property(e => e.SignRecolhido)
                .HasMaxLength(50)
                .HasColumnName("signRecolhido");
            entity.Property(e => e.Status)
                .HasMaxLength(1)
                .HasColumnName("status");
            entity.Property(e => e.StatusGraspCsp)
                .HasMaxLength(1)
                .HasColumnName("statusGraspCSP");
            entity.Property(e => e.TaxaIvavalorBase)
                .HasColumnType("money")
                .HasColumnName("taxaIVAValorBase");
            entity.Property(e => e.TipoProduto).HasMaxLength(2);
            entity.Property(e => e.TransportCharges)
                .HasColumnType("money")
                .HasColumnName("transportCharges");
            entity.Property(e => e.TxBack).HasColumnName("txBack");
            entity.Property(e => e.ValidToFact).HasColumnName("valid_to_fact");
            entity.Property(e => e.ValorBaseManual)
                .HasDefaultValueSql("(0)")
                .HasColumnName("valorBaseManual");
            entity.Property(e => e.ValorCarriage)
                .HasColumnType("money")
                .HasColumnName("valorCarriage");
            entity.Property(e => e.ValorReclamado)
                .HasColumnType("money")
                .HasColumnName("valorReclamado");
            entity.Property(e => e.ValorTotal)
                .HasColumnType("money")
                .HasColumnName("valorTotal");
            entity.Property(e => e.ValorVendaDinheiro)
                .HasColumnType("money")
                .HasColumnName("valorVendaDinheiro");
            entity.Property(e => e.Vatnumber)
                .HasMaxLength(15)
                .HasColumnName("VATNumber");
            entity.Property(e => e.VendaDinheiro)
                .HasDefaultValueSql("(0)")
                .HasColumnName("vendaDinheiro");
            entity.Property(e => e.VisaRoute)
                .HasMaxLength(6)
                .HasColumnName("visaRoute");
        });

        modelBuilder.Entity<ImportacaoPedido>(entity =>
        {
            entity.HasKey(e => e.Id).HasName("PK_T_ImportacaoPedidos");

            entity.HasIndex(e => e.Awb, "idx_awb").HasFillFactor(80);

            entity.HasIndex(e => e.IdManifesto, "idx_idImportacaoManifesto").HasFillFactor(80);

            entity.HasIndex(e => e.IdCliente, "idx_idcliente").HasFillFactor(80);

            entity.Property(e => e.Id).HasColumnName("id");
            entity.Property(e => e.Anulado)
                .HasDefaultValueSql("((0))")
                .HasColumnName("anulado");
            entity.Property(e => e.Awb)
                .HasMaxLength(50)
                .HasColumnName("awb");
            entity.Property(e => e.Contacto)
                .HasMaxLength(50)
                .HasColumnName("contacto");
            entity.Property(e => e.CustoEstimado)
                .HasColumnType("money")
                .HasColumnName("custoEstimado");
            entity.Property(e => e.DtAnulacao)
                .HasColumnType("datetime")
                .HasColumnName("dtAnulacao");
            entity.Property(e => e.DtIntrod)
                .HasDefaultValueSql("(getdate())")
                .HasColumnType("datetime")
                .HasColumnName("dtIntrod");
            entity.Property(e => e.DtMatch)
                .HasColumnType("datetime")
                .HasColumnName("dtMatch");
            entity.Property(e => e.IdCliMorada).HasColumnName("idCliMorada");
            entity.Property(e => e.IdCliente).HasColumnName("idCliente");
            entity.Property(e => e.IdCpostalAlt).HasColumnName("idCpostalAlt");
            entity.Property(e => e.IdManifesto).HasColumnName("idManifesto");
            entity.Property(e => e.IdPaisOrigem).HasColumnName("idPaisOrigem");
            entity.Property(e => e.IdProduto).HasColumnName("idProduto");
            entity.Property(e => e.IdUtilAnulacao).HasColumnName("idUtilAnulacao");
            entity.Property(e => e.IdUtilIntrod).HasColumnName("idUtilIntrod");
            entity.Property(e => e.IdUtilMatch).HasColumnName("idUtilMatch");
            entity.Property(e => e.MoradaAlt)
                .HasMaxLength(100)
                .HasColumnName("moradaAlt");
            entity.Property(e => e.Observacoes)
                .HasMaxLength(250)
                .HasColumnName("observacoes");
            entity.Property(e => e.PesoEstimado)
                .HasColumnType("money")
                .HasColumnName("pesoEstimado");
            entity.Property(e => e.Referencia)
                .HasMaxLength(30)
                .HasColumnName("referencia");
            entity.Property(e => e.TelefoneAlt).HasColumnName("telefoneAlt");
            entity.Property(e => e.ValorEstimado)
                .HasColumnType("money")
                .HasColumnName("valorEstimado");
            entity.Property(e => e.VendaDinheiro)
                .HasDefaultValueSql("((0))")
                .HasColumnName("vendaDinheiro");
        });

        modelBuilder.Entity<ImportacaoScan>(entity =>
        {
            entity.HasIndex(e => new { e.AwbNumber, e.ScanDate }, "idx_awbnumber_scandate")
                .IsDescending()
                .HasFillFactor(80);

            entity.HasIndex(e => new { e.IdManifesto, e.ScanDate, e.PostDate, e.ScanCode }, "idx_idmanifesto_scandate_postdate")
                .IsDescending(true, true, true, false)
                .HasFillFactor(80);

            entity.Property(e => e.Id).HasColumnName("id");
            entity.Property(e => e.AwbNumber)
                .HasMaxLength(50)
                .HasColumnName("awbNumber");
            entity.Property(e => e.AwbType)
                .HasMaxLength(1)
                .HasDefaultValueSql("(N'I')")
                .HasComment("M = MPS")
                .HasColumnName("awbType");
            entity.Property(e => e.Comment)
                .HasMaxLength(250)
                .HasColumnName("comment");
            entity.Property(e => e.Concluido).HasColumnName("concluido");
            entity.Property(e => e.DtEnvInterface)
                .HasColumnType("datetime")
                .HasColumnName("dtEnvInterface");
            entity.Property(e => e.DtTratado)
                .HasColumnType("datetime")
                .HasColumnName("dtTratado");
            entity.Property(e => e.EnvInterface).HasColumnName("envInterface");
            entity.Property(e => e.Extracted)
                .HasMaxLength(1)
                .HasColumnName("extracted");
            entity.Property(e => e.ExtractionDateTime)
                .HasColumnType("datetime")
                .HasColumnName("extractionDateTime");
            entity.Property(e => e.IdAssinatura).HasColumnName("idAssinatura");
            entity.Property(e => e.IdGps).HasColumnName("idGps");
            entity.Property(e => e.IdImpScanTratado).HasColumnName("idImpScanTratado");
            entity.Property(e => e.IdImportacaoManifesto).HasColumnName("idImportacaoManifesto");
            entity.Property(e => e.IdManifesto).HasColumnName("idManifesto");
            entity.Property(e => e.IdPlataforma).HasColumnName("idPlataforma");
            entity.Property(e => e.IdRota).HasColumnName("idRota");
            entity.Property(e => e.IdTratamento).HasColumnName("idTratamento");
            entity.Property(e => e.IdUtil).HasColumnName("idUtil");
            entity.Property(e => e.IdUtilTratado).HasColumnName("idUtilTratado");
            entity.Property(e => e.ImportDate)
                .HasColumnType("datetime")
                .HasColumnName("importDate");
            entity.Property(e => e.ObsTratado)
                .HasMaxLength(150)
                .IsUnicode(false)
                .HasColumnName("obsTratado");
            entity.Property(e => e.PostDate)
                .HasColumnType("datetime")
                .HasColumnName("postDate");
            entity.Property(e => e.ScanCode)
                .HasMaxLength(2)
                .HasColumnName("scanCode");
            entity.Property(e => e.ScanCourierRoute)
                .HasMaxLength(5)
                .HasColumnName("scanCourierRoute");
            entity.Property(e => e.ScanDate)
                .HasColumnType("datetime")
                .HasColumnName("scanDate");
            entity.Property(e => e.ScanEntry)
                .HasMaxLength(1)
                .HasColumnName("scanEntry");
            entity.Property(e => e.ScanLocation)
                .HasMaxLength(5)
                .HasColumnName("scanLocation");
            entity.Property(e => e.ScanTime)
                .HasMaxLength(4)
                .HasColumnName("scanTime");
            entity.Property(e => e.Signature)
                .HasMaxLength(30)
                .HasColumnName("signature");
            entity.Property(e => e.Tratado).HasColumnName("tratado");
        });

        modelBuilder.Entity<ImportacaoScansImagen>(entity =>
        {
            entity.HasNoKey();

            entity.HasIndex(e => new { e.IdDocAdos, e.DtFoto }, "idx_idDocAdos").HasFillFactor(80);

            entity.HasIndex(e => new { e.IdScan, e.Foto }, "idx_idScan_foto").HasFillFactor(80);

            entity.Property(e => e.DtFoto)
                .HasColumnType("datetime")
                .HasColumnName("dtFoto");
            entity.Property(e => e.Foto)
                .HasMaxLength(50)
                .IsUnicode(false)
                .HasColumnName("foto");
            entity.Property(e => e.Id)
                .ValueGeneratedOnAdd()
                .HasColumnName("id");
            entity.Property(e => e.IdDocAdos).HasColumnName("idDocAdos");
            entity.Property(e => e.IdScan).HasColumnName("idScan");
        });

        modelBuilder.Entity<ImportarTarifasRexii2016>(entity =>
        {
            entity
                .HasNoKey()
                .ToTable("Importar_Tarifas_REXII_2016");

            entity.Property(e => e.AgrvDevSugestãoComercial)
                .HasMaxLength(255)
                .HasColumnName("AGRV# DEV# SUGESTÃO COMERCIAL");
            entity.Property(e => e.DevGrSugestãoComercial)
                .HasMaxLength(255)
                .HasColumnName("DEV# GR# SUGESTÃO COMERCIAL");
            entity.Property(e => e.DevGrSugestãoComercial1)
                .HasMaxLength(255)
                .HasColumnName("DEV# GR# SUGESTÃO COMERCIAL1");
            entity.Property(e => e.EnvioSeguroSugestãoComercial)
                .HasMaxLength(255)
                .HasColumnName("ENVIO SEGURO SUGESTÃO COMERCIAL");
            entity.Property(e => e.FuelSugestãoComercial)
                .HasMaxLength(255)
                .HasColumnName("FUEL SUGESTÃO COMERCIAL");
            entity.Property(e => e.FuelSugestãoComercial1)
                .HasMaxLength(255)
                .HasColumnName("FUEL SUGESTÃO COMERCIAL1");
            entity.Property(e => e.FuelSugestãoComercial2)
                .HasMaxLength(255)
                .HasColumnName("FUEL SUGESTÃO COMERCIAL2");
            entity.Property(e => e.GSupSugestãoComercial)
                .HasMaxLength(255)
                .HasColumnName("G# SUP# SUGESTÃO COMERCIAL");
            entity.Property(e => e.HandlingSugestãoComercial)
                .HasMaxLength(255)
                .HasColumnName("HANDLING SUGESTÃO COMERCIAL");
            entity.Property(e => e.IdCliente).HasColumnName("Id Cliente");
            entity.Property(e => e.PodSugestãoComercial)
                .HasMaxLength(255)
                .HasColumnName("POD# SUGESTÃO COMERCIAL");
            entity.Property(e => e.TabelaSugeridaComercialR19exp)
                .HasMaxLength(255)
                .HasColumnName("TABELA SUGERIDA COMERCIAL R19EXP");
            entity.Property(e => e.TabelaSugeridaComercialRdiexp)
                .HasMaxLength(255)
                .HasColumnName("TABELA SUGERIDA COMERCIAL RDIEXP");
            entity.Property(e => e.TabelaSugeridaComercialRiaexp)
                .HasMaxLength(255)
                .HasColumnName("TABELA SUGERIDA COMERCIAL RIAEXP");
            entity.Property(e => e.TabelaSugeridaComercialRimexp)
                .HasMaxLength(255)
                .HasColumnName("TABELA SUGERIDA COMERCIAL RIMEXP");
            entity.Property(e => e.TabelaSugeridaComercialXlexp)
                .HasMaxLength(255)
                .HasColumnName("TABELA SUGERIDA COMERCIAL XLEXP");
            entity.Property(e => e.TxAdicSugestãoComercial)
                .HasMaxLength(255)
                .HasColumnName("TX# ADIC# SUGESTÃO COMERCIAL");
            entity.Property(e => e.TxFrioSugestãoComercial)
                .HasMaxLength(255)
                .HasColumnName("TX# FRIO SUGESTÃO COMERCIAL");
            entity.Property(e => e.TxNumSugestãoComercial)
                .HasMaxLength(255)
                .HasColumnName("TX# NUM# SUGESTÃO COMERCIAL");
            entity.Property(e => e.TxReembSugestãoComercial)
                .HasMaxLength(255)
                .HasColumnName("TX# REEMB# SUGESTÃO COMERCIAL");
            entity.Property(e => e.TxReembSugestãoComercial1)
                .HasMaxLength(255)
                .HasColumnName("TX# REEMB# SUGESTÃO COMERCIAL1");
            entity.Property(e => e._2tentEntregaSugestãoComercial)
                .HasMaxLength(255)
                .HasColumnName("2TENT# ENTREGA SUGESTÃO COMERCIAL");
        });

        modelBuilder.Entity<ImpressaoTipoT>(entity =>
        {
            entity
                .HasNoKey()
                .ToTable("ImpressaoTipo_T");

            entity.Property(e => e.Codigo)
                .HasMaxLength(50)
                .IsUnicode(false)
                .HasColumnName("codigo");
            entity.Property(e => e.Descricao)
                .HasMaxLength(100)
                .IsUnicode(false)
                .HasColumnName("descricao");
            entity.Property(e => e.Id).HasColumnName("id");
        });

        modelBuilder.Entity<IncidenciasBuytrago>(entity =>
        {
            entity
                .HasNoKey()
                .ToTable("IncidenciasBuytrago");

            entity.Property(e => e.CodIncid)
                .HasMaxLength(4)
                .HasColumnName("codIncid");
            entity.Property(e => e.Descricao)
                .HasMaxLength(250)
                .IsUnicode(false)
                .HasColumnName("descricao");
            entity.Property(e => e.Enviar).HasColumnName("enviar");
            entity.Property(e => e.Er)
                .HasMaxLength(1)
                .IsUnicode(false)
                .IsFixedLength()
                .HasColumnName("ER");
            entity.Property(e => e.IdTemp)
                .ValueGeneratedOnAdd()
                .HasColumnName("idTEMP");
            entity.Property(e => e.Nivel).HasColumnName("nivel");
            entity.Property(e => e.ReceberComoComentario).HasColumnName("receberComoComentario");
            entity.Property(e => e.ReceberComoScan).HasColumnName("receberComoScan");
            entity.Property(e => e.ScanEntradaTms)
                .HasMaxLength(2)
                .IsUnicode(false)
                .HasColumnName("scanEntradaTMS");
            entity.Property(e => e.Scancode)
                .HasMaxLength(5)
                .IsUnicode(false)
                .HasColumnName("scancode");
        });

        modelBuilder.Entity<IncidenciasBuytragoLog>(entity =>
        {
            entity
                .HasNoKey()
                .ToTable("IncidenciasBuytrago_Log");

            entity.HasIndex(e => new { e.IdScan, e.Er }, "idx_idScan_ER").HasFillFactor(80);

            entity.Property(e => e.CodDelDest).HasColumnName("codDelDest");
            entity.Property(e => e.CodDelOrig).HasColumnName("codDelOrig");
            entity.Property(e => e.CodEtiquetado)
                .HasMaxLength(4)
                .IsUnicode(false)
                .HasColumnName("codEtiquetado");
            entity.Property(e => e.CodIncid)
                .HasMaxLength(4)
                .IsUnicode(false)
                .HasColumnName("codIncid");
            entity.Property(e => e.DataEnvio)
                .HasDefaultValueSql("(getdate())")
                .HasColumnType("datetime")
                .HasColumnName("dataEnvio");
            entity.Property(e => e.DataExpedicao)
                .HasMaxLength(6)
                .IsUnicode(false)
                .HasColumnName("dataExpedicao");
            entity.Property(e => e.DtVerifPickup)
                .HasColumnType("datetime")
                .HasColumnName("dtVerifPickup");
            entity.Property(e => e.Er)
                .HasMaxLength(1)
                .IsUnicode(false)
                .IsFixedLength()
                .HasColumnName("ER");
            entity.Property(e => e.Id)
                .ValueGeneratedOnAdd()
                .HasColumnName("id");
            entity.Property(e => e.IdPickup).HasColumnName("idPickup");
            entity.Property(e => e.IdScan).HasColumnName("idScan");
            entity.Property(e => e.NumExpedicao)
                .HasMaxLength(8)
                .IsUnicode(false)
                .HasColumnName("numExpedicao");
            entity.Property(e => e.NumSequencia).HasColumnName("numSequencia");
            entity.Property(e => e.ScanDate)
                .HasMaxLength(6)
                .IsUnicode(false)
                .HasColumnName("scanDate");
            entity.Property(e => e.Texto)
                .HasMaxLength(100)
                .IsUnicode(false)
                .HasColumnName("texto");
        });

        modelBuilder.Entity<IncidenciasBuytragoScansFecho>(entity =>
        {
            entity
                .HasNoKey()
                .ToTable("IncidenciasBuytragoScansFecho");

            entity.Property(e => e.CodIncid)
                .HasMaxLength(4)
                .HasColumnName("codIncid");
            entity.Property(e => e.ScanCode)
                .HasMaxLength(5)
                .IsUnicode(false)
                .HasColumnName("scanCode");
        });

        modelBuilder.Entity<IncidenciasRtmsMap>(entity =>
        {
            entity.HasKey(e => new { e.IdCliente, e.IdEntidade, e.ScanCode });

            entity.ToTable("IncidenciasRTMS_MAP");

            entity.Property(e => e.IdCliente).HasColumnName("idCliente");
            entity.Property(e => e.IdEntidade).HasColumnName("idEntidade");
            entity.Property(e => e.ScanCode)
                .HasMaxLength(2)
                .IsUnicode(false)
                .HasColumnName("scanCode");
            entity.Property(e => e.CodCliente)
                .HasMaxLength(50)
                .IsUnicode(false)
                .HasColumnName("codCliente");
            entity.Property(e => e.DescIncid)
                .HasMaxLength(250)
                .IsUnicode(false)
                .HasColumnName("descIncid");
            entity.Property(e => e.DescTipoIncid)
                .HasMaxLength(250)
                .IsUnicode(false)
                .HasColumnName("descTipoIncid");
            entity.Property(e => e.IdCliMorada).HasColumnName("idCliMorada");
        });

        modelBuilder.Entity<IndicadoresComerciaisGrafico>(entity =>
        {
            entity.HasKey(e => e.Id).HasName("PK__Indicado__3213E83F1D5A5288");

            entity.ToTable("IndicadoresComerciais_Graficos");

            entity.Property(e => e.Id).HasColumnName("id");
            entity.Property(e => e.Activo)
                .HasDefaultValueSql("((1))")
                .HasColumnName("activo");
            entity.Property(e => e.Funcao)
                .HasMaxLength(200)
                .HasColumnName("funcao");
            entity.Property(e => e.Tema)
                .HasMaxLength(50)
                .HasColumnName("tema");
            entity.Property(e => e.Titulo)
                .HasMaxLength(200)
                .HasColumnName("titulo");
        });

        modelBuilder.Entity<IndicadoresComerciaisGraficosAcesso>(entity =>
        {
            entity.HasKey(e => new { e.Id, e.IdUtil }).HasName("pk_id");

            entity.ToTable("IndicadoresComerciais_Graficos_Acessos");

            entity.Property(e => e.Id).HasColumnName("id");
            entity.Property(e => e.IdUtil).HasColumnName("idUtil");
        });

        modelBuilder.Entity<IndicadoresComerciaisGraficosAcessosGrupo>(entity =>
        {
            entity.HasKey(e => new { e.IdGrafico, e.IdEntidade, e.IdGrupo }).HasName("pk_idGrafico_idEntidade_idGrupo");

            entity.ToTable("IndicadoresComerciais_Graficos_AcessosGrupos");

            entity.Property(e => e.IdGrafico).HasColumnName("idGrafico");
            entity.Property(e => e.IdEntidade).HasColumnName("idEntidade");
            entity.Property(e => e.IdGrupo).HasColumnName("idGrupo");
        });

        modelBuilder.Entity<IndietexWarehouse>(entity =>
        {
            entity.HasKey(e => e.IndietexWarehousesId).HasName("PK__Indietex__AB2074364B35679A");

            entity.Property(e => e.WarehouseAddress).HasMaxLength(200);
            entity.Property(e => e.WarehouseCity).HasMaxLength(100);
            entity.Property(e => e.WarehouseCode).HasMaxLength(50);
            entity.Property(e => e.WarehouseCountry).HasMaxLength(100);
            entity.Property(e => e.WarehouseName).HasMaxLength(50);
            entity.Property(e => e.WarehousePostalcode).HasMaxLength(20);
        });

        modelBuilder.Entity<InfoAuditChange>(entity =>
        {
            entity.Property(e => e.Id).HasColumnName("id");
            entity.Property(e => e.AuditFact).HasColumnName("auditFact");
            entity.Property(e => e.AuditLog).HasColumnName("auditLog");
            entity.Property(e => e.AuditPortal).HasColumnName("auditPortal");
            entity.Property(e => e.CreatedOn)
                .HasDefaultValueSql("(getdate())")
                .HasColumnType("datetime");
            entity.Property(e => e.DeletedXml)
                .HasColumnType("xml")
                .HasColumnName("DeletedXML");
            entity.Property(e => e.InsertedXml)
                .HasColumnType("xml")
                .HasColumnName("InsertedXML");
            entity.Property(e => e.TableName).HasMaxLength(200);
            entity.Property(e => e.Type)
                .HasMaxLength(1)
                .IsUnicode(false)
                .HasColumnName("type");
        });

        modelBuilder.Entity<InformacaoEnvioGeox>(entity =>
        {
            entity
                .HasNoKey()
                .ToTable("informacaoEnvioGEOX");

            entity.Property(e => e.DtIntrod)
                .HasColumnType("datetime")
                .HasColumnName("dtIntrod");
            entity.Property(e => e.Enviado)
                .HasDefaultValueSql("((0))")
                .HasColumnName("enviado");
            entity.Property(e => e.PicDDdt)
                .HasColumnType("datetime")
                .HasColumnName("pic_d_ddt");
            entity.Property(e => e.PicDdt).HasColumnName("pic_ddt");
            entity.Property(e => e.PicExp).HasColumnName("pic_exp");
            entity.Property(e => e.PicRefCli)
                .HasMaxLength(50)
                .IsUnicode(false)
                .HasColumnName("pic_refCli");
            entity.Property(e => e.RefCli)
                .HasMaxLength(50)
                .IsUnicode(false)
                .HasColumnName("refCli");
        });

        modelBuilder.Entity<InterfaceBuytragoInternacionalLog>(entity =>
        {
            entity.HasKey(e => e.Id).HasName("PK_InterfaceBuytragoInternacional_Log_1");

            entity.ToTable("InterfaceBuytragoInternacional_Log");

            entity.Property(e => e.Id).HasColumnName("id");
            entity.Property(e => e.DtIntrod)
                .HasColumnType("datetime")
                .HasColumnName("dtIntrod");
            entity.Property(e => e.IdManifesto).HasColumnName("idManifesto");
            entity.Property(e => e.IdPickup).HasColumnName("idPickup");
            entity.Property(e => e.NumManifestoBuytrago).HasColumnName("numManifestoBuytrago");
        });

        modelBuilder.Entity<InterfaceDadosDestinoT>(entity =>
        {
            entity.ToTable("InterfaceDadosDestino_T");

            entity.HasIndex(e => new { e.Codigo, e.Activo }, "idx_codigo_activo");

            entity.Property(e => e.Id)
                .ValueGeneratedNever()
                .HasColumnName("id");
            entity.Property(e => e.Activo)
                .IsRequired()
                .HasDefaultValueSql("((1))")
                .HasColumnName("activo");
            entity.Property(e => e.Codigo)
                .HasMaxLength(50)
                .HasColumnName("codigo");
            entity.Property(e => e.Descricao)
                .HasMaxLength(100)
                .HasColumnName("descricao");
        });

        modelBuilder.Entity<InterfaceDadosLog>(entity =>
        {
            entity.ToTable("InterfaceDadosLog");

            entity.HasIndex(e => new { e.IdInterfaceTipo, e.IdInterfaceDestino, e.DtEnv }, "idx_idInterfaceTipo_idInterfaceOrigem_dtEnv");

            entity.Property(e => e.Id).HasColumnName("id");
            entity.Property(e => e.DtEnv)
                .HasColumnType("datetime")
                .HasColumnName("dtEnv");
            entity.Property(e => e.IdInterfaceDestino).HasColumnName("idInterfaceDestino");
            entity.Property(e => e.IdInterfaceTipo).HasColumnName("idInterfaceTipo");
            entity.Property(e => e.IdRegisto).HasColumnName("idRegisto");
        });

        modelBuilder.Entity<InterfaceDadosLogMsg>(entity =>
        {
            entity.HasIndex(e => new { e.IdInterfaceTipo, e.IdInterfaceDestino, e.DtEnv, e.IdRegisto }, "idx_tipo_destino_registo_dtEnv").HasFillFactor(80);

            entity.Property(e => e.Id).HasColumnName("id");
            entity.Property(e => e.DtEnv)
                .HasColumnType("datetime")
                .HasColumnName("dtEnv");
            entity.Property(e => e.Erro)
                .HasMaxLength(4000)
                .HasColumnName("erro");
            entity.Property(e => e.IdInterfaceDestino).HasColumnName("idInterfaceDestino");
            entity.Property(e => e.IdInterfaceTipo).HasColumnName("idInterfaceTipo");
            entity.Property(e => e.IdRegisto).HasColumnName("idRegisto");
            entity.Property(e => e.Mensagem)
                .HasColumnType("ntext")
                .HasColumnName("mensagem");
            entity.Property(e => e.Sucesso).HasColumnName("sucesso");
        });

        modelBuilder.Entity<InterfaceDadosPend>(entity =>
        {
            entity.HasKey(e => new { e.IdInterfaceTipo, e.IdInterfaceDestino, e.IdRegisto });

            entity.ToTable("InterfaceDadosPend");

            entity.Property(e => e.IdInterfaceTipo).HasColumnName("idInterfaceTipo");
            entity.Property(e => e.IdInterfaceDestino).HasColumnName("idInterfaceDestino");
            entity.Property(e => e.IdRegisto).HasColumnName("idRegisto");
            entity.Property(e => e.DtIntrod)
                .HasDefaultValueSql("(getdate())")
                .HasColumnType("datetime")
                .HasColumnName("dtIntrod");
        });

        modelBuilder.Entity<InterfaceDadosTipoT>(entity =>
        {
            entity.ToTable("InterfaceDadosTipo_T");

            entity.HasIndex(e => new { e.Codigo, e.Activo }, "idx_codigo_activo");

            entity.Property(e => e.Id)
                .ValueGeneratedNever()
                .HasColumnName("id");
            entity.Property(e => e.Activo)
                .IsRequired()
                .HasDefaultValueSql("((1))")
                .HasColumnName("activo");
            entity.Property(e => e.Codigo)
                .HasMaxLength(50)
                .HasColumnName("codigo");
            entity.Property(e => e.Descricao)
                .HasMaxLength(100)
                .HasColumnName("descricao");
        });

        modelBuilder.Entity<InterfaceDigsPendentesEistC>(entity =>
        {
            entity.HasKey(e => e.Id).HasName("PK__Interfac__3213E83F59E07AB7");

            entity.ToTable("InterfaceDigsPendentesEIStC");

            entity.Property(e => e.Id).HasColumnName("id");
            entity.Property(e => e.Awb)
                .HasMaxLength(50)
                .HasColumnName("awb");
            entity.Property(e => e.DtIntrod)
                .HasColumnType("datetime")
                .HasColumnName("dtIntrod");
            entity.Property(e => e.FileLocation)
                .HasMaxLength(300)
                .IsUnicode(false)
                .HasColumnName("fileLocation");
            entity.Property(e => e.IdDocAdos).HasColumnName("idDocAdos");
            entity.Property(e => e.IdManifesto).HasColumnName("idManifesto");
        });

        modelBuilder.Entity<InterfaceDigsPendentesParceiro>(entity =>
        {
            entity.HasKey(e => e.Id).HasName("PK__Interfac__3213E83F483AF216");

            entity.Property(e => e.Id).HasColumnName("id");
            entity.Property(e => e.DtIntrod)
                .HasColumnType("datetime")
                .HasColumnName("dtIntrod");
            entity.Property(e => e.FileLocation)
                .HasMaxLength(300)
                .IsUnicode(false)
                .HasColumnName("fileLocation");
            entity.Property(e => e.IdManifesto).HasColumnName("idManifesto");
            entity.Property(e => e.IdParceiro).HasColumnName("idParceiro");
        });

        modelBuilder.Entity<InterfacesClientesParametro>(entity =>
        {
            entity
                .HasNoKey()
                .ToTable("interfacesClientesParametros");

            entity.HasIndex(e => new { e.Activo, e.IdCliente, e.IdEntidade }, "idx_activo_idCliente_idEntidade");

            entity.Property(e => e.Activo)
                .HasDefaultValueSql("((1))")
                .HasColumnName("activo");
            entity.Property(e => e.ClientAwbfileName).HasColumnName("clientAWBFileName");
            entity.Property(e => e.FtpFolder)
                .HasMaxLength(50)
                .IsUnicode(false)
                .HasColumnName("ftpFolder");
            entity.Property(e => e.FtpPwd)
                .HasMaxLength(20)
                .IsUnicode(false)
                .HasColumnName("ftpPwd");
            entity.Property(e => e.FtpServer)
                .HasMaxLength(50)
                .IsUnicode(false)
                .HasColumnName("ftpServer");
            entity.Property(e => e.FtpUser)
                .HasMaxLength(20)
                .IsUnicode(false)
                .HasColumnName("ftpUser");
            entity.Property(e => e.IdCliMorada).HasColumnName("idCliMorada");
            entity.Property(e => e.IdCliente).HasColumnName("idCliente");
            entity.Property(e => e.IdClienteUnix).HasColumnName("idClienteUnix");
            entity.Property(e => e.IdEntidade).HasColumnName("idEntidade");
            entity.Property(e => e.RangelAwbfileName).HasColumnName("RangelAWBFileName");
            entity.Property(e => e.RefClientFileName).HasDefaultValueSql("((0))");
            entity.Property(e => e.TempFolder)
                .HasMaxLength(250)
                .IsUnicode(false)
                .HasColumnName("tempFolder");
        });

        modelBuilder.Entity<InterfacesColuna>(entity =>
        {
            entity.HasKey(e => e.Id).HasName("PK__Interfac__3213E83F049CCB9F");

            entity.HasIndex(e => new { e.IdInterface, e.TableName, e.ColumnName }, "idx_InterfacesColunas_codInterface");

            entity.Property(e => e.Id).HasColumnName("id");
            entity.Property(e => e.ColumnName)
                .HasMaxLength(128)
                .HasColumnName("columnName");
            entity.Property(e => e.IdInterface).HasColumnName("idInterface");
            entity.Property(e => e.Ordem).HasColumnName("ordem");
            entity.Property(e => e.TableName)
                .HasMaxLength(128)
                .HasColumnName("tableName");
        });

        modelBuilder.Entity<InventarioRotaLog>(entity =>
        {
            entity
                .HasNoKey()
                .ToTable("InventarioRota_log");

            entity.Property(e => e.Awb)
                .HasMaxLength(50)
                .HasColumnName("awb");
            entity.Property(e => e.DtIntrod)
                .HasDefaultValueSql("(getdate())")
                .HasColumnType("datetime")
                .HasColumnName("dtIntrod");
            entity.Property(e => e.IdUtil).HasColumnName("idUtil");
            entity.Property(e => e.Idplataforma).HasColumnName("idplataforma");
            entity.Property(e => e.Observacoes)
                .HasMaxLength(50)
                .HasColumnName("observacoes");
            entity.Property(e => e.Rota)
                .HasMaxLength(5)
                .HasColumnName("rota");
            entity.Property(e => e.Scan)
                .HasMaxLength(3)
                .HasColumnName("scan");
        });

        modelBuilder.Entity<IpbrickWaitingCallsLog>(entity =>
        {
            entity
                .HasNoKey()
                .ToTable("IPBrickWaitingCallsLog");

            entity.Property(e => e.DtIntrod)
                .HasDefaultValueSql("(getdate())")
                .HasColumnType("datetime")
                .HasColumnName("dtIntrod");
            entity.Property(e => e.Error)
                .IsUnicode(false)
                .HasColumnName("error");
            entity.Property(e => e.HttpRequest)
                .IsUnicode(false)
                .HasColumnName("httpRequest");
            entity.Property(e => e.Id)
                .ValueGeneratedOnAdd()
                .HasColumnName("id");
            entity.Property(e => e.QueueName)
                .HasMaxLength(100)
                .IsUnicode(false)
                .HasColumnName("queueName");
            entity.Property(e => e.WaitingCalls)
                .HasMaxLength(10)
                .IsUnicode(false)
                .HasColumnName("waitingCalls");
        });

        modelBuilder.Entity<Ipd>(entity =>
        {
            entity
                .HasNoKey()
                .ToTable("ipd");

            entity.Property(e => e.Awb)
                .HasMaxLength(255)
                .HasColumnName("awb");
            entity.Property(e => e.Disc).HasColumnName("disc");
            entity.Property(e => e.NumPacotes).HasColumnName("numPacotes");
        });

        modelBuilder.Entity<IvaCodigoIsencaoT>(entity =>
        {
            entity
                .HasNoKey()
                .ToTable("IvaCodigoIsencao_T");

            entity.Property(e => e.Activo).HasColumnName("activo");
            entity.Property(e => e.Codigo)
                .HasMaxLength(20)
                .HasColumnName("codigo");
            entity.Property(e => e.Descricao)
                .HasMaxLength(50)
                .HasColumnName("descricao");
            entity.Property(e => e.Ec).HasColumnName("EC");
            entity.Property(e => e.Id).HasColumnName("id");
            entity.Property(e => e.IdEntidade).HasColumnName("idEntidade");
            entity.Property(e => e.IdIvaReg).HasColumnName("idIvaReg");
            entity.Property(e => e.IdRegime).HasColumnName("idRegime");
            entity.Property(e => e.IdTipoIva).HasColumnName("idTipoIva");
        });

        modelBuilder.Entity<IvaT>(entity =>
        {
            entity.ToTable("IVA_T");

            entity.Property(e => e.Id)
                .ValueGeneratedNever()
                .HasColumnName("id");
            entity.Property(e => e.Activo).HasColumnName("activo");
            entity.Property(e => e.Codigo)
                .HasMaxLength(15)
                .HasColumnName("codigo");
            entity.Property(e => e.Descricao)
                .HasMaxLength(50)
                .HasColumnName("descricao");
            entity.Property(e => e.DtFim)
                .HasColumnType("datetime")
                .HasColumnName("dtFim");
            entity.Property(e => e.DtInicio)
                .HasColumnType("datetime")
                .HasColumnName("dtInicio");
            entity.Property(e => e.IdIvareg).HasColumnName("idIVAReg");
            entity.Property(e => e.IdTipoIva).HasColumnName("idTipoIVA");
            entity.Property(e => e.Taxa)
                .HasColumnType("money")
                .HasColumnName("taxa");
        });

        modelBuilder.Entity<IvaregEntidade>(entity =>
        {
            entity.HasKey(e => e.Id).HasName("PK__IVARegEn__3213E83F732C2B46");

            entity.ToTable("IVARegEntidades");

            entity.Property(e => e.Id).HasColumnName("id");
            entity.Property(e => e.IdEntidade).HasColumnName("idEntidade");
            entity.Property(e => e.IdIvaReg).HasColumnName("idIvaReg");
        });

        modelBuilder.Entity<IvaregT>(entity =>
        {
            entity.ToTable("IVAReg_T");

            entity.Property(e => e.Id).HasColumnName("id");
            entity.Property(e => e.Nome)
                .HasMaxLength(50)
                .HasColumnName("nome");
        });

        modelBuilder.Entity<IvatipoT>(entity =>
        {
            entity.ToTable("IVATipo_T");

            entity.Property(e => e.Id).HasColumnName("id");
            entity.Property(e => e.Codigo)
                .HasMaxLength(15)
                .HasColumnName("codigo");
            entity.Property(e => e.Descricao)
                .HasMaxLength(50)
                .HasColumnName("descricao");
        });

        modelBuilder.Entity<LhpercursoStepsTemplate>(entity =>
        {
            entity.HasKey(e => e.Id).HasName("PK__LHPercur__3213E83F6788DA23");

            entity.ToTable("LHPercursoStepsTemplates");

            entity.HasIndex(e => e.Percurso, "idx_percurso");

            entity.Property(e => e.Id).HasColumnName("id");
            entity.Property(e => e.DtIntrod)
                .HasColumnType("datetime")
                .HasColumnName("dtIntrod");
            entity.Property(e => e.DtUltAct)
                .HasColumnType("datetime")
                .HasColumnName("dtUltAct");
            entity.Property(e => e.HoraPrevChegada).HasColumnType("datetime");
            entity.Property(e => e.HoraPrevPartida).HasColumnType("datetime");
            entity.Property(e => e.IdPlataforma).HasColumnName("idPlataforma");
            entity.Property(e => e.IdPlataformaDestino).HasColumnName("idPlataformaDestino");
            entity.Property(e => e.IdPlataformaOrigem).HasColumnName("idPlataformaOrigem");
            entity.Property(e => e.IdPlataformaPrincipal).HasColumnName("idPlataformaPrincipal");
            entity.Property(e => e.IdTemplate).HasColumnName("idTemplate");
            entity.Property(e => e.IdUtilIntrod).HasColumnName("idUtilIntrod");
            entity.Property(e => e.IdUtilUltAct).HasColumnName("idUtilUltAct");
            entity.Property(e => e.Percurso).HasMaxLength(50);
        });

        modelBuilder.Entity<LineHaul>(entity =>
        {
            entity.Property(e => e.Id).HasColumnName("id");
            entity.Property(e => e.Activo).HasColumnName("activo");
            entity.Property(e => e.Cmr)
                .HasMaxLength(10)
                .HasColumnName("CMR");
            entity.Property(e => e.CostCenter)
                .HasMaxLength(50)
                .IsUnicode(false)
                .HasColumnName("costCenter");
            entity.Property(e => e.Custo)
                .HasColumnType("money")
                .HasColumnName("custo");
            entity.Property(e => e.CustoAdicional)
                .HasColumnType("money")
                .HasColumnName("custoAdicional");
            entity.Property(e => e.CustoPenaliza)
                .HasColumnType("money")
                .HasColumnName("custoPenaliza");
            entity.Property(e => e.CustoTotal)
                .HasColumnType("money")
                .HasColumnName("custoTotal");
            entity.Property(e => e.DataContab).HasColumnType("datetime");
            entity.Property(e => e.Descricao)
                .HasMaxLength(255)
                .IsUnicode(false)
                .HasColumnName("descricao");
            entity.Property(e => e.DtEnvInterface)
                .HasColumnType("datetime")
                .HasColumnName("dtEnvInterface");
            entity.Property(e => e.DtFim)
                .HasColumnType("datetime")
                .HasColumnName("dtFim");
            entity.Property(e => e.DtInicio)
                .HasColumnType("datetime")
                .HasColumnName("dtInicio");
            entity.Property(e => e.DtIntrod)
                .HasColumnType("datetime")
                .HasColumnName("dtIntrod");
            entity.Property(e => e.DtUltAct)
                .HasColumnType("datetime")
                .HasColumnName("dtUltAct");
            entity.Property(e => e.EnvInterface).HasColumnName("envInterface");
            entity.Property(e => e.FacturarFedex).HasColumnName("facturarFedex");
            entity.Property(e => e.IdClienteFactura).HasColumnName("idClienteFactura");
            entity.Property(e => e.IdClientePagamento).HasColumnName("idClientePagamento");
            entity.Property(e => e.IdEntidade)
                .HasDefaultValueSql("(1)")
                .HasColumnName("idEntidade");
            entity.Property(e => e.IdFornecedor).HasColumnName("idFornecedor");
            entity.Property(e => e.IdPlataformaDestino).HasColumnName("idPlataformaDestino");
            entity.Property(e => e.IdPlataformaOrigem).HasColumnName("idPlataformaOrigem");
            entity.Property(e => e.IdRota).HasColumnName("idRota");
            entity.Property(e => e.IdTipo).HasColumnName("idTipo");
            entity.Property(e => e.IdTipoServico).HasColumnName("idTipoServico");
            entity.Property(e => e.IdUtilIntrod).HasColumnName("idUtilIntrod");
            entity.Property(e => e.IdUtilUltAct).HasColumnName("idUtilUltAct");
            entity.Property(e => e.IdUtilValidacao).HasColumnName("idUtilValidacao");
            entity.Property(e => e.IdaVolta).HasColumnName("idaVolta");
            entity.Property(e => e.Master)
                .HasMaxLength(50)
                .IsUnicode(false)
                .HasColumnName("master");
            entity.Property(e => e.Matricula)
                .HasMaxLength(8)
                .HasColumnName("matricula");
            entity.Property(e => e.MatriculaGalera)
                .HasMaxLength(15)
                .HasColumnName("matriculaGalera");
            entity.Property(e => e.NomeMotorista)
                .HasMaxLength(50)
                .HasColumnName("nomeMotorista");
            entity.Property(e => e.NumeroEnvios).HasColumnName("numeroEnvios");
            entity.Property(e => e.NumeroTelefone).HasColumnName("numeroTelefone");
            entity.Property(e => e.Obs)
                .HasMaxLength(255)
                .IsUnicode(false);
            entity.Property(e => e.ObsVendaDinheiro)
                .HasMaxLength(255)
                .IsUnicode(false);
            entity.Property(e => e.ObservacoesCa)
                .HasMaxLength(255)
                .HasColumnName("observacoesCA");
            entity.Property(e => e.ObservacoesPenal)
                .HasMaxLength(255)
                .HasColumnName("observacoesPenal");
            entity.Property(e => e.PesoTotal)
                .HasColumnType("money")
                .HasColumnName("pesoTotal");
            entity.Property(e => e.Proveito)
                .HasColumnType("money")
                .HasColumnName("proveito");
            entity.Property(e => e.Referencia)
                .HasMaxLength(50)
                .IsUnicode(false)
                .HasColumnName("referencia");
            entity.Property(e => e.Rota).HasMaxLength(20);
            entity.Property(e => e.ServicoExtraordinario).HasColumnName("servicoExtraordinario");
            entity.Property(e => e.Validado).HasDefaultValueSql("((0))");
            entity.Property(e => e.VendaDinheiro).HasColumnName("vendaDinheiro");
        });

        modelBuilder.Entity<LineHaulPlataforma>(entity =>
        {
            entity.Property(e => e.Id).HasColumnName("id");
            entity.Property(e => e.DataHoraVoo)
                .HasColumnType("datetime")
                .HasColumnName("dataHoraVoo");
            entity.Property(e => e.DtIntrod)
                .HasColumnType("datetime")
                .HasColumnName("dtIntrod");
            entity.Property(e => e.DtUltAct)
                .HasColumnType("datetime")
                .HasColumnName("dtUltAct");
            entity.Property(e => e.HoraChegada)
                .HasColumnType("datetime")
                .HasColumnName("horaChegada");
            entity.Property(e => e.HoraPartida)
                .HasColumnType("datetime")
                .HasColumnName("horaPartida");
            entity.Property(e => e.HoraPrevistaChegada)
                .HasColumnType("datetime")
                .HasColumnName("horaPrevistaChegada");
            entity.Property(e => e.HoraPrevistaPartida)
                .HasColumnType("datetime")
                .HasColumnName("horaPrevistaPartida");
            entity.Property(e => e.HoraRealChegada)
                .HasColumnType("datetime")
                .HasColumnName("horaRealChegada");
            entity.Property(e => e.HoraRealPartida)
                .HasColumnType("datetime")
                .HasColumnName("horaRealPartida");
            entity.Property(e => e.IdAeroporto).HasColumnName("idAeroporto");
            entity.Property(e => e.IdCompanhiaAerea).HasColumnName("idCompanhiaAerea");
            entity.Property(e => e.IdLh).HasColumnName("idLH");
            entity.Property(e => e.IdPlataforma).HasColumnName("idPlataforma");
            entity.Property(e => e.IdUtilIntrod).HasColumnName("idUtilIntrod");
            entity.Property(e => e.IdUtilUltAct).HasColumnName("idUtilUltAct");
            entity.Property(e => e.NrVoo)
                .HasMaxLength(15)
                .HasColumnName("nrVoo");
            entity.Property(e => e.Ordem).HasColumnName("ordem");
            entity.Property(e => e.PltFinal).HasColumnName("pltFinal");
            entity.Property(e => e.PltOrigem).HasColumnName("pltOrigem");
            entity.Property(e => e.SeloChegada)
                .HasMaxLength(50)
                .HasColumnName("seloChegada");
            entity.Property(e => e.SeloPartida)
                .HasMaxLength(50)
                .HasColumnName("seloPartida");
            entity.Property(e => e.TxOcupacao)
                .HasMaxLength(5)
                .HasColumnName("txOcupacao");
        });

        modelBuilder.Entity<LineHaulPlataformaT>(entity =>
        {
            entity.ToTable("LineHaulPlataforma_T");

            entity.Property(e => e.Id).HasColumnName("id");
            entity.Property(e => e.Activo).HasColumnName("activo");
            entity.Property(e => e.CodCurto)
                .HasMaxLength(10)
                .HasColumnName("codCurto");
            entity.Property(e => e.Codigo)
                .HasMaxLength(50)
                .HasColumnName("codigo");
            entity.Property(e => e.Descricao)
                .HasMaxLength(50)
                .HasColumnName("descricao");
            entity.Property(e => e.IdEntidade)
                .HasDefaultValueSql("((1))")
                .HasColumnName("idEntidade");
            entity.Property(e => e.IdPais).HasColumnName("idPais");
            entity.Property(e => e.IdPlat).HasColumnName("idPlat");
        });

        modelBuilder.Entity<LineHaulPlataformasTemplate>(entity =>
        {
            entity.ToTable("LineHaulPlataformas_Templates");

            entity.Property(e => e.Id).HasColumnName("id");
            entity.Property(e => e.DtIntrod)
                .HasColumnType("datetime")
                .HasColumnName("dtIntrod");
            entity.Property(e => e.DtUltAct)
                .HasColumnType("datetime")
                .HasColumnName("dtUltAct");
            entity.Property(e => e.HoraChegada)
                .HasColumnType("datetime")
                .HasColumnName("horaChegada");
            entity.Property(e => e.HoraPartida)
                .HasColumnType("datetime")
                .HasColumnName("horaPartida");
            entity.Property(e => e.IdPlataforma).HasColumnName("idPlataforma");
            entity.Property(e => e.IdTemplate).HasColumnName("idTemplate");
            entity.Property(e => e.IdUtilIntrod).HasColumnName("idUtilIntrod");
            entity.Property(e => e.IdUtilUltAct).HasColumnName("idUtilUltAct");
            entity.Property(e => e.Ordem).HasColumnName("ordem");
            entity.Property(e => e.PltFinal).HasColumnName("pltFinal");
        });

        modelBuilder.Entity<LineHaulRota>(entity =>
        {
            entity.HasNoKey();

            entity.Property(e => e.Custo).HasColumnType("money");
            entity.Property(e => e.Descricao).HasMaxLength(15);
            entity.Property(e => e.DtIntrod)
                .HasColumnType("datetime")
                .HasColumnName("dtIntrod");
            entity.Property(e => e.DtUltAct)
                .HasColumnType("datetime")
                .HasColumnName("dtUltAct");
            entity.Property(e => e.HoraPrevistaChegada).HasColumnType("datetime");
            entity.Property(e => e.HoraPrevistaPartida).HasColumnType("datetime");
            entity.Property(e => e.Id).HasColumnName("id");
            entity.Property(e => e.IdEntidade).HasColumnName("idEntidade");
            entity.Property(e => e.IdUtilIntrod).HasColumnName("idUtilIntrod");
            entity.Property(e => e.IdUtilUltAct).HasColumnName("idUtilUltAct");
            entity.Property(e => e.Rota).HasMaxLength(10);
        });

        modelBuilder.Entity<LineHaulTemplate>(entity =>
        {
            entity.Property(e => e.Id).HasColumnName("id");
            entity.Property(e => e.Activo)
                .HasDefaultValueSql("(1)")
                .HasColumnName("activo");
            entity.Property(e => e.CostCenter)
                .HasMaxLength(50)
                .IsUnicode(false)
                .HasColumnName("costCenter");
            entity.Property(e => e.Custo)
                .HasColumnType("money")
                .HasColumnName("custo");
            entity.Property(e => e.CustoAdicional)
                .HasColumnType("money")
                .HasColumnName("custoAdicional");
            entity.Property(e => e.CustoPenaliza)
                .HasColumnType("money")
                .HasColumnName("custoPenaliza");
            entity.Property(e => e.CustoTotal)
                .HasColumnType("money")
                .HasColumnName("custoTotal");
            entity.Property(e => e.DataContab).HasColumnType("datetime");
            entity.Property(e => e.Descricao)
                .HasMaxLength(255)
                .IsUnicode(false)
                .HasColumnName("descricao");
            entity.Property(e => e.DtFim)
                .HasColumnType("datetime")
                .HasColumnName("dtFim");
            entity.Property(e => e.DtInicio)
                .HasColumnType("datetime")
                .HasColumnName("dtInicio");
            entity.Property(e => e.DtIntrod)
                .HasDefaultValueSql("(getdate())")
                .HasColumnType("datetime")
                .HasColumnName("dtIntrod");
            entity.Property(e => e.FacturarFedex).HasColumnName("facturarFedex");
            entity.Property(e => e.IdClienteFactura).HasColumnName("idClienteFactura");
            entity.Property(e => e.IdClientePagamento).HasColumnName("idClientePagamento");
            entity.Property(e => e.IdEntidade)
                .HasDefaultValueSql("(1)")
                .HasColumnName("idEntidade");
            entity.Property(e => e.IdLineHaul).HasColumnName("idLineHaul");
            entity.Property(e => e.IdPlataformaDestino).HasColumnName("idPlataformaDestino");
            entity.Property(e => e.IdPlataformaOrigem).HasColumnName("idPlataformaOrigem");
            entity.Property(e => e.IdTipo).HasColumnName("idTipo");
            entity.Property(e => e.IdTipoServico).HasColumnName("idTipoServico");
            entity.Property(e => e.IdUtilIntrod).HasColumnName("idUtilIntrod");
            entity.Property(e => e.IdaVolta).HasColumnName("idaVolta");
            entity.Property(e => e.Master)
                .HasMaxLength(50)
                .IsUnicode(false)
                .HasColumnName("master");
            entity.Property(e => e.Matricula)
                .HasMaxLength(8)
                .HasColumnName("matricula");
            entity.Property(e => e.MatriculaGalera)
                .HasMaxLength(15)
                .HasColumnName("matriculaGalera");
            entity.Property(e => e.NomeMotorista)
                .HasMaxLength(50)
                .HasColumnName("nomeMotorista");
            entity.Property(e => e.NumeroTelefone).HasColumnName("numeroTelefone");
            entity.Property(e => e.Obs)
                .HasMaxLength(255)
                .IsUnicode(false);
            entity.Property(e => e.ObsVendaDinheiro)
                .HasMaxLength(255)
                .IsUnicode(false);
            entity.Property(e => e.ObservacoesCa)
                .HasMaxLength(255)
                .HasColumnName("observacoesCA");
            entity.Property(e => e.ObservacoesPenal)
                .HasMaxLength(255)
                .HasColumnName("observacoesPenal");
            entity.Property(e => e.Proveito)
                .HasColumnType("money")
                .HasColumnName("proveito");
            entity.Property(e => e.Referencia)
                .HasMaxLength(50)
                .IsUnicode(false)
                .HasColumnName("referencia");
            entity.Property(e => e.ServicoExtraordinario).HasColumnName("servicoExtraordinario");
            entity.Property(e => e.VendaDinheiro).HasColumnName("vendaDinheiro");
        });

        modelBuilder.Entity<LineHaulTipoServicoT>(entity =>
        {
            entity.ToTable("LineHaulTipoServico_T");

            entity.Property(e => e.Id).HasColumnName("id");
            entity.Property(e => e.CcustoId)
                .HasMaxLength(50)
                .IsUnicode(false)
                .HasColumnName("CCustoId");
            entity.Property(e => e.CcustoNome)
                .HasMaxLength(100)
                .IsUnicode(false)
                .HasColumnName("CCustoNome");
            entity.Property(e => e.Descricao)
                .HasMaxLength(50)
                .IsUnicode(false)
                .HasColumnName("descricao");
            entity.Property(e => e.IdEntidade).HasColumnName("idEntidade");
            entity.Property(e => e.Imputacao).HasColumnName("%Imputacao");
        });

        modelBuilder.Entity<LineHaulTipoT>(entity =>
        {
            entity.ToTable("LineHaulTipo_T");

            entity.Property(e => e.Id).HasColumnName("id");
            entity.Property(e => e.Activo).HasColumnName("activo");
            entity.Property(e => e.Aerea).HasColumnName("aerea");
            entity.Property(e => e.Descricao)
                .HasMaxLength(50)
                .HasColumnName("descricao");
            entity.Property(e => e.IdEntidade)
                .HasDefaultValueSql("(1)")
                .HasColumnName("idEntidade");
            entity.Property(e => e.IdVia).HasColumnName("idVia");
        });

        modelBuilder.Entity<LmsCustomerAndProspect>(entity =>
        {
            entity.ToTable("LMS_CustomerAndProspects");

            entity.Property(e => e.AccountName1)
                .HasMaxLength(120)
                .HasColumnName("Account name 1");
            entity.Property(e => e.Address1)
                .HasMaxLength(120)
                .HasColumnName("Address 1");
            entity.Property(e => e.City).HasMaxLength(100);
            entity.Property(e => e.ClosedNotWonFlag).HasColumnName("Closed not won flag");
            entity.Property(e => e.ClosedWonFlag).HasColumnName("Closed Won flag");
            entity.Property(e => e.Comments).HasMaxLength(150);
            entity.Property(e => e.CompanyEmail)
                .HasMaxLength(50)
                .HasColumnName("Company email");
            entity.Property(e => e.CompanyFax)
                .HasMaxLength(15)
                .HasColumnName("Company fax");
            entity.Property(e => e.CompanyPhone)
                .HasMaxLength(15)
                .HasColumnName("Company phone");
            entity.Property(e => e.Competition).HasMaxLength(30);
            entity.Property(e => e.ContactFirstName)
                .HasMaxLength(50)
                .HasColumnName("Contact first name");
            entity.Property(e => e.ContactLastName)
                .HasMaxLength(100)
                .HasColumnName("Contact last name");
            entity.Property(e => e.ContactRoleName)
                .HasMaxLength(30)
                .HasColumnName("Contact role name");
            entity.Property(e => e.ContactSalutation)
                .HasMaxLength(10)
                .HasColumnName("Contact salutation");
            entity.Property(e => e.Country).HasMaxLength(100);
            entity.Property(e => e.CurrentOppOwnerName)
                .HasMaxLength(100)
                .HasColumnName("Current opp owner name");
            entity.Property(e => e.CurrentOppOwnerPin)
                .HasMaxLength(4)
                .HasColumnName("Current opp owner PIN");
            entity.Property(e => e.CurrentOppOwnerSalesRole)
                .HasMaxLength(50)
                .HasColumnName("Current opp owner sales role");
            entity.Property(e => e.CurrentOppOwnerSalesTerritory)
                .HasMaxLength(50)
                .HasColumnName("Current opp owner sales territory");
            entity.Property(e => e.CustomerLifeCycleStatus)
                .HasMaxLength(35)
                .HasColumnName("Customer life cycle status");
            entity.Property(e => e.DtProcessamento)
                .HasColumnType("datetime")
                .HasColumnName("dtProcessamento");
            entity.Property(e => e.DtUltAct)
                .HasColumnType("datetime")
                .HasColumnName("dtUltAct");
            entity.Property(e => e.GcomClientId).HasColumnName("Gcom client ID");
            entity.Property(e => e.GcomId).HasColumnName("Gcom ID");
            entity.Property(e => e.GcomRecordCreationTimestamp)
                .HasColumnType("datetime")
                .HasColumnName("Gcom record creation timestamp");
            entity.Property(e => e.GcomRecordUpdateTimestamp)
                .HasColumnType("datetime")
                .HasColumnName("Gcom record update timestamp");
            entity.Property(e => e.IdSalesLead).HasColumnName("idSalesLead");
            entity.Property(e => e.ImportExportFlag)
                .HasMaxLength(30)
                .HasColumnName("Import Export flag");
            entity.Property(e => e.LeadEndReason)
                .HasMaxLength(250)
                .HasColumnName("Lead end reason");
            entity.Property(e => e.LeadOrigin)
                .HasMaxLength(30)
                .HasColumnName("Lead origin");
            entity.Property(e => e.LeadStatus)
                .HasMaxLength(50)
                .HasColumnName("Lead status");
            entity.Property(e => e.PostalCode)
                .HasMaxLength(15)
                .HasColumnName("Postal code");
            entity.Property(e => e.PrimaryActivityCode).HasColumnName("Primary activity code");
            entity.Property(e => e.PrimaryActivityDesc)
                .HasMaxLength(50)
                .HasColumnName("Primary activity desc");
            entity.Property(e => e.ProspectCustomrFlag)
                .HasMaxLength(8)
                .IsUnicode(false)
                .HasColumnName("Prospect / Customr flag");
            entity.Property(e => e.Province).HasMaxLength(100);
            entity.Property(e => e.TotalRev12m)
                .HasColumnType("decimal(12, 2)")
                .HasColumnName("Total Rev 12M");
            entity.Property(e => e.TotalRev1m)
                .HasColumnType("decimal(12, 2)")
                .HasColumnName("Total Rev 1M");
            entity.Property(e => e.TotalRev24m)
                .HasColumnType("decimal(12, 2)")
                .HasColumnName("Total Rev 24M");
            entity.Property(e => e.TotalRev24mApac)
                .HasColumnType("decimal(12, 2)")
                .HasColumnName("Total Rev 24M APAC");
            entity.Property(e => e.TotalRev24mEma)
                .HasColumnType("decimal(12, 2)")
                .HasColumnName("Total Rev 24M EMA");
            entity.Property(e => e.TotalRev24mLac)
                .HasColumnType("decimal(12, 2)")
                .HasColumnName("Total Rev 24M LAC");
            entity.Property(e => e.TotalRev24mUscan)
                .HasColumnType("decimal(12, 2)")
                .HasColumnName("Total Rev 24M USCAN");
            entity.Property(e => e.TotalRev3m)
                .HasColumnType("decimal(12, 2)")
                .HasColumnName("Total Rev 3M");
            entity.Property(e => e.TotalRev6m)
                .HasColumnType("decimal(12, 2)")
                .HasColumnName("Total Rev 6M");
            entity.Property(e => e.TotalRevIe12m)
                .HasColumnType("decimal(12, 2)")
                .HasColumnName("Total Rev IE 12M");
            entity.Property(e => e.TotalRevIef12m)
                .HasColumnType("decimal(12, 2)")
                .HasColumnName("Total Rev IEF 12M");
            entity.Property(e => e.TotalRevIp12m)
                .HasColumnType("decimal(12, 2)")
                .HasColumnName("Total Rev IP 12M");
            entity.Property(e => e.TotalRevIpf12m)
                .HasColumnType("decimal(12, 2)")
                .HasColumnName("Total Rev IPF 12M");
            entity.Property(e => e.TotalVol12m)
                .HasColumnType("decimal(12, 2)")
                .HasColumnName("Total Vol 12M");
            entity.Property(e => e.TotalVol1m)
                .HasColumnType("decimal(12, 2)")
                .HasColumnName("Total Vol 1M");
            entity.Property(e => e.TotalVol24m)
                .HasColumnType("decimal(12, 2)")
                .HasColumnName("Total Vol 24M");
            entity.Property(e => e.TotalVol24mApac)
                .HasColumnType("decimal(12, 2)")
                .HasColumnName("Total Vol 24M APAC");
            entity.Property(e => e.TotalVol24mEma)
                .HasColumnType("decimal(12, 2)")
                .HasColumnName("Total Vol 24M EMA");
            entity.Property(e => e.TotalVol24mLac)
                .HasColumnType("decimal(12, 2)")
                .HasColumnName("Total Vol 24M LAC");
            entity.Property(e => e.TotalVol24mUscan)
                .HasColumnType("decimal(12, 2)")
                .HasColumnName("Total Vol 24M USCAN");
            entity.Property(e => e.TotalVol3m)
                .HasColumnType("decimal(12, 2)")
                .HasColumnName("Total Vol 3M");
            entity.Property(e => e.TotalVol6m)
                .HasColumnType("decimal(12, 2)")
                .HasColumnName("Total Vol 6M");
            entity.Property(e => e.TotalVolIe12m)
                .HasColumnType("decimal(12, 2)")
                .HasColumnName("Total Vol IE 12M");
            entity.Property(e => e.TotalVolIef12m)
                .HasColumnType("decimal(12, 2)")
                .HasColumnName("Total Vol IEF 12M");
            entity.Property(e => e.TotalVolIp12m)
                .HasColumnType("decimal(12, 2)")
                .HasColumnName("Total Vol IP 12M");
            entity.Property(e => e.TotalVolIpf12m)
                .HasColumnType("decimal(12, 2)")
                .HasColumnName("Total Vol IPF 12M");
            entity.Property(e => e.Vat)
                .HasMaxLength(10)
                .HasColumnName("VAT");
        });

        modelBuilder.Entity<LmsCustomerAndProspectsClient>(entity =>
        {
            entity.ToTable("LMS_CustomerAndProspects_Clients");

            entity.Property(e => e.AccountName1)
                .HasMaxLength(120)
                .HasColumnName("Account name 1");
            entity.Property(e => e.Address1)
                .HasMaxLength(120)
                .HasColumnName("Address 1");
            entity.Property(e => e.City).HasMaxLength(100);
            entity.Property(e => e.ClientId).HasColumnName("ClientID");
            entity.Property(e => e.CompanyEmail)
                .HasMaxLength(50)
                .HasColumnName("Company email");
            entity.Property(e => e.CompanyFax)
                .HasMaxLength(15)
                .HasColumnName("Company fax");
            entity.Property(e => e.CompanyPhone)
                .HasMaxLength(15)
                .HasColumnName("Company phone");
            entity.Property(e => e.ContactFirstName)
                .HasMaxLength(50)
                .HasColumnName("Contact first name");
            entity.Property(e => e.ContactLastName)
                .HasMaxLength(100)
                .HasColumnName("Contact last name");
            entity.Property(e => e.ContactRoleName)
                .HasMaxLength(30)
                .HasColumnName("Contact role name");
            entity.Property(e => e.ContactSalutation)
                .HasMaxLength(10)
                .HasColumnName("Contact salutation");
            entity.Property(e => e.Country).HasMaxLength(100);
            entity.Property(e => e.CurrentOppOwnerName)
                .HasMaxLength(100)
                .HasColumnName("Current opp owner name");
            entity.Property(e => e.CurrentOppOwnerPin)
                .HasMaxLength(4)
                .HasColumnName("Current opp owner PIN");
            entity.Property(e => e.CurrentOppOwnerSalesRole)
                .HasMaxLength(50)
                .HasColumnName("Current opp owner sales role");
            entity.Property(e => e.CurrentOppOwnerSalesTerritory)
                .HasMaxLength(50)
                .HasColumnName("Current opp owner sales territory");
            entity.Property(e => e.CustomerLifeCycleStatus)
                .HasMaxLength(35)
                .HasColumnName("Customer life cycle status");
            entity.Property(e => e.DtProcessamento)
                .HasColumnType("datetime")
                .HasColumnName("dtProcessamento");
            entity.Property(e => e.DtUltAct)
                .HasColumnType("datetime")
                .HasColumnName("dtUltAct");
            entity.Property(e => e.GcomRecordCreationTimestamp)
                .HasColumnType("datetime")
                .HasColumnName("Gcom record creation timestamp");
            entity.Property(e => e.GcomRecordUpdateTimestamp)
                .HasColumnType("datetime")
                .HasColumnName("Gcom record update timestamp");
            entity.Property(e => e.PostalCode)
                .HasMaxLength(15)
                .HasColumnName("Postal code");
            entity.Property(e => e.PrimaryActivityCode).HasColumnName("Primary activity code");
            entity.Property(e => e.PrimaryActivityDesc)
                .HasMaxLength(50)
                .HasColumnName("Primary activity desc");
            entity.Property(e => e.Province).HasMaxLength(100);
            entity.Property(e => e.TotalRev12m)
                .HasColumnType("decimal(12, 2)")
                .HasColumnName("Total Rev 12M");
            entity.Property(e => e.TotalRev1m)
                .HasColumnType("decimal(12, 2)")
                .HasColumnName("Total Rev 1M");
            entity.Property(e => e.TotalRev24m)
                .HasColumnType("decimal(12, 2)")
                .HasColumnName("Total Rev 24M");
            entity.Property(e => e.TotalRev24mApac)
                .HasColumnType("decimal(12, 2)")
                .HasColumnName("Total Rev 24M APAC");
            entity.Property(e => e.TotalRev24mEma)
                .HasColumnType("decimal(12, 2)")
                .HasColumnName("Total Rev 24M EMA");
            entity.Property(e => e.TotalRev24mLac)
                .HasColumnType("decimal(12, 2)")
                .HasColumnName("Total Rev 24M LAC");
            entity.Property(e => e.TotalRev24mUscan)
                .HasColumnType("decimal(12, 2)")
                .HasColumnName("Total Rev 24M USCAN");
            entity.Property(e => e.TotalRev3m)
                .HasColumnType("decimal(12, 2)")
                .HasColumnName("Total Rev 3M");
            entity.Property(e => e.TotalRev6m)
                .HasColumnType("decimal(12, 2)")
                .HasColumnName("Total Rev 6M");
            entity.Property(e => e.TotalRevIe12m)
                .HasColumnType("decimal(12, 2)")
                .HasColumnName("Total Rev IE 12M");
            entity.Property(e => e.TotalRevIef12m)
                .HasColumnType("decimal(12, 2)")
                .HasColumnName("Total Rev IEF 12M");
            entity.Property(e => e.TotalRevIp12m)
                .HasColumnType("decimal(12, 2)")
                .HasColumnName("Total Rev IP 12M");
            entity.Property(e => e.TotalRevIpf12m)
                .HasColumnType("decimal(12, 2)")
                .HasColumnName("Total Rev IPF 12M");
            entity.Property(e => e.TotalVol12m)
                .HasColumnType("decimal(12, 2)")
                .HasColumnName("Total Vol 12M");
            entity.Property(e => e.TotalVol1m)
                .HasColumnType("decimal(12, 2)")
                .HasColumnName("Total Vol 1M");
            entity.Property(e => e.TotalVol24m)
                .HasColumnType("decimal(12, 2)")
                .HasColumnName("Total Vol 24M");
            entity.Property(e => e.TotalVol24mApac)
                .HasColumnType("decimal(12, 2)")
                .HasColumnName("Total Vol 24M APAC");
            entity.Property(e => e.TotalVol24mEma)
                .HasColumnType("decimal(12, 2)")
                .HasColumnName("Total Vol 24M EMA");
            entity.Property(e => e.TotalVol24mLac)
                .HasColumnType("decimal(12, 2)")
                .HasColumnName("Total Vol 24M LAC");
            entity.Property(e => e.TotalVol24mUscan)
                .HasColumnType("decimal(12, 2)")
                .HasColumnName("Total Vol 24M USCAN");
            entity.Property(e => e.TotalVol3m)
                .HasColumnType("decimal(12, 2)")
                .HasColumnName("Total Vol 3M");
            entity.Property(e => e.TotalVol6m)
                .HasColumnType("decimal(12, 2)")
                .HasColumnName("Total Vol 6M");
            entity.Property(e => e.TotalVolIe12m)
                .HasColumnType("decimal(12, 2)")
                .HasColumnName("Total Vol IE 12M");
            entity.Property(e => e.TotalVolIef12m)
                .HasColumnType("decimal(12, 2)")
                .HasColumnName("Total Vol IEF 12M");
            entity.Property(e => e.TotalVolIp12m)
                .HasColumnType("decimal(12, 2)")
                .HasColumnName("Total Vol IP 12M");
            entity.Property(e => e.TotalVolIpf12m)
                .HasColumnType("decimal(12, 2)")
                .HasColumnName("Total Vol IPF 12M");
            entity.Property(e => e.Vat)
                .HasMaxLength(10)
                .HasColumnName("VAT");
        });

        modelBuilder.Entity<LmsCustomerVolume>(entity =>
        {
            entity.HasKey(e => e.Id).HasName("PK_LMS_GComCustomerVolume");

            entity.ToTable("LMS_CustomerVolume");

            entity.Property(e => e.AccountName)
                .HasMaxLength(100)
                .HasColumnName("Account name");
            entity.Property(e => e.DestinationCountryCode)
                .HasMaxLength(2)
                .HasColumnName("Destination country code");
            entity.Property(e => e.DtProcessamento)
                .HasColumnType("datetime")
                .HasColumnName("dtProcessamento");
            entity.Property(e => e.DtUltAct)
                .HasColumnType("datetime")
                .HasColumnName("dtUltAct");
            entity.Property(e => e.GcomClientId).HasColumnName("Gcom client ID");
            entity.Property(e => e.GcomId).HasColumnName("Gcom ID");
            entity.Property(e => e.IdSalesLead).HasColumnName("idSalesLead");
            entity.Property(e => e.PostalCode)
                .HasMaxLength(15)
                .HasColumnName("Postal Code");
            entity.Property(e => e.ProductCode)
                .HasMaxLength(3)
                .HasColumnName("Product code");
            entity.Property(e => e.Year)
                .HasMaxLength(2)
                .IsUnicode(false);
        });

        modelBuilder.Entity<LmsCustomerVolumeClient>(entity =>
        {
            entity.ToTable("LMS_CustomerVolume_Clients");

            entity.Property(e => e.AccountName)
                .HasMaxLength(100)
                .HasColumnName("Account name");
            entity.Property(e => e.ClientId).HasColumnName("ClientID");
            entity.Property(e => e.DestinationCountryCode)
                .HasMaxLength(2)
                .HasColumnName("Destination country code");
            entity.Property(e => e.DtProcessamento)
                .HasColumnType("datetime")
                .HasColumnName("dtProcessamento");
            entity.Property(e => e.DtUltAct)
                .HasColumnType("datetime")
                .HasColumnName("dtUltAct");
            entity.Property(e => e.PostalCode)
                .HasMaxLength(15)
                .HasColumnName("Postal Code");
            entity.Property(e => e.ProductCode)
                .HasMaxLength(3)
                .HasColumnName("Product code");
            entity.Property(e => e.Year)
                .HasMaxLength(2)
                .IsUnicode(false);
        });

        modelBuilder.Entity<LocaisLevantamento>(entity =>
        {
            entity.ToTable("LocaisLevantamento");

            entity.Property(e => e.Id).HasColumnName("id");
            entity.Property(e => e.CodPostal)
                .HasMaxLength(10)
                .IsUnicode(false)
                .HasColumnName("codPostal");
            entity.Property(e => e.Morada)
                .HasMaxLength(100)
                .IsUnicode(false)
                .HasColumnName("morada");
        });

        modelBuilder.Entity<Localization>(entity =>
        {
            entity.HasKey(e => e.Pk);

            entity.Property(e => e.Pk).HasColumnName("pk");
            entity.Property(e => e.Comment).HasMaxLength(512);
            entity.Property(e => e.Filename)
                .HasMaxLength(128)
                .HasDefaultValueSql("('')");
            entity.Property(e => e.LocaleId)
                .HasMaxLength(10)
                .HasDefaultValueSql("('')");
            entity.Property(e => e.ResourceId).HasMaxLength(1024);
            entity.Property(e => e.ResourceSet)
                .HasMaxLength(512)
                .HasDefaultValueSql("('')");
            entity.Property(e => e.Type)
                .HasMaxLength(512)
                .HasDefaultValueSql("('')");
            entity.Property(e => e.Updated)
                .HasDefaultValueSql("(getutcdate())")
                .HasColumnType("datetime");
            entity.Property(e => e.Value).HasDefaultValueSql("('')");
        });

        modelBuilder.Entity<LocalizationsBackup>(entity =>
        {
            entity
                .HasNoKey()
                .ToTable("Localizations_Backup");

            entity.Property(e => e.Comment).HasMaxLength(512);
            entity.Property(e => e.Filename).HasMaxLength(128);
            entity.Property(e => e.LocaleId).HasMaxLength(10);
            entity.Property(e => e.Pk)
                .ValueGeneratedOnAdd()
                .HasColumnName("pk");
            entity.Property(e => e.ResourceId).HasMaxLength(1024);
            entity.Property(e => e.ResourceSet).HasMaxLength(512);
            entity.Property(e => e.Type).HasMaxLength(512);
            entity.Property(e => e.Updated).HasColumnType("datetime");
        });

        modelBuilder.Entity<Manifesto>(entity =>
        {
            entity.HasKey(e => e.Id).HasName("PK_Manifesto_Copy_HD_1");

            entity.ToTable("Manifesto", tb => tb.HasTrigger("Manifesto_Copy_HD_Log"));

            entity.HasIndex(e => new { e.Anulado, e.IdEntidade, e.DtEnvio, e.DtEntregaDesejada }, "idx_anulado_idEntidade_dtEnvio");

            entity.HasIndex(e => e.Awb, "idx_awb").HasFillFactor(80);

            entity.HasIndex(e => new { e.IdEntidade, e.Anulado, e.DtEntregaDesejada }, "idx_idEntidade_anulado_dtEntregaDesejada")
                .HasFilter("([DTeNTREGAdESEJADA] IS NOT NULL)")
                .HasFillFactor(80);

            entity.HasIndex(e => new { e.IdMaster, e.IsMaster }, "idx_idMaster_isMaster").HasFillFactor(80);

            entity.HasIndex(e => new { e.IdPickup, e.Anulado, e.IdEntidade }, "idx_idPickup_anulado_idEntidade");

            entity.HasIndex(e => new { e.IdRegime, e.IdEntidade, e.Anulado, e.IdDistribuidor }, "idx_idRegime_idEntidade_anulado_idDistribuidor");

            entity.HasIndex(e => new { e.RefExpedidor, e.Anulado, e.IdEntidade }, "idx_refExpedidor_anulado_idEntidade").HasFillFactor(80);

            entity.Property(e => e.Id).HasColumnName("id");
            entity.Property(e => e.Anulado)
                .HasDefaultValueSql("((0))")
                .HasColumnName("anulado");
            entity.Property(e => e.Awb)
                .HasMaxLength(50)
                .HasColumnName("awb");
            entity.Property(e => e.DtEntregaDesejada)
                .HasColumnType("datetime")
                .HasColumnName("dtEntregaDesejada");
            entity.Property(e => e.DtEnvio)
                .HasColumnType("date")
                .HasColumnName("dtEnvio");
            entity.Property(e => e.DtExpedicao)
                .HasColumnType("date")
                .HasColumnName("dtExpedicao");
            entity.Property(e => e.DtIntrod)
                .HasColumnType("datetime")
                .HasColumnName("dtIntrod");
            entity.Property(e => e.DtUltAct)
                .HasColumnType("datetime")
                .HasColumnName("dtUltAct");
            entity.Property(e => e.FormId)
                .HasMaxLength(4)
                .HasColumnName("form_id");
            entity.Property(e => e.IdDistribuidor)
                .HasDefaultValueSql("((1))")
                .HasColumnName("idDistribuidor");
            entity.Property(e => e.IdEntidade).HasColumnName("idEntidade");
            entity.Property(e => e.IdMaster).HasColumnName("idMaster");
            entity.Property(e => e.IdOrigemManifesto).HasColumnName("idOrigemManifesto");
            entity.Property(e => e.IdPickup).HasColumnName("idPickup");
            entity.Property(e => e.IdRegime).HasColumnName("idRegime");
            entity.Property(e => e.IdSegmento).HasColumnName("idSegmento");
            entity.Property(e => e.IdTipoManifesto).HasColumnName("idTipoManifesto");
            entity.Property(e => e.IdUtilAnulacao).HasColumnName("idUtilAnulacao");
            entity.Property(e => e.IdUtilIntrod).HasColumnName("idUtilIntrod");
            entity.Property(e => e.IdUtilUltAct).HasColumnName("idUtilUltAct");
            entity.Property(e => e.IsMaster).HasColumnName("isMaster");
            entity.Property(e => e.Master)
                .HasMaxLength(50)
                .HasColumnName("master");
            entity.Property(e => e.RecordType)
                .HasMaxLength(2)
                .HasColumnName("recordType");
            entity.Property(e => e.RefExpedidor)
                .HasMaxLength(40)
                .HasColumnName("refExpedidor");
            entity.Property(e => e.RefOrig)
                .HasMaxLength(50)
                .HasColumnName("refOrig");
            entity.Property(e => e.TratarVolume).HasColumnName("tratarVolume");
        });

        modelBuilder.Entity<ManifestoAssinatura>(entity =>
        {
            entity.HasKey(e => e.Id).HasName("PK_ImportacaoAssinatura");

            entity.ToTable("ManifestoAssinatura");

            entity.HasIndex(e => new { e.EnvInterface, e.DtEnvInterface }, "idx_envInterface_dt").HasFillFactor(80);

            entity.Property(e => e.Id).HasColumnName("id");
            entity.Property(e => e.Data)
                .HasColumnType("datetime")
                .HasColumnName("data");
            entity.Property(e => e.DtEnvInterface)
                .HasColumnType("datetime")
                .HasColumnName("dtEnvInterface");
            entity.Property(e => e.EnvInterface).HasColumnName("envInterface");
            entity.Property(e => e.IdCliMorada).HasColumnName("idCliMorada");
            entity.Property(e => e.IdCliente).HasColumnName("idCliente");
            entity.Property(e => e.IdImportacaoManifesto).HasColumnName("idImportacaoManifesto");
            entity.Property(e => e.IdUtil).HasColumnName("idUtil");
            entity.Property(e => e.Nome)
                .HasMaxLength(50)
                .HasColumnName("nome");
        });

        modelBuilder.Entity<ManifestoAssinaturaDetalhe>(entity =>
        {
            entity.HasKey(e => e.Id).HasName("PK_ImportacaoAssinaturaDetalhe");

            entity.ToTable("ManifestoAssinaturaDetalhe");

            entity.HasIndex(e => e.IdAssinatura, "idx_idAssinatura").HasFillFactor(80);

            entity.Property(e => e.Id).HasColumnName("id");
            entity.Property(e => e.IdAssinatura).HasColumnName("idAssinatura");
            entity.Property(e => e.Linha).HasColumnName("linha");
            entity.Property(e => e.PontoX).HasColumnName("pontoX");
            entity.Property(e => e.PontoY).HasColumnName("pontoY");
        });

        modelBuilder.Entity<ManifestoCommodity>(entity =>
        {
            entity.HasKey(e => e.Id).HasName("PK__Manifest__3213E83F09BF4260");

            entity.Property(e => e.Id).HasColumnName("id");
            entity.Property(e => e.Amount).HasColumnType("money");
            entity.Property(e => e.CountryOfManufacture).HasMaxLength(100);
            entity.Property(e => e.DtIntrod)
                .HasDefaultValueSql("(getdate())")
                .HasColumnType("datetime")
                .HasColumnName("dtIntrod");
            entity.Property(e => e.DtUltAct)
                .HasColumnType("datetime")
                .HasColumnName("dtUltAct");
            entity.Property(e => e.IdMaster).HasColumnName("idMaster");
            entity.Property(e => e.IdUltAct).HasColumnName("idUltAct");
            entity.Property(e => e.IdUtilIntrod).HasColumnName("idUtilIntrod");
            entity.Property(e => e.UnitAmount).HasMaxLength(50);
            entity.Property(e => e.UnitPrice).HasColumnType("money");
            entity.Property(e => e.Weight).HasColumnType("money");
        });

        modelBuilder.Entity<ManifestoConsolidado>(entity =>
        {
            entity.HasIndex(e => e.Awb, "idx_awb");

            entity.Property(e => e.Id).HasColumnName("id");
            entity.Property(e => e.Awb)
                .HasMaxLength(50)
                .HasColumnName("awb");
            entity.Property(e => e.DtFim)
                .HasColumnType("datetime")
                .HasColumnName("dtFim");
            entity.Property(e => e.DtInicio)
                .HasColumnType("datetime")
                .HasColumnName("dtInicio");
            entity.Property(e => e.DtIntrod)
                .HasColumnType("datetime")
                .HasColumnName("dtIntrod");
            entity.Property(e => e.IdEntidade).HasColumnName("idEntidade");
            entity.Property(e => e.IdManifesto).HasColumnName("idManifesto");
            entity.Property(e => e.IdPltDestino).HasColumnName("idPltDestino");
            entity.Property(e => e.IdPltOrigem).HasColumnName("idPltOrigem");
            entity.Property(e => e.IdTipoCons).HasColumnName("idTipoCons");
            entity.Property(e => e.IdTipoEmbalagem).HasColumnName("idTipoEmbalagem");
            entity.Property(e => e.IdUtilFim).HasColumnName("idUtilFim");
            entity.Property(e => e.IdUtilInicio).HasColumnName("idUtilInicio");
            entity.Property(e => e.IdUtilIntrod).HasColumnName("idUtilIntrod");
            entity.Property(e => e.Obs)
                .HasMaxLength(250)
                .HasColumnName("obs");
        });

        modelBuilder.Entity<ManifestoConsolidadoTnt>(entity =>
        {
            entity.HasKey(e => e.IdManifesto);

            entity.ToTable("ManifestoConsolidadoTNT");

            entity.Property(e => e.IdManifesto)
                .ValueGeneratedNever()
                .HasColumnName("idManifesto");
            entity.Property(e => e.DtIntrod)
                .HasDefaultValueSql("(getdate())")
                .HasColumnType("datetime")
                .HasColumnName("dtIntrod");
        });

        modelBuilder.Entity<ManifestoConsolidadosEmbalagemTiposT>(entity =>
        {
            entity.HasKey(e => e.Id).HasName("PK_ConsEmbalagemTipos_T");

            entity.ToTable("ManifestoConsolidadosEmbalagemTipos_T");

            entity.Property(e => e.Id).HasColumnName("id");
            entity.Property(e => e.Activo)
                .IsRequired()
                .HasDefaultValueSql("((1))")
                .HasColumnName("activo");
            entity.Property(e => e.CodGrasp)
                .HasMaxLength(1)
                .HasColumnName("codGRASP");
            entity.Property(e => e.Codigo)
                .HasMaxLength(15)
                .HasColumnName("codigo");
            entity.Property(e => e.Descricao)
                .HasMaxLength(50)
                .HasColumnName("descricao");
            entity.Property(e => e.IdEntidade).HasColumnName("idEntidade");
        });

        modelBuilder.Entity<ManifestoConsolidadosInterface>(entity =>
        {
            entity.HasKey(e => new { e.IdManifestoConsolidado, e.IdManifestoConsolidadoInterfaceTipo });

            entity.ToTable("ManifestoConsolidadosInterface");

            entity.Property(e => e.IdManifestoConsolidado).HasColumnName("idManifestoConsolidado");
            entity.Property(e => e.IdManifestoConsolidadoInterfaceTipo).HasColumnName("idManifestoConsolidadoInterfaceTipo");
            entity.Property(e => e.DtEnv)
                .HasColumnType("datetime")
                .HasColumnName("dtEnv");
        });

        modelBuilder.Entity<ManifestoConsolidadosInterfaceTipoT>(entity =>
        {
            entity.ToTable("ManifestoConsolidadosInterfaceTipo_T");

            entity.Property(e => e.Id).HasColumnName("id");
            entity.Property(e => e.Activo)
                .IsRequired()
                .HasDefaultValueSql("((1))")
                .HasColumnName("activo");
            entity.Property(e => e.Codigo)
                .HasMaxLength(15)
                .HasColumnName("codigo");
            entity.Property(e => e.Descricao)
                .HasMaxLength(50)
                .HasColumnName("descricao");
        });

        modelBuilder.Entity<ManifestoConsolidadosItem>(entity =>
        {
            entity.HasKey(e => e.Id).HasName("PK_ManifestoConsolidadosItems_1");

            entity.HasIndex(e => new { e.IdManifestoConsolidado, e.DtInicio }, "Idx_idManifestoConsolidado_dtInicio");

            entity.Property(e => e.Id).HasColumnName("id");
            entity.Property(e => e.Awb)
                .HasMaxLength(50)
                .HasColumnName("awb");
            entity.Property(e => e.DtFim)
                .HasColumnType("datetime")
                .HasColumnName("dtFim");
            entity.Property(e => e.DtInicio)
                .HasColumnType("datetime")
                .HasColumnName("dtInicio");
            entity.Property(e => e.DtIntrod)
                .HasColumnType("datetime")
                .HasColumnName("dtIntrod");
            entity.Property(e => e.IdEntidade).HasColumnName("idEntidade");
            entity.Property(e => e.IdManifesto).HasColumnName("idManifesto");
            entity.Property(e => e.IdManifestoConsolidado).HasColumnName("idManifestoConsolidado");
            entity.Property(e => e.IdUtilFim).HasColumnName("idUtilFim");
            entity.Property(e => e.IdUtilInicio).HasColumnName("idUtilInicio");
            entity.Property(e => e.IdUtilIntrod).HasColumnName("idUtilIntrod");
        });

        modelBuilder.Entity<ManifestoConsolidadosItemsInterface>(entity =>
        {
            entity.HasKey(e => new { e.IdManifestoConsolidadoItem, e.IdManifestoConsolidadoItemInterfaceTipo });

            entity.ToTable("ManifestoConsolidadosItemsInterface");

            entity.HasIndex(e => new { e.IdManifestoConsolidadoItemInterfaceTipo, e.DtEnv }, "Idx_idConsolidadoTipo_dtenv");

            entity.Property(e => e.IdManifestoConsolidadoItem).HasColumnName("idManifestoConsolidadoItem");
            entity.Property(e => e.IdManifestoConsolidadoItemInterfaceTipo).HasColumnName("idManifestoConsolidadoItemInterfaceTipo");
            entity.Property(e => e.DtEnv)
                .HasColumnType("datetime")
                .HasColumnName("dtEnv");
        });

        modelBuilder.Entity<ManifestoConsolidadosItemsInterfaceTipoT>(entity =>
        {
            entity.ToTable("ManifestoConsolidadosItemsInterfaceTipo_T");

            entity.Property(e => e.Id).HasColumnName("id");
            entity.Property(e => e.Activo)
                .IsRequired()
                .HasDefaultValueSql("((1))")
                .HasColumnName("activo");
            entity.Property(e => e.Codigo)
                .HasMaxLength(15)
                .HasColumnName("codigo");
            entity.Property(e => e.Descricao)
                .HasMaxLength(50)
                .HasColumnName("descricao");
        });

        modelBuilder.Entity<ManifestoConsolidadosPlataformaT>(entity =>
        {
            entity.HasKey(e => e.Id).HasName("PK_ConsPlataforma_T");

            entity.ToTable("ManifestoConsolidadosPlataforma_T");

            entity.Property(e => e.Id)
                .ValueGeneratedNever()
                .HasColumnName("id");
            entity.Property(e => e.Activo).HasColumnName("activo");
            entity.Property(e => e.Codigo)
                .HasMaxLength(5)
                .HasColumnName("codigo");
            entity.Property(e => e.Descricao)
                .HasMaxLength(50)
                .HasColumnName("descricao");
        });

        modelBuilder.Entity<ManifestoConsolidadosPlataformasEntidade>(entity =>
        {
            entity.HasKey(e => new { e.IdManifestoConsolidadosPlataforma, e.IdEntidade }).HasName("PK_ConsPlataformasEntidades");

            entity.Property(e => e.IdManifestoConsolidadosPlataforma).HasColumnName("idManifestoConsolidadosPlataforma");
            entity.Property(e => e.IdEntidade).HasColumnName("idEntidade");
            entity.Property(e => e.Activo)
                .IsRequired()
                .HasDefaultValueSql("((1))")
                .HasColumnName("activo");
            entity.Property(e => e.Dest).HasColumnName("dest");
            entity.Property(e => e.IdPlataforma).HasColumnName("idPlataforma");
            entity.Property(e => e.Orig).HasColumnName("orig");
        });

        modelBuilder.Entity<ManifestoConsolidadosTiposEntidade>(entity =>
        {
            entity.HasKey(e => new { e.IdManifestoConsolidadosTipo, e.IdEntidade }).HasName("PK_ConsTiposEntidades");

            entity.Property(e => e.IdManifestoConsolidadosTipo).HasColumnName("idManifestoConsolidadosTipo");
            entity.Property(e => e.IdEntidade).HasColumnName("idEntidade");
        });

        modelBuilder.Entity<ManifestoConsolidadosTiposT>(entity =>
        {
            entity.HasKey(e => e.Id).HasName("PK_ConsTipos_T");

            entity.ToTable("ManifestoConsolidadosTipos_T");

            entity.Property(e => e.Id).HasColumnName("id");
            entity.Property(e => e.Activo)
                .IsRequired()
                .HasDefaultValueSql("((1))")
                .HasColumnName("activo");
            entity.Property(e => e.Codigo)
                .HasMaxLength(15)
                .HasColumnName("codigo");
            entity.Property(e => e.Descricao)
                .HasMaxLength(50)
                .HasColumnName("descricao");
            entity.Property(e => e.IdEntidade).HasColumnName("idEntidade");
            entity.Property(e => e.IdRegime).HasColumnName("idRegime");
        });

        modelBuilder.Entity<ManifestoCustosManuai>(entity =>
        {
            entity.HasIndex(e => new { e.IdManifestoCustoReal, e.Activo }, "idx_idManifestoCustoReal_activo");

            entity.Property(e => e.Id).HasColumnName("id");
            entity.Property(e => e.Activo).HasColumnName("activo");
            entity.Property(e => e.DtIntrod)
                .HasColumnType("datetime")
                .HasColumnName("dtIntrod");
            entity.Property(e => e.DtUltAct)
                .HasColumnType("datetime")
                .HasColumnName("dtUltAct");
            entity.Property(e => e.IdManifestoCustoReal).HasColumnName("idManifestoCustoReal");
            entity.Property(e => e.IdServicoDet).HasColumnName("idServicoDet");
            entity.Property(e => e.IdUtilIntrod).HasColumnName("idUtilIntrod");
            entity.Property(e => e.IdUtilUltAct).HasColumnName("idUtilUltAct");
            entity.Property(e => e.Obs)
                .HasMaxLength(250)
                .IsUnicode(false)
                .HasColumnName("obs");
            entity.Property(e => e.Valor)
                .HasColumnType("money")
                .HasColumnName("valor");
        });

        modelBuilder.Entity<ManifestoCustosPenalizaco>(entity =>
        {
            entity.HasIndex(e => e.IdManifesto, "idx_idManifesto");

            entity.HasIndex(e => e.IdScan, "idx_idScan");

            entity.HasIndex(e => new { e.IdUtil, e.ScanDateDt }, "idx_idUtil_scanDateDt");

            entity.HasIndex(e => e.Recalcular, "idx_recalcular");

            entity.Property(e => e.Id).HasColumnName("id");
            entity.Property(e => e.DtIntrod)
                .HasColumnType("datetime")
                .HasColumnName("dtIntrod");
            entity.Property(e => e.DtUltAct)
                .HasColumnType("datetime")
                .HasColumnName("dtUltAct");
            entity.Property(e => e.IdAgente).HasColumnName("idAgente");
            entity.Property(e => e.IdFornecedor).HasColumnName("idFornecedor");
            entity.Property(e => e.IdManifesto).HasColumnName("idManifesto");
            entity.Property(e => e.IdMotivoNf).HasColumnName("idMotivoNF");
            entity.Property(e => e.IdPlataforma).HasColumnName("idPlataforma");
            entity.Property(e => e.IdRota).HasColumnName("idRota");
            entity.Property(e => e.IdScan).HasColumnName("idScan");
            entity.Property(e => e.IdTarifa).HasColumnName("idTarifa");
            entity.Property(e => e.IdTarifaPenalizacao).HasColumnName("idTarifaPenalizacao");
            entity.Property(e => e.IdUtil).HasColumnName("idUtil");
            entity.Property(e => e.IdUtilIntrod)
                .HasDefaultValueSql("((0))")
                .HasColumnName("idUtilIntrod");
            entity.Property(e => e.IdUtilUltAct).HasColumnName("idUtilUltAct");
            entity.Property(e => e.ParaFacturar).HasColumnName("paraFacturar");
            entity.Property(e => e.Recalcular).HasColumnName("recalcular");
            entity.Property(e => e.ScanCode)
                .HasMaxLength(2)
                .IsUnicode(false)
                .HasColumnName("scanCode");
            entity.Property(e => e.ScanDate)
                .HasColumnType("datetime")
                .HasColumnName("scanDate");
            entity.Property(e => e.ScanDateDt)
                .HasColumnType("date")
                .HasColumnName("scanDateDt");
            entity.Property(e => e.ScanDateTm).HasColumnName("scanDateTm");
            entity.Property(e => e.Valor)
                .HasColumnType("money")
                .HasColumnName("valor");
            entity.Property(e => e.ValorManual)
                .HasColumnType("money")
                .HasColumnName("valorManual");
        });

        modelBuilder.Entity<ManifestoCustosPenalizacoesManuai>(entity =>
        {
            entity.HasKey(e => e.Id).HasName("PK__Manifest__3213E83F7A84B6E2");

            entity.HasIndex(e => new { e.IdManifestoCustosPenalizacoes, e.Activo }, "idx_idManifestoCustosPenalizacoes_activo");

            entity.Property(e => e.Id).HasColumnName("id");
            entity.Property(e => e.Activo).HasColumnName("activo");
            entity.Property(e => e.DtIntrod)
                .HasColumnType("datetime")
                .HasColumnName("dtIntrod");
            entity.Property(e => e.DtUltAct)
                .HasColumnType("datetime")
                .HasColumnName("dtUltAct");
            entity.Property(e => e.IdManifestoCustosPenalizacoes).HasColumnName("idManifestoCustosPenalizacoes");
            entity.Property(e => e.IdTipoPenalizacao).HasColumnName("idTipoPenalizacao");
            entity.Property(e => e.IdUtilIntrod).HasColumnName("idUtilIntrod");
            entity.Property(e => e.IdUtilUltAct).HasColumnName("idUtilUltAct");
            entity.Property(e => e.Obs)
                .HasMaxLength(250)
                .IsUnicode(false)
                .HasColumnName("obs");
            entity.Property(e => e.Valor)
                .HasColumnType("money")
                .HasColumnName("valor");
        });

        modelBuilder.Entity<ManifestoCustosPrevisto>(entity =>
        {
            entity.HasKey(e => e.Id).HasName("PK__Manifest__3213E83F7B8ABC58");

            entity.HasIndex(e => e.IdManifesto, "idx_idManifesto").HasFillFactor(80);

            entity.HasIndex(e => new { e.ScanDateDt, e.IdUtil, e.IdRota, e.Valido, e.ValorManual }, "idx_idRota_scandatedt_idutil_valido_valorManual").HasFillFactor(80);

            entity.HasIndex(e => new { e.IdUtil, e.ScanDateDt }, "idx_idUtil_scanDateDt").HasFillFactor(80);

            entity.HasIndex(e => new { e.ScanDateDt, e.IdUtil, e.IdRota }, "idx_idUtil_scandatedt_idRota");

            entity.Property(e => e.Id).HasColumnName("id");
            entity.Property(e => e.DtIntrod)
                .HasColumnType("datetime")
                .HasColumnName("dtIntrod");
            entity.Property(e => e.DtUltAct)
                .HasColumnType("datetime")
                .HasColumnName("dtUltAct");
            entity.Property(e => e.DtvalidManual)
                .HasColumnType("datetime")
                .HasColumnName("dtvalidManual");
            entity.Property(e => e.IdAgente).HasColumnName("idAgente");
            entity.Property(e => e.IdFornecedor).HasColumnName("idFornecedor");
            entity.Property(e => e.IdManifesto).HasColumnName("idManifesto");
            entity.Property(e => e.IdMotivoNf).HasColumnName("idMotivoNF");
            entity.Property(e => e.IdPlataforma).HasColumnName("idPlataforma");
            entity.Property(e => e.IdRota).HasColumnName("idRota");
            entity.Property(e => e.IdScan).HasColumnName("idScan");
            entity.Property(e => e.IdStop).HasColumnName("idStop");
            entity.Property(e => e.IdTarifaEspecial).HasColumnName("idTarifaEspecial");
            entity.Property(e => e.IdTarifaForn).HasColumnName("idTarifaForn");
            entity.Property(e => e.IdTarifaPenalizacao).HasColumnName("idTarifaPenalizacao");
            entity.Property(e => e.IdTipoCusto).HasColumnName("idTipoCusto");
            entity.Property(e => e.IdTipoPenalizacao).HasColumnName("idTipoPenalizacao");
            entity.Property(e => e.IdUtil).HasColumnName("idUtil");
            entity.Property(e => e.IdUtilIntrod).HasColumnName("idUtilIntrod");
            entity.Property(e => e.IdUtilUltAct).HasColumnName("idUtilUltAct");
            entity.Property(e => e.IdUtilValidManual).HasColumnName("idUtilValidManual");
            entity.Property(e => e.Observacoes)
                .HasMaxLength(250)
                .HasColumnName("observacoes");
            entity.Property(e => e.ParaFacturar).HasColumnName("paraFacturar");
            entity.Property(e => e.ScanCode)
                .HasMaxLength(2)
                .IsUnicode(false)
                .HasColumnName("scanCode");
            entity.Property(e => e.ScanDate)
                .HasColumnType("datetime")
                .HasColumnName("scanDate");
            entity.Property(e => e.ScanDateDt)
                .HasColumnType("date")
                .HasColumnName("scanDateDt");
            entity.Property(e => e.ScanDateTm).HasColumnName("scanDateTm");
            entity.Property(e => e.ValidManual)
                .HasDefaultValueSql("((0))")
                .HasColumnName("validManual");
            entity.Property(e => e.Valido)
                .IsRequired()
                .HasDefaultValueSql("((1))")
                .HasColumnName("valido");
            entity.Property(e => e.Valor)
                .HasColumnType("money")
                .HasColumnName("valor");
            entity.Property(e => e.ValorManual).HasColumnName("valorManual");
        });

        modelBuilder.Entity<ManifestoCustosReai>(entity =>
        {
            entity.HasKey(e => e.Id).HasName("PK__Manifest__3213E83F701AA05A");

            entity.HasIndex(e => new { e.IdManifesto, e.IdScan }, "idx_idManifesto_idScan").HasFillFactor(80);

            entity.HasIndex(e => new { e.ScanDateDt, e.IdUtil }, "idx_idUtil_scanDateDt").HasFillFactor(80);

            entity.Property(e => e.Id).HasColumnName("id");
            entity.Property(e => e.DtIntrod)
                .HasColumnType("datetime")
                .HasColumnName("dtIntrod");
            entity.Property(e => e.DtUltAct)
                .HasColumnType("datetime")
                .HasColumnName("dtUltAct");
            entity.Property(e => e.DtvalidManual)
                .HasColumnType("datetime")
                .HasColumnName("dtvalidManual");
            entity.Property(e => e.IdAgente).HasColumnName("idAgente");
            entity.Property(e => e.IdFornecedor).HasColumnName("idFornecedor");
            entity.Property(e => e.IdManifesto).HasColumnName("idManifesto");
            entity.Property(e => e.IdMotivoNf).HasColumnName("idMotivoNF");
            entity.Property(e => e.IdPlataforma).HasColumnName("idPlataforma");
            entity.Property(e => e.IdRota).HasColumnName("idRota");
            entity.Property(e => e.IdScan).HasColumnName("idScan");
            entity.Property(e => e.IdStop).HasColumnName("idStop");
            entity.Property(e => e.IdTarifaEspecial).HasColumnName("idTarifaEspecial");
            entity.Property(e => e.IdTarifaForn).HasColumnName("idTarifaForn");
            entity.Property(e => e.IdTarifaPenalizacao).HasColumnName("idTarifaPenalizacao");
            entity.Property(e => e.IdTipoCusto).HasColumnName("idTipoCusto");
            entity.Property(e => e.IdTipoPenalizacao).HasColumnName("idTipoPenalizacao");
            entity.Property(e => e.IdUtil).HasColumnName("idUtil");
            entity.Property(e => e.IdUtilIntrod).HasColumnName("idUtilIntrod");
            entity.Property(e => e.IdUtilUltAct).HasColumnName("idUtilUltAct");
            entity.Property(e => e.IdUtilvalidManual).HasColumnName("idUtilvalidManual");
            entity.Property(e => e.Observacoes)
                .HasMaxLength(250)
                .HasColumnName("observacoes");
            entity.Property(e => e.ParaFacturar).HasColumnName("paraFacturar");
            entity.Property(e => e.Recalcular).HasColumnName("recalcular");
            entity.Property(e => e.ScanCode)
                .HasMaxLength(2)
                .IsUnicode(false)
                .HasColumnName("scanCode");
            entity.Property(e => e.ScanDate)
                .HasColumnType("datetime")
                .HasColumnName("scanDate");
            entity.Property(e => e.ScanDateDt)
                .HasColumnType("date")
                .HasColumnName("scanDateDt");
            entity.Property(e => e.ScanDateTm).HasColumnName("scanDateTm");
            entity.Property(e => e.ValidManual).HasColumnName("validManual");
            entity.Property(e => e.Valido).HasColumnName("valido");
            entity.Property(e => e.Valor)
                .HasColumnType("money")
                .HasColumnName("valor");
            entity.Property(e => e.ValorManual).HasColumnName("valorManual");
        });

        modelBuilder.Entity<ManifestoCustosTiposT>(entity =>
        {
            entity.ToTable("ManifestoCustosTipos_T");

            entity.Property(e => e.Id).HasColumnName("id");
            entity.Property(e => e.Codigo)
                .HasMaxLength(10)
                .HasColumnName("codigo");
            entity.Property(e => e.Descricao)
                .HasMaxLength(50)
                .HasColumnName("descricao");
            entity.Property(e => e.Sinal).HasColumnName("sinal");
        });

        modelBuilder.Entity<ManifestoDadosFiscai>(entity =>
        {
            entity.HasKey(e => e.IdMaster).HasName("PK__Manifest__3F8B34A2536217AF");

            entity.Property(e => e.IdMaster)
                .ValueGeneratedNever()
                .HasColumnName("idMaster");
            entity.Property(e => e.CodPostal).HasMaxLength(10);
            entity.Property(e => e.DtUltAct)
                .HasColumnType("datetime")
                .HasColumnName("dtUltAct");
            entity.Property(e => e.Dtintrod)
                .HasDefaultValueSql("(getdate())")
                .HasColumnType("datetime")
                .HasColumnName("dtintrod");
            entity.Property(e => e.Email).HasMaxLength(200);
            entity.Property(e => e.Empresa).HasMaxLength(200);
            entity.Property(e => e.IdUtilIntrod).HasColumnName("idUtilIntrod");
            entity.Property(e => e.IdUtilUltAct).HasColumnName("idUtilUltAct");
            entity.Property(e => e.Localidade).HasMaxLength(200);
            entity.Property(e => e.Morada).HasMaxLength(200);
            entity.Property(e => e.Nif)
                .HasMaxLength(20)
                .HasColumnName("NIF");
            entity.Property(e => e.Nome).HasMaxLength(200);
            entity.Property(e => e.NomeContacto).HasMaxLength(200);
            entity.Property(e => e.NrTelefone).HasMaxLength(200);
            entity.Property(e => e.SiglaPais).HasMaxLength(10);
        });

        modelBuilder.Entity<ManifestoDangGood>(entity =>
        {
            entity.HasNoKey();

            entity.Property(e => e.Awb)
                .HasMaxLength(50)
                .HasColumnName("awb");
            entity.Property(e => e.CasosNovos).HasColumnName("casosNovos");
            entity.Property(e => e.Fact).HasColumnName("fact");
            entity.Property(e => e.IdManifesto).HasColumnName("idManifesto");
            entity.Property(e => e.IdTipoDangGoods).HasColumnName("idTipoDangGoods");
            entity.Property(e => e.NotifFedex).HasColumnName("notifFedex");
        });

        modelBuilder.Entity<ManifestoDestinatario>(entity =>
        {
            entity.HasKey(e => e.IdMaster);

            entity.ToTable("ManifestoDestinatario", tb => tb.HasTrigger("ManifestoDestinatario_Log"));

            entity.HasIndex(e => e.IdClassDest, "Idx_idMaster_idClassDest");

            entity.HasIndex(e => new { e.Awb, e.IdEntidade }, "idx_awb_idEntidade").HasFillFactor(80);

            entity.HasIndex(e => e.IdDestinatario, "idx_idDestinatario").HasFillFactor(80);

            entity.HasIndex(e => new { e.IdPais, e.IdCpostal }, "idx_idPais_idCPostal").HasFillFactor(80);

            entity.Property(e => e.IdMaster)
                .ValueGeneratedNever()
                .HasColumnName("idMaster");
            entity.Property(e => e.Anulado).HasColumnName("anulado");
            entity.Property(e => e.Awb)
                .HasMaxLength(50)
                .HasColumnName("awb");
            entity.Property(e => e.Cidade)
                .HasMaxLength(34)
                .HasColumnName("cidade");
            entity.Property(e => e.CodPais)
                .HasMaxLength(2)
                .HasColumnName("codPais");
            entity.Property(e => e.Cpostal)
                .HasMaxLength(10)
                .HasColumnName("cpostal");
            entity.Property(e => e.Departamento)
                .HasMaxLength(12)
                .HasColumnName("departamento");
            entity.Property(e => e.DtUltAct)
                .HasDefaultValueSql("(getdate())")
                .HasColumnType("datetime")
                .HasColumnName("dtUltAct");
            entity.Property(e => e.Email)
                .HasMaxLength(100)
                .HasColumnName("email");
            entity.Property(e => e.Empresa)
                .HasMaxLength(34)
                .HasColumnName("empresa");
            entity.Property(e => e.Estado)
                .HasMaxLength(2)
                .HasColumnName("estado");
            entity.Property(e => e.IdAgrupamento).HasColumnName("idAgrupamento");
            entity.Property(e => e.IdClassDest).HasColumnName("idClassDest");
            entity.Property(e => e.IdCliMorada).HasColumnName("idCliMorada");
            entity.Property(e => e.IdCliente).HasColumnName("idCliente");
            entity.Property(e => e.IdCpostal).HasColumnName("idCPostal");
            entity.Property(e => e.IdDestinatario).HasColumnName("idDestinatario");
            entity.Property(e => e.IdEntidade).HasColumnName("idEntidade");
            entity.Property(e => e.IdPais).HasColumnName("idPais");
            entity.Property(e => e.IdPlataforma).HasColumnName("idPlataforma");
            entity.Property(e => e.IdUtilUltAct).HasColumnName("idUtilUltAct");
            entity.Property(e => e.Morada)
                .HasMaxLength(68)
                .HasColumnName("morada");
            entity.Property(e => e.Nome)
                .HasMaxLength(34)
                .HasColumnName("nome");
            entity.Property(e => e.NomeContacto).HasMaxLength(100);
            entity.Property(e => e.NrContrib)
                .HasMaxLength(15)
                .HasColumnName("nrContrib");
            entity.Property(e => e.NumConta)
                .HasMaxLength(20)
                .HasColumnName("numConta");
            entity.Property(e => e.Telefone)
                .HasMaxLength(15)
                .HasColumnName("telefone");
        });

        modelBuilder.Entity<ManifestoDestinatarioSwap>(entity =>
        {
            entity.HasKey(e => e.IdMaster).HasName("PK__Manifest__3F8B34A20ACFAC67");

            entity.ToTable("ManifestoDestinatarioSwap");

            entity.Property(e => e.IdMaster)
                .ValueGeneratedNever()
                .HasColumnName("idMaster");
            entity.Property(e => e.Anulado).HasColumnName("anulado");
            entity.Property(e => e.Awb)
                .HasMaxLength(50)
                .HasColumnName("awb");
            entity.Property(e => e.Cidade)
                .HasMaxLength(34)
                .HasColumnName("cidade");
            entity.Property(e => e.CodPais)
                .HasMaxLength(2)
                .HasColumnName("codPais");
            entity.Property(e => e.Cpostal)
                .HasMaxLength(10)
                .HasColumnName("cpostal");
            entity.Property(e => e.Departamento)
                .HasMaxLength(34)
                .HasColumnName("departamento");
            entity.Property(e => e.DtUltAct)
                .HasColumnType("datetime")
                .HasColumnName("dtUltAct");
            entity.Property(e => e.Empresa)
                .HasMaxLength(34)
                .HasColumnName("empresa");
            entity.Property(e => e.Estado)
                .HasMaxLength(2)
                .HasColumnName("estado");
            entity.Property(e => e.IdAgrupamento).HasColumnName("idAgrupamento");
            entity.Property(e => e.IdClassDest).HasColumnName("idClassDest");
            entity.Property(e => e.IdCliMorada).HasColumnName("idCliMorada");
            entity.Property(e => e.IdCliente).HasColumnName("idCliente");
            entity.Property(e => e.IdCpostal).HasColumnName("idCpostal");
            entity.Property(e => e.IdDestinatario).HasColumnName("idDestinatario");
            entity.Property(e => e.IdEntidade).HasColumnName("idEntidade");
            entity.Property(e => e.IdPais).HasColumnName("idPais");
            entity.Property(e => e.IdPlataforma).HasColumnName("idPlataforma");
            entity.Property(e => e.IdUltAct).HasColumnName("idUltAct");
            entity.Property(e => e.Morada)
                .HasMaxLength(68)
                .HasColumnName("morada");
            entity.Property(e => e.Nome)
                .HasMaxLength(34)
                .HasColumnName("nome");
            entity.Property(e => e.NumConta)
                .HasMaxLength(20)
                .HasColumnName("numConta");
            entity.Property(e => e.NumContrib)
                .HasMaxLength(34)
                .HasColumnName("numContrib");
            entity.Property(e => e.Telefone)
                .HasMaxLength(15)
                .HasColumnName("telefone");
            entity.Property(e => e.TipoDev).HasColumnName("tipoDev");
        });

        modelBuilder.Entity<ManifestoDestinatarioTlog>(entity =>
        {
            entity.HasKey(e => e.IdTrigger);

            entity.ToTable("ManifestoDestinatario_TLog");

            entity.Property(e => e.IdTrigger).HasColumnName("idTrigger");
            entity.Property(e => e.Awb)
                .HasMaxLength(50)
                .HasColumnName("awb");
            entity.Property(e => e.Cidade)
                .HasMaxLength(34)
                .HasColumnName("cidade");
            entity.Property(e => e.Cpostal)
                .HasMaxLength(10)
                .HasColumnName("cpostal");
            entity.Property(e => e.Departamento)
                .HasMaxLength(12)
                .HasColumnName("departamento");
            entity.Property(e => e.DtTrigger)
                .HasDefaultValueSql("(getdate())")
                .HasColumnType("datetime")
                .HasColumnName("dtTrigger");
            entity.Property(e => e.DtUltAct)
                .HasColumnType("datetime")
                .HasColumnName("dtUltAct");
            entity.Property(e => e.Email)
                .HasMaxLength(100)
                .HasColumnName("email");
            entity.Property(e => e.Empresa)
                .HasMaxLength(34)
                .HasColumnName("empresa");
            entity.Property(e => e.Estado)
                .HasMaxLength(2)
                .HasColumnName("estado");
            entity.Property(e => e.IdAgrupamento).HasColumnName("idAgrupamento");
            entity.Property(e => e.IdCliMorada).HasColumnName("idCliMorada");
            entity.Property(e => e.IdCliente).HasColumnName("idCliente");
            entity.Property(e => e.IdCpostal).HasColumnName("idCPostal");
            entity.Property(e => e.IdDestinatario).HasColumnName("idDestinatario");
            entity.Property(e => e.IdEntidade).HasColumnName("idEntidade");
            entity.Property(e => e.IdMaster).HasColumnName("idMaster");
            entity.Property(e => e.IdPais).HasColumnName("idPais");
            entity.Property(e => e.IdPlataforma).HasColumnName("idPlataforma");
            entity.Property(e => e.IdUtilUltAct).HasColumnName("idUtilUltAct");
            entity.Property(e => e.Morada)
                .HasMaxLength(68)
                .HasColumnName("morada");
            entity.Property(e => e.Nome)
                .HasMaxLength(34)
                .HasColumnName("nome");
            entity.Property(e => e.NrContrib)
                .HasMaxLength(15)
                .HasColumnName("nrContrib");
            entity.Property(e => e.NumConta)
                .HasMaxLength(20)
                .HasColumnName("numConta");
            entity.Property(e => e.Telefone)
                .HasMaxLength(15)
                .HasColumnName("telefone");
        });

        modelBuilder.Entity<ManifestoDevolucao>(entity =>
        {
            entity.HasKey(e => new { e.IdManifestoOrig, e.IdManifestoDev });

            entity.ToTable("ManifestoDevolucao", tb => tb.HasTrigger("ManifestoDevolucao_Log"));

            entity.HasIndex(e => e.IdManifestoDev, "idx_idManifestoDev");

            entity.HasIndex(e => new { e.IdManifestoDev, e.IdTipoDev }, "idx_idManifestoDev_idTipoDev");

            entity.Property(e => e.IdManifestoOrig).HasColumnName("idManifestoOrig");
            entity.Property(e => e.IdManifestoDev).HasColumnName("idManifestoDev");
            entity.Property(e => e.DtIntrod)
                .HasColumnType("datetime")
                .HasColumnName("dtIntrod");
            entity.Property(e => e.IdTipoDev)
                .HasDefaultValueSql("((1))")
                .HasColumnName("idTipoDev");
            entity.Property(e => e.IdUtilIntrod).HasColumnName("idUtilIntrod");
        });

        modelBuilder.Entity<ManifestoDevolucaoT>(entity =>
        {
            entity.HasKey(e => e.Id).HasName("PK__Manifest__3213E83F45FD870A");

            entity.ToTable("ManifestoDevolucao_T");

            entity.HasIndex(e => e.Codigo, "idx_codigo");

            entity.Property(e => e.Id).HasColumnName("id");
            entity.Property(e => e.Codigo)
                .HasMaxLength(10)
                .HasColumnName("codigo");
            entity.Property(e => e.Descricao)
                .HasMaxLength(100)
                .HasColumnName("descricao");
        });

        modelBuilder.Entity<ManifestoDigitalizacao>(entity =>
        {
            entity.HasKey(e => new { e.NumDocAdos, e.IdManifesto }).HasName("PK_ManifestoDigitalizacao_1");

            entity.ToTable("ManifestoDigitalizacao");

            entity.HasIndex(e => new { e.IdManifesto, e.IdTipoDigit }, "Idx_IdManifesto_idTipoDigit").HasFillFactor(80);

            entity.HasIndex(e => e.Awb, "idx_awb").HasFillFactor(80);

            entity.Property(e => e.NumDocAdos).HasColumnName("numDocADOS");
            entity.Property(e => e.IdManifesto).HasColumnName("idManifesto");
            entity.Property(e => e.Awb)
                .HasMaxLength(50)
                .HasColumnName("awb");
            entity.Property(e => e.DtIntrod)
                .HasDefaultValueSql("(getdate())")
                .HasColumnType("datetime")
                .HasColumnName("dtIntrod");
            entity.Property(e => e.IdTipoDigit).HasColumnName("idTipoDigit");
        });

        modelBuilder.Entity<ManifestoDigitalizacaoTipoT>(entity =>
        {
            entity.ToTable("ManifestoDigitalizacaoTipo_T");

            entity.HasIndex(e => e.Codigo, "idx_codigo");

            entity.Property(e => e.Id).HasColumnName("id");
            entity.Property(e => e.CatAdos)
                .HasMaxLength(10)
                .HasColumnName("catADOS");
            entity.Property(e => e.Codigo)
                .HasMaxLength(10)
                .HasColumnName("codigo");
            entity.Property(e => e.Descricao)
                .HasMaxLength(50)
                .HasColumnName("descricao");
        });

        modelBuilder.Entity<ManifestoDu>(entity =>
        {
            entity.HasKey(e => e.IdManifesto);

            entity.ToTable("ManifestoDU");

            entity.Property(e => e.IdManifesto)
                .ValueGeneratedNever()
                .HasColumnName("idManifesto");
            entity.Property(e => e.Awb)
                .HasMaxLength(50)
                .HasColumnName("awb");
            entity.Property(e => e.Data)
                .HasColumnType("datetime")
                .HasColumnName("data");
            entity.Property(e => e.DtCliente)
                .HasColumnType("datetime")
                .HasColumnName("dtCliente");
            entity.Property(e => e.DtFedex)
                .HasColumnType("datetime")
                .HasColumnName("dtFedex");
            entity.Property(e => e.DtUltAct)
                .HasColumnType("datetime")
                .HasColumnName("dtUltAct");
            entity.Property(e => e.IdClienteDu).HasColumnName("idClienteDU");
            entity.Property(e => e.IdEntidade).HasColumnName("idEntidade");
            entity.Property(e => e.IdUtilIntrod).HasColumnName("idUtilIntrod");
            entity.Property(e => e.IdUtilUltAct).HasColumnName("idUtilUltAct");
            entity.Property(e => e.MoradaAlt)
                .HasMaxLength(50)
                .HasColumnName("moradaAlt");
            entity.Property(e => e.NumDu).HasColumnName("numDU");
            entity.Property(e => e.NumEstanciaAdu).HasColumnName("numEstanciaAdu");
            entity.Property(e => e.ObservacoesDu)
                .HasMaxLength(100)
                .HasColumnName("observacoesDU");
        });

        modelBuilder.Entity<ManifestoEnvio>(entity =>
        {
            entity.HasKey(e => e.IdMaster);

            entity.ToTable("ManifestoEnvio", tb => tb.HasTrigger("ManifestoEnvio_Log"));

            entity.HasIndex(e => e.IdServico, "Idx_idServico");

            entity.HasIndex(e => new { e.Anulado, e.IdEntidade, e.IdRegime, e.DtEnvio }, "idx_anulado_idEntidade_idRegime_dtEnvio").HasFillFactor(80);

            entity.HasIndex(e => e.Awb, "idx_awb").HasFillFactor(80);

            entity.HasIndex(e => new { e.IdCliente, e.IdEntidade, e.Anulado, e.IdCliMorada }, "idx_idCliente_idEntidade_anulado_idCliMorada");

            entity.Property(e => e.IdMaster)
                .ValueGeneratedNever()
                .HasColumnName("idMaster");
            entity.Property(e => e.Anulado)
                .HasDefaultValueSql("((0))")
                .HasColumnName("anulado");
            entity.Property(e => e.Awb)
                .HasMaxLength(50)
                .HasColumnName("awb");
            entity.Property(e => e.DepartamentoFact)
                .HasMaxLength(40)
                .IsUnicode(false)
                .HasColumnName("departamentoFact");
            entity.Property(e => e.Descricao)
                .HasMaxLength(200)
                .HasColumnName("descricao");
            entity.Property(e => e.DtDataEntry)
                .HasColumnType("datetime")
                .HasColumnName("dtDataEntry");
            entity.Property(e => e.DtEnvio)
                .HasColumnType("datetime")
                .HasColumnName("dtEnvio");
            entity.Property(e => e.DtUltAct)
                .HasColumnType("datetime")
                .HasColumnName("dtUltAct");
            entity.Property(e => e.IdClasseOrigem).HasColumnName("idClasseOrigem");
            entity.Property(e => e.IdCliMorada).HasColumnName("idCliMorada");
            entity.Property(e => e.IdCliMoradaEmissao).HasColumnName("idCliMoradaEmissao");
            entity.Property(e => e.IdCliMoradaFact).HasColumnName("idCliMoradaFact");
            entity.Property(e => e.IdCliente).HasColumnName("idCliente");
            entity.Property(e => e.IdClienteEmissao).HasColumnName("idClienteEmissao");
            entity.Property(e => e.IdClienteFact).HasColumnName("idClienteFact");
            entity.Property(e => e.IdEntidade).HasColumnName("idEntidade");
            entity.Property(e => e.IdLocPagaDir).HasColumnName("idLocPagaDir");
            entity.Property(e => e.IdLocPagaTrans).HasColumnName("idLocPagaTrans");
            entity.Property(e => e.IdOficinaCorreos)
                .HasMaxLength(50)
                .HasColumnName("idOficinaCorreos");
            entity.Property(e => e.IdPltDestino).HasColumnName("idPltDestino");
            entity.Property(e => e.IdPltOrigem).HasColumnName("idPltOrigem");
            entity.Property(e => e.IdRegime).HasColumnName("idRegime");
            entity.Property(e => e.IdServico).HasColumnName("idServico");
            entity.Property(e => e.IdTipoDangGoods).HasColumnName("idTipoDangGoods");
            entity.Property(e => e.IdTipoIss).HasColumnName("idTipoISS");
            entity.Property(e => e.IdTipoLogisticaInversa)
                .HasMaxLength(50)
                .HasColumnName("idTipoLogisticaInversa");
            entity.Property(e => e.IdTipoProduto).HasColumnName("idTipoProduto");
            entity.Property(e => e.IdUnidM3).HasColumnName("idUnidM3");
            entity.Property(e => e.IdUnidadePeso).HasColumnName("idUnidadePeso");
            entity.Property(e => e.IdUnidadePesoVolumetrico).HasColumnName("idUnidadePesoVolumetrico");
            entity.Property(e => e.IdUtilDataEntry).HasColumnName("idUtilDataEntry");
            entity.Property(e => e.IdUtilUltAct).HasColumnName("idUtilUltAct");
            entity.Property(e => e.M3orig).HasColumnName("M3Orig");
            entity.Property(e => e.M3real).HasColumnName("M3Real");
            entity.Property(e => e.NumContaPagaDir)
                .HasMaxLength(9)
                .HasColumnName("numContaPagaDir");
            entity.Property(e => e.NumContaPagaTrans)
                .HasMaxLength(9)
                .HasColumnName("numContaPagaTrans");
            entity.Property(e => e.NumDocAt)
                .HasMaxLength(255)
                .HasColumnName("numDocAT");
            entity.Property(e => e.NumPacotes).HasColumnName("numPacotes");
            entity.Property(e => e.Observacoes)
                .HasMaxLength(200)
                .HasColumnName("observacoes");
            entity.Property(e => e.Peso)
                .HasColumnType("money")
                .HasColumnName("peso");
            entity.Property(e => e.PesoOrig)
                .HasColumnType("money")
                .HasColumnName("pesoOrig");
            entity.Property(e => e.PesoReal)
                .HasColumnType("money")
                .HasColumnName("pesoReal");
            entity.Property(e => e.PesoVolumetrico)
                .HasColumnType("money")
                .HasColumnName("pesoVolumetrico");
            entity.Property(e => e.ReembolsoObs)
                .HasMaxLength(250)
                .IsUnicode(false)
                .HasColumnName("reembolsoObs");
            entity.Property(e => e.ValorReembolso)
                .HasColumnType("money")
                .HasColumnName("valorReembolso");
            entity.Property(e => e.ValorSegurado)
                .HasColumnType("money")
                .HasColumnName("valorSegurado");
            entity.Property(e => e.ValorVendaDinheiro)
                .HasColumnType("money")
                .HasColumnName("valorVendaDinheiro");
            entity.Property(e => e.VendaDinheiro).HasColumnName("vendaDinheiro");
        });

        modelBuilder.Entity<ManifestoEstadosLog>(entity =>
        {
            entity.HasKey(e => e.Id).HasName("PK__Manifest__3213E83F3ACA3CC6");

            entity.ToTable("ManifestoEstados_Log");

            entity.HasIndex(e => new { e.IdManifesto, e.DtEstado }, "idx_Idmanifesto_dtEstado").HasFillFactor(80);

            entity.Property(e => e.Id).HasColumnName("id");
            entity.Property(e => e.DtEstado)
                .HasColumnType("datetime")
                .HasColumnName("dtEstado");
            entity.Property(e => e.IdEntidade).HasColumnName("idEntidade");
            entity.Property(e => e.IdEstado).HasColumnName("idEstado");
            entity.Property(e => e.IdManifesto).HasColumnName("idManifesto");
            entity.Property(e => e.IdScanEstado).HasColumnName("idScanEstado");
        });

        modelBuilder.Entity<ManifestoEstadosT>(entity =>
        {
            entity
                .HasNoKey()
                .ToTable("ManifestoEstados_T");

            entity.Property(e => e.BackgroundColor)
                .HasMaxLength(50)
                .HasColumnName("backgroundColor");
            entity.Property(e => e.CodEstado)
                .HasMaxLength(15)
                .HasColumnName("codEstado");
            entity.Property(e => e.Codigo)
                .HasMaxLength(50)
                .HasColumnName("codigo");
            entity.Property(e => e.Descricao)
                .HasMaxLength(500)
                .HasColumnName("descricao");
            entity.Property(e => e.Icon)
                .HasMaxLength(50)
                .HasColumnName("icon");
            entity.Property(e => e.Id)
                .ValueGeneratedOnAdd()
                .HasColumnName("id");
            entity.Property(e => e.IdEntidade).HasColumnName("idEntidade");
        });

        modelBuilder.Entity<ManifestoExpedicao>(entity =>
        {
            entity.HasKey(e => e.IdMaster);

            entity.ToTable("ManifestoExpedicao", tb => tb.HasTrigger("ManifestoExpedicao_Log"));

            entity.HasIndex(e => e.DtUpdatedFromCosmos, "Idx_dtUpdatedFromCosmos");

            entity.HasIndex(e => new { e.Awb, e.IdEntidade }, "idx_awb_idEntidade").HasFillFactor(80);

            entity.HasIndex(e => new { e.RouteDate, e.BatchNumber }, "idx_routedate_batch");

            entity.HasIndex(e => new { e.ValidToGrasp, e.ParaExpToGrasp, e.IdMaster }, "idx_validToGrasp_paraExpToGrasp_idMaster")
                .IsDescending(true, true, false)
                .HasFillFactor(80);

            entity.Property(e => e.IdMaster)
                .ValueGeneratedNever()
                .HasColumnName("idMaster");
            entity.Property(e => e.Awb)
                .HasMaxLength(50)
                .HasColumnName("awb");
            entity.Property(e => e.AwbCategoryCustoms)
                .HasMaxLength(4)
                .HasColumnName("awbCategoryCustoms");
            entity.Property(e => e.BatchNumber).HasColumnName("batchNumber");
            entity.Property(e => e.CargoAircraftOnly)
                .HasDefaultValueSql("((1))")
                .HasColumnName("cargo_aircraft_only");
            entity.Property(e => e.Cflag).HasColumnName("CFlag");
            entity.Property(e => e.CodPaisOrigem)
                .HasMaxLength(2)
                .HasColumnName("codPaisOrigem");
            entity.Property(e => e.DangerousGoodsFlag)
                .HasDefaultValueSql("((0))")
                .HasColumnName("dangerous_goods_flag");
            entity.Property(e => e.DespachoExport).HasDefaultValueSql("((0))");
            entity.Property(e => e.DtDocVal)
                .HasColumnType("datetime")
                .HasColumnName("dtDocVal");
            entity.Property(e => e.DtExpToGrasp)
                .HasColumnType("datetime")
                .HasColumnName("dtExp_to_grasp");
            entity.Property(e => e.DtParaExpToGrasp)
                .HasColumnType("datetime")
                .HasColumnName("dtParaExp_to_grasp");
            entity.Property(e => e.DtUltAct)
                .HasColumnType("datetime")
                .HasColumnName("dtUltAct");
            entity.Property(e => e.DtUpdatedFromCosmos)
                .HasColumnType("datetime")
                .HasColumnName("dtUpdatedFromCosmos");
            entity.Property(e => e.DtValidToGrasp)
                .HasColumnType("datetime")
                .HasColumnName("dtValid_to_grasp");
            entity.Property(e => e.DtValidatedInCosmos)
                .HasColumnType("datetime")
                .HasColumnName("dtValidatedInCosmos");
            entity.Property(e => e.EstacaoDestino)
                .HasMaxLength(5)
                .HasColumnName("estacaoDestino");
            entity.Property(e => e.EstacaoOrigem)
                .HasMaxLength(5)
                .HasColumnName("estacaoOrigem");
            entity.Property(e => e.ExpToGrasp).HasColumnName("exp_to_grasp");
            entity.Property(e => e.ExportLicense).HasColumnName("exportLicense");
            entity.Property(e => e.ExtractedForTransfer).HasColumnName("extracted_for_transfer");
            entity.Property(e => e.FlightDestination)
                .HasMaxLength(5)
                .HasColumnName("flightDestination");
            entity.Property(e => e.GoodsClassCd).HasMaxLength(5);
            entity.Property(e => e.HandlingCode)
                .HasMaxLength(2)
                .HasColumnName("handlingCode");
            entity.Property(e => e.HandlingCode2)
                .HasMaxLength(2)
                .HasColumnName("handlingCode2");
            entity.Property(e => e.HarmonizedCode)
                .HasMaxLength(80)
                .HasColumnName("harmonizedCode");
            entity.Property(e => e.IdAviao).HasColumnName("idAviao");
            entity.Property(e => e.IdContaClienteFilho).HasColumnName("idContaClienteFilho");
            entity.Property(e => e.IdEntidade).HasColumnName("idEntidade");
            entity.Property(e => e.IdEstacaoDestino).HasColumnName("idEstacaoDestino");
            entity.Property(e => e.IdEstacaoOrigem).HasColumnName("idEstacaoOrigem");
            entity.Property(e => e.IdMoeda).HasColumnName("idMoeda");
            entity.Property(e => e.IdPaisManufactura).HasColumnName("idPaisManufactura");
            entity.Property(e => e.IdPaisOrigem).HasColumnName("idPaisOrigem");
            entity.Property(e => e.IdReceivedAt).HasColumnName("idReceivedAt");
            entity.Property(e => e.IdTipoCflag).HasColumnName("idTipoCFlag");
            entity.Property(e => e.IdUtilDocVal).HasColumnName("idUtilDocVal");
            entity.Property(e => e.IdUtilExpToGrasp).HasColumnName("idUtilExp_to_grasp");
            entity.Property(e => e.IdUtilParaExpToGrasp).HasColumnName("idUtilParaExp_to_grasp");
            entity.Property(e => e.IdUtilUltAct).HasColumnName("idUtilUltAct");
            entity.Property(e => e.IdUtilValidToGrasp).HasColumnName("idUtilValid_to_grasp");
            entity.Property(e => e.IsDirty).HasColumnName("isDirty");
            entity.Property(e => e.IsDutyDue).HasColumnName("isDutyDue");
            entity.Property(e => e.Moeda)
                .HasMaxLength(5)
                .HasColumnName("moeda");
            entity.Property(e => e.NonComercialFlag).HasColumnName("non_comercial_flag");
            entity.Property(e => e.ParaExpToGrasp)
                .IsRequired()
                .HasDefaultValueSql("((1))")
                .HasColumnName("paraExp_to_grasp");
            entity.Property(e => e.ProductType)
                .HasMaxLength(2)
                .HasColumnName("productType");
            entity.Property(e => e.RouteDate)
                .HasColumnType("date")
                .HasColumnName("route_date");
            entity.Property(e => e.ServiceType)
                .HasMaxLength(2)
                .HasDefaultValueSql("((1))")
                .HasColumnName("serviceType");
            entity.Property(e => e.TemDocumentacaoValida).HasColumnName("temDocumentacaoValida");
            entity.Property(e => e.ThermalAwb).HasColumnName("thermalAWB");
            entity.Property(e => e.TransactionDateTime)
                .HasColumnType("datetime")
                .HasColumnName("transactionDateTime");
            entity.Property(e => e.ValidToGrasp).HasColumnName("valid_to_grasp");
            entity.Property(e => e.ValorAlfandega)
                .HasDefaultValueSql("((0))")
                .HasColumnType("money")
                .HasColumnName("valorAlfandega");
            entity.Property(e => e.ValorCarriage)
                .HasDefaultValueSql("((0))")
                .HasColumnType("money")
                .HasColumnName("valorCarriage");
            entity.Property(e => e.VisaRoute)
                .HasMaxLength(15)
                .HasColumnName("visaRoute");
        });

        modelBuilder.Entity<ManifestoExpedicaoViagen>(entity =>
        {
            entity.HasKey(e => new { e.IdManifesto, e.LegNbr });

            entity.Property(e => e.IdManifesto).HasColumnName("idManifesto");
            entity.Property(e => e.LegNbr).HasColumnName("legNbr");
            entity.Property(e => e.ArrivalDate)
                .HasColumnType("date")
                .HasColumnName("arrivalDate");
            entity.Property(e => e.ArrivalTime).HasColumnName("arrivalTime");
            entity.Property(e => e.DepartDate)
                .HasColumnType("date")
                .HasColumnName("departDate");
            entity.Property(e => e.DepartTime).HasColumnName("departTime");
            entity.Property(e => e.Destino)
                .HasMaxLength(10)
                .HasColumnName("destino");
            entity.Property(e => e.DtUltAct)
                .HasColumnType("datetime")
                .HasColumnName("dtUltAct");
            entity.Property(e => e.IdUtilUltAct).HasColumnName("idUtilUltAct");
            entity.Property(e => e.Origem)
                .HasMaxLength(10)
                .HasColumnName("origem");
            entity.Property(e => e.RouteDestCntry)
                .HasMaxLength(3)
                .HasColumnName("routeDestCntry");
            entity.Property(e => e.RouteDt)
                .HasColumnType("date")
                .HasColumnName("routeDt");
            entity.Property(e => e.RouteNbr)
                .HasMaxLength(50)
                .HasColumnName("routeNbr");
            entity.Property(e => e.RouteOrigCntry)
                .HasMaxLength(3)
                .HasColumnName("routeOrigCntry");
        });

        modelBuilder.Entity<ManifestoExpedidor>(entity =>
        {
            entity.HasKey(e => e.IdMaster).HasName("PK_manifestoExpedidor");

            entity.ToTable("ManifestoExpedidor", tb => tb.HasTrigger("ManifestoExpedidor_Log"));

            entity.HasIndex(e => new { e.Awb, e.IdEntidade }, "idx_awb_idEntidade").HasFillFactor(80);

            entity.Property(e => e.IdMaster)
                .ValueGeneratedNever()
                .HasColumnName("idMaster");
            entity.Property(e => e.Anulado).HasColumnName("anulado");
            entity.Property(e => e.Awb)
                .HasMaxLength(50)
                .HasColumnName("awb");
            entity.Property(e => e.Cidade)
                .HasMaxLength(34)
                .HasColumnName("cidade");
            entity.Property(e => e.CodPais)
                .HasMaxLength(2)
                .HasColumnName("codPais");
            entity.Property(e => e.Cpostal)
                .HasMaxLength(10)
                .HasColumnName("cpostal");
            entity.Property(e => e.Departamento)
                .HasMaxLength(12)
                .HasColumnName("departamento");
            entity.Property(e => e.DtUltAct)
                .HasDefaultValueSql("(getdate())")
                .HasColumnType("datetime")
                .HasColumnName("dtUltAct");
            entity.Property(e => e.Email)
                .HasMaxLength(100)
                .HasColumnName("email");
            entity.Property(e => e.Empresa)
                .HasMaxLength(60)
                .HasColumnName("empresa");
            entity.Property(e => e.Estado)
                .HasMaxLength(2)
                .HasColumnName("estado");
            entity.Property(e => e.IdAgrupamento).HasColumnName("idAgrupamento");
            entity.Property(e => e.IdCliMorada).HasColumnName("idCliMorada");
            entity.Property(e => e.IdCliente).HasColumnName("idCliente");
            entity.Property(e => e.IdCpostal).HasColumnName("idCPostal");
            entity.Property(e => e.IdEntidade).HasColumnName("idEntidade");
            entity.Property(e => e.IdPais).HasColumnName("idPais");
            entity.Property(e => e.IdPlataforma).HasColumnName("idPlataforma");
            entity.Property(e => e.IdUtilUltAct).HasColumnName("idUtilUltAct");
            entity.Property(e => e.Morada)
                .HasMaxLength(68)
                .HasColumnName("morada");
            entity.Property(e => e.Nome)
                .HasMaxLength(34)
                .HasColumnName("nome");
            entity.Property(e => e.NomeContacto).HasMaxLength(100);
            entity.Property(e => e.NrContrib)
                .HasMaxLength(15)
                .HasColumnName("nrContrib");
            entity.Property(e => e.NumConta)
                .HasMaxLength(20)
                .HasColumnName("numConta");
            entity.Property(e => e.Telefone)
                .HasMaxLength(15)
                .HasColumnName("telefone");
        });

        modelBuilder.Entity<ManifestoExpedidorTlog>(entity =>
        {
            entity.HasKey(e => e.IdTrigger);

            entity.ToTable("ManifestoExpedidor_TLog");

            entity.Property(e => e.IdTrigger).HasColumnName("idTrigger");
            entity.Property(e => e.Awb)
                .HasMaxLength(50)
                .HasColumnName("awb");
            entity.Property(e => e.Cidade)
                .HasMaxLength(34)
                .HasColumnName("cidade");
            entity.Property(e => e.Cpostal)
                .HasMaxLength(10)
                .HasColumnName("cpostal");
            entity.Property(e => e.Departamento)
                .HasMaxLength(12)
                .HasColumnName("departamento");
            entity.Property(e => e.DtTrigger)
                .HasDefaultValueSql("(getdate())")
                .HasColumnType("datetime")
                .HasColumnName("dtTrigger");
            entity.Property(e => e.DtUltAct)
                .HasColumnType("datetime")
                .HasColumnName("dtUltAct");
            entity.Property(e => e.Empresa)
                .HasMaxLength(34)
                .HasColumnName("empresa");
            entity.Property(e => e.Estado)
                .HasMaxLength(2)
                .HasColumnName("estado");
            entity.Property(e => e.IdAgrupamento).HasColumnName("idAgrupamento");
            entity.Property(e => e.IdCliMorada).HasColumnName("idCliMorada");
            entity.Property(e => e.IdCliente).HasColumnName("idCliente");
            entity.Property(e => e.IdCpostal).HasColumnName("idCPostal");
            entity.Property(e => e.IdEntidade).HasColumnName("idEntidade");
            entity.Property(e => e.IdMaster).HasColumnName("idMaster");
            entity.Property(e => e.IdPais).HasColumnName("idPais");
            entity.Property(e => e.IdPlataforma).HasColumnName("idPlataforma");
            entity.Property(e => e.IdUtilUltAct).HasColumnName("idUtilUltAct");
            entity.Property(e => e.Morada)
                .HasMaxLength(68)
                .HasColumnName("morada");
            entity.Property(e => e.Nome)
                .HasMaxLength(34)
                .HasColumnName("nome");
            entity.Property(e => e.NrContrib)
                .HasMaxLength(15)
                .HasColumnName("nrContrib");
            entity.Property(e => e.NumConta)
                .HasMaxLength(20)
                .HasColumnName("numConta");
            entity.Property(e => e.Telefone)
                .HasMaxLength(15)
                .HasColumnName("telefone");
        });

        modelBuilder.Entity<ManifestoFact>(entity =>
        {
            entity.HasKey(e => e.IdManifesto);

            entity.ToTable("ManifestoFact", tb => tb.HasTrigger("AlteracaoMF_Trigger"));

            entity.HasIndex(e => new { e.IdEntidade, e.ValidToFact, e.IdUtilParaFacturar }, "Idx_idEntidade_valid_to_fact_idUtilParaFacturar").HasFillFactor(80);

            entity.HasIndex(e => new { e.IdEntidade, e.ValidToFact, e.VendaDinheiro, e.DtEnvio }, "Idx_idEntidade_valid_to_fact_vendaDinheiro_dtEnvio").HasFillFactor(80);

            entity.HasIndex(e => new { e.IsMaster, e.IdEntidade, e.ValidToFact, e.ParaFacturar, e.DtEnvio }, "Idx_isMaster_idEntidade_valid_to_fact_paraFacturar_dtEnvio").IsDescending(true, false, false, false, false);

            entity.HasIndex(e => new { e.IdAgrupamento, e.DtEnvio }, "idx_idAgrupamento_dtEnvio").HasFillFactor(80);

            entity.HasIndex(e => new { e.ParaFacturar, e.ValidToFact, e.IdEntidade, e.IdClienteFact, e.IdCliMoradaFact }, "idx_paraFacturar_valid_idEntidade_idClienteFact_idCliMorada").HasFillFactor(80);

            entity.Property(e => e.IdManifesto)
                .ValueGeneratedNever()
                .HasColumnName("idManifesto");
            entity.Property(e => e.Altura)
                .HasColumnType("money")
                .HasColumnName("altura");
            entity.Property(e => e.Awb)
                .HasMaxLength(50)
                .HasColumnName("awb");
            entity.Property(e => e.CPostalDestino)
                .HasMaxLength(15)
                .HasColumnName("cPostalDestino");
            entity.Property(e => e.CPostalOrigem)
                .HasMaxLength(15)
                .HasColumnName("cPostalOrigem");
            entity.Property(e => e.Comprimento)
                .HasColumnType("money")
                .HasColumnName("comprimento");
            entity.Property(e => e.ContaPagaTrans)
                .HasMaxLength(9)
                .HasColumnName("contaPagaTrans");
            entity.Property(e => e.DepartamentoFact)
                .HasMaxLength(40)
                .IsUnicode(false)
                .HasColumnName("departamentoFact");
            entity.Property(e => e.DtEnvio)
                .HasColumnType("date")
                .HasColumnName("dtEnvio");
            entity.Property(e => e.DtParaFacturar)
                .HasColumnType("datetime")
                .HasColumnName("dtParaFacturar");
            entity.Property(e => e.DtProduto)
                .HasColumnType("date")
                .HasColumnName("dtProduto");
            entity.Property(e => e.DtUltAct)
                .HasColumnType("datetime")
                .HasColumnName("dtUltAct");
            entity.Property(e => e.DtValidToFact)
                .HasColumnType("datetime")
                .HasColumnName("dtValid_to_fact");
            entity.Property(e => e.FacturacaoIndividual).HasColumnName("facturacaoIndividual");
            entity.Property(e => e.IdAgrupamento).HasColumnName("idAgrupamento");
            entity.Property(e => e.IdClasseOrigem).HasColumnName("idClasseOrigem");
            entity.Property(e => e.IdCliMorada).HasColumnName("idCliMorada");
            entity.Property(e => e.IdCliMoradaEmissao).HasColumnName("idCliMoradaEmissao");
            entity.Property(e => e.IdCliMoradaFact).HasColumnName("idCliMoradaFact");
            entity.Property(e => e.IdCliente).HasColumnName("idCliente");
            entity.Property(e => e.IdClienteEmissao).HasColumnName("idClienteEmissao");
            entity.Property(e => e.IdClienteFact).HasColumnName("idClienteFact");
            entity.Property(e => e.IdEntidade).HasColumnName("idEntidade");
            entity.Property(e => e.IdLocPagaTrans).HasColumnName("idLocPagaTrans");
            entity.Property(e => e.IdMotivoParaFacturar).HasColumnName("idMotivoParaFacturar");
            entity.Property(e => e.IdPaisDestino).HasColumnName("idPaisDestino");
            entity.Property(e => e.IdPaisOrigem).HasColumnName("idPaisOrigem");
            entity.Property(e => e.IdRegime).HasColumnName("idRegime");
            entity.Property(e => e.IdServico).HasColumnName("idServico");
            entity.Property(e => e.IdTipoProduto).HasColumnName("idTipoProduto");
            entity.Property(e => e.IdUtilParaFacturar).HasColumnName("idUtilParaFacturar");
            entity.Property(e => e.IdUtilUltAct).HasColumnName("idUtilUltAct");
            entity.Property(e => e.IsMaster).HasColumnName("isMaster");
            entity.Property(e => e.Largura)
                .HasColumnType("money")
                .HasColumnName("largura");
            entity.Property(e => e.M3).HasColumnName("m3");
            entity.Property(e => e.NumPacotes).HasColumnName("numPacotes");
            entity.Property(e => e.ObsVendaDinheiro)
                .HasMaxLength(250)
                .HasColumnName("obsVendaDinheiro");
            entity.Property(e => e.Observacoes)
                .HasMaxLength(250)
                .HasColumnName("observacoes");
            entity.Property(e => e.ParaFacturar)
                .IsRequired()
                .HasDefaultValueSql("((1))")
                .HasColumnName("paraFacturar");
            entity.Property(e => e.Peso).HasColumnName("peso");
            entity.Property(e => e.PesoVol).HasColumnName("pesoVol");
            entity.Property(e => e.RefExpedidor)
                .HasMaxLength(50)
                .HasColumnName("refExpedidor");
            entity.Property(e => e.ValidToFact).HasColumnName("valid_to_fact");
            entity.Property(e => e.ValorMercadoria)
                .HasColumnType("money")
                .HasColumnName("valorMercadoria");
            entity.Property(e => e.VendaDinheiro).HasColumnName("vendaDinheiro");
        });

        modelBuilder.Entity<ManifestoFactAgrupamento>(entity =>
        {
            entity.HasKey(e => e.Id).HasName("PK__Manifest__3213E83F036174E0");

            entity.HasIndex(e => new { e.DtProduto, e.IdServico, e.IdEntidade, e.IdRegime, e.IdCliente, e.IdCliMorada }, "idx_idEntidade_dtproduto_idServico_idRegime").HasFillFactor(80);

            entity.Property(e => e.Id).HasColumnName("id");
            entity.Property(e => e.CondicoesAgrupamento).HasColumnName("condicoesAgrupamento");
            entity.Property(e => e.DtProduto)
                .HasColumnType("datetime")
                .HasColumnName("dtProduto");
            entity.Property(e => e.Dtintrod)
                .HasDefaultValueSql("(getdate())")
                .HasColumnType("datetime")
                .HasColumnName("dtintrod");
            entity.Property(e => e.IdCliMorada).HasColumnName("idCliMorada");
            entity.Property(e => e.IdCliente).HasColumnName("idCliente");
            entity.Property(e => e.IdEntidade).HasColumnName("idEntidade");
            entity.Property(e => e.IdRegime).HasColumnName("idRegime");
            entity.Property(e => e.IdServico).HasColumnName("idServico");
            entity.Property(e => e.IdTarifa).HasColumnName("idTarifa");
            entity.Property(e => e.IdTipoAgrupa).HasColumnName("idTipoAgrupa");
            entity.Property(e => e.IdclasseOrigem).HasColumnName("idclasseOrigem");
        });

        modelBuilder.Entity<ManifestoFactCredito>(entity =>
        {
            entity.HasIndex(e => e.DtParaProcessar, "Idx_dtParaProcessar");

            entity.HasIndex(e => new { e.IdManifesto, e.Processado, e.IdManifestoItem }, "Idx_idManifesto_processado").HasFillFactor(80);

            entity.HasIndex(e => new { e.ParaProcessar, e.Processado, e.DtParaProcessar }, "Idx_paraProcessar_processado_dtParaProcessar");

            entity.Property(e => e.Id).HasColumnName("id");
            entity.Property(e => e.AlteraValor).HasColumnName("alteraValor");
            entity.Property(e => e.DtAlteraValor)
                .HasColumnType("datetime")
                .HasColumnName("dtAlteraValor");
            entity.Property(e => e.DtIntrod)
                .HasDefaultValueSql("(getdate())")
                .HasColumnType("datetime")
                .HasColumnName("dtIntrod");
            entity.Property(e => e.DtParaProcessar)
                .HasColumnType("datetime")
                .HasColumnName("dtParaProcessar");
            entity.Property(e => e.DtProcessado)
                .HasColumnType("datetime")
                .HasColumnName("dtProcessado");
            entity.Property(e => e.IdManifesto).HasColumnName("idManifesto");
            entity.Property(e => e.IdManifestoItem).HasColumnName("idManifestoItem");
            entity.Property(e => e.IdUtilIntrod).HasColumnName("idUtilIntrod");
            entity.Property(e => e.IdUtilParaProcessar).HasColumnName("idUtilParaProcessar");
            entity.Property(e => e.IdUtilProcessado).HasColumnName("idUtilProcessado");
            entity.Property(e => e.ParaProcessar)
                .IsRequired()
                .HasDefaultValueSql("((1))")
                .HasColumnName("paraProcessar");
            entity.Property(e => e.Processado).HasColumnName("processado");
        });

        modelBuilder.Entity<ManifestoFactCreditoConfigT>(entity =>
        {
            entity
                .HasNoKey()
                .ToTable("ManifestoFactCreditoConfig_T");

            entity.Property(e => e.Activo)
                .IsRequired()
                .HasDefaultValueSql("((1))")
                .HasColumnName("activo");
            entity.Property(e => e.ColumnName)
                .HasMaxLength(128)
                .HasColumnName("COLUMN_NAME");
            entity.Property(e => e.TableName)
                .HasMaxLength(128)
                .HasColumnName("TABLE_NAME");
        });

        modelBuilder.Entity<ManifestoFactItem>(entity =>
        {
            entity.HasKey(e => e.IdManifestoItem);

            entity.ToTable(tb => tb.HasTrigger("AlteracaoItemsFact_Trigger"));

            entity.HasIndex(e => new { e.Activo, e.ExpToFact, e.DtValor, e.EmErroValorizacao }, "Idx_activo_exp_to_fact_dtValor_emErro").HasFillFactor(80);

            entity.HasIndex(e => new { e.IdEntidade, e.Activo, e.ExpToFact, e.DtValor }, "Idx_idEntidade_activo_exp_to_fact").HasFillFactor(80);

            entity.HasIndex(e => new { e.IdManifesto, e.IdEntidade, e.Activo, e.ExpToFact }, "Idx_idManifesto_idEntidade_activo_exp_to_fact").HasFillFactor(80);

            entity.HasIndex(e => new { e.ReqValidacao, e.DtIsValidToFact }, "idx_reqValidacao_dt_is_valid_to_fact");

            entity.Property(e => e.IdManifestoItem)
                .ValueGeneratedNever()
                .HasColumnName("idManifestoItem");
            entity.Property(e => e.Activo).HasColumnName("activo");
            entity.Property(e => e.Awb)
                .HasMaxLength(50)
                .HasColumnName("awb");
            entity.Property(e => e.CodIva)
                .HasMaxLength(10)
                .HasColumnName("codIva");
            entity.Property(e => e.CustoPrevisto)
                .HasColumnType("money")
                .HasColumnName("custoPrevisto");
            entity.Property(e => e.Descricao)
                .HasMaxLength(250)
                .HasColumnName("descricao");
            entity.Property(e => e.DtExpToFact)
                .HasColumnType("datetime")
                .HasColumnName("dtExp_to_fact");
            entity.Property(e => e.DtFact)
                .HasColumnType("datetime")
                .HasColumnName("dtFact");
            entity.Property(e => e.DtIsValidToFact)
                .HasColumnType("datetime")
                .HasColumnName("dt_is_valid_to_fact");
            entity.Property(e => e.DtUltAct)
                .HasColumnType("datetime")
                .HasColumnName("dtUltAct");
            entity.Property(e => e.DtValor)
                .HasColumnType("datetime")
                .HasColumnName("dtValor");
            entity.Property(e => e.EmErroValorizacao).HasColumnName("emErroValorizacao");
            entity.Property(e => e.ExpToFact).HasColumnName("exp_to_fact");
            entity.Property(e => e.Fact).HasColumnName("fact");
            entity.Property(e => e.IdEntidade).HasColumnName("idEntidade");
            entity.Property(e => e.IdIvareg).HasColumnName("idIVAReg");
            entity.Property(e => e.IdManifesto).HasColumnName("idManifesto");
            entity.Property(e => e.IdMoeda).HasColumnName("idMoeda");
            entity.Property(e => e.IdScan).HasColumnName("idScan");
            entity.Property(e => e.IdServicoDet).HasColumnName("idServicoDet");
            entity.Property(e => e.IdTarifa).HasColumnName("idTarifa");
            entity.Property(e => e.IdTipoAgrupa).HasColumnName("idTipoAgrupa");
            entity.Property(e => e.IdTipoAgrupaRep).HasColumnName("idTipoAgrupaRep");
            entity.Property(e => e.IdTipoIva).HasColumnName("idTipoIva");
            entity.Property(e => e.IdUtilIsValidToFact).HasColumnName("idUtil_is_valid_to_fact");
            entity.Property(e => e.IdUtilUltAct).HasColumnName("idUtilUltAct");
            entity.Property(e => e.IdUtilValor).HasColumnName("idUtilValor");
            entity.Property(e => e.IsValidToFact).HasColumnName("is_valid_to_fact");
            entity.Property(e => e.PercDesconto)
                .HasColumnType("money")
                .HasColumnName("percDesconto");
            entity.Property(e => e.ReqValidacao).HasColumnName("reqValidacao");
            entity.Property(e => e.Valor)
                .HasColumnType("money")
                .HasColumnName("valor");
            entity.Property(e => e.ValorManual).HasColumnName("valorManual");
            entity.Property(e => e.ValorRef)
                .HasColumnType("money")
                .HasColumnName("valorRef");
        });

        modelBuilder.Entity<ManifestoFedexGrasp>(entity =>
        {
            entity.HasKey(e => e.Id).HasName("PK__Manifest__3213E83F02FACCA9");

            entity.ToTable("ManifestoFedexGrasp");

            entity.HasIndex(e => e.HdGmtdt, "NonClusteredIndex-20201119-091410");

            entity.HasIndex(e => e.MdeAirbillNbr, "idx_mdeAirbillNbr").HasFillFactor(80);

            entity.Property(e => e.Id).HasColumnName("id");
            entity.Property(e => e.Dirty).HasColumnName("dirty");
            entity.Property(e => e.DtIntrod)
                .HasColumnType("datetime")
                .HasColumnName("dtIntrod");
            entity.Property(e => e.ExtraInteger1).HasColumnName("extraInteger1");
            entity.Property(e => e.ExtraString5)
                .HasMaxLength(2)
                .HasColumnName("extraString5");
            entity.Property(e => e.HdGmtdt)
                .HasColumnType("date")
                .HasColumnName("hdGMTDt");
            entity.Property(e => e.HdGmttm).HasColumnName("hdGMTTm");
            entity.Property(e => e.HdVisaTransactionCd)
                .HasMaxLength(2)
                .HasColumnName("hdVisaTransactionCd");
            entity.Property(e => e.MdeAirbillNbr)
                .HasMaxLength(12)
                .HasColumnName("mdeAirbillNbr");
            entity.Property(e => e.MdeAmsMawbNbr)
                .IsUnicode(false)
                .HasColumnName("mdeAmsMawbNbr");
            entity.Property(e => e.MdeBillDtyAccountNbr)
                .HasMaxLength(9)
                .HasColumnName("mdeBillDtyAccountNbr");
            entity.Property(e => e.MdeBillDtyFlg)
                .HasMaxLength(1)
                .HasColumnName("mdeBillDtyFlg");
            entity.Property(e => e.MdeBillToAccount)
                .HasMaxLength(9)
                .HasColumnName("mdeBillToAccount");
            entity.Property(e => e.MdeBillToFlg)
                .HasMaxLength(1)
                .HasColumnName("mdeBillToFlg");
            entity.Property(e => e.MdeConsigneeAccountNbr)
                .HasMaxLength(9)
                .HasColumnName("mdeConsigneeAccountNbr");
            entity.Property(e => e.MdeConsigneeAddress1)
                .HasMaxLength(35)
                .HasColumnName("mdeConsigneeAddress1");
            entity.Property(e => e.MdeConsigneeAddress2)
                .HasMaxLength(35)
                .HasColumnName("mdeConsigneeAddress2");
            entity.Property(e => e.MdeConsigneeCity)
                .HasMaxLength(35)
                .HasColumnName("mdeConsigneeCity");
            entity.Property(e => e.MdeConsigneeCompany)
                .HasMaxLength(35)
                .HasColumnName("mdeConsigneeCompany");
            entity.Property(e => e.MdeConsigneeCountryCd)
                .HasMaxLength(2)
                .HasColumnName("mdeConsigneeCountryCd");
            entity.Property(e => e.MdeConsigneeNm)
                .HasMaxLength(35)
                .HasColumnName("mdeConsigneeNm");
            entity.Property(e => e.MdeConsigneePhone)
                .HasMaxLength(15)
                .HasColumnName("mdeConsigneePhone");
            entity.Property(e => e.MdeConsigneePostalCd)
                .HasMaxLength(10)
                .HasColumnName("mdeConsigneePostalCd");
            entity.Property(e => e.MdeConsigneeStateCd)
                .HasMaxLength(2)
                .HasColumnName("mdeConsigneeStateCd");
            entity.Property(e => e.MdeCountryOfExport)
                .HasMaxLength(2)
                .HasColumnName("mdeCountryOfExport");
            entity.Property(e => e.MdeCountryOfOrigin)
                .HasMaxLength(2)
                .HasColumnName("mdeCountryOfOrigin");
            entity.Property(e => e.MdeCurrType)
                .HasMaxLength(3)
                .HasColumnName("mdeCurrType");
            entity.Property(e => e.MdeDangGoodsFlg)
                .HasMaxLength(1)
                .HasColumnName("mdeDangGoodsFlg");
            entity.Property(e => e.MdeDescription)
                .HasMaxLength(200)
                .HasColumnName("mdeDescription");
            entity.Property(e => e.MdeDestCurrType)
                .HasMaxLength(3)
                .HasColumnName("mdeDestCurrType");
            entity.Property(e => e.MdeDestLoc)
                .HasMaxLength(5)
                .HasColumnName("mdeDestLoc");
            entity.Property(e => e.MdeDestTotCustomsAmt)
                .HasColumnType("money")
                .HasColumnName("mdeDestTotCustomsAmt");
            entity.Property(e => e.MdeDnldLocTotCustomsAmt)
                .HasColumnType("money")
                .HasColumnName("mdeDnldLocTotCustomsAmt");
            entity.Property(e => e.MdeDutiableFlg)
                .HasMaxLength(1)
                .HasColumnName("mdeDutiableFlg");
            entity.Property(e => e.MdeFormTypeCd)
                .HasMaxLength(4)
                .HasColumnName("mdeFormTypeCd");
            entity.Property(e => e.MdeFreightChargeAmt)
                .HasColumnType("money")
                .HasColumnName("mdeFreightChargeAmt");
            entity.Property(e => e.MdeGoodsClassCd)
                .HasMaxLength(2)
                .HasColumnName("mdeGoodsClassCd");
            entity.Property(e => e.MdeHandlingUnitQty).HasColumnName("mdeHandlingUnitQty");
            entity.Property(e => e.MdeOrigLoc)
                .HasMaxLength(5)
                .HasColumnName("mdeOrigLoc");
            entity.Property(e => e.MdePackagingType)
                .HasMaxLength(2)
                .HasColumnName("mdePackagingType");
            entity.Property(e => e.MdeServiceBase)
                .HasMaxLength(2)
                .HasColumnName("mdeServiceBase");
            entity.Property(e => e.MdeShipDt)
                .HasColumnType("date")
                .HasColumnName("mdeShipDt");
            entity.Property(e => e.MdeShipperAccountNbr)
                .HasMaxLength(9)
                .HasColumnName("mdeShipperAccountNbr");
            entity.Property(e => e.MdeShipperAddress1)
                .HasMaxLength(35)
                .HasColumnName("mdeShipperAddress1");
            entity.Property(e => e.MdeShipperAddress2)
                .HasMaxLength(35)
                .HasColumnName("mdeShipperAddress2");
            entity.Property(e => e.MdeShipperCity)
                .HasMaxLength(35)
                .HasColumnName("mdeShipperCity");
            entity.Property(e => e.MdeShipperCompany)
                .HasMaxLength(35)
                .HasColumnName("mdeShipperCompany");
            entity.Property(e => e.MdeShipperCountryCd)
                .HasMaxLength(2)
                .HasColumnName("mdeShipperCountryCd");
            entity.Property(e => e.MdeShipperNm)
                .HasMaxLength(35)
                .HasColumnName("mdeShipperNm");
            entity.Property(e => e.MdeShipperPhone)
                .HasMaxLength(15)
                .HasColumnName("mdeShipperPhone");
            entity.Property(e => e.MdeShipperPostalCd)
                .HasMaxLength(10)
                .HasColumnName("mdeShipperPostalCd");
            entity.Property(e => e.MdeShipperStateCd)
                .HasMaxLength(2)
                .HasColumnName("mdeShipperStateCd");
            entity.Property(e => e.MdeTotCustomsVal)
                .HasColumnType("money")
                .HasColumnName("mdeTotCustomsVal");
            entity.Property(e => e.MdeTotPieces).HasColumnName("mdeTotPieces");
            entity.Property(e => e.MdeTotWeight)
                .HasColumnType("money")
                .HasColumnName("mdeTotWeight");
            entity.Property(e => e.MdeTypeService)
                .HasMaxLength(2)
                .HasColumnName("mdeTypeService");
            entity.Property(e => e.MdeWgtUomCd)
                .HasMaxLength(2)
                .HasColumnName("mdeWgtUomCd");
            entity.Property(e => e.MpsCrossRefNbr)
                .HasMaxLength(12)
                .HasColumnName("mpsCrossRefNbr");
            entity.Property(e => e.SepUidNbr)
                .HasMaxLength(10)
                .HasColumnName("sepUidNbr");
        });

        modelBuilder.Entity<ManifestoFedexGraspLeg>(entity =>
        {
            entity.HasKey(e => e.Id).HasName("PK__Manifest__3213E83F0A9BEE71");

            entity.ToTable("ManifestoFedexGrasp_Legs");

            entity.HasIndex(e => e.IdManifFedex, "Idx_idManifFedex");

            entity.Property(e => e.Id).HasColumnName("id");
            entity.Property(e => e.DtIntrod)
                .HasColumnType("datetime")
                .HasColumnName("dtIntrod");
            entity.Property(e => e.IdManifFedex).HasColumnName("idManifFedex");
            entity.Property(e => e.LegArrivalDtLoc)
                .HasColumnType("date")
                .HasColumnName("legArrivalDtLoc");
            entity.Property(e => e.LegArrivalTmLoc).HasColumnName("legArrivalTmLoc");
            entity.Property(e => e.LegDeptDtLoc)
                .HasColumnType("date")
                .HasColumnName("legDeptDtLoc");
            entity.Property(e => e.LegDeptTmLoc).HasColumnName("legDeptTmLoc");
            entity.Property(e => e.LegNbr).HasColumnName("legNbr");
            entity.Property(e => e.LegRouteDestLoc)
                .HasMaxLength(5)
                .HasColumnName("legRouteDestLoc");
            entity.Property(e => e.LegRouteDestLocCntryCd)
                .HasMaxLength(2)
                .HasColumnName("legRouteDestLocCntryCd");
            entity.Property(e => e.LegRouteDt)
                .HasColumnType("date")
                .HasColumnName("legRouteDt");
            entity.Property(e => e.LegRouteNbr)
                .HasMaxLength(6)
                .HasColumnName("legRouteNbr");
            entity.Property(e => e.LegRouteOrigLoc)
                .HasMaxLength(5)
                .HasColumnName("legRouteOrigLoc");
            entity.Property(e => e.LegRouteOrigLocCntryCd)
                .HasMaxLength(2)
                .HasColumnName("legRouteOrigLocCntryCd");
        });

        modelBuilder.Entity<ManifestoImpressao>(entity =>
        {
            entity.HasKey(e => new { e.IdManifesto, e.IdTipoImpressao });

            entity.ToTable("ManifestoImpressao");

            entity.Property(e => e.IdManifesto).HasColumnName("idManifesto");
            entity.Property(e => e.IdTipoImpressao).HasColumnName("idTipoImpressao");
            entity.Property(e => e.Awb)
                .HasMaxLength(50)
                .HasColumnName("awb");
            entity.Property(e => e.Data)
                .HasColumnType("datetime")
                .HasColumnName("data");
            entity.Property(e => e.IdEntidade).HasColumnName("idEntidade");
            entity.Property(e => e.IdUtil).HasColumnName("idUtil");
        });

        modelBuilder.Entity<ManifestoInterface>(entity =>
        {
            entity.HasKey(e => new { e.IdManifesto, e.IdInterface });

            entity.ToTable("ManifestoInterface");

            entity.HasIndex(e => new { e.Env, e.IdInterface, e.IdManifesto }, "idx_env_idInterface_idManifesto").HasFillFactor(80);

            entity.Property(e => e.IdManifesto).HasColumnName("idManifesto");
            entity.Property(e => e.IdInterface).HasColumnName("idInterface");
            entity.Property(e => e.Accao)
                .HasMaxLength(10)
                .IsUnicode(false)
                .IsFixedLength()
                .HasColumnName("accao");
            entity.Property(e => e.DtEnv)
                .HasColumnType("datetime")
                .HasColumnName("dtEnv");
            entity.Property(e => e.DtIntrod)
                .HasDefaultValueSql("(getdate())")
                .HasColumnType("datetime")
                .HasColumnName("dtIntrod");
            entity.Property(e => e.DtUltAct)
                .HasDefaultValueSql("(getdate())")
                .HasColumnType("datetime")
                .HasColumnName("dtUltAct");
            entity.Property(e => e.Env).HasColumnName("env");
        });

        modelBuilder.Entity<ManifestoInterfaceTipoT>(entity =>
        {
            entity.ToTable("ManifestoInterfaceTipo_T");

            entity.Property(e => e.Id).HasColumnName("id");
            entity.Property(e => e.Codigo)
                .HasMaxLength(15)
                .HasColumnName("codigo");
            entity.Property(e => e.Descricao)
                .HasMaxLength(50)
                .HasColumnName("descricao");
        });

        modelBuilder.Entity<ManifestoItem>(entity =>
        {
            entity.ToTable(tb => tb.HasTrigger("AlteracaoItems_Trigger"));

            entity.HasIndex(e => new { e.IdManifesto, e.Activo, e.IdServicoDet }, "idx_idManifesto_activo_idServicoDet")
                .IsDescending(false, true, false)
                .HasFillFactor(80);

            entity.Property(e => e.Id)
                .ValueGeneratedNever()
                .HasColumnName("id");
            entity.Property(e => e.Activo).HasColumnName("activo");
            entity.Property(e => e.Awb)
                .HasMaxLength(50)
                .HasColumnName("awb");
            entity.Property(e => e.DtIntrod)
                .HasDefaultValueSql("(getdate())")
                .HasColumnType("datetime")
                .HasColumnName("dtIntrod");
            entity.Property(e => e.DtUltAct)
                .HasDefaultValueSql("(getdate())")
                .HasColumnType("datetime")
                .HasColumnName("dtUltAct");
            entity.Property(e => e.IdEntidade).HasColumnName("idEntidade");
            entity.Property(e => e.IdManifesto).HasColumnName("idManifesto");
            entity.Property(e => e.IdScan).HasColumnName("idScan");
            entity.Property(e => e.IdServicoDet).HasColumnName("idServicoDet");
            entity.Property(e => e.IdUtilIntrod).HasColumnName("idUtilIntrod");
            entity.Property(e => e.IdUtilUltAct).HasColumnName("idUtilUltAct");
            entity.Property(e => e.Observacoes)
                .HasMaxLength(250)
                .HasColumnName("observacoes");
            entity.Property(e => e.ValorRef)
                .HasColumnType("money")
                .HasColumnName("valorRef");
        });

        modelBuilder.Entity<ManifestoItemsBk>(entity =>
        {
            entity.ToTable("ManifestoItems_BK");

            entity.Property(e => e.Id)
                .ValueGeneratedNever()
                .HasColumnName("id");
            entity.Property(e => e.Activo).HasColumnName("activo");
            entity.Property(e => e.Awb)
                .HasMaxLength(50)
                .HasColumnName("awb");
            entity.Property(e => e.DtIntrod)
                .HasDefaultValueSql("(getdate())")
                .HasColumnType("datetime")
                .HasColumnName("dtIntrod");
            entity.Property(e => e.DtUltAct)
                .HasDefaultValueSql("(getdate())")
                .HasColumnType("datetime")
                .HasColumnName("dtUltAct");
            entity.Property(e => e.IdEntidade).HasColumnName("idEntidade");
            entity.Property(e => e.IdManifesto).HasColumnName("idManifesto");
            entity.Property(e => e.IdScan).HasColumnName("idScan");
            entity.Property(e => e.IdServicoDet).HasColumnName("idServicoDet");
            entity.Property(e => e.IdUtilIntrod).HasColumnName("idUtilIntrod");
            entity.Property(e => e.IdUtilUltAct).HasColumnName("idUtilUltAct");
            entity.Property(e => e.Observacoes)
                .HasMaxLength(250)
                .HasColumnName("observacoes");
            entity.Property(e => e.ValorRef)
                .HasColumnType("money")
                .HasColumnName("valorRef");
        });

        modelBuilder.Entity<ManifestoLocPagaEntidade>(entity =>
        {
            entity.HasKey(e => new { e.IdLocPaga, e.IdEntidade });

            entity.Property(e => e.IdLocPaga).HasColumnName("idLocPaga");
            entity.Property(e => e.IdEntidade).HasColumnName("idEntidade");
            entity.Property(e => e.Descricao)
                .HasMaxLength(50)
                .HasColumnName("descricao");
        });

        modelBuilder.Entity<ManifestoLocPagaT>(entity =>
        {
            entity.ToTable("ManifestoLocPaga_T");

            entity.Property(e => e.Id).HasColumnName("id");
            entity.Property(e => e.Activo).HasColumnName("activo");
            entity.Property(e => e.CoGCOM2UsersfaFedEx)
                .HasMaxLength(1)
                .HasColumnName("coGCOM2UsersfaFedEx");
            entity.Property(e => e.CodNumFedEx)
                .HasMaxLength(1)
                .HasColumnName("codNumFedEx");
            entity.Property(e => e.Codigo)
                .HasMaxLength(15)
                .HasColumnName("codigo");
            entity.Property(e => e.CodigoGidwin)
                .HasMaxLength(1)
                .HasColumnName("codigoGidwin");
            entity.Property(e => e.DescEn)
                .HasMaxLength(50)
                .HasColumnName("descEN");
            entity.Property(e => e.DescPt)
                .HasMaxLength(50)
                .HasColumnName("descPT");
            entity.Property(e => e.IsDir).HasColumnName("isDir");
            entity.Property(e => e.IsTrans).HasColumnName("isTrans");
        });

        modelBuilder.Entity<ManifestoManuai>(entity =>
        {
            entity.HasNoKey();

            entity.Property(e => e.Awb)
                .HasMaxLength(20)
                .IsUnicode(false)
                .HasColumnName("awb");
            entity.Property(e => e.DtGeracao)
                .HasDefaultValueSql("(getdate())")
                .HasColumnType("datetime")
                .HasColumnName("dtGeracao");
        });

        modelBuilder.Entity<ManifestoOrigem>(entity =>
        {
            entity.HasKey(e => e.IdManifesto).HasName("PK__Manifest__C64EFAE53659DEEC");

            entity.ToTable("ManifestoOrigem");

            entity.Property(e => e.IdManifesto)
                .ValueGeneratedNever()
                .HasColumnName("idManifesto");
            entity.Property(e => e.TipoOrigem).HasMaxLength(20);
        });

        modelBuilder.Entity<ManifestoOrigemT>(entity =>
        {
            entity.ToTable("ManifestoOrigem_T");

            entity.Property(e => e.Id).HasColumnName("id");
            entity.Property(e => e.Codigo)
                .HasMaxLength(50)
                .HasColumnName("codigo");
            entity.Property(e => e.Descricao)
                .HasMaxLength(100)
                .HasColumnName("descricao");
        });

        modelBuilder.Entity<ManifestoPendentesEntrega>(entity =>
        {
            entity.HasKey(e => e.IdManifesto);

            entity.ToTable("ManifestoPendentesEntrega");

            entity.Property(e => e.IdManifesto)
                .ValueGeneratedNever()
                .HasColumnName("idManifesto");
        });

        modelBuilder.Entity<ManifestoPrevisoesEntrega>(entity =>
        {
            entity.ToTable("ManifestoPrevisoesEntrega");

            entity.HasIndex(e => new { e.IdManifesto, e.Data }, "idx_idManifesto_data").HasFillFactor(80);

            entity.Property(e => e.Id).HasColumnName("id");
            entity.Property(e => e.Data)
                .HasColumnType("date")
                .HasColumnName("data");
            entity.Property(e => e.DtIntrod)
                .HasColumnType("datetime")
                .HasColumnName("dtIntrod");
            entity.Property(e => e.HoraFim).HasColumnName("horaFim");
            entity.Property(e => e.HoraInicio).HasColumnName("horaInicio");
            entity.Property(e => e.IdManifesto).HasColumnName("idManifesto");
            entity.Property(e => e.IdMotorista).HasColumnName("idMotorista");
            entity.Property(e => e.IdPrevisoesEntrega).HasColumnName("idPrevisoesEntrega");
            entity.Property(e => e.IdRota).HasColumnName("idRota");
            entity.Property(e => e.IdUtilIntrod).HasColumnName("idUtilIntrod");
        });

        modelBuilder.Entity<ManifestoRazoesNaoFacturarT>(entity =>
        {
            entity.ToTable("ManifestoRazoesNaoFacturar_T");

            entity.Property(e => e.Id)
                .ValueGeneratedNever()
                .HasColumnName("id");
            entity.Property(e => e.Activo).HasColumnName("activo");
            entity.Property(e => e.Codigo)
                .HasMaxLength(15)
                .HasColumnName("codigo");
            entity.Property(e => e.Descricao)
                .HasMaxLength(50)
                .HasColumnName("descricao");
            entity.Property(e => e.IdEntidade).HasColumnName("idEntidade");
            entity.Property(e => e.IdRegime).HasColumnName("idRegime");
        });

        modelBuilder.Entity<ManifestoRecolha>(entity =>
        {
            entity.HasKey(e => new { e.IdManifesto, e.IdPickup }).HasName("PK__Manifest__23304AE7269F055B");

            entity.ToTable("ManifestoRecolha");

            entity.HasIndex(e => e.IdPickup, "idx_idPickup").HasFillFactor(80);

            entity.Property(e => e.IdManifesto).HasColumnName("idManifesto");
            entity.Property(e => e.IdPickup).HasColumnName("idPickup");
            entity.Property(e => e.DtIntrod)
                .HasColumnType("datetime")
                .HasColumnName("dtIntrod");
            entity.Property(e => e.IdUtilIntrod).HasColumnName("idUtilIntrod");
        });

        modelBuilder.Entity<ManifestoRecolhaLog>(entity =>
        {
            entity.HasKey(e => e.Id).HasName("PK__Manifest__3213E83F6AC58036");

            entity.ToTable("ManifestoRecolha_LOG");

            entity.Property(e => e.Id).HasColumnName("id");
            entity.Property(e => e.DtIntrod)
                .HasColumnType("datetime")
                .HasColumnName("dtIntrod");
            entity.Property(e => e.DtIntrodTabela)
                .HasDefaultValueSql("(getdate())")
                .HasColumnType("datetime")
                .HasColumnName("dtIntrodTabela");
            entity.Property(e => e.IdManifesto).HasColumnName("idManifesto");
            entity.Property(e => e.IdPickup).HasColumnName("idPickup");
            entity.Property(e => e.IdUtilIntrodtabela).HasColumnName("idUtilIntrodtabela");
            entity.Property(e => e.IdUtilintrod).HasColumnName("idUtilintrod");
        });

        modelBuilder.Entity<ManifestoRecolhaPrevistum>(entity =>
        {
            entity.HasKey(e => new { e.IdManifesto, e.IdPickup }).HasName("PK__Manifest__23304AE722CE7477");

            entity.Property(e => e.IdManifesto).HasColumnName("idManifesto");
            entity.Property(e => e.IdPickup).HasColumnName("idPickup");
            entity.Property(e => e.DtIntrod)
                .HasColumnType("datetime")
                .HasColumnName("dtIntrod");
            entity.Property(e => e.IdUtilIntrod).HasColumnName("idUtilIntrod");
        });

        modelBuilder.Entity<ManifestoReferencia>(entity =>
        {
            entity.HasKey(e => new { e.IdManifesto, e.IdManifRefTipo }).HasName("PK__Manifest__357D030026348DDD");

            entity.HasIndex(e => new { e.Referencia, e.IdEntidade }, "idx_referencia_idEntidade").HasFillFactor(80);

            entity.Property(e => e.IdManifesto).HasColumnName("idManifesto");
            entity.Property(e => e.IdManifRefTipo).HasColumnName("idManifRefTipo");
            entity.Property(e => e.DtIntrod)
                .HasDefaultValueSql("(getdate())")
                .HasColumnType("datetime")
                .HasColumnName("dtIntrod");
            entity.Property(e => e.DtUltAct)
                .HasColumnType("datetime")
                .HasColumnName("dtUltAct");
            entity.Property(e => e.IdEntidade).HasColumnName("idEntidade");
            entity.Property(e => e.Referencia)
                .HasMaxLength(50)
                .IsUnicode(false)
                .HasColumnName("referencia");
        });

        modelBuilder.Entity<ManifestoReferenciasTipoT>(entity =>
        {
            entity.HasKey(e => e.Id).HasName("PK__Manifest__3213E83F2263FCF9");

            entity.ToTable("ManifestoReferenciasTipo_T");

            entity.HasIndex(e => e.Codigo, "idx_codigo");

            entity.Property(e => e.Id).HasColumnName("id");
            entity.Property(e => e.Codigo)
                .HasMaxLength(50)
                .IsUnicode(false)
                .HasColumnName("codigo");
            entity.Property(e => e.Descricao)
                .HasMaxLength(250)
                .IsUnicode(false)
                .HasColumnName("descricao");
        });

        modelBuilder.Entity<ManifestoRetencao>(entity =>
        {
            entity.HasKey(e => e.IdManifesto);

            entity.ToTable("ManifestoRetencao", tb => tb.HasTrigger("ManifestoRetencao_Log"));

            entity.Property(e => e.IdManifesto)
                .ValueGeneratedNever()
                .HasColumnName("idManifesto");
            entity.Property(e => e.Awb)
                .HasMaxLength(50)
                .HasColumnName("awb");
            entity.Property(e => e.DtFimReter)
                .HasColumnType("datetime")
                .HasColumnName("dtFimReter");
            entity.Property(e => e.DtReterAte)
                .HasColumnType("datetime")
                .HasColumnName("dtReterAte");
            entity.Property(e => e.DtReterEnvio)
                .HasColumnType("datetime")
                .HasColumnName("dtReterEnvio");
            entity.Property(e => e.IdEntidade).HasColumnName("idEntidade");
            entity.Property(e => e.IdUtilFimReter).HasColumnName("idUtilFimReter");
            entity.Property(e => e.IdUtilReterEnvio).HasColumnName("idUtilReterEnvio");
            entity.Property(e => e.ObsReterEnvio)
                .HasMaxLength(150)
                .HasColumnName("obsReterEnvio");
            entity.Property(e => e.ReterEnvio).HasColumnName("reterEnvio");
        });

        modelBuilder.Entity<ManifestoScan>(entity =>
        {
            entity.HasIndex(e => new { e.ScanDateDt, e.ScanDateTm }, "idx_ScanDateDt_scanDateTm")
                .IsDescending(false, true)
                .HasFillFactor(80);

            entity.HasIndex(e => e.IdGps, "idx_idGps").HasFillFactor(80);

            entity.HasIndex(e => new { e.IdManifesto, e.IdEntidade, e.ScanCode, e.ScanDate }, "idx_idManifesto_idEntidade_scancode_scandate")
                .IsDescending(false, false, false, true)
                .HasFillFactor(80);

            entity.HasIndex(e => new { e.IdRota, e.ScanCode }, "idx_idRota_scanCode").HasFillFactor(80);

            entity.HasIndex(e => new { e.IdRota, e.ScanDate }, "idx_idRota_scandate");

            entity.HasIndex(e => e.IdAssinatura, "idx_idassinatura")
                .IsDescending()
                .HasFillFactor(80);

            entity.HasIndex(e => e.ScanDate, "idx_scanDate").HasFillFactor(80);

            entity.HasIndex(e => new { e.ScanCode, e.IdEntidade }, "idx_scancode_idEntidade");

            entity.Property(e => e.Id)
                .ValueGeneratedNever()
                .HasColumnName("id");
            entity.Property(e => e.Awb)
                .HasMaxLength(50)
                .HasColumnName("awb");
            entity.Property(e => e.CodPlataforma)
                .HasMaxLength(5)
                .HasColumnName("codPlataforma");
            entity.Property(e => e.CodRota)
                .HasMaxLength(5)
                .HasColumnName("codRota");
            entity.Property(e => e.Comment)
                .HasMaxLength(250)
                .HasColumnName("comment");
            entity.Property(e => e.IdAssinatura).HasColumnName("idAssinatura");
            entity.Property(e => e.IdDistribuidor).HasColumnName("idDistribuidor");
            entity.Property(e => e.IdEntidade).HasColumnName("idEntidade");
            entity.Property(e => e.IdGps).HasColumnName("idGps");
            entity.Property(e => e.IdManifesto).HasColumnName("idManifesto");
            entity.Property(e => e.IdPlataforma).HasColumnName("idPlataforma");
            entity.Property(e => e.IdRota).HasColumnName("idRota");
            entity.Property(e => e.IdUtil).HasColumnName("idUtil");
            entity.Property(e => e.PostDate)
                .HasColumnType("datetime")
                .HasColumnName("postDate");
            entity.Property(e => e.ScanCode)
                .HasMaxLength(2)
                .HasColumnName("scanCode");
            entity.Property(e => e.ScanDate)
                .HasColumnType("datetime")
                .HasColumnName("scanDate");
            entity.Property(e => e.ScanDateDt)
                .HasColumnType("date")
                .HasColumnName("scanDateDt");
            entity.Property(e => e.ScanDateTm).HasColumnName("scanDateTm");
            entity.Property(e => e.ScanEntry)
                .HasMaxLength(1)
                .IsUnicode(false)
                .IsFixedLength()
                .HasColumnName("scanEntry");
            entity.Property(e => e.Signature)
                .HasMaxLength(30)
                .HasColumnName("signature");
        });

        modelBuilder.Entity<ManifestoScansFila>(entity =>
        {
            entity.HasKey(e => e.Id).HasName("PK_filaScans");

            entity.ToTable("ManifestoScansFila");

            entity.HasIndex(e => new { e.IdManifesto, e.ScanCode }, "idx_idManifesto_scanCode").HasFillFactor(80);

            entity.HasIndex(e => e.Processado, "idx_processado");

            entity.Property(e => e.Id).HasColumnName("id");
            entity.Property(e => e.Comment)
                .HasMaxLength(250)
                .IsUnicode(false)
                .HasColumnName("comment");
            entity.Property(e => e.DtProcessado)
                .HasColumnType("datetime")
                .HasColumnName("dtProcessado");
            entity.Property(e => e.IdImpScanTratado).HasColumnName("idImpScanTratado");
            entity.Property(e => e.IdManifesto).HasColumnName("idManifesto");
            entity.Property(e => e.IdPlataforma).HasColumnName("idPlataforma");
            entity.Property(e => e.IdRota).HasColumnName("idRota");
            entity.Property(e => e.IdScan).HasColumnName("idScan");
            entity.Property(e => e.IdTipoTrata).HasColumnName("idTipoTrata");
            entity.Property(e => e.IdUtil).HasColumnName("idUtil");
            entity.Property(e => e.Interface).HasColumnName("interface");
            entity.Property(e => e.Origem)
                .HasMaxLength(1)
                .IsUnicode(false)
                .HasColumnName("origem");
            entity.Property(e => e.Processado).HasColumnName("processado");
            entity.Property(e => e.ScanCode)
                .HasMaxLength(2)
                .IsUnicode(false)
                .HasColumnName("scanCode");
            entity.Property(e => e.ScanDate)
                .HasColumnType("datetime")
                .HasColumnName("scanDate");
            entity.Property(e => e.ScanEntry)
                .HasMaxLength(1)
                .IsUnicode(false)
                .HasColumnName("scanEntry");
            entity.Property(e => e.Signature)
                .HasMaxLength(30)
                .IsUnicode(false)
                .HasColumnName("signature");
        });

        modelBuilder.Entity<ManifestoScansInterface>(entity =>
        {
            entity.HasKey(e => new { e.IdManifestoScan, e.IdManifestoScanInterfaceTipo });

            entity.ToTable("ManifestoScansInterface");

            entity.HasIndex(e => new { e.IdManifestoScanInterfaceTipo, e.DtEnv }, "idx_idTipo_dtEnv").HasFillFactor(80);

            entity.Property(e => e.IdManifestoScan).HasColumnName("idManifestoScan");
            entity.Property(e => e.IdManifestoScanInterfaceTipo).HasColumnName("idManifestoScanInterfaceTipo");
            entity.Property(e => e.DtEnv)
                .HasColumnType("datetime")
                .HasColumnName("dtEnv");
        });

        modelBuilder.Entity<ManifestoScansInterface2>(entity =>
        {
            entity.HasKey(e => new { e.IdManifestoScan, e.IdManifestoScanInterfaceTipo }).HasName("PK_ManifestoScansInterface2");

            entity.ToTable("ManifestoScansInterface_2");

            entity.HasIndex(e => new { e.IdManifestoScanInterfaceTipo, e.DtEnv }, "idx_idTipo_dtEnv").HasFillFactor(80);

            entity.Property(e => e.IdManifestoScan).HasColumnName("idManifestoScan");
            entity.Property(e => e.IdManifestoScanInterfaceTipo).HasColumnName("idManifestoScanInterfaceTipo");
            entity.Property(e => e.DtEnv)
                .HasColumnType("datetime")
                .HasColumnName("dtEnv");
        });

        modelBuilder.Entity<ManifestoScansInterfaceRejection>(entity =>
        {
            entity.Property(e => e.Id).HasColumnName("id");
            entity.Property(e => e.Awb)
                .HasMaxLength(50)
                .HasColumnName("awb");
            entity.Property(e => e.DtIntrod)
                .HasColumnType("date")
                .HasColumnName("dtIntrod");
            entity.Property(e => e.DtResolved)
                .HasColumnType("date")
                .HasColumnName("dtResolved");
            entity.Property(e => e.ErrorCode)
                .HasMaxLength(2)
                .IsFixedLength()
                .HasColumnName("errorCode");
            entity.Property(e => e.ErrorMessage)
                .HasColumnType("ntext")
                .HasColumnName("errorMessage");
            entity.Property(e => e.IdEntidade)
                .HasDefaultValueSql("((1))")
                .HasColumnName("idEntidade");
            entity.Property(e => e.IdFicheiro).HasColumnName("idFicheiro");
            entity.Property(e => e.IdManifesto).HasColumnName("idManifesto");
            entity.Property(e => e.IdScan).HasColumnName("idScan");
            entity.Property(e => e.IdUtilResolved).HasColumnName("idUtilResolved");
            entity.Property(e => e.ScanCode)
                .HasMaxLength(2)
                .IsFixedLength()
                .HasColumnName("scanCode");
            entity.Property(e => e.ScanDate)
                .HasColumnType("date")
                .HasColumnName("scanDate");
            entity.Property(e => e.ScanLocation)
                .HasMaxLength(5)
                .HasColumnName("scanLocation");
            entity.Property(e => e.ScanRoute)
                .HasMaxLength(5)
                .HasColumnName("scanRoute");
            entity.Property(e => e.ScanTime).HasColumnName("scanTime");
            entity.Property(e => e.TmIntrod).HasColumnName("tmIntrod");
            entity.Property(e => e.TmResolved).HasColumnName("tmResolved");
        });

        modelBuilder.Entity<ManifestoScansInterfaceRejectionsErrorCodesT>(entity =>
        {
            entity.HasKey(e => e.ErrorCode).HasName("PK_ManifestoScansTransferErrorCodes_T");

            entity.ToTable("ManifestoScansInterfaceRejectionsErrorCodes_T");

            entity.Property(e => e.ErrorCode)
                .HasMaxLength(2)
                .IsUnicode(false)
                .IsFixedLength()
                .HasColumnName("errorCode");
            entity.Property(e => e.Descricao)
                .HasMaxLength(50)
                .HasColumnName("descricao");
        });

        modelBuilder.Entity<ManifestoScansInterfaceTipoT>(entity =>
        {
            entity.ToTable("ManifestoScansInterfaceTipo_T");

            entity.Property(e => e.Id).HasColumnName("id");
            entity.Property(e => e.Activo)
                .IsRequired()
                .HasDefaultValueSql("((1))")
                .HasColumnName("activo");
            entity.Property(e => e.Codigo)
                .HasMaxLength(15)
                .HasColumnName("codigo");
            entity.Property(e => e.Descricao)
                .HasMaxLength(50)
                .HasColumnName("descricao");
        });

        modelBuilder.Entity<ManifestoScansTempBuytragoDuplicado>(entity =>
        {
            entity
                .HasNoKey()
                .ToTable("ManifestoScans_TempBuytragoDuplicados");

            entity.Property(e => e.Awb)
                .HasMaxLength(20)
                .HasColumnName("awb");
            entity.Property(e => e.CodPlataforma)
                .HasMaxLength(5)
                .HasColumnName("codPlataforma");
            entity.Property(e => e.CodRota)
                .HasMaxLength(5)
                .HasColumnName("codRota");
            entity.Property(e => e.Comment)
                .HasMaxLength(30)
                .HasColumnName("comment");
            entity.Property(e => e.Id).HasColumnName("id");
            entity.Property(e => e.IdAssinatura).HasColumnName("idAssinatura");
            entity.Property(e => e.IdDistribuidor).HasColumnName("idDistribuidor");
            entity.Property(e => e.IdEntidade).HasColumnName("idEntidade");
            entity.Property(e => e.IdGps).HasColumnName("idGps");
            entity.Property(e => e.IdManifesto).HasColumnName("idManifesto");
            entity.Property(e => e.IdPlataforma).HasColumnName("idPlataforma");
            entity.Property(e => e.IdRota).HasColumnName("idRota");
            entity.Property(e => e.IdUtil).HasColumnName("idUtil");
            entity.Property(e => e.PostDate)
                .HasColumnType("datetime")
                .HasColumnName("postDate");
            entity.Property(e => e.ScanCode)
                .HasMaxLength(2)
                .HasColumnName("scanCode");
            entity.Property(e => e.ScanDate)
                .HasColumnType("datetime")
                .HasColumnName("scanDate");
            entity.Property(e => e.ScanDateDt)
                .HasColumnType("date")
                .HasColumnName("scanDateDt");
            entity.Property(e => e.ScanDateTm).HasColumnName("scanDateTm");
            entity.Property(e => e.ScanEntry)
                .HasMaxLength(1)
                .IsUnicode(false)
                .IsFixedLength()
                .HasColumnName("scanEntry");
            entity.Property(e => e.Signature)
                .HasMaxLength(30)
                .HasColumnName("signature");
        });

        modelBuilder.Entity<ManifestoScansTratar>(entity =>
        {
            entity.HasKey(e => new { e.IdScan, e.IdOrigem });

            entity.ToTable("ManifestoScansTratar");

            entity.HasIndex(e => new { e.IdManifesto, e.IdEntidade, e.IdScan }, "idx_idManifesto_idEntidade_idScan").HasFillFactor(80);

            entity.HasIndex(e => new { e.IsTratado, e.IdScanMaster }, "idx_isTratado_idScanMaster").HasFillFactor(80);

            entity.Property(e => e.IdScan).HasColumnName("idScan");
            entity.Property(e => e.IdOrigem).HasColumnName("idOrigem");
            entity.Property(e => e.CPostalTrata)
                .HasMaxLength(10)
                .HasColumnName("cPostalTrata");
            entity.Property(e => e.CtcTrata)
                .HasMaxLength(50)
                .HasColumnName("ctcTrata");
            entity.Property(e => e.DtAplicarTratamento)
                .HasColumnType("datetime")
                .HasColumnName("dtAplicarTratamento");
            entity.Property(e => e.DtIntrod)
                .HasDefaultValueSql("(getdate())")
                .HasColumnType("datetime")
                .HasColumnName("dtIntrod");
            entity.Property(e => e.DtTrata)
                .HasColumnType("datetime")
                .HasColumnName("dtTrata");
            entity.Property(e => e.EmailTrata)
                .HasMaxLength(100)
                .HasColumnName("emailTrata");
            entity.Property(e => e.IdCpostalTrata).HasColumnName("idCPostalTrata");
            entity.Property(e => e.IdEntidade).HasColumnName("idEntidade");
            entity.Property(e => e.IdManifesto).HasColumnName("idManifesto");
            entity.Property(e => e.IdPaisTrata).HasColumnName("idPaisTrata");
            entity.Property(e => e.IdScanMaster).HasColumnName("idScanMaster");
            entity.Property(e => e.IdScanTrata)
                .HasMaxLength(10)
                .IsFixedLength()
                .HasColumnName("idScanTrata");
            entity.Property(e => e.IdTipoTrata).HasColumnName("idTipoTrata");
            entity.Property(e => e.IdTrataDept).HasColumnName("idTrataDept");
            entity.Property(e => e.IdUtilTrata).HasColumnName("idUtilTrata");
            entity.Property(e => e.IsTratado).HasColumnName("isTratado");
            entity.Property(e => e.LocalidadeTrata)
                .HasMaxLength(34)
                .HasColumnName("localidadeTrata");
            entity.Property(e => e.MoradaTrata)
                .HasMaxLength(68)
                .HasColumnName("moradaTrata");
            entity.Property(e => e.ObsTrata).HasColumnName("obsTrata");
            entity.Property(e => e.PaisTrata)
                .HasMaxLength(2)
                .HasColumnName("paisTrata");
            entity.Property(e => e.TelfTrata)
                .HasMaxLength(50)
                .HasColumnName("telfTrata");
        });

        modelBuilder.Entity<ManifestoScansTratarOrigemT>(entity =>
        {
            entity.ToTable("ManifestoScansTratarOrigem_T");

            entity.Property(e => e.Id)
                .ValueGeneratedOnAdd()
                .HasColumnName("id");
            entity.Property(e => e.Activo)
                .IsRequired()
                .HasDefaultValueSql("((1))")
                .HasColumnName("activo");
            entity.Property(e => e.Codigo)
                .HasMaxLength(10)
                .HasColumnName("codigo");
            entity.Property(e => e.Descricao)
                .HasMaxLength(50)
                .HasColumnName("descricao");
            entity.Property(e => e.IdEntidade).HasColumnName("idEntidade");
            entity.Property(e => e.IdRegime).HasColumnName("idRegime");
        });

        modelBuilder.Entity<ManifestoSeguranca>(entity =>
        {
            entity.HasKey(e => e.IdManifesto);

            entity.ToTable("ManifestoSeguranca");

            entity.Property(e => e.IdManifesto)
                .ValueGeneratedNever()
                .HasColumnName("idManifesto");
            entity.Property(e => e.Concluido).HasColumnName("concluido");
            entity.Property(e => e.DtIntrod)
                .HasDefaultValueSql("(getdate())")
                .HasColumnType("datetime")
                .HasColumnName("dtIntrod");
            entity.Property(e => e.IdUtilIntrod).HasColumnName("idUtilIntrod");
        });

        modelBuilder.Entity<ManifestoSegurancaAlerta>(entity =>
        {
            entity.HasKey(e => e.Id).HasName("PK_ManifestoSegurancaAlertas_1");

            entity.HasIndex(e => e.DtIntrod, "Idx_DtIntrod");

            entity.HasIndex(e => new { e.IdTipoAlerta, e.DtFecho }, "Idx_IdTipoAlerta_DtFecho");

            entity.Property(e => e.Id).HasColumnName("id");
            entity.Property(e => e.DtFecho)
                .HasColumnType("datetime")
                .HasColumnName("dtFecho");
            entity.Property(e => e.DtIntrod)
                .HasDefaultValueSql("(getdate())")
                .HasColumnType("datetime")
                .HasColumnName("dtIntrod");
            entity.Property(e => e.IdManifesto).HasColumnName("idManifesto");
            entity.Property(e => e.IdPlataforma).HasColumnName("idPlataforma");
            entity.Property(e => e.IdRota).HasColumnName("idRota");
            entity.Property(e => e.IdScanFecho).HasColumnName("idScanFecho");
            entity.Property(e => e.IdScanIntrod).HasColumnName("idScanIntrod");
            entity.Property(e => e.IdTipoAlerta).HasColumnName("idTipoAlerta");
        });

        modelBuilder.Entity<ManifestoSegurancaAlertaTipoT>(entity =>
        {
            entity.ToTable("ManifestoSegurancaAlertaTipo_T");

            entity.Property(e => e.Id)
                .ValueGeneratedOnAdd()
                .HasColumnName("id");
            entity.Property(e => e.Activo)
                .IsRequired()
                .HasDefaultValueSql("((1))")
                .HasColumnName("activo");
            entity.Property(e => e.Codigo)
                .HasMaxLength(15)
                .HasColumnName("codigo");
            entity.Property(e => e.DescCurta)
                .HasMaxLength(25)
                .HasColumnName("descCurta");
            entity.Property(e => e.Descricao)
                .HasMaxLength(100)
                .HasColumnName("descricao");
        });

        modelBuilder.Entity<ManifestoTipoT>(entity =>
        {
            entity.ToTable("ManifestoTipo_T");

            entity.Property(e => e.Id).HasColumnName("id");
            entity.Property(e => e.Activo)
                .IsRequired()
                .HasDefaultValueSql("((1))")
                .HasColumnName("activo");
            entity.Property(e => e.Codigo)
                .HasMaxLength(15)
                .HasColumnName("codigo");
            entity.Property(e => e.Descricao)
                .HasMaxLength(50)
                .HasColumnName("descricao");
        });

        modelBuilder.Entity<ManifestoTnt>(entity =>
        {
            entity.HasKey(e => e.IdManifesto);

            entity.ToTable("ManifestoTNT");

            entity.Property(e => e.IdManifesto)
                .ValueGeneratedNever()
                .HasColumnName("idManifesto");
            entity.Property(e => e.DtIntrod)
                .HasDefaultValueSql("(getdate())")
                .HasColumnType("datetime")
                .HasColumnName("dtIntrod");
            entity.Property(e => e.IdPlataforma).HasColumnName("idPlataforma");
            entity.Property(e => e.RouteDate)
                .HasColumnType("date")
                .HasColumnName("routeDate");
        });

        modelBuilder.Entity<ManifestoUltScan>(entity =>
        {
            entity.HasKey(e => e.IdManifesto);

            entity.ToTable("ManifestoUltScan");

            entity.HasIndex(e => e.IdUltScan, "Idx_idUltScan").HasFillFactor(80);

            entity.HasIndex(e => new { e.IdEstadoManifesto, e.IdEntidade }, "idx_IdEstadoManifesto_idEntidade");

            entity.HasIndex(e => new { e.Anulado, e.Concluido, e.IdRegime, e.IdEntidade, e.IdDistribuidor }, "idx_anulado_concluido_idRegime_idEntidade_idDistribuidor").HasFillFactor(80);

            entity.Property(e => e.IdManifesto)
                .ValueGeneratedNever()
                .HasColumnName("idManifesto");
            entity.Property(e => e.Anulado).HasColumnName("anulado");
            entity.Property(e => e.Awb)
                .HasMaxLength(50)
                .HasColumnName("awb");
            entity.Property(e => e.Concluido).HasColumnName("concluido");
            entity.Property(e => e.IdDistribuidor).HasColumnName("idDistribuidor");
            entity.Property(e => e.IdEntidade).HasColumnName("idEntidade");
            entity.Property(e => e.IdEstadoManifesto).HasColumnName("idEstadoManifesto");
            entity.Property(e => e.IdRegime).HasColumnName("idRegime");
            entity.Property(e => e.IdUltScan).HasColumnName("idUltScan");
            entity.Property(e => e.IdUltScanOpDistr).HasColumnName("idUltScanOpDistr");
            entity.Property(e => e.IdUltScanSd).HasColumnName("idUltScanSD");
        });

        modelBuilder.Entity<ManifestoVolume>(entity =>
        {
            entity.HasKey(e => e.IdManifesto);

            entity.ToTable(tb => tb.HasTrigger("ManifestoVolumes_Log"));

            entity.HasIndex(e => e.Awb, "idx_awb").HasFillFactor(80);

            entity.HasIndex(e => new { e.IdEntidade, e.DtConfOrig }, "idx_idEntidade_dtConfOrig");

            entity.Property(e => e.IdManifesto)
                .ValueGeneratedNever()
                .HasColumnName("idManifesto");
            entity.Property(e => e.Altura)
                .HasColumnType("money")
                .HasColumnName("altura");
            entity.Property(e => e.AlturaOrig)
                .HasColumnType("money")
                .HasColumnName("alturaOrig");
            entity.Property(e => e.AlturaReal)
                .HasColumnType("money")
                .HasColumnName("alturaReal");
            entity.Property(e => e.Awb)
                .HasMaxLength(50)
                .HasColumnName("awb");
            entity.Property(e => e.Comprimento)
                .HasColumnType("money")
                .HasColumnName("comprimento");
            entity.Property(e => e.ComprimentoOrig)
                .HasColumnType("money")
                .HasColumnName("comprimentoOrig");
            entity.Property(e => e.ComprimentoReal)
                .HasColumnType("money")
                .HasColumnName("comprimentoReal");
            entity.Property(e => e.Descricao)
                .HasMaxLength(200)
                .HasColumnName("descricao");
            entity.Property(e => e.DtConfOrig)
                .HasColumnType("datetime")
                .HasColumnName("dtConfOrig");
            entity.Property(e => e.DtUltAct)
                .HasDefaultValueSql("(getdate())")
                .HasColumnType("datetime")
                .HasColumnName("dtUltAct");
            entity.Property(e => e.IdEntidade).HasColumnName("idEntidade");
            entity.Property(e => e.IdMoeda).HasColumnName("idMoeda");
            entity.Property(e => e.IdPaisManufactura).HasColumnName("idPaisManufactura");
            entity.Property(e => e.IdTipoProduto).HasColumnName("idTipoProduto");
            entity.Property(e => e.IdTipoProdutoOrig).HasColumnName("idTipoProdutoOrig");
            entity.Property(e => e.IdUnidM3).HasColumnName("idUnidM3");
            entity.Property(e => e.IdUnidM3orig).HasColumnName("idUnidM3Orig");
            entity.Property(e => e.IdUnidadeMetrica).HasColumnName("idUnidadeMetrica");
            entity.Property(e => e.IdUnidadeMetricaOrig).HasColumnName("idUnidadeMetricaOrig");
            entity.Property(e => e.IdUnidadePeso).HasColumnName("idUnidadePeso");
            entity.Property(e => e.IdUnidadePesoOrig).HasColumnName("idUnidadePesoOrig");
            entity.Property(e => e.IdUnidadePesoVolumetrico).HasColumnName("idUnidadePesoVolumetrico");
            entity.Property(e => e.IdUnidadePesoVolumetricoOrig).HasColumnName("idUnidadePesoVolumetricoOrig");
            entity.Property(e => e.IdUtilUltAct).HasColumnName("idUtilUltAct");
            entity.Property(e => e.Largura)
                .HasColumnType("money")
                .HasColumnName("largura");
            entity.Property(e => e.LarguraOrig)
                .HasColumnType("money")
                .HasColumnName("larguraOrig");
            entity.Property(e => e.LarguraReal)
                .HasColumnType("money")
                .HasColumnName("larguraReal");
            entity.Property(e => e.M3orig).HasColumnName("M3Orig");
            entity.Property(e => e.M3real).HasColumnName("M3Real");
            entity.Property(e => e.Peso)
                .HasColumnType("money")
                .HasColumnName("peso");
            entity.Property(e => e.PesoOrig)
                .HasColumnType("money")
                .HasColumnName("pesoOrig");
            entity.Property(e => e.PesoReal)
                .HasColumnType("money")
                .HasColumnName("pesoReal");
            entity.Property(e => e.PesoVolumetrico)
                .HasColumnType("money")
                .HasColumnName("pesoVolumetrico");
            entity.Property(e => e.PesoVolumetricoOrig)
                .HasColumnType("money")
                .HasColumnName("pesoVolumetricoOrig");
            entity.Property(e => e.ValorMercadoria)
                .HasDefaultValueSql("((0))")
                .HasColumnType("money")
                .HasColumnName("valorMercadoria");
        });

        modelBuilder.Entity<ManifestosCliente>(entity =>
        {
            entity
                .HasNoKey()
                .ToTable("manifestosCliente");

            entity.HasIndex(e => new { e.AwbNumber, e.IdCliente }, "idx_awb_idCliente").HasFillFactor(80);

            entity.HasIndex(e => new { e.IdManifesto, e.IdCliente, e.DtEnvio }, "idx_idManif_idCliente_dtEnvio").HasFillFactor(80);

            entity.Property(e => e.AwbNumber)
                .HasMaxLength(20)
                .IsUnicode(false)
                .HasColumnName("awbNumber");
            entity.Property(e => e.DtEnvio)
                .HasColumnType("datetime")
                .HasColumnName("dtEnvio");
            entity.Property(e => e.DtIntrod)
                .HasColumnType("datetime")
                .HasColumnName("dtIntrod");
            entity.Property(e => e.IdCliMorada).HasColumnName("idCliMorada");
            entity.Property(e => e.IdCliente).HasColumnName("idCliente");
            entity.Property(e => e.IdEntidade).HasColumnName("idEntidade");
            entity.Property(e => e.IdExportacao).HasColumnName("idExportacao");
            entity.Property(e => e.IdManifesto).HasColumnName("idManifesto");
            entity.Property(e => e.UtilIntrod).HasColumnName("utilIntrod");
        });

        modelBuilder.Entity<ManifestosDeleteLog>(entity =>
        {
            entity.ToTable("ManifestosDeleteLog");

            entity.Property(e => e.Id).HasColumnName("id");
            entity.Property(e => e.Data)
                .HasDefaultValueSql("(getdate())")
                .HasColumnType("datetime")
                .HasColumnName("data");
            entity.Property(e => e.IdManifesto).HasColumnName("idManifesto");
        });

        modelBuilder.Entity<MapEstadosFedexScan>(entity =>
        {
            entity.HasKey(e => e.Id).HasName("PK__MapEstad__3213E83F2C2C3F52");

            entity.Property(e => e.Id).HasColumnName("id");
            entity.Property(e => e.Descricao).HasMaxLength(500);
            entity.Property(e => e.EventCode).HasMaxLength(2);
            entity.Property(e => e.ScanCode)
                .HasMaxLength(2)
                .HasColumnName("scanCode");
        });

        modelBuilder.Entity<MapEstadosFedexScansV2>(entity =>
        {
            entity.HasKey(e => e.Id).HasName("PK__MapEstad__3213E83F4D93DC7E");

            entity.ToTable("MapEstadosFedexScansV2");

            entity.Property(e => e.Id).HasColumnName("id");
            entity.Property(e => e.Descricao).HasMaxLength(500);
            entity.Property(e => e.EventCode).HasMaxLength(2);
            entity.Property(e => e.ExceptionCode).HasMaxLength(10);
            entity.Property(e => e.ScanCode)
                .HasMaxLength(2)
                .HasColumnName("scanCode");
        });

        modelBuilder.Entity<MapScanCodeGeodisRgl>(entity =>
        {
            entity.HasKey(e => e.Id).HasName("PK__MapScanC__3214EC271D0976E0");

            entity.ToTable("MapScanCodeGeodis_RGL");

            entity.Property(e => e.Id).HasColumnName("ID");
            entity.Property(e => e.Descricao).HasMaxLength(200);
            entity.Property(e => e.DescricaoWeb).HasMaxLength(200);
            entity.Property(e => e.EventCode).HasMaxLength(10);
            entity.Property(e => e.ReasonCode).HasMaxLength(10);
            entity.Property(e => e.ScanCodeRgl)
                .HasMaxLength(5)
                .HasColumnName("ScanCodeRGL");
            entity.Property(e => e.TextoLivre).HasMaxLength(200);
        });

        modelBuilder.Entity<MapScanCodeRglBtg>(entity =>
        {
            entity.HasKey(e => e.Id).HasName("PK__MapScanC__3214EC2703702D5A");

            entity.ToTable("MapScanCodeRGL_BTG");

            entity.Property(e => e.Id).HasColumnName("ID");
            entity.Property(e => e.CodInc).HasMaxLength(4);
            entity.Property(e => e.Descricao).HasMaxLength(255);
            entity.Property(e => e.Recolha).HasDefaultValueSql("((0))");
            entity.Property(e => e.ScanCodeRgl)
                .HasMaxLength(2)
                .HasColumnName("ScanCodeRGL");
        });

        modelBuilder.Entity<MapScanCodeRglGeodi>(entity =>
        {
            entity.HasKey(e => e.Id).HasName("PK__MapScanC__3214EC276D127771");

            entity.ToTable("MapScanCodeRGL_Geodis");

            entity.Property(e => e.Id).HasColumnName("ID");
            entity.Property(e => e.Descricao).HasMaxLength(200);
            entity.Property(e => e.DescricaoWeb).HasMaxLength(200);
            entity.Property(e => e.EventCode).HasMaxLength(10);
            entity.Property(e => e.ReasonCode).HasMaxLength(10);
            entity.Property(e => e.ScanCodeRgl)
                .HasMaxLength(5)
                .HasColumnName("ScanCodeRGL");
            entity.Property(e => e.TextoLivre).HasMaxLength(200);
        });

        modelBuilder.Entity<MapeamentoGrupoFuncao>(entity =>
        {
            entity
                .HasNoKey()
                .ToTable("MapeamentoGrupoFuncao");

            entity.Property(e => e.IdFuncao).HasColumnName("idFuncao");
            entity.Property(e => e.IdGrupo).HasColumnName("idGrupo");
        });

        modelBuilder.Entity<MapeamentoScanCode>(entity =>
        {
            entity.HasKey(e => e.Id).HasName("PK__Mapeamen__3214EC27717D8FFA");

            entity.Property(e => e.Id).HasColumnName("ID");
            entity.Property(e => e.Activo).HasColumnName("activo");
            entity.Property(e => e.Descricao).HasMaxLength(200);
            entity.Property(e => e.DescricaoWeb).HasMaxLength(200);
            entity.Property(e => e.DtIntrod)
                .HasColumnType("datetime")
                .HasColumnName("dtIntrod");
            entity.Property(e => e.DtUltAct)
                .HasDefaultValueSql("(getdate())")
                .HasColumnType("datetime")
                .HasColumnName("dtUltAct");
            entity.Property(e => e.Er)
                .HasMaxLength(20)
                .HasColumnName("ER");
            entity.Property(e => e.EventCode).HasMaxLength(10);
            entity.Property(e => e.IdCliente).HasColumnName("idCliente");
            entity.Property(e => e.IdUtilIntrod).HasColumnName("idUtilIntrod");
            entity.Property(e => e.IdUtilUltAct).HasColumnName("idUtilUltAct");
            entity.Property(e => e.ReasonCode).HasMaxLength(10);
            entity.Property(e => e.ScanCodeRgl)
                .HasMaxLength(5)
                .HasColumnName("ScanCodeRGL");
            entity.Property(e => e.Sentido)
                .HasMaxLength(30)
                .HasDefaultValueSql("('INBOUND')")
                .HasColumnName("sentido");
            entity.Property(e => e.TextoLivre).HasMaxLength(200);
        });

        modelBuilder.Entity<MapeamentoServicoProdutosT>(entity =>
        {
            entity.HasKey(e => e.Id).HasName("PK__Mapeamen__3214EC274E26D6BB");

            entity.ToTable("MapeamentoServicoProdutos_T");

            entity.Property(e => e.Id).HasColumnName("ID");
            entity.Property(e => e.DescricaoProduto).HasMaxLength(50);
            entity.Property(e => e.DescricaoServico).HasMaxLength(50);
            entity.Property(e => e.IdProduto).HasColumnName("idProduto");
            entity.Property(e => e.IdServico).HasColumnName("idServico");
            entity.Property(e => e.ServicePacking).HasMaxLength(50);
        });

        modelBuilder.Entity<MarcoTeste>(entity =>
        {
            entity.ToTable("MarcoTeste", tb => tb.HasTrigger("marcotestLog"));

            entity.Property(e => e.Id).HasColumnName("id");
            entity.Property(e => e.Bb)
                .HasMaxLength(10)
                .IsFixedLength()
                .HasColumnName("bb");
            entity.Property(e => e.Cc)
                .HasMaxLength(10)
                .IsFixedLength()
                .HasColumnName("cc");
            entity.Property(e => e.Nome)
                .HasMaxLength(50)
                .HasColumnName("nome");
            entity.Property(e => e.Novacoluina)
                .HasMaxLength(50)
                .HasColumnName("novacoluina");
            entity.Property(e => e.Reta)
                .HasMaxLength(10)
                .IsFixedLength()
                .HasColumnName("reta");
            entity.Property(e => e.Ta)
                .HasMaxLength(10)
                .IsFixedLength()
                .HasColumnName("ta");
            entity.Property(e => e.Teste).HasColumnName("teste");
        });

        modelBuilder.Entity<MaterialPedido>(entity =>
        {
            entity.HasKey(e => e.Id).HasName("PK_T_MaterialPedido");

            entity.ToTable("MaterialPedido", tb => tb.HasTrigger("AlteracaoEntregaFacturada_Trigger"));

            entity.HasIndex(e => e.DtPedido, "IDX_DtPedido").HasFillFactor(80);

            entity.HasIndex(e => e.Idrota, "IDX_IdRota").HasFillFactor(80);

            entity.HasIndex(e => e.IdManifesto, "idx_idManifesto");

            entity.HasIndex(e => e.IdCliente, "idx_idcliente").HasFillFactor(80);

            entity.Property(e => e.Id).HasColumnName("id");
            entity.Property(e => e.Anulado)
                .HasDefaultValueSql("(0)")
                .HasColumnName("anulado");
            entity.Property(e => e.Assinatura)
                .HasMaxLength(50)
                .HasColumnName("assinatura");
            entity.Property(e => e.Cambio)
                .HasDefaultValueSql("(1)")
                .HasColumnType("money")
                .HasColumnName("cambio");
            entity.Property(e => e.CodIva)
                .HasMaxLength(10)
                .HasColumnName("codIva");
            entity.Property(e => e.Contacto)
                .HasMaxLength(50)
                .HasColumnName("contacto");
            entity.Property(e => e.DtAnulacao)
                .HasColumnType("datetime")
                .HasColumnName("dtAnulacao");
            entity.Property(e => e.DtEntregue)
                .HasColumnType("datetime")
                .HasColumnName("dtEntregue");
            entity.Property(e => e.DtEnvInterface)
                .HasColumnType("datetime")
                .HasColumnName("dtEnvInterface");
            entity.Property(e => e.DtExpToFact)
                .HasColumnType("datetime")
                .HasColumnName("dtExp_to_fact");
            entity.Property(e => e.DtFact)
                .HasColumnType("datetime")
                .HasColumnName("dtFact");
            entity.Property(e => e.DtFecho)
                .HasColumnType("datetime")
                .HasColumnName("dtFecho");
            entity.Property(e => e.DtIntrod)
                .HasDefaultValueSql("(getdate())")
                .HasColumnType("datetime")
                .HasColumnName("dtIntrod");
            entity.Property(e => e.DtParaFacturar)
                .HasColumnType("datetime")
                .HasColumnName("dtParaFacturar");
            entity.Property(e => e.DtPedido)
                .HasDefaultValueSql("(getdate())")
                .HasColumnType("datetime")
                .HasColumnName("dtPedido");
            entity.Property(e => e.DtRecolhido)
                .HasColumnType("datetime")
                .HasColumnName("dtRecolhido");
            entity.Property(e => e.DtUltAct)
                .HasColumnType("datetime")
                .HasColumnName("dtUltAct");
            entity.Property(e => e.DtValidToFact)
                .HasColumnType("datetime")
                .HasColumnName("dtValid_to_fact");
            entity.Property(e => e.DtValor)
                .HasColumnType("datetime")
                .HasColumnName("dtValor");
            entity.Property(e => e.Dtscan)
                .HasColumnType("datetime")
                .HasColumnName("dtscan");
            entity.Property(e => e.EnvInterface)
                .HasDefaultValueSql("(0)")
                .HasColumnName("envInterface");
            entity.Property(e => e.Enviado).HasColumnName("enviado");
            entity.Property(e => e.ExpToFact)
                .HasDefaultValueSql("(0)")
                .HasColumnName("exp_to_fact");
            entity.Property(e => e.Fact)
                .HasDefaultValueSql("(0)")
                .HasColumnName("fact");
            entity.Property(e => e.FacturacaoIndividual)
                .HasDefaultValueSql("(0)")
                .HasColumnName("facturacaoIndividual");
            entity.Property(e => e.FacturacaoIndividual1)
                .HasDefaultValueSql("(0)")
                .HasColumnName("facturacaoIndividual1");
            entity.Property(e => e.Fechado)
                .HasDefaultValueSql("(0)")
                .HasColumnName("fechado");
            entity.Property(e => e.IGCOM2Userserta).HasColumnName("iGCOM2Userserta");
            entity.Property(e => e.IdCliMorada).HasColumnName("idCliMorada");
            entity.Property(e => e.IdCliMoradaFact).HasColumnName("idCliMoradaFact");
            entity.Property(e => e.IdCliente).HasColumnName("idCliente");
            entity.Property(e => e.IdClienteFact).HasColumnName("idClienteFact");
            entity.Property(e => e.IdCpostalAlt).HasColumnName("idCpostalAlt");
            entity.Property(e => e.IdEntidade)
                .HasDefaultValueSql("(1)")
                .HasColumnName("idEntidade");
            entity.Property(e => e.IdIvaReg).HasColumnName("idIvaReg");
            entity.Property(e => e.IdJustificacao).HasColumnName("idJustificacao");
            entity.Property(e => e.IdManifesto).HasColumnName("idManifesto");
            entity.Property(e => e.IdMoeda).HasColumnName("idMoeda");
            entity.Property(e => e.IdTipoIvavalorBase).HasColumnName("idTipoIVAValorBase");
            entity.Property(e => e.IdTipoMaterial).HasColumnName("idTipoMaterial");
            entity.Property(e => e.IdUtilAnulacao).HasColumnName("idUtilAnulacao");
            entity.Property(e => e.IdUtilExpToFact).HasColumnName("idUtilExp_to_fact");
            entity.Property(e => e.IdUtilFecho).HasColumnName("idUtilFecho");
            entity.Property(e => e.IdUtilIntrod).HasColumnName("idUtilIntrod");
            entity.Property(e => e.IdUtilParaFacturar).HasColumnName("idUtilParaFacturar");
            entity.Property(e => e.IdUtilUltAct).HasColumnName("idUtilUltAct");
            entity.Property(e => e.IdUtilValidToFact).HasColumnName("idUtilValid_to_fact");
            entity.Property(e => e.IdUtilValor).HasColumnName("idUtilValor");
            entity.Property(e => e.Idassinatura).HasColumnName("idassinatura");
            entity.Property(e => e.Idrota).HasColumnName("idrota");
            entity.Property(e => e.MoradaAlt)
                .HasMaxLength(100)
                .HasColumnName("moradaAlt");
            entity.Property(e => e.ObsVendaDinheiro)
                .HasMaxLength(250)
                .HasColumnName("obsVendaDinheiro");
            entity.Property(e => e.Observacoes)
                .HasMaxLength(250)
                .HasColumnName("observacoes");
            entity.Property(e => e.ParaFacturar)
                .IsRequired()
                .HasDefaultValueSql("(1)")
                .HasColumnName("paraFacturar");
            entity.Property(e => e.Quantidade)
                .HasDefaultValueSql("(1)")
                .HasColumnName("quantidade");
            entity.Property(e => e.QuantidadeEntregue).HasColumnName("quantidadeEntregue");
            entity.Property(e => e.Scancode)
                .HasMaxLength(4)
                .HasColumnName("scancode");
            entity.Property(e => e.SignEntregue)
                .HasMaxLength(50)
                .HasColumnName("signEntregue");
            entity.Property(e => e.SignRecolhido)
                .HasMaxLength(50)
                .HasColumnName("signRecolhido");
            entity.Property(e => e.TaxaIvavalorBase)
                .HasColumnType("money")
                .HasColumnName("taxaIVAValorBase");
            entity.Property(e => e.TelefoneAlt).HasColumnName("telefoneAlt");
            entity.Property(e => e.ValidToFact)
                .HasDefaultValueSql("(0)")
                .HasColumnName("valid_to_fact");
            entity.Property(e => e.ValorBase)
                .HasColumnType("money")
                .HasColumnName("valorBase");
            entity.Property(e => e.ValorVendaDinheiro)
                .HasColumnType("money")
                .HasColumnName("valorVendaDinheiro");
            entity.Property(e => e.VendaDinheiro)
                .HasDefaultValueSql("(0)")
                .HasColumnName("vendaDinheiro");
        });

        modelBuilder.Entity<MaterialPedidoJustificacaoT>(entity =>
        {
            entity.ToTable("MaterialPedidoJustificacao_T");

            entity.Property(e => e.Id)
                .ValueGeneratedOnAdd()
                .HasColumnName("id");
            entity.Property(e => e.Activo)
                .IsRequired()
                .HasDefaultValueSql("((1))")
                .HasColumnName("activo");
            entity.Property(e => e.Descricao)
                .HasMaxLength(50)
                .HasColumnName("descricao");
            entity.Property(e => e.DtIntrod)
                .HasColumnType("datetime")
                .HasColumnName("dtIntrod");
            entity.Property(e => e.DtUltAct)
                .HasColumnType("datetime")
                .HasColumnName("dtUltAct");
            entity.Property(e => e.IdUtilIntrod).HasColumnName("idUtilIntrod");
            entity.Property(e => e.IdUtilUltAct).HasColumnName("idUtilUltAct");
        });

        modelBuilder.Entity<MaterialPedidoLog>(entity =>
        {
            entity.ToTable("MaterialPedidoLog");

            entity.Property(e => e.Id).HasColumnName("id");
            entity.Property(e => e.Data)
                .HasDefaultValueSql("(getdate())")
                .HasColumnType("datetime")
                .HasColumnName("data");
            entity.Property(e => e.IdAccao).HasColumnName("idAccao");
            entity.Property(e => e.IdMaterialPedido).HasColumnName("idMaterialPedido");
            entity.Property(e => e.IdUtil).HasColumnName("idUtil");
            entity.Property(e => e.Observacoes)
                .HasMaxLength(100)
                .HasColumnName("observacoes");
        });

        modelBuilder.Entity<MaterialPedidoRestricao>(entity =>
        {
            entity.ToTable("MaterialPedidoRestricao");

            entity.Property(e => e.Id).HasColumnName("id");
            entity.Property(e => e.Activo).HasColumnName("activo");
            entity.Property(e => e.DtIntrod)
                .HasColumnType("datetime")
                .HasColumnName("dtIntrod");
            entity.Property(e => e.DtUltAct)
                .HasColumnType("datetime")
                .HasColumnName("dtUltAct");
            entity.Property(e => e.Excepcao).HasColumnName("excepcao");
            entity.Property(e => e.IdCliente).HasColumnName("idCliente");
            entity.Property(e => e.IdUtilIntrod).HasColumnName("idUtilIntrod");
            entity.Property(e => e.IdUtilUltAct).HasColumnName("idUtilUltAct");
            entity.Property(e => e.Restricao).HasColumnName("restricao");
        });

        modelBuilder.Entity<MaterialPedidoTipoAccoesT>(entity =>
        {
            entity.HasKey(e => e.Id).HasName("PK_MaterialPedidoTipoAccao");

            entity.ToTable("MaterialPedidoTipoAccoes_T");

            entity.Property(e => e.Id).HasColumnName("id");
            entity.Property(e => e.Descricao)
                .HasMaxLength(50)
                .HasColumnName("descricao");
        });

        modelBuilder.Entity<MbTeste>(entity =>
        {
            entity
                .HasNoKey()
                .ToTable("MB_TESTE");

            entity.Property(e => e.Captado).HasColumnName("captado");
            entity.Property(e => e.Cpostal)
                .HasMaxLength(15)
                .HasColumnName("CPostal");
            entity.Property(e => e.Default).HasColumnName("default");
            entity.Property(e => e.DescricaoTipo)
                .HasMaxLength(50)
                .HasColumnName("descricaoTipo");
            entity.Property(e => e.DiasCreditoAdua).HasColumnName("diasCreditoAdua");
            entity.Property(e => e.DtFsm)
                .HasColumnType("datetime")
                .HasColumnName("dtFSM");
            entity.Property(e => e.Email)
                .HasMaxLength(50)
                .HasColumnName("email");
            entity.Property(e => e.Equipa)
                .HasMaxLength(50)
                .HasColumnName("equipa");
            entity.Property(e => e.Fax).HasColumnName("fax");
            entity.Property(e => e.Fsm).HasColumnName("FSM");
            entity.Property(e => e.Id).HasColumnName("id");
            entity.Property(e => e.IdStatusComercial).HasColumnName("idStatusComercial");
            entity.Property(e => e.IdStatusCredito).HasColumnName("idStatusCredito");
            entity.Property(e => e.IdStatusCreditoAdua).HasColumnName("idStatusCreditoAdua");
            entity.Property(e => e.IdTipoCliente).HasColumnName("idTipoCliente");
            entity.Property(e => e.LimiteCredito)
                .HasColumnType("money")
                .HasColumnName("limiteCredito");
            entity.Property(e => e.LimiteCreditoAdua)
                .HasColumnType("money")
                .HasColumnName("limiteCreditoAdua");
            entity.Property(e => e.Localidade).HasMaxLength(100);
            entity.Property(e => e.Morada)
                .HasMaxLength(100)
                .HasColumnName("morada");
            entity.Property(e => e.Negociacao).HasColumnName("negociacao");
            entity.Property(e => e.NegociadoExpIc)
                .HasColumnType("money")
                .HasColumnName("negociadoExpIC");
            entity.Property(e => e.NegociadoExpIe)
                .HasColumnType("money")
                .HasColumnName("negociadoExpIE");
            entity.Property(e => e.NegociadoImpIc)
                .HasColumnType("money")
                .HasColumnName("negociadoImpIC");
            entity.Property(e => e.NegociadoImpIe)
                .HasColumnType("money")
                .HasColumnName("negociadoImpIE");
            entity.Property(e => e.Nome)
                .HasMaxLength(100)
                .HasColumnName("nome");
            entity.Property(e => e.NomeContacto)
                .HasMaxLength(50)
                .HasColumnName("nomeContacto");
            entity.Property(e => e.NomeUtilizador)
                .HasMaxLength(50)
                .HasColumnName("nomeUtilizador");
            entity.Property(e => e.NumeroContaFedEx)
                .HasMaxLength(20)
                .HasColumnName("numeroContaFedEx");
            entity.Property(e => e.NumeroContribuinte)
                .HasMaxLength(20)
                .HasColumnName("numeroContribuinte");
            entity.Property(e => e.PotencialExpIc)
                .HasColumnType("money")
                .HasColumnName("potencialExpIC");
            entity.Property(e => e.PotencialExpIe)
                .HasColumnType("money")
                .HasColumnName("potencialExpIE");
            entity.Property(e => e.PotencialImpIc)
                .HasColumnType("money")
                .HasColumnName("potencialImpIC");
            entity.Property(e => e.PotencialImpIe)
                .HasColumnType("money")
                .HasColumnName("potencialImpIE");
            entity.Property(e => e.StatusComercial).HasMaxLength(50);
            entity.Property(e => e.StatusCredito).HasMaxLength(50);
            entity.Property(e => e.StatusCreditoAdua).HasMaxLength(50);
            entity.Property(e => e.TarExp).HasMaxLength(25);
            entity.Property(e => e.TarImp).HasMaxLength(25);
            entity.Property(e => e.Telefone).HasColumnName("telefone");
            entity.Property(e => e.TemFsm).HasColumnName("temFSM");
            entity.Property(e => e.UltEncom)
                .HasColumnType("datetime")
                .HasColumnName("ultEncom");
            entity.Property(e => e.UltEntrev)
                .HasColumnType("datetime")
                .HasColumnName("ultEntrev");
            entity.Property(e => e.VolumeVendas)
                .HasColumnType("money")
                .HasColumnName("volumeVendas");
        });

        modelBuilder.Entity<MensagensEmailRecolha>(entity =>
        {
            entity.HasNoKey();

            entity.Property(e => e.Campo).HasMaxLength(50);
            entity.Property(e => e.Id)
                .ValueGeneratedOnAdd()
                .HasColumnName("id");
            entity.Property(e => e.IsMandatoryMessage).HasColumnName("isMandatoryMessage");
            entity.Property(e => e.Titulo).HasMaxLength(150);
        });

        modelBuilder.Entity<MenuDoc>(entity =>
        {
            entity.ToTable("menuDocs");

            entity.Property(e => e.Id).HasColumnName("id");
            entity.Property(e => e.Descricao)
                .HasMaxLength(50)
                .HasColumnName("descricao");
            entity.Property(e => e.Nome)
                .HasMaxLength(50)
                .HasColumnName("nome");
            entity.Property(e => e.ServerLocation)
                .HasMaxLength(250)
                .HasColumnName("serverLocation");
        });

        modelBuilder.Entity<MenuReportsT>(entity =>
        {
            entity.HasKey(e => e.Id).HasName("PK_T_MenuReports");

            entity.ToTable("MenuReports_T");

            entity.HasIndex(e => new { e.Activo, e.Tema }, "idx_activo_tema").HasFillFactor(80);

            entity.Property(e => e.Id).HasColumnName("id");
            entity.Property(e => e.Activo)
                .HasDefaultValueSql("((1))")
                .HasColumnName("activo");
            entity.Property(e => e.AllowNoLogin).HasColumnName("allowNoLogin");
            entity.Property(e => e.Dados)
                .HasMaxLength(500)
                .HasColumnName("dados");
            entity.Property(e => e.Descricao)
                .HasMaxLength(150)
                .HasColumnName("descricao");
            entity.Property(e => e.Detalhe)
                .HasMaxLength(250)
                .HasColumnName("detalhe");
            entity.Property(e => e.IdTipoReport).HasColumnName("idTipoReport");
            entity.Property(e => e.Parametros)
                .HasMaxLength(250)
                .HasColumnName("parametros");
            entity.Property(e => e.Separadores)
                .HasDefaultValueSql("((0))")
                .HasColumnName("separadores");
            entity.Property(e => e.Tema)
                .HasMaxLength(25)
                .HasColumnName("tema");
            entity.Property(e => e.Url)
                .HasMaxLength(50)
                .HasColumnName("url");
            entity.Property(e => e.Visivel)
                .IsRequired()
                .HasDefaultValueSql("((1))")
                .HasColumnName("visivel");
        });

        modelBuilder.Entity<MenuTipoReportsT>(entity =>
        {
            entity.HasKey(e => e.Id).HasName("PK_T_MenuTipoReports");

            entity.ToTable("MenuTipoReports_T");

            entity.Property(e => e.Id).HasColumnName("id");
            entity.Property(e => e.Descricao)
                .HasMaxLength(50)
                .HasColumnName("descricao");
        });

        modelBuilder.Entity<MenuUrl1T>(entity =>
        {
            entity.HasKey(e => e.Id).HasName("PK_T_MenuURL");

            entity.ToTable("MenuURL1_T");

            entity.HasIndex(e => e.IdMenuUrl1parent, "idx_parent").HasFillFactor(80);

            entity.Property(e => e.Id)
                .ValueGeneratedNever()
                .HasColumnName("id");
            entity.Property(e => e.Activo)
                .HasDefaultValueSql("((1))")
                .HasColumnName("activo");
            entity.Property(e => e.DescCurta)
                .HasMaxLength(15)
                .HasColumnName("descCurta");
            entity.Property(e => e.Descricao)
                .HasMaxLength(50)
                .HasColumnName("descricao");
            entity.Property(e => e.IdMenuUrl1parent).HasColumnName("idMenuURL1Parent");
            entity.Property(e => e.Imagem)
                .HasMaxLength(50)
                .HasColumnName("imagem");
            entity.Property(e => e.Imagemactivo)
                .HasMaxLength(50)
                .HasColumnName("imagemactivo");
            entity.Property(e => e.Posicao).HasColumnName("posicao");
            entity.Property(e => e.Visivel)
                .HasDefaultValueSql("((1))")
                .HasColumnName("visivel");
        });

        modelBuilder.Entity<MenuUrl2T>(entity =>
        {
            entity.HasKey(e => e.Id).HasName("PK_T_MenuURL2");

            entity.ToTable("MenuURL2_T");

            entity.HasIndex(e => new { e.IdUrl, e.IdMenu, e.Activo }, "idx_menuurl").HasFillFactor(80);

            entity.Property(e => e.Id).HasColumnName("id");
            entity.Property(e => e.Activo)
                .HasDefaultValueSql("((1))")
                .HasColumnName("activo");
            entity.Property(e => e.Default)
                .HasDefaultValueSql("((0))")
                .HasColumnName("default");
            entity.Property(e => e.DescCurta)
                .HasMaxLength(15)
                .HasColumnName("descCurta");
            entity.Property(e => e.Descricao)
                .HasMaxLength(50)
                .HasColumnName("descricao");
            entity.Property(e => e.IdMenu).HasColumnName("idMenu");
            entity.Property(e => e.IdUrl).HasColumnName("idURL");
            entity.Property(e => e.Imagem)
                .HasMaxLength(50)
                .HasColumnName("imagem");
            entity.Property(e => e.Imagemactivo)
                .HasMaxLength(50)
                .HasColumnName("imagemactivo");
            entity.Property(e => e.Posicao).HasColumnName("posicao");
        });

        modelBuilder.Entity<MenuUrlDoc>(entity =>
        {
            entity.ToTable("menuUrlDocs");

            entity.Property(e => e.Id)
                .ValueGeneratedNever()
                .HasColumnName("id");
            entity.Property(e => e.IdEntidade).HasColumnName("idEntidade");
            entity.Property(e => e.IdMenuDoc).HasColumnName("idMenuDoc");
            entity.Property(e => e.IdMenuUrl).HasColumnName("idMenuUrl");
        });

        modelBuilder.Entity<MenuUrlT>(entity =>
        {
            entity.HasKey(e => e.Id).HasName("PK_T_MenuURLList");

            entity.ToTable("MenuURL_T");

            entity.HasIndex(e => new { e.Activo, e.Url }, "idx_activo_url").HasFillFactor(80);

            entity.Property(e => e.Id).HasColumnName("id");
            entity.Property(e => e.Activo)
                .IsRequired()
                .HasDefaultValueSql("((1))")
                .HasColumnName("activo");
            entity.Property(e => e.Descricao)
                .HasMaxLength(50)
                .HasColumnName("descricao");
            entity.Property(e => e.DescricaoLonga)
                .HasMaxLength(500)
                .HasColumnName("descricaoLonga");
            entity.Property(e => e.TipoClienteBar)
                .HasDefaultValueSql("((2))")
                .HasColumnName("tipoClienteBar");
            entity.Property(e => e.Url)
                .HasMaxLength(50)
                .HasColumnName("url");
        });

        modelBuilder.Entity<MenuUrlcontroloDefaultsT>(entity =>
        {
            entity.ToTable("MenuURLControloDefaults_T");

            entity.Property(e => e.Id).HasColumnName("id");
            entity.Property(e => e.DefaultValue)
                .HasMaxLength(50)
                .HasColumnName("defaultValue");
            entity.Property(e => e.IdControlo).HasColumnName("idControlo");
            entity.Property(e => e.IdGrupo).HasColumnName("idGrupo");
        });

        modelBuilder.Entity<MenuUrlcontroloT>(entity =>
        {
            entity.HasKey(e => e.Id).HasName("PK_MenuUrlControlos_T");

            entity.ToTable("MenuURLControlo_T");

            entity.Property(e => e.Id).HasColumnName("id");
            entity.Property(e => e.Bit).HasColumnName("bit");
            entity.Property(e => e.Controlo)
                .HasMaxLength(50)
                .HasColumnName("controlo");
            entity.Property(e => e.DescricaoControlo)
                .HasMaxLength(150)
                .HasColumnName("descricaoControlo");
            entity.Property(e => e.IdMenuUrl).HasColumnName("idMenuUrl");
        });

        modelBuilder.Entity<MenuUrlgrupo>(entity =>
        {
            entity.HasKey(e => new { e.IdGrupo, e.IdEntidade, e.IdMenuUrl }).HasName("PK_T_MenuURL2Grupos");

            entity.ToTable("MenuURLGrupos");

            entity.HasIndex(e => e.IdMenuUrl, "idx_menuurl").HasFillFactor(80);

            entity.Property(e => e.IdGrupo).HasColumnName("idGrupo");
            entity.Property(e => e.IdEntidade).HasColumnName("idEntidade");
            entity.Property(e => e.IdMenuUrl).HasColumnName("idMenuURL");
            entity.Property(e => e.Activo)
                .IsRequired()
                .HasDefaultValueSql("((1))")
                .HasColumnName("activo");
            entity.Property(e => e.Default)
                .HasComment("indica para cada grupo qual opcao aparece por default")
                .HasColumnName("default");
            entity.Property(e => e.Id)
                .ValueGeneratedOnAdd()
                .HasColumnName("id");
            entity.Property(e => e.PEditar)
                .HasDefaultValueSql("((0))")
                .HasColumnName("pEditar");
            entity.Property(e => e.PVisualizar)
                .HasDefaultValueSql("((0))")
                .HasColumnName("pVisualizar");
            entity.Property(e => e.Permissao)
                .HasDefaultValueSql("((1))")
                .HasColumnName("permissao");
            entity.Property(e => e.TodasEntidades)
                .HasDefaultValueSql("((0))")
                .HasColumnName("todasEntidades");
            entity.Property(e => e.TodasPlataformas)
                .IsRequired()
                .HasDefaultValueSql("((1))")
                .HasColumnName("todasPlataformas");
            entity.Property(e => e.TodosClientes).HasColumnName("todosClientes");
            entity.Property(e => e.TodosUtilizadores).HasColumnName("todosUtilizadores");
            entity.Property(e => e.Visivel)
                .HasDefaultValueSql("((1))")
                .HasComment("indica se o link (listar/novo/...) está disponível")
                .HasColumnName("visivel");
        });

        modelBuilder.Entity<MenuUrlreportsGrupo>(entity =>
        {
            entity.HasKey(e => new { e.IdMenuReport, e.IdGrupo, e.IdEntidade });

            entity.ToTable("MenuURLReportsGrupos");

            entity.HasIndex(e => e.IdGrupo, "idx_grupo").HasFillFactor(80);

            entity.Property(e => e.IdMenuReport).HasColumnName("idMenuReport");
            entity.Property(e => e.IdGrupo).HasColumnName("idGrupo");
            entity.Property(e => e.IdEntidade).HasColumnName("idEntidade");
            entity.Property(e => e.Activo)
                .IsRequired()
                .HasDefaultValueSql("((1))")
                .HasColumnName("activo");
            entity.Property(e => e.Id)
                .ValueGeneratedOnAdd()
                .HasColumnName("id");
            entity.Property(e => e.TodasPlataformas)
                .IsRequired()
                .HasDefaultValueSql("((1))")
                .HasColumnName("todasPlataformas");
            entity.Property(e => e.TodosClientes).HasColumnName("todosClientes");
            entity.Property(e => e.TodosUtilizadores).HasColumnName("todosUtilizadores");
            entity.Property(e => e.Visivel)
                .IsRequired()
                .HasDefaultValueSql("((1))")
                .HasColumnName("visivel");
        });

        modelBuilder.Entity<MenuUrlreportsT>(entity =>
        {
            entity.HasKey(e => e.Id).HasName("PK_T_MenuURLReports");

            entity.ToTable("MenuURLReports_T");

            entity.Property(e => e.Id).HasColumnName("id");
            entity.Property(e => e.Activo)
                .IsRequired()
                .HasDefaultValueSql("((1))")
                .HasColumnName("activo");
            entity.Property(e => e.IdReport).HasColumnName("idReport");
            entity.Property(e => e.IdUrl).HasColumnName("idURL");
            entity.Property(e => e.Posicao).HasColumnName("posicao");
        });

        modelBuilder.Entity<MenuUrlreportsUtilizadore>(entity =>
        {
            entity.HasKey(e => new { e.IdMenuReport, e.IdUtilizador });

            entity.ToTable("MenuURLReportsUtilizadores");

            entity.HasIndex(e => e.IdUtilizador, "idx_utilizador").HasFillFactor(80);

            entity.Property(e => e.IdMenuReport).HasColumnName("idMenuReport");
            entity.Property(e => e.IdUtilizador).HasColumnName("idUtilizador");
            entity.Property(e => e.Activo)
                .IsRequired()
                .HasDefaultValueSql("((1))")
                .HasColumnName("activo");
            entity.Property(e => e.DtIntrod)
                .HasDefaultValueSql("(getdate())")
                .HasColumnType("datetime")
                .HasColumnName("dtIntrod");
            entity.Property(e => e.DtUltAct)
                .HasDefaultValueSql("(getdate())")
                .HasColumnType("datetime")
                .HasColumnName("dtUltAct");
            entity.Property(e => e.Id)
                .ValueGeneratedOnAdd()
                .HasColumnName("id");
            entity.Property(e => e.IdUtilIntrod).HasColumnName("idUtilIntrod");
            entity.Property(e => e.IdUtilUltAct).HasColumnName("idUtilUltAct");
            entity.Property(e => e.TodasPlataformas)
                .IsRequired()
                .HasDefaultValueSql("((1))")
                .HasColumnName("todasPlataformas");
            entity.Property(e => e.TodosClientes).HasColumnName("todosClientes");
            entity.Property(e => e.TodosUtilizadores).HasColumnName("todosUtilizadores");
            entity.Property(e => e.Visivel)
                .IsRequired()
                .HasDefaultValueSql("((1))")
                .HasColumnName("visivel");
        });

        modelBuilder.Entity<MenuUrlutilizadore>(entity =>
        {
            entity.HasKey(e => new { e.IdUtilizador, e.IdMenuUrl }).HasName("PK_T_MenuURL2Utilizadores");

            entity.ToTable("MenuURLUtilizadores");

            entity.HasIndex(e => e.IdMenuUrl, "idx_idurl").HasFillFactor(80);

            entity.Property(e => e.IdUtilizador).HasColumnName("idUtilizador");
            entity.Property(e => e.IdMenuUrl).HasColumnName("idMenuURL");
            entity.Property(e => e.Activo)
                .IsRequired()
                .HasDefaultValueSql("((1))")
                .HasColumnName("activo");
            entity.Property(e => e.Default).HasColumnName("default");
            entity.Property(e => e.DtIntrod)
                .HasDefaultValueSql("(getdate())")
                .HasColumnType("datetime")
                .HasColumnName("dtIntrod");
            entity.Property(e => e.DtUltAct)
                .HasDefaultValueSql("(getdate())")
                .HasColumnType("datetime")
                .HasColumnName("dtUltAct");
            entity.Property(e => e.Id)
                .ValueGeneratedOnAdd()
                .HasColumnName("id");
            entity.Property(e => e.IdUtilIntrod).HasColumnName("idUtilIntrod");
            entity.Property(e => e.IdUtilUltAct).HasColumnName("idUtilUltAct");
            entity.Property(e => e.PEditar)
                .HasDefaultValueSql("((8))")
                .HasColumnName("pEditar");
            entity.Property(e => e.PVisualizar)
                .HasDefaultValueSql("((8))")
                .HasColumnName("pVisualizar");
            entity.Property(e => e.Permissao)
                .HasDefaultValueSql("((1))")
                .HasColumnName("permissao");
            entity.Property(e => e.TodasEntidades)
                .HasDefaultValueSql("((0))")
                .HasColumnName("todasEntidades");
            entity.Property(e => e.TodasPlataformas)
                .IsRequired()
                .HasDefaultValueSql("((1))")
                .HasColumnName("todasPlataformas");
            entity.Property(e => e.TodosClientes)
                .IsRequired()
                .HasDefaultValueSql("((1))")
                .HasColumnName("todosClientes");
            entity.Property(e => e.TodosUtilizadores).HasColumnName("todosUtilizadores");
            entity.Property(e => e.Visivel)
                .IsRequired()
                .HasDefaultValueSql("((1))")
                .HasColumnName("visivel");
        });

        modelBuilder.Entity<MesesFiscai>(entity =>
        {
            entity.Property(e => e.Id).HasColumnName("id");
            entity.Property(e => e.Mes).HasColumnName("mes");
            entity.Property(e => e.MesFy).HasColumnName("mesFY");
        });

        modelBuilder.Entity<MeuMenuAreasFuncaoEntidade>(entity =>
        {
            entity
                .HasNoKey()
                .ToTable("MeuMenuAreasFuncaoEntidade");

            entity.Property(e => e.Aberto).HasColumnName("aberto");
            entity.Property(e => e.Activo).HasColumnName("activo");
            entity.Property(e => e.IdArea).HasColumnName("idArea");
            entity.Property(e => e.IdUtilizadorFuncaoEntidade).HasColumnName("idUtilizadorFuncaoEntidade");
            entity.Property(e => e.Ordem).HasColumnName("ordem");
        });

        modelBuilder.Entity<MeuMenuAreasFuncaoEntidadeItem>(entity =>
        {
            entity.HasNoKey();

            entity.Property(e => e.Activo).HasColumnName("activo");
            entity.Property(e => e.IdAreaItem).HasColumnName("idAreaItem");
            entity.Property(e => e.IdUtilizadorFuncaoEntidade).HasColumnName("idUtilizadorFuncaoEntidade");
            entity.Property(e => e.Ordem).HasColumnName("ordem");
        });

        modelBuilder.Entity<MeuMenuAreasGrupo>(entity =>
        {
            entity.HasKey(e => new { e.IdArea, e.IdGrupo, e.IdEntidade });

            entity.Property(e => e.IdArea).HasColumnName("idArea");
            entity.Property(e => e.IdGrupo).HasColumnName("idGrupo");
            entity.Property(e => e.IdEntidade).HasColumnName("idEntidade");
            entity.Property(e => e.Aberto).HasColumnName("aberto");
            entity.Property(e => e.Activo)
                .IsRequired()
                .HasDefaultValueSql("((1))")
                .HasColumnName("activo");
            entity.Property(e => e.Ordem).HasColumnName("ordem");
        });

        modelBuilder.Entity<MeuMenuAreasItemsGrupo>(entity =>
        {
            entity.HasKey(e => new { e.IdAreaItem, e.IdGrupo, e.IdEntidade }).HasName("PK_MeuMenuAreaItemsGrupos");

            entity.Property(e => e.IdAreaItem).HasColumnName("idAreaItem");
            entity.Property(e => e.IdGrupo).HasColumnName("idGrupo");
            entity.Property(e => e.IdEntidade).HasColumnName("idEntidade");
            entity.Property(e => e.Activo)
                .IsRequired()
                .HasDefaultValueSql("((1))")
                .HasColumnName("activo");
            entity.Property(e => e.Ordem).HasColumnName("ordem");
        });

        modelBuilder.Entity<MeuMenuAreasItemsT>(entity =>
        {
            entity.HasKey(e => e.Id).HasName("PK_MeuMenuAreaItems_T");

            entity.ToTable("MeuMenuAreasItems_T");

            entity.Property(e => e.Id).HasColumnName("id");
            entity.Property(e => e.Activo)
                .IsRequired()
                .HasDefaultValueSql("((1))")
                .HasColumnName("activo");
            entity.Property(e => e.Codigo)
                .HasMaxLength(20)
                .HasColumnName("codigo");
            entity.Property(e => e.Descricao)
                .HasMaxLength(50)
                .HasColumnName("descricao");
            entity.Property(e => e.IdArea).HasColumnName("idArea");
            entity.Property(e => e.IdMenuUrl).HasColumnName("idMenuUrl");
            entity.Property(e => e.IdMenuUrlDet).HasColumnName("idMenuUrlDet");
            entity.Property(e => e.Title)
                .HasMaxLength(150)
                .HasColumnName("title");
        });

        modelBuilder.Entity<MeuMenuAreasT>(entity =>
        {
            entity.ToTable("MeuMenuAreas_T");

            entity.Property(e => e.Id)
                .ValueGeneratedOnAdd()
                .HasColumnName("id");
            entity.Property(e => e.Activo)
                .IsRequired()
                .HasDefaultValueSql("((1))")
                .HasColumnName("activo");
            entity.Property(e => e.Codigo)
                .HasMaxLength(15)
                .HasColumnName("codigo");
            entity.Property(e => e.Descricao)
                .HasMaxLength(50)
                .HasColumnName("descricao");
        });

        modelBuilder.Entity<Mktcampanha>(entity =>
        {
            entity.HasKey(e => e.Id).HasName("PK_T_Campanha");

            entity.ToTable("MKTCampanha");

            entity.Property(e => e.Id)
                .ValueGeneratedNever()
                .HasColumnName("id");
            entity.Property(e => e.Activo)
                .HasDefaultValueSql("(1)")
                .HasColumnName("activo");
            entity.Property(e => e.Descricao)
                .HasMaxLength(50)
                .HasColumnName("descricao");
            entity.Property(e => e.DtFim)
                .HasColumnType("datetime")
                .HasColumnName("dtFim");
            entity.Property(e => e.DtInicio)
                .HasColumnType("datetime")
                .HasColumnName("dtInicio");
        });

        modelBuilder.Entity<MktcampanhaCliente>(entity =>
        {
            entity
                .HasNoKey()
                .ToTable("MKTCampanhaClientes");

            entity.Property(e => e.Data)
                .HasColumnType("datetime")
                .HasColumnName("data");
            entity.Property(e => e.IdCampanha).HasColumnName("idCampanha");
            entity.Property(e => e.IdCliente).HasColumnName("idCliente");
        });

        modelBuilder.Entity<MktcampanhaVantagen>(entity =>
        {
            entity.ToTable("MKTCampanhaVantagens");

            entity.Property(e => e.Id).HasColumnName("id");
            entity.Property(e => e.Descricao)
                .HasMaxLength(50)
                .HasColumnName("descricao");
            entity.Property(e => e.IdCampanha).HasColumnName("idCampanha");
        });

        modelBuilder.Entity<MoedaT>(entity =>
        {
            entity.HasKey(e => e.Id).HasName("PK_T_Moeda");

            entity.ToTable("Moeda_T");

            entity.Property(e => e.Id).HasColumnName("id");
            entity.Property(e => e.Activo)
                .IsRequired()
                .HasDefaultValueSql("(1)")
                .HasColumnName("activo");
            entity.Property(e => e.Sigla)
                .HasMaxLength(3)
                .HasColumnName("sigla");
            entity.Property(e => e.SiglaFedex)
                .HasMaxLength(3)
                .HasColumnName("siglaFedex");
        });

        modelBuilder.Entity<MoradasAlterar>(entity =>
        {
            entity
                .HasNoKey()
                .ToTable("MoradasAlterar");
        });

        modelBuilder.Entity<Moradasforced>(entity =>
        {
            entity
                .HasNoKey()
                .ToTable("moradasforced");

            entity.Property(e => e.Action)
                .HasMaxLength(255)
                .HasColumnName("action");
            entity.Property(e => e.Cliente).HasMaxLength(255);
        });

        modelBuilder.Entity<Morept>(entity =>
        {
            entity
                .HasNoKey()
                .ToTable("morept");

            entity.Property(e => e.Códserviço).HasMaxLength(255);
            entity.Property(e => e.DataEvento)
                .HasMaxLength(255)
                .HasColumnName("Data Evento");
            entity.Property(e => e.DesTransportador).HasMaxLength(255);
            entity.Property(e => e.FimAtualTrsp).HasColumnName("Fim atual trsp");
            entity.Property(e => e.Inferência).HasMaxLength(255);
            entity.Property(e => e.Mes2016)
                .HasMaxLength(255)
                .HasColumnName("MES 2016");
            entity.Property(e => e.Nobjecto)
                .HasMaxLength(255)
                .HasColumnName("NObjecto");
            entity.Property(e => e.NºTransporte)
                .HasMaxLength(255)
                .HasColumnName("Nº transporte");
            entity.Property(e => e.RexiiRiam)
                .HasMaxLength(255)
                .HasColumnName("REXII / RIAM");
            entity.Property(e => e.ÚltimoScan).HasMaxLength(255);
        });

        modelBuilder.Entity<NbCodigosPostaisEntidade>(entity =>
        {
            entity
                .HasNoKey()
                .ToTable("NB_CodigosPostaisEntidades");

            entity.Property(e => e.Activo).HasColumnName("activo");
            entity.Property(e => e.CodZona)
                .HasMaxLength(10)
                .IsUnicode(false)
                .HasColumnName("codZona");
            entity.Property(e => e.Conecta).HasColumnName("conecta");
            entity.Property(e => e.CutOffEnt1).HasColumnName("cutOffEnt1");
            entity.Property(e => e.CutOffEnt2).HasColumnName("cutOffEnt2");
            entity.Property(e => e.CutOffRec1).HasColumnName("cutOffRec1");
            entity.Property(e => e.CutOffRec2).HasColumnName("cutOffRec2");
            entity.Property(e => e.DiaEntrega).HasColumnName("diaEntrega");
            entity.Property(e => e.DiasIb).HasColumnName("diasIB");
            entity.Property(e => e.DiasOb).HasColumnName("diasOB");
            entity.Property(e => e.DtCriacao)
                .HasColumnType("datetime")
                .HasColumnName("dtCriacao");
            entity.Property(e => e.DtUltAlt)
                .HasColumnType("datetime")
                .HasColumnName("dtUltAlt");
            entity.Property(e => e.HoraEntrega)
                .HasColumnType("datetime")
                .HasColumnName("horaEntrega");
            entity.Property(e => e.HoraLimiteRec).HasColumnName("horaLimiteRec");
            entity.Property(e => e.IdCpostal).HasColumnName("idCPostal");
            entity.Property(e => e.IdEntidade).HasColumnName("idEntidade");
            entity.Property(e => e.IdEquipaComercial).HasColumnName("idEquipaComercial");
            entity.Property(e => e.IdPais).HasColumnName("idPais");
            entity.Property(e => e.IdPlatZona).HasColumnName("idPlatZona");
            entity.Property(e => e.IdPlataforma).HasColumnName("idPlataforma");
            entity.Property(e => e.IdPlataformaCtrl).HasColumnName("idPlataformaCtrl");
            entity.Property(e => e.IdRota).HasColumnName("idRota");
            entity.Property(e => e.IdUtilCriacao).HasColumnName("idUtilCriacao");
            entity.Property(e => e.IdUtilUltAlt).HasColumnName("idUtilUltAlt");
            entity.Property(e => e.IdZonaPais).HasColumnName("idZonaPais");
        });

        modelBuilder.Entity<NbTeste>(entity =>
        {
            entity
                .HasNoKey()
                .ToView("NB_Teste");

            entity.Property(e => e.Awb)
                .HasMaxLength(20)
                .HasColumnName("AWB");
            entity.Property(e => e.CustoReal).HasColumnType("money");
            entity.Property(e => e.CustoRealA).HasColumnType("money");
            entity.Property(e => e.CustoRealB).HasColumnType("decimal(38, 11)");
            entity.Property(e => e.DataCusto).HasColumnType("datetime");
            entity.Property(e => e.IdEntidade).HasColumnName("idEntidade");
            entity.Property(e => e.IdManifesto).HasColumnName("idManifesto");
            entity.Property(e => e.IdManifestoCustoReal).HasColumnName("idManifestoCustoReal");
            entity.Property(e => e.IdMotorista).HasColumnName("idMotorista");
            entity.Property(e => e.IdPlataforma).HasColumnName("idPlataforma");
            entity.Property(e => e.IdProducaoCustosPenalizacoes).HasColumnName("idProducaoCustosPenalizacoes");
            entity.Property(e => e.IdRota).HasColumnName("idRota");
            entity.Property(e => e.IdTipoCusto).HasColumnName("idTipoCusto");
        });

        modelBuilder.Entity<Newpt>(entity =>
        {
            entity
                .HasNoKey()
                .ToTable("newpt");

            entity.Property(e => e.Codserviço).HasMaxLength(255);
            entity.Property(e => e.DataEvento).HasMaxLength(255);
            entity.Property(e => e.DesTransportador).HasMaxLength(255);
            entity.Property(e => e.FimAtualTrsp)
                .HasColumnType("datetime")
                .HasColumnName("Fim atual trsp");
            entity.Property(e => e.Inferencia).HasMaxLength(255);
            entity.Property(e => e.Nobjecto)
                .HasMaxLength(255)
                .HasColumnName("NObjecto");
            entity.Property(e => e.Ntransporte).HasMaxLength(255);
            entity.Property(e => e.UltimoEstado).HasMaxLength(5);
        });

        modelBuilder.Entity<NotificacaoCliente>(entity =>
        {
            entity.HasKey(e => e.Id).HasName("pk_NotificacaoCliente_id");

            entity.ToTable("NotificacaoCliente", tb => tb.HasTrigger("TRG_NotificacaoCliente"));

            entity.HasIndex(e => new { e.IdCliente, e.IdCliMorada, e.IdTipoNotificacao, e.Activo }, "idx_NotificacaoCliente_idCliente_idCliMorada_idTipoNotificacao_Activo");

            entity.Property(e => e.Id).HasColumnName("id");
            entity.Property(e => e.Activo)
                .HasDefaultValueSql("((1))")
                .HasColumnName("activo");
            entity.Property(e => e.DtUltAct)
                .HasDefaultValueSql("(getdate())")
                .HasColumnType("datetime")
                .HasColumnName("dtUltAct");
            entity.Property(e => e.EmailUnico)
                .HasDefaultValueSql("((1))")
                .HasColumnName("emailUnico");
            entity.Property(e => e.EmailsBcc)
                .HasMaxLength(250)
                .HasColumnName("emailsBCC");
            entity.Property(e => e.EmailsCc)
                .HasMaxLength(250)
                .HasColumnName("emailsCC");
            entity.Property(e => e.EmailsTo)
                .HasMaxLength(250)
                .HasColumnName("emailsTo");
            entity.Property(e => e.EnvioInstantaneo)
                .HasDefaultValueSql("((1))")
                .HasColumnName("envioInstantaneo");
            entity.Property(e => e.EnvioPorRelatorio)
                .HasDefaultValueSql("((0))")
                .HasColumnName("envioPorRelatorio");
            entity.Property(e => e.HoraFim).HasColumnName("horaFim");
            entity.Property(e => e.HoraInicio).HasColumnName("horaInicio");
            entity.Property(e => e.IdCliMorada).HasColumnName("idCliMorada");
            entity.Property(e => e.IdCliente).HasColumnName("idCliente");
            entity.Property(e => e.IdEntidade).HasColumnName("idEntidade");
            entity.Property(e => e.IdFormatoNotificacao).HasColumnName("idFormatoNotificacao");
            entity.Property(e => e.IdTipoNotificacao).HasColumnName("idTipoNotificacao");
            entity.Property(e => e.IdUtilUltAct).HasColumnName("idUtilUltAct");
            entity.Property(e => e.MinutosRecorrencia).HasColumnName("minutosRecorrencia");
            entity.Property(e => e.PhonesTo)
                .HasMaxLength(100)
                .HasColumnName("phonesTo");
        });

        modelBuilder.Entity<NotificacaoClienteTlog>(entity =>
        {
            entity.HasKey(e => e.IdTrigger).HasName("pk_NotificacaoCliente_TLog_id");

            entity.ToTable("NotificacaoCliente_TLog");

            entity.HasIndex(e => e.Id, "idx_id");

            entity.Property(e => e.IdTrigger).HasColumnName("idTrigger");
            entity.Property(e => e.Activo).HasColumnName("activo");
            entity.Property(e => e.DtTrigger)
                .HasDefaultValueSql("(getdate())")
                .HasColumnType("datetime")
                .HasColumnName("dtTrigger");
            entity.Property(e => e.DtUltAct)
                .HasColumnType("datetime")
                .HasColumnName("dtUltAct");
            entity.Property(e => e.EmailUnico).HasColumnName("emailUnico");
            entity.Property(e => e.EmailsBcc)
                .HasMaxLength(250)
                .HasColumnName("emailsBCC");
            entity.Property(e => e.EmailsCc)
                .HasMaxLength(250)
                .HasColumnName("emailsCC");
            entity.Property(e => e.EmailsTo)
                .HasMaxLength(250)
                .HasColumnName("emailsTo");
            entity.Property(e => e.EnvioInstantaneo).HasColumnName("envioInstantaneo");
            entity.Property(e => e.EnvioPorRelatorio).HasColumnName("envioPorRelatorio");
            entity.Property(e => e.HoraFim).HasColumnName("horaFim");
            entity.Property(e => e.HoraInicio).HasColumnName("horaInicio");
            entity.Property(e => e.Id).HasColumnName("id");
            entity.Property(e => e.IdCliMorada).HasColumnName("idCliMorada");
            entity.Property(e => e.IdCliente).HasColumnName("idCliente");
            entity.Property(e => e.IdEntidade).HasColumnName("idEntidade");
            entity.Property(e => e.IdFormatoNotificacao).HasColumnName("idFormatoNotificacao");
            entity.Property(e => e.IdTipoNotificacao).HasColumnName("idTipoNotificacao");
            entity.Property(e => e.IdUtilUltAct).HasColumnName("idUtilUltAct");
            entity.Property(e => e.MinutosRecorrencia).HasColumnName("minutosRecorrencia");
            entity.Property(e => e.PhonesTo)
                .HasMaxLength(100)
                .HasColumnName("phonesTo");
        });

        modelBuilder.Entity<NotificacaoContexto>(entity =>
        {
            entity.HasKey(e => e.Id).HasName("pk_NotificacaoContexto_id");

            entity.ToTable("NotificacaoContexto", tb => tb.HasTrigger("TRG_NotificacaoContexto"));

            entity.HasIndex(e => new { e.IdRegisto, e.Activo }, "idx_NotificacaoContexto_activo_idRegisto");

            entity.HasIndex(e => new { e.IdRegisto, e.IdNotificacaoCliente }, "idx_NotificacaoContexto_idRegisto_idNotificacaoCliente").HasFillFactor(80);

            entity.Property(e => e.Id).HasColumnName("id");
            entity.Property(e => e.Activo)
                .HasDefaultValueSql("((1))")
                .HasColumnName("activo");
            entity.Property(e => e.DtUltAct)
                .HasDefaultValueSql("(getdate())")
                .HasColumnType("datetime")
                .HasColumnName("dtUltAct");
            entity.Property(e => e.EmailUnico)
                .HasDefaultValueSql("((1))")
                .HasColumnName("emailUnico");
            entity.Property(e => e.EmailsBcc)
                .HasMaxLength(250)
                .HasColumnName("emailsBCC");
            entity.Property(e => e.EmailsCc)
                .HasMaxLength(250)
                .HasColumnName("emailsCC");
            entity.Property(e => e.EmailsTo)
                .HasMaxLength(250)
                .HasColumnName("emailsTo");
            entity.Property(e => e.EnvioInstantaneo)
                .HasDefaultValueSql("((1))")
                .HasColumnName("envioInstantaneo");
            entity.Property(e => e.EnvioPorRelatorio)
                .HasDefaultValueSql("((0))")
                .HasColumnName("envioPorRelatorio");
            entity.Property(e => e.HoraFim).HasColumnName("horaFim");
            entity.Property(e => e.HoraInicio).HasColumnName("horaInicio");
            entity.Property(e => e.IdEntidade).HasColumnName("idEntidade");
            entity.Property(e => e.IdFormatoNotificacao).HasColumnName("idFormatoNotificacao");
            entity.Property(e => e.IdNotificacaoCliente).HasColumnName("idNotificacaoCliente");
            entity.Property(e => e.IdRegisto).HasColumnName("idRegisto");
            entity.Property(e => e.IdTipoNotificacao).HasColumnName("idTipoNotificacao");
            entity.Property(e => e.IdUtilUltAct).HasColumnName("idUtilUltAct");
            entity.Property(e => e.MinutosRecorrencia).HasColumnName("minutosRecorrencia");
            entity.Property(e => e.PhonesTo)
                .HasMaxLength(100)
                .HasColumnName("phonesTo");
        });

        modelBuilder.Entity<NotificacaoContextoTlog>(entity =>
        {
            entity.HasKey(e => e.IdTrigger).HasName("pk_NotificacaoContexto_TLog_id");

            entity.ToTable("NotificacaoContexto_TLog");

            entity.Property(e => e.IdTrigger).HasColumnName("idTrigger");
            entity.Property(e => e.Activo).HasColumnName("activo");
            entity.Property(e => e.DtTrigger)
                .HasDefaultValueSql("(getdate())")
                .HasColumnType("datetime")
                .HasColumnName("dtTrigger");
            entity.Property(e => e.DtUltAct)
                .HasColumnType("datetime")
                .HasColumnName("dtUltAct");
            entity.Property(e => e.EmailUnico).HasColumnName("emailUnico");
            entity.Property(e => e.EmailsBcc)
                .HasMaxLength(250)
                .HasColumnName("emailsBCC");
            entity.Property(e => e.EmailsCc)
                .HasMaxLength(250)
                .HasColumnName("emailsCC");
            entity.Property(e => e.EmailsTo)
                .HasMaxLength(250)
                .HasColumnName("emailsTo");
            entity.Property(e => e.EnvioInstantaneo).HasColumnName("envioInstantaneo");
            entity.Property(e => e.EnvioPorRelatorio).HasColumnName("envioPorRelatorio");
            entity.Property(e => e.HoraFim).HasColumnName("horaFim");
            entity.Property(e => e.HoraInicio).HasColumnName("horaInicio");
            entity.Property(e => e.Id).HasColumnName("id");
            entity.Property(e => e.IdEntidade).HasColumnName("idEntidade");
            entity.Property(e => e.IdFormatoNotificacao).HasColumnName("idFormatoNotificacao");
            entity.Property(e => e.IdNotificacaoCliente).HasColumnName("idNotificacaoCliente");
            entity.Property(e => e.IdRegisto).HasColumnName("idRegisto");
            entity.Property(e => e.IdTipoNotificacao).HasColumnName("idTipoNotificacao");
            entity.Property(e => e.IdUtilUltAct).HasColumnName("idUtilUltAct");
            entity.Property(e => e.MinutosRecorrencia).HasColumnName("minutosRecorrencia");
            entity.Property(e => e.PhonesTo)
                .HasMaxLength(100)
                .HasColumnName("phonesTo");
        });

        modelBuilder.Entity<NotificacaoFormatoT>(entity =>
        {
            entity.HasKey(e => e.Id).HasName("pk_NotificacaoFormato_T_TLog_id");

            entity.ToTable("NotificacaoFormato_T");

            entity.Property(e => e.Id).HasColumnName("id");
            entity.Property(e => e.Activo)
                .HasDefaultValueSql("((1))")
                .HasColumnName("activo");
            entity.Property(e => e.Codigo)
                .HasMaxLength(20)
                .HasColumnName("codigo");
            entity.Property(e => e.Descricao)
                .HasMaxLength(50)
                .HasColumnName("descricao");
        });

        modelBuilder.Entity<NotificacaoManifesto>(entity =>
        {
            entity.HasKey(e => e.Id).HasName("pk_NotificacaoManifesto_id");

            entity.ToTable("NotificacaoManifesto", tb => tb.HasTrigger("TRG_NotificacaoManifesto"));

            entity.HasIndex(e => new { e.IdManifesto, e.Activo }, "idx_activo_idManifesto").HasFillFactor(80);

            entity.HasIndex(e => new { e.IdManifesto, e.IdNotificacaoCliente }, "idx_idManifesto_idNotificacaoCliente").HasFillFactor(80);

            entity.Property(e => e.Id).HasColumnName("id");
            entity.Property(e => e.Activo)
                .HasDefaultValueSql("((1))")
                .HasColumnName("activo");
            entity.Property(e => e.DtUltAct)
                .HasDefaultValueSql("(getdate())")
                .HasColumnType("datetime")
                .HasColumnName("dtUltAct");
            entity.Property(e => e.EmailUnico)
                .HasDefaultValueSql("((1))")
                .HasColumnName("emailUnico");
            entity.Property(e => e.EmailsBcc)
                .HasMaxLength(250)
                .HasColumnName("emailsBCC");
            entity.Property(e => e.EmailsCc)
                .HasMaxLength(250)
                .HasColumnName("emailsCC");
            entity.Property(e => e.EmailsTo)
                .HasMaxLength(250)
                .HasColumnName("emailsTo");
            entity.Property(e => e.EnvioInstantaneo)
                .HasDefaultValueSql("((1))")
                .HasColumnName("envioInstantaneo");
            entity.Property(e => e.EnvioPorRelatorio)
                .HasDefaultValueSql("((0))")
                .HasColumnName("envioPorRelatorio");
            entity.Property(e => e.HoraFim).HasColumnName("horaFim");
            entity.Property(e => e.HoraInicio).HasColumnName("horaInicio");
            entity.Property(e => e.IdEntidade).HasColumnName("idEntidade");
            entity.Property(e => e.IdFormatoNotificacao).HasColumnName("idFormatoNotificacao");
            entity.Property(e => e.IdManifesto).HasColumnName("idManifesto");
            entity.Property(e => e.IdNotificacaoCliente).HasColumnName("idNotificacaoCliente");
            entity.Property(e => e.IdTipoNotificacao).HasColumnName("idTipoNotificacao");
            entity.Property(e => e.IdUtilUltAct).HasColumnName("idUtilUltAct");
            entity.Property(e => e.MinutosRecorrencia).HasColumnName("minutosRecorrencia");
            entity.Property(e => e.PhonesTo)
                .HasMaxLength(100)
                .HasColumnName("phonesTo");
        });

        modelBuilder.Entity<NotificacaoManifestoTlog>(entity =>
        {
            entity.HasKey(e => e.IdTrigger).HasName("pk_NotificacaoManifesto_TLog_id");

            entity.ToTable("NotificacaoManifesto_TLog");

            entity.HasIndex(e => e.Id, "idx_id").HasFillFactor(80);

            entity.Property(e => e.IdTrigger).HasColumnName("idTrigger");
            entity.Property(e => e.Activo).HasColumnName("activo");
            entity.Property(e => e.DtTrigger)
                .HasDefaultValueSql("(getdate())")
                .HasColumnType("datetime")
                .HasColumnName("dtTrigger");
            entity.Property(e => e.DtUltAct)
                .HasColumnType("datetime")
                .HasColumnName("dtUltAct");
            entity.Property(e => e.EmailUnico).HasColumnName("emailUnico");
            entity.Property(e => e.EmailsBcc)
                .HasMaxLength(250)
                .HasColumnName("emailsBCC");
            entity.Property(e => e.EmailsCc)
                .HasMaxLength(250)
                .HasColumnName("emailsCC");
            entity.Property(e => e.EmailsTo)
                .HasMaxLength(250)
                .HasColumnName("emailsTo");
            entity.Property(e => e.EnvioInstantaneo).HasColumnName("envioInstantaneo");
            entity.Property(e => e.EnvioPorRelatorio).HasColumnName("envioPorRelatorio");
            entity.Property(e => e.HoraFim).HasColumnName("horaFim");
            entity.Property(e => e.HoraInicio).HasColumnName("horaInicio");
            entity.Property(e => e.Id).HasColumnName("id");
            entity.Property(e => e.IdEntidade).HasColumnName("idEntidade");
            entity.Property(e => e.IdFormatoNotificacao).HasColumnName("idFormatoNotificacao");
            entity.Property(e => e.IdManifesto).HasColumnName("idManifesto");
            entity.Property(e => e.IdNotificacaoCliente).HasColumnName("idNotificacaoCliente");
            entity.Property(e => e.IdTipoNotificacao).HasColumnName("idTipoNotificacao");
            entity.Property(e => e.IdUtilUltAct).HasColumnName("idUtilUltAct");
            entity.Property(e => e.MinutosRecorrencia).HasColumnName("minutosRecorrencia");
            entity.Property(e => e.PhonesTo)
                .HasMaxLength(100)
                .HasColumnName("phonesTo");
        });

        modelBuilder.Entity<NotificacaoPersonalizadum>(entity =>
        {
            entity.HasKey(e => e.IdClienteNotificacao).HasName("PK__Notifica__1B8E86346C4DA42B");

            entity.Property(e => e.IdClienteNotificacao)
                .ValueGeneratedNever()
                .HasColumnName("idClienteNotificacao");
            entity.Property(e => e.Activo).HasColumnName("activo");
            entity.Property(e => e.DtIntrod)
                .HasColumnType("datetime")
                .HasColumnName("dtIntrod");
            entity.Property(e => e.DtUltAct)
                .HasColumnType("datetime")
                .HasColumnName("dtUltAct");
            entity.Property(e => e.EmailFrom)
                .HasMaxLength(100)
                .HasColumnName("emailFrom");
            entity.Property(e => e.EmailTo)
                .HasMaxLength(100)
                .HasColumnName("emailTo");
            entity.Property(e => e.IdUltAct).HasColumnName("idUltAct");
            entity.Property(e => e.IdUtilIntrod).HasColumnName("idUtilIntrod");
            entity.Property(e => e.Message).HasColumnName("message");
            entity.Property(e => e.PhonesTo)
                .HasMaxLength(100)
                .HasColumnName("phonesTo");
            entity.Property(e => e.Subject).HasColumnName("subject");
        });

        modelBuilder.Entity<NotificacaoTipoContextoT>(entity =>
        {
            entity.HasKey(e => e.Id).HasName("PK__Notifica__3213E83F66BD1B60");

            entity.ToTable("NotificacaoTipoContexto_T");

            entity.HasIndex(e => e.Codigo, "idx_NotificacaoTipoContexto_codigo").IsUnique();

            entity.Property(e => e.Id).HasColumnName("id");
            entity.Property(e => e.Codigo)
                .HasMaxLength(10)
                .HasColumnName("codigo");
            entity.Property(e => e.Descricao)
                .HasMaxLength(50)
                .HasColumnName("descricao");
            entity.Property(e => e.TabelaReferencia)
                .HasMaxLength(50)
                .HasColumnName("tabelaReferencia");
        });

        modelBuilder.Entity<NotificacaoTipoT>(entity =>
        {
            entity.HasKey(e => e.Id).HasName("pk_NotificacaoTipo_T_id");

            entity.ToTable("NotificacaoTipo_T");

            entity.Property(e => e.Id).HasColumnName("id");
            entity.Property(e => e.Activo)
                .HasDefaultValueSql("((1))")
                .HasColumnName("activo");
            entity.Property(e => e.Codigo)
                .HasMaxLength(50)
                .IsUnicode(false)
                .HasColumnName("codigo");
            entity.Property(e => e.Descricao)
                .HasMaxLength(50)
                .IsUnicode(false)
                .HasColumnName("descricao");
            entity.Property(e => e.Detalhe)
                .HasMaxLength(250)
                .IsUnicode(false)
                .HasColumnName("detalhe");
            entity.Property(e => e.EmailFrom)
                .HasMaxLength(50)
                .IsUnicode(false)
                .HasColumnName("emailFrom");
            entity.Property(e => e.Grupo)
                .HasMaxLength(20)
                .IsUnicode(false)
                .HasColumnName("grupo");
            entity.Property(e => e.HoraFim).HasColumnName("horaFim");
            entity.Property(e => e.HoraInicio).HasColumnName("horaInicio");
            entity.Property(e => e.IdTipoContexto).HasColumnName("idTipoContexto");
            entity.Property(e => e.Message)
                .IsUnicode(false)
                .HasColumnName("message");
            entity.Property(e => e.MessageRelatorio)
                .IsUnicode(false)
                .HasColumnName("messageRelatorio");
            entity.Property(e => e.OrdemB2c).HasColumnName("ordem_B2C");
            entity.Property(e => e.Subject)
                .HasMaxLength(100)
                .IsUnicode(false)
                .HasColumnName("subject");
            entity.Property(e => e.SubjectRelatorio)
                .HasMaxLength(100)
                .IsUnicode(false)
                .HasColumnName("subjectRelatorio");
            entity.Property(e => e.TemplateFile)
                .HasMaxLength(250)
                .HasColumnName("templateFile");
            entity.Property(e => e.UseTemplate).HasColumnName("useTemplate");
            entity.Property(e => e.Visivel)
                .HasDefaultValueSql("((1))")
                .HasColumnName("visivel");
            entity.Property(e => e.VisivelB2c)
                .HasDefaultValueSql("((0))")
                .HasColumnName("visivel_B2C");
        });

        modelBuilder.Entity<NotificacaoTiposFormato>(entity =>
        {
            entity.HasKey(e => e.Id).HasName("pk_NotificacaoTiposFormatos_id");

            entity.Property(e => e.Id).HasColumnName("id");
            entity.Property(e => e.IdEntidade).HasColumnName("idEntidade");
            entity.Property(e => e.IdFormatoNotificacao).HasColumnName("idFormatoNotificacao");
            entity.Property(e => e.IdTipoNotificacao).HasColumnName("idTipoNotificacao");
        });

        modelBuilder.Entity<Notificaco>(entity =>
        {
            entity.HasKey(e => e.Id).HasName("pk_Notificacoes_id");

            entity.HasIndex(e => new { e.ErroEnviar, e.IdFormatoNotificacao }, "IDX_Notificacoes_erroEnviar_idFormatoNotificacao");

            entity.HasIndex(e => new { e.EnvioInstantaneo, e.DtEnviadoPortal }, "idx_dtEnviadoPortal_envioInstantaneo").HasFillFactor(80);

            entity.HasIndex(e => new { e.EnvioPorRelatorio, e.DtEnviadoPortal }, "idx_dtEnviadoPortal_envioPorRelatorio");

            entity.Property(e => e.Id).HasColumnName("id");
            entity.Property(e => e.DescErro)
                .HasMaxLength(500)
                .HasColumnName("descErro");
            entity.Property(e => e.DtEnviada)
                .HasColumnType("datetime")
                .HasColumnName("dtEnviada");
            entity.Property(e => e.DtEnviadoPortal)
                .HasDefaultValueSql("((0))")
                .HasColumnType("datetime")
                .HasColumnName("dtEnviadoPortal");
            entity.Property(e => e.DtEnviar)
                .HasColumnType("datetime")
                .HasColumnName("dtEnviar");
            entity.Property(e => e.DtIntrod)
                .HasDefaultValueSql("(getdate())")
                .HasColumnType("datetime")
                .HasColumnName("dtIntrod");
            entity.Property(e => e.EmailUnico)
                .HasDefaultValueSql("((1))")
                .HasColumnName("emailUnico");
            entity.Property(e => e.EmailsBcc)
                .HasMaxLength(250)
                .HasColumnName("emailsBCC");
            entity.Property(e => e.EmailsCc)
                .HasMaxLength(250)
                .HasColumnName("emailsCC");
            entity.Property(e => e.EmailsTo)
                .HasMaxLength(250)
                .HasColumnName("emailsTo");
            entity.Property(e => e.EnvioInstantaneo)
                .HasDefaultValueSql("((1))")
                .HasColumnName("envioInstantaneo");
            entity.Property(e => e.EnvioPorRelatorio)
                .HasDefaultValueSql("((0))")
                .HasColumnName("envioPorRelatorio");
            entity.Property(e => e.ErroEnviar)
                .HasDefaultValueSql("((0))")
                .HasColumnName("erroEnviar");
            entity.Property(e => e.HoraFim).HasColumnName("horaFim");
            entity.Property(e => e.HoraInicio).HasColumnName("horaInicio");
            entity.Property(e => e.IdCliMorada).HasColumnName("idCliMorada");
            entity.Property(e => e.IdCliente).HasColumnName("idCliente");
            entity.Property(e => e.IdEntidade).HasColumnName("idEntidade");
            entity.Property(e => e.IdFormatoNotificacao).HasColumnName("idFormatoNotificacao");
            entity.Property(e => e.IdTipoNotificacao).HasColumnName("idTipoNotificacao");
            entity.Property(e => e.MessageRelatorio)
                .IsUnicode(false)
                .HasColumnName("messageRelatorio");
            entity.Property(e => e.MinutosRecorrencia).HasColumnName("minutosRecorrencia");
            entity.Property(e => e.PhonesTo)
                .HasMaxLength(100)
                .HasColumnName("phonesTo");
            entity.Property(e => e.Subject).HasMaxLength(100);
            entity.Property(e => e.SubjectRelatorio)
                .HasMaxLength(100)
                .IsUnicode(false)
                .HasColumnName("subjectRelatorio");
        });

        modelBuilder.Entity<NotificacoesAnexo>(entity =>
        {
            entity.HasKey(e => e.Id).HasName("PK__Notifica__3213E83F18954664");

            entity.Property(e => e.Id).HasColumnName("id");
            entity.Property(e => e.CodAdos).HasColumnName("codADOS");
            entity.Property(e => e.Descricao)
                .HasMaxLength(150)
                .HasColumnName("descricao");
            entity.Property(e => e.IdNotificacao).HasColumnName("idNotificacao");
        });

        modelBuilder.Entity<NotificacoesDetalhe>(entity =>
        {
            entity.HasIndex(e => new { e.IdNotificacaoContexto, e.IdRegisto }, "idx_NotificacoesDetalhes_idNotificacaoContexto_idRegisto").HasFillFactor(80);

            entity.HasIndex(e => e.IdNotificacao, "idx_Notificaoesdetalhes_idNotificacao").HasFillFactor(80);

            entity.Property(e => e.Id).HasColumnName("id");
            entity.Property(e => e.DtIntrod)
                .HasDefaultValueSql("(getdate())")
                .HasColumnType("datetime")
                .HasColumnName("dtIntrod");
            entity.Property(e => e.IdNotificacao).HasColumnName("idNotificacao");
            entity.Property(e => e.IdNotificacaoContexto).HasColumnName("idNotificacaoContexto");
            entity.Property(e => e.IdRegisto).HasColumnName("idRegisto");
            entity.Property(e => e.TabelaReferencia)
                .HasMaxLength(50)
                .HasColumnName("tabelaReferencia");
        });

        modelBuilder.Entity<NotificacoesItem>(entity =>
        {
            entity.HasNoKey();

            entity.HasIndex(e => e.IdNotificacao, "idx_idNotificacao").HasFillFactor(80);

            entity.HasIndex(e => e.IdNotificacaoCliente, "idx_idNotificacaoCliente").HasFillFactor(80);

            entity.HasIndex(e => new { e.IdNotificacaoManifesto, e.IdScan }, "idx_idNotificacaoManifesto").HasFillFactor(80);

            entity.Property(e => e.IdManifesto).HasColumnName("idManifesto");
            entity.Property(e => e.IdNotificacao).HasColumnName("idNotificacao");
            entity.Property(e => e.IdNotificacaoCliente).HasColumnName("idNotificacaoCliente");
            entity.Property(e => e.IdNotificacaoManifesto).HasColumnName("idNotificacaoManifesto");
            entity.Property(e => e.IdScan).HasColumnName("idScan");
        });

        modelBuilder.Entity<NotificacoesPersonalizadasClienteMoradum>(entity =>
        {
            entity.HasKey(e => e.Id).HasName("PK__Notifica__3213E83F524D7343");

            entity.HasIndex(e => new { e.IdCliente, e.IdCliMorada }, "idx_idCliente_idCliMorada");

            entity.Property(e => e.Id).HasColumnName("id");
            entity.Property(e => e.Activo).HasColumnName("activo");
            entity.Property(e => e.DtIntrod)
                .HasColumnType("datetime")
                .HasColumnName("dtIntrod");
            entity.Property(e => e.DtUltAct)
                .HasColumnType("datetime")
                .HasColumnName("dtUltAct");
            entity.Property(e => e.EmailFrom)
                .HasMaxLength(100)
                .HasColumnName("emailFrom");
            entity.Property(e => e.EmailTo)
                .HasMaxLength(100)
                .HasColumnName("emailTo");
            entity.Property(e => e.IdCliMorada).HasColumnName("idCliMorada");
            entity.Property(e => e.IdCliente).HasColumnName("idCliente");
            entity.Property(e => e.IdUtilItrod).HasColumnName("idUtilItrod");
            entity.Property(e => e.IdUtilUltAct).HasColumnName("idUtilUltAct");
            entity.Property(e => e.Msg).HasColumnName("msg");
            entity.Property(e => e.PhonesTo)
                .HasMaxLength(100)
                .HasColumnName("phonesTo");
            entity.Property(e => e.Subject).HasColumnName("subject");
        });

        modelBuilder.Entity<NsJanelaHorarium>(entity =>
        {
            entity.HasKey(e => e.Id).HasName("PK_JanelaHoraria");

            entity.ToTable("NS_JanelaHoraria");

            entity.Property(e => e.Id).HasColumnName("id");
            entity.Property(e => e.Designacao).HasMaxLength(50);
            entity.Property(e => e.Hhfim)
                .HasPrecision(0)
                .HasColumnName("HHFim");
            entity.Property(e => e.Hhinicio)
                .HasPrecision(0)
                .HasColumnName("HHInicio");
            entity.Property(e => e.IdCliMorada).HasColumnName("idCliMorada");
            entity.Property(e => e.IdCliente).HasColumnName("idCliente");
        });

        modelBuilder.Entity<NsManifestoScansByDay>(entity =>
        {
            entity.HasKey(e => e.Id).HasName("PK_ManifestoScansByDay");

            entity.ToTable("NS_ManifestoScansByDay");

            entity.Property(e => e.DtEntregaDesejada)
                .HasColumnType("datetime")
                .HasColumnName("dtEntregaDesejada");
            entity.Property(e => e.DtPup)
                .HasColumnType("datetime")
                .HasColumnName("dtPup");
            entity.Property(e => e.DtRef)
                .HasColumnType("date")
                .HasColumnName("dtRef");
            entity.Property(e => e.IdCliente).HasColumnName("idCliente");
            entity.Property(e => e.IdEntidade).HasColumnName("idEntidade");
            entity.Property(e => e.IdManifesto).HasColumnName("idManifesto");
            entity.Property(e => e.IdPltDest).HasColumnName("idPltDest");
            entity.Property(e => e.IdScan).HasColumnName("idScan");
            entity.Property(e => e.InSl).HasColumnName("InSL");
            entity.Property(e => e.ModifiedOn)
                .HasDefaultValueSql("(getdate())")
                .HasColumnType("datetime");
            entity.Property(e => e.PostDate)
                .HasColumnType("datetime")
                .HasColumnName("postDate");
            entity.Property(e => e.PostDateDt)
                .HasColumnType("date")
                .HasColumnName("postDateDT");
            entity.Property(e => e.PostDateTm)
                .HasPrecision(0)
                .HasColumnName("postDateTM");
            entity.Property(e => e.QtdSl).HasColumnName("QtdSL");
            entity.Property(e => e.ScanCode)
                .HasMaxLength(2)
                .HasColumnName("scanCode");
            entity.Property(e => e.ScanDate)
                .HasColumnType("datetime")
                .HasColumnName("scanDate");
            entity.Property(e => e.ScanDateDt)
                .HasColumnType("date")
                .HasColumnName("scanDateDT");
            entity.Property(e => e.ScanDateTm)
                .HasPrecision(0)
                .HasColumnName("scanDateTM");
        });

        modelBuilder.Entity<Nsplataforma>(entity =>
        {
            entity.HasKey(e => e.NsplataformasId);

            entity.ToTable("NSPlataformas");

            entity.Property(e => e.NsplataformasId).HasColumnName("NSPlataformasId");
            entity.Property(e => e.IdPlataforma).HasColumnName("idPlataforma");
            entity.Property(e => e.IdServico).HasColumnName("idServico");
            entity.Property(e => e.Regiao).HasMaxLength(50);
        });

        modelBuilder.Entity<ObjectoDocumento>(entity =>
        {
            entity.HasIndex(e => new { e.IdObjecto, e.IdTipoObjecto, e.Activo }, "idx_idObjecto_idTipoObjecto_activo").HasFillFactor(80);

            entity.Property(e => e.Id).HasColumnName("id");
            entity.Property(e => e.Activo)
                .HasDefaultValueSql("((1))")
                .HasColumnName("activo");
            entity.Property(e => e.Descricao)
                .HasMaxLength(50)
                .IsUnicode(false)
                .HasColumnName("descricao");
            entity.Property(e => e.DtIntrod)
                .HasColumnType("datetime")
                .HasColumnName("dtIntrod");
            entity.Property(e => e.Guid)
                .HasMaxLength(50)
                .IsUnicode(false)
                .HasColumnName("GUID");
            entity.Property(e => e.IdAdos).HasColumnName("idAdos");
            entity.Property(e => e.IdObjecto).HasColumnName("idObjecto");
            entity.Property(e => e.IdTipoObjecto).HasColumnName("idTipoObjecto");
            entity.Property(e => e.IdUtilIntrod).HasColumnName("idUtilIntrod");
            entity.Property(e => e.MimeType)
                .HasMaxLength(50)
                .IsUnicode(false)
                .HasColumnName("mimeType");
            entity.Property(e => e.Nome)
                .HasMaxLength(500)
                .IsUnicode(false)
                .HasColumnName("nome");
            entity.Property(e => e.ServerLocation)
                .HasMaxLength(250)
                .IsUnicode(false)
                .HasColumnName("serverLocation");
            entity.Property(e => e.Tamanho).HasColumnName("tamanho");
        });

        modelBuilder.Entity<ObjectoDocumentosExtensoesT>(entity =>
        {
            entity.HasKey(e => e.Id).HasName("PK__ObjectoD__3213E83F698A093D");

            entity.ToTable("ObjectoDocumentosExtensoes_T");

            entity.Property(e => e.Id).HasColumnName("id");
            entity.Property(e => e.Extensao)
                .HasMaxLength(255)
                .IsUnicode(false)
                .HasColumnName("extensao");
            entity.Property(e => e.Imagem)
                .HasMaxLength(255)
                .IsUnicode(false)
                .HasColumnName("imagem");
        });

        modelBuilder.Entity<ObjectoDocumentosTipoT>(entity =>
        {
            entity.HasKey(e => e.Id).HasName("PK__ObjectoD__3213E83F5750893E");

            entity.ToTable("ObjectoDocumentosTipo_T");

            entity.Property(e => e.Id).HasColumnName("id");
            entity.Property(e => e.Descricao)
                .HasMaxLength(50)
                .IsUnicode(false)
                .HasColumnName("descricao");
            entity.Property(e => e.IdTipoParent)
                .HasDefaultValueSql("((0))")
                .HasColumnName("idTipoParent");
        });

        modelBuilder.Entity<OdaOpaTiersCode>(entity =>
        {
            entity
                .HasNoKey()
                .ToTable("ODA_OPA_TIERS_CODES");

            entity.Property(e => e.BeginPostalCode)
                .HasMaxLength(255)
                .HasColumnName("Begin Postal Code");
            entity.Property(e => e.City).HasMaxLength(255);
            entity.Property(e => e.Country)
                .HasMaxLength(255)
                .HasColumnName("Country ");
            entity.Property(e => e.EndPostalCode)
                .HasMaxLength(255)
                .HasColumnName("End Postal Code");
            entity.Property(e => e.IdPais).HasColumnName("idPais");
            entity.Property(e => e.OdaInternationalFreightServices)
                .HasMaxLength(255)
                .HasColumnName("ODA - International Freight Services");
            entity.Property(e => e.OdaInternationalParcelServices)
                .HasMaxLength(255)
                .HasColumnName("ODA - International Parcel Services");
            entity.Property(e => e.OpaInternationalFreightServices)
                .HasMaxLength(255)
                .HasColumnName("OPA - International Freight Services");
            entity.Property(e => e.OpaInternationalParcelServices)
                .HasMaxLength(255)
                .HasColumnName("OPA - International Parcel Services");
        });

        modelBuilder.Entity<OverValMacro>(entity =>
        {
            entity.ToTable("over_val_macro");

            entity.Property(e => e.Id).HasColumnName("id");
            entity.Property(e => e.Data)
                .HasDefaultValueSql("(getdate())")
                .HasColumnType("datetime")
                .HasColumnName("data");
            entity.Property(e => e.Master)
                .HasMaxLength(12)
                .HasColumnName("master");
            entity.Property(e => e.Screen)
                .HasMaxLength(2000)
                .HasColumnName("screen");
        });

        modelBuilder.Entity<OverValMacroResult>(entity =>
        {
            entity
                .HasNoKey()
                .ToTable("over_val_macro_result");

            entity.HasIndex(e => e.Id, "idx_id").HasFillFactor(80);

            entity.HasIndex(e => e.Master, "idx_master").HasFillFactor(80);

            entity.Property(e => e.Data)
                .HasColumnType("datetime")
                .HasColumnName("data");
            entity.Property(e => e.Id)
                .ValueGeneratedOnAdd()
                .HasColumnName("id");
            entity.Property(e => e.Master)
                .HasMaxLength(12)
                .HasColumnName("master");
            entity.Property(e => e.Screen)
                .HasMaxLength(2000)
                .HasColumnName("screen");
        });

        modelBuilder.Entity<PCoffsImportarExcell>(entity =>
        {
            entity
                .HasNoKey()
                .ToTable("pCOffs_ImportarExcell");

            entity.Property(e => e.Cp4).HasColumnName("CP4");
            entity.Property(e => e.CutOff1)
                .HasColumnType("datetime")
                .HasColumnName("cutOff1");
            entity.Property(e => e.CutOff11)
                .HasColumnType("datetime")
                .HasColumnName("cutOff11");
            entity.Property(e => e.CutOff2)
                .HasColumnType("datetime")
                .HasColumnName("cutOff2");
            entity.Property(e => e.CutOff21)
                .HasColumnType("datetime")
                .HasColumnName("cutOff21");
            entity.Property(e => e.Entidade).HasMaxLength(255);
            entity.Property(e => e.Localidade)
                .HasMaxLength(255)
                .HasColumnName("localidade");
            entity.Property(e => e.Plataforma).HasMaxLength(255);
            entity.Property(e => e.Req).HasColumnType("datetime");
            entity.Property(e => e.Req1).HasColumnType("datetime");
        });

        modelBuilder.Entity<Pac>(entity =>
        {
            entity.HasKey(e => e.Id).HasName("PK_ReclamacaoPACS");

            entity.ToTable("PAC");

            entity.Property(e => e.Id).HasColumnName("id");
            entity.Property(e => e.Anulado)
                .HasDefaultValueSql("(0)")
                .HasColumnName("anulado");
            entity.Property(e => e.DtAnulado)
                .HasColumnType("datetime")
                .HasColumnName("dtAnulado");
            entity.Property(e => e.DtAvaliacao)
                .HasColumnType("datetime")
                .HasColumnName("dtAvaliacao");
            entity.Property(e => e.DtAvaliacaoPrevista)
                .HasColumnType("datetime")
                .HasColumnName("dtAvaliacaoPrevista");
            entity.Property(e => e.DtCriacao)
                .HasDefaultValueSql("(getdate())")
                .HasColumnType("datetime")
                .HasColumnName("dtCriacao");
            entity.Property(e => e.DtImplementacaoAccaoCorrectiva)
                .HasColumnType("datetime")
                .HasColumnName("dtImplementacaoAccaoCorrectiva");
            entity.Property(e => e.DtIntrodAccaoCorrectiva)
                .HasColumnType("datetime")
                .HasColumnName("dtIntrodAccaoCorrectiva");
            entity.Property(e => e.DtIntrodAvaliacao)
                .HasColumnType("datetime")
                .HasColumnName("dtIntrodAvaliacao");
            entity.Property(e => e.DtIntrodDtAvaliacaoPrevista)
                .HasColumnType("datetime")
                .HasColumnName("dtIntrodDtAvaliacaoPrevista");
            entity.Property(e => e.Eficaz)
                .HasDefaultValueSql("(0)")
                .HasColumnName("eficaz");
            entity.Property(e => e.IGCOM2UsersertaAccaoCorrectiva).HasColumnName("iGCOM2UsersertaAccaoCorrectiva");
            entity.Property(e => e.IGCOM2UsersertaAvaliacao).HasColumnName("iGCOM2UsersertaAvaliacao");
            entity.Property(e => e.IGCOM2UsersertaEficacia).HasColumnName("iGCOM2UsersertaEficacia");
            entity.Property(e => e.IGCOM2UsersertaNaoConformidade).HasColumnName("iGCOM2UsersertaNaoConformidade");
            entity.Property(e => e.IdCausaRaiz).HasColumnName("idCausaRaiz");
            entity.Property(e => e.IdEntidade)
                .HasDefaultValueSql("(1)")
                .HasColumnName("idEntidade");
            entity.Property(e => e.IdPacReimplementa).HasColumnName("idPacReimplementa");
            entity.Property(e => e.IdReclamacao).HasColumnName("idReclamacao");
            entity.Property(e => e.IdTipoAccaoCorrectiva).HasColumnName("idTipoAccaoCorrectiva");
            entity.Property(e => e.IdUtilAnulado).HasColumnName("idUtilAnulado");
            entity.Property(e => e.IdUtilAvaliacao).HasColumnName("idUtilAvaliacao");
            entity.Property(e => e.IdUtilCriacao).HasColumnName("idUtilCriacao");
            entity.Property(e => e.IdUtilDestino).HasColumnName("idUtilDestino");
            entity.Property(e => e.IdUtilIntrodDtAvaliacaoPrevista).HasColumnName("idUtilIntrodDtAvaliacaoPrevista");
            entity.Property(e => e.ObsAccaoCorrectiva)
                .HasMaxLength(1000)
                .HasColumnName("obsAccaoCorrectiva");
            entity.Property(e => e.ObsAvaliacao)
                .HasMaxLength(1000)
                .HasColumnName("obsAvaliacao");
            entity.Property(e => e.ObsNaoConformidade)
                .HasMaxLength(1000)
                .HasColumnName("obsNaoConformidade");
        });

        modelBuilder.Entity<PacCausasRaizT>(entity =>
        {
            entity.ToTable("PacCausasRaiz_T");

            entity.Property(e => e.Id).HasColumnName("id");
            entity.Property(e => e.Descricao)
                .HasMaxLength(50)
                .HasColumnName("descricao");
            entity.Property(e => e.IdEntidade)
                .HasDefaultValueSql("(1)")
                .HasColumnName("idEntidade");
        });

        modelBuilder.Entity<PacEstadoT>(entity =>
        {
            entity.HasKey(e => e.Id).HasName("PK_ReclamacaoPACSEstados_T");

            entity.ToTable("PacEstado_T");

            entity.Property(e => e.Id).HasColumnName("id");
            entity.Property(e => e.Concluido).HasColumnName("concluido");
            entity.Property(e => e.Descricao)
                .HasMaxLength(50)
                .HasColumnName("descricao");
            entity.Property(e => e.IdEntidade)
                .HasDefaultValueSql("(1)")
                .HasColumnName("idEntidade");
        });

        modelBuilder.Entity<PacReclamaco>(entity =>
        {
            entity.HasKey(e => new { e.IdPac, e.IdReclamacao }).HasName("PK_PACSReclamacoes");

            entity.Property(e => e.IdPac).HasColumnName("idPAC");
            entity.Property(e => e.IdReclamacao).HasColumnName("idReclamacao");
            entity.Property(e => e.DtIntrod)
                .HasColumnType("datetime")
                .HasColumnName("dtIntrod");
            entity.Property(e => e.Id)
                .ValueGeneratedOnAdd()
                .HasColumnName("id");
            entity.Property(e => e.IdEntidade)
                .HasDefaultValueSql("(1)")
                .HasColumnName("idEntidade");
            entity.Property(e => e.IdStatusReclama).HasColumnName("idStatusReclama");
            entity.Property(e => e.IdStatusReocorre).HasColumnName("idStatusReocorre");
            entity.Property(e => e.IdUtilIntrod).HasColumnName("idUtilIntrod");
        });

        modelBuilder.Entity<PacReclamacoesStatusT>(entity =>
        {
            entity.ToTable("PacReclamacoesStatus_T");

            entity.Property(e => e.Id).HasColumnName("id");
            entity.Property(e => e.Descricao)
                .HasMaxLength(50)
                .HasColumnName("descricao");
        });

        modelBuilder.Entity<PacTiposAccoesCorrectivasT>(entity =>
        {
            entity.ToTable("PacTiposAccoesCorrectivas_T");

            entity.Property(e => e.Id).HasColumnName("id");
            entity.Property(e => e.Descricao)
                .HasMaxLength(50)
                .HasColumnName("descricao");
            entity.Property(e => e.IdEntidade)
                .HasDefaultValueSql("(1)")
                .HasColumnName("idEntidade");
        });

        modelBuilder.Entity<Pacdocumento>(entity =>
        {
            entity.ToTable("PACDocumentos");

            entity.Property(e => e.Id).HasColumnName("id");
            entity.Property(e => e.Descricao)
                .HasMaxLength(50)
                .IsUnicode(false)
                .HasColumnName("descricao");
            entity.Property(e => e.DtIntrod)
                .HasColumnType("datetime")
                .HasColumnName("dtIntrod");
            entity.Property(e => e.Guid)
                .HasMaxLength(50)
                .IsUnicode(false)
                .HasColumnName("GUID");
            entity.Property(e => e.IdPac).HasColumnName("idPAC");
            entity.Property(e => e.IdUtilIntrod).HasColumnName("idUtilIntrod");
            entity.Property(e => e.MimeType)
                .HasMaxLength(50)
                .IsUnicode(false)
                .HasColumnName("mimeType");
            entity.Property(e => e.Nome)
                .HasMaxLength(500)
                .IsUnicode(false)
                .HasColumnName("nome");
            entity.Property(e => e.ServerLocation)
                .HasMaxLength(250)
                .IsUnicode(false)
                .HasColumnName("serverLocation");
            entity.Property(e => e.Tamanho).HasColumnName("tamanho");
        });

        modelBuilder.Entity<PaisEstacoesT>(entity =>
        {
            entity.HasKey(e => e.Id).HasName("PK_T_PaisEstacoes");

            entity.ToTable("PaisEstacoes_T");

            entity.Property(e => e.Id).HasColumnName("id");
            entity.Property(e => e.Activo)
                .HasDefaultValueSql("(1)")
                .HasColumnName("activo");
            entity.Property(e => e.DtIntrod)
                .HasDefaultValueSql("(getdate())")
                .HasColumnType("datetime")
                .HasColumnName("dtIntrod");
            entity.Property(e => e.DtUltAct)
                .HasColumnType("datetime")
                .HasColumnName("dtUltAct");
            entity.Property(e => e.Estacao)
                .HasMaxLength(5)
                .HasColumnName("estacao");
            entity.Property(e => e.IdPais).HasColumnName("idPais");
            entity.Property(e => e.IdUtil).HasColumnName("idUtil");
            entity.Property(e => e.IdUtilUltAct).HasColumnName("idUtilUltAct");
        });

        modelBuilder.Entity<PaisProdutoZona>(entity =>
        {
            entity.HasKey(e => new { e.IdPais, e.IdTipoProduto }).HasName("PK_PaisZonas");

            entity.ToTable("PaisProdutoZona");

            entity.HasIndex(e => e.IdTipoProduto, "PK_idTipoProduto").HasFillFactor(80);

            entity.Property(e => e.IdPais).HasColumnName("idPais");
            entity.Property(e => e.IdTipoProduto).HasColumnName("idTipoProduto");
            entity.Property(e => e.Id)
                .ValueGeneratedOnAdd()
                .HasColumnName("id");
            entity.Property(e => e.IdTipoIvaexport).HasColumnName("idTipoIVAExport");
            entity.Property(e => e.IdTipoIvaimport).HasColumnName("idTipoIVAImport");
            entity.Property(e => e.TaxaIvaexport)
                .HasColumnType("money")
                .HasColumnName("taxaIVAExport");
            entity.Property(e => e.TaxaIvaimport)
                .HasColumnType("money")
                .HasColumnName("taxaIVAImport");
            entity.Property(e => e.Zona)
                .HasMaxLength(2)
                .HasColumnName("zona");
            entity.Property(e => e.ZonaImport)
                .HasMaxLength(2)
                .HasColumnName("zonaImport");
        });

        modelBuilder.Entity<PaisProdutoZona20160229>(entity =>
        {
            entity.HasKey(e => new { e.IdPais, e.IdTipoProduto }).HasName("PK_PaisZonas_bk");

            entity.ToTable("PaisProdutoZona_20160229");

            entity.Property(e => e.IdPais).HasColumnName("idPais");
            entity.Property(e => e.IdTipoProduto).HasColumnName("idTipoProduto");
            entity.Property(e => e.Id)
                .ValueGeneratedOnAdd()
                .HasColumnName("id");
            entity.Property(e => e.IdTipoIvaexport).HasColumnName("idTipoIVAExport");
            entity.Property(e => e.IdTipoIvaimport).HasColumnName("idTipoIVAImport");
            entity.Property(e => e.TaxaIvaexport)
                .HasColumnType("money")
                .HasColumnName("taxaIVAExport");
            entity.Property(e => e.TaxaIvaimport)
                .HasColumnType("money")
                .HasColumnName("taxaIVAImport");
            entity.Property(e => e.Zona)
                .HasMaxLength(2)
                .HasColumnName("zona");
            entity.Property(e => e.ZonaImport)
                .HasMaxLength(2)
                .HasColumnName("zonaImport");
        });

        modelBuilder.Entity<PaisZonaRegioesT>(entity =>
        {
            entity.HasKey(e => e.Id).HasName("PK_T_ZonasRegioes");

            entity.ToTable("PaisZonaRegioes_T");

            entity.Property(e => e.Id).HasColumnName("id");
            entity.Property(e => e.Activo)
                .HasDefaultValueSql("(1)")
                .HasColumnName("activo");
            entity.Property(e => e.Descricao)
                .HasMaxLength(25)
                .HasColumnName("descricao");
            entity.Property(e => e.Ec).HasColumnName("EC");
        });

        modelBuilder.Entity<PaisZonaT>(entity =>
        {
            entity.HasKey(e => e.Id).HasName("PK_T_ZonaPais");

            entity.ToTable("PaisZona_T");

            entity.HasIndex(e => e.IdRegiao, "IDX_IdRegiao").HasFillFactor(80);

            entity.Property(e => e.Id).HasColumnName("id");
            entity.Property(e => e.Activo)
                .HasDefaultValueSql("(1)")
                .HasColumnName("activo");
            entity.Property(e => e.Descricao)
                .HasMaxLength(50)
                .HasColumnName("descricao");
            entity.Property(e => e.ExpIpf).HasColumnName("expIPF");
            entity.Property(e => e.IdRegiao).HasColumnName("idRegiao");
            entity.Property(e => e.IdZonaComb).HasColumnName("idZonaComb");
            entity.Property(e => e.ImpIpf).HasColumnName("impIPF");
            entity.Property(e => e.IsPais)
                .HasDefaultValueSql("((1))")
                .HasColumnName("isPais");
            entity.Property(e => e.MaskCpostal)
                .HasMaxLength(15)
                .HasColumnName("maskCPostal");
            entity.Property(e => e.PermiteTarifaIb).HasColumnName("permiteTarifaIB");
            entity.Property(e => e.PermiteTarifaOb)
                .HasDefaultValueSql("((0))")
                .HasColumnName("permiteTarifaOB");
            entity.Property(e => e.RecolhasDom).HasColumnName("recolhasDom");
            entity.Property(e => e.Servico)
                .HasDefaultValueSql("((1))")
                .HasColumnName("servico");
            entity.Property(e => e.Sigla)
                .HasMaxLength(2)
                .HasColumnName("sigla");
            entity.Property(e => e.SiglaVg)
                .HasMaxLength(2)
                .HasColumnName("siglaVg");
            entity.Property(e => e.Zona)
                .HasMaxLength(1)
                .HasColumnName("zona");
            entity.Property(e => e.ZonaFedex)
                .HasMaxLength(1)
                .HasColumnName("zonaFedex");
        });

        modelBuilder.Entity<ParametrosFalhasTratavei>(entity =>
        {
            entity.HasNoKey();

            entity.Property(e => e.Activo).HasColumnName("activo");
            entity.Property(e => e.DtIntrod)
                .HasColumnType("datetime")
                .HasColumnName("dtIntrod");
            entity.Property(e => e.DtUtilUltAct)
                .HasColumnType("datetime")
                .HasColumnName("dtUtilUltAct");
            entity.Property(e => e.Email)
                .HasMaxLength(500)
                .HasColumnName("email");
            entity.Property(e => e.Id)
                .ValueGeneratedOnAdd()
                .HasColumnName("id");
            entity.Property(e => e.IdCliMorada).HasColumnName("idCliMorada");
            entity.Property(e => e.IdCliente).HasColumnName("idCliente");
            entity.Property(e => e.IdUtilIntrod).HasColumnName("idUtilIntrod");
            entity.Property(e => e.IdUtilUltAct).HasColumnName("idUtilUltAct");
        });

        modelBuilder.Entity<ParametrosT>(entity =>
        {
            entity.HasKey(e => e.Id).HasName("PK_T_Parametros");

            entity.ToTable("Parametros_T");

            entity.Property(e => e.Id)
                .ValueGeneratedNever()
                .HasColumnName("id");
            entity.Property(e => e.Activo).HasColumnName("activo");
            entity.Property(e => e.Codigo)
                .HasMaxLength(10)
                .HasColumnName("codigo");
            entity.Property(e => e.Descricao)
                .HasMaxLength(50)
                .HasColumnName("descricao");
        });

        modelBuilder.Entity<ParceiroCodigoPostalM>(entity =>
        {
            entity.HasKey(e => e.Id).HasName("PK__Parceiro__3213E83F3BB080D3");

            entity.ToTable("Parceiro_CodigoPostal_M");

            entity.Property(e => e.Id).HasColumnName("id");
            entity.Property(e => e.Cpostal)
                .HasMaxLength(20)
                .HasColumnName("cpostal");
            entity.Property(e => e.IdCliente).HasColumnName("idCliente");
            entity.Property(e => e.IdEntidade).HasColumnName("idEntidade");
            entity.Property(e => e.Localidade).HasMaxLength(50);
            entity.Property(e => e.Plataforma).HasMaxLength(100);
        });

        modelBuilder.Entity<ParserCexReembolso>(entity =>
        {
            entity.HasKey(e => e.Id).HasName("PK__Parser_C__3213E83F18B2E77A");

            entity.ToTable("Parser_CexReembolsos");

            entity.Property(e => e.Id).HasColumnName("id");
            entity.Property(e => e.Cheque).HasColumnName("cheque");
            entity.Property(e => e.CodEstadoEnvio)
                .HasMaxLength(4)
                .HasColumnName("codEstadoEnvio");
            entity.Property(e => e.CodRem).HasMaxLength(20);
            entity.Property(e => e.CpostalDest).HasMaxLength(15);
            entity.Property(e => e.CpostalRem).HasMaxLength(15);
            entity.Property(e => e.DescricaoEstadoEnvio).HasMaxLength(100);
            entity.Property(e => e.DtEnvio)
                .HasColumnType("datetime")
                .HasColumnName("dtEnvio");
            entity.Property(e => e.DtFechoEstadoenvio)
                .HasColumnType("datetime")
                .HasColumnName("dtFechoEstadoenvio");
            entity.Property(e => e.DtFechoFacturacao)
                .HasColumnType("datetime")
                .HasColumnName("dtFechoFacturacao");
            entity.Property(e => e.DtInsert)
                .HasDefaultValueSql("(getdate())")
                .HasColumnType("datetime")
                .HasColumnName("dtInsert");
            entity.Property(e => e.Dtprocessado)
                .HasColumnType("datetime")
                .HasColumnName("dtprocessado");
            entity.Property(e => e.LocalidadeDest)
                .HasMaxLength(100)
                .HasColumnName("localidadeDest");
            entity.Property(e => e.LocalidadeRem)
                .HasMaxLength(100)
                .HasColumnName("localidadeRem");
            entity.Property(e => e.MoradaDest).HasMaxLength(100);
            entity.Property(e => e.MoradaRem)
                .HasMaxLength(100)
                .HasColumnName("moradaRem");
            entity.Property(e => e.MsgProcessamento)
                .HasMaxLength(500)
                .HasColumnName("msgProcessamento");
            entity.Property(e => e.NomeDest).HasMaxLength(100);
            entity.Property(e => e.NomeFicheiro).HasMaxLength(200);
            entity.Property(e => e.NomeRem)
                .HasMaxLength(100)
                .HasColumnName("nomeRem");
            entity.Property(e => e.NrFactura).HasColumnName("nrFactura");
            entity.Property(e => e.NumEnvio)
                .HasMaxLength(100)
                .HasColumnName("numEnvio");
            entity.Property(e => e.Numpacotes).HasColumnName("numpacotes");
            entity.Property(e => e.Obs)
                .HasMaxLength(100)
                .HasColumnName("obs");
            entity.Property(e => e.Peso)
                .HasColumnType("money")
                .HasColumnName("peso");
            entity.Property(e => e.Processado)
                .HasDefaultValueSql("((0))")
                .HasColumnName("processado");
            entity.Property(e => e.Reembolso)
                .HasColumnType("money")
                .HasColumnName("reembolso");
            entity.Property(e => e.Referencia).HasMaxLength(100);
            entity.Property(e => e.TelfDest)
                .HasMaxLength(20)
                .HasColumnName("telfDest");
            entity.Property(e => e.TlfRem).HasMaxLength(20);
            entity.Property(e => e.ValorFixo)
                .HasMaxLength(20)
                .HasColumnName("valorFixo");
        });

        modelBuilder.Entity<ParserCrossDocking>(entity =>
        {
            entity
                .HasNoKey()
                .ToTable("parserCrossDocking");

            entity.HasIndex(e => e.RefCli, "Idx_refCli").HasFillFactor(80);

            entity.Property(e => e.Anulado)
                .HasDefaultValueSql("((0))")
                .HasColumnName("anulado");
            entity.Property(e => e.CentroCusto)
                .HasMaxLength(100)
                .IsUnicode(false)
                .HasColumnName("centroCusto");
            entity.Property(e => e.Cidade)
                .HasMaxLength(50)
                .IsUnicode(false)
                .HasColumnName("cidade");
            entity.Property(e => e.Cp)
                .HasMaxLength(10)
                .IsUnicode(false)
                .HasColumnName("cp");
            entity.Property(e => e.Departamento)
                .HasMaxLength(50)
                .IsUnicode(false)
                .HasColumnName("departamento");
            entity.Property(e => e.DescricaoProduto)
                .HasMaxLength(50)
                .IsUnicode(false)
                .HasColumnName("descricaoProduto");
            entity.Property(e => e.DtAceitacao)
                .HasColumnType("datetime")
                .HasColumnName("dtAceitacao");
            entity.Property(e => e.DtConsolidacao)
                .HasColumnType("datetime")
                .HasColumnName("dtConsolidacao");
            entity.Property(e => e.DtEncomenda)
                .HasColumnType("datetime")
                .HasColumnName("dtEncomenda");
            entity.Property(e => e.DtIntrod)
                .HasDefaultValueSql("(getdate())")
                .HasColumnType("datetime")
                .HasColumnName("dtIntrod");
            entity.Property(e => e.DtUltAct)
                .HasColumnType("datetime")
                .HasColumnName("dtUltAct");
            entity.Property(e => e.Email)
                .HasMaxLength(50)
                .IsUnicode(false)
                .HasColumnName("email");
            entity.Property(e => e.Endereco1)
                .HasMaxLength(100)
                .IsUnicode(false)
                .HasColumnName("endereco1");
            entity.Property(e => e.Endereco2)
                .HasMaxLength(100)
                .IsUnicode(false)
                .HasColumnName("endereco2");
            entity.Property(e => e.Endereco3)
                .HasMaxLength(100)
                .IsUnicode(false)
                .HasColumnName("endereco3");
            entity.Property(e => e.Endereco4)
                .HasMaxLength(100)
                .IsUnicode(false)
                .HasColumnName("endereco4");
            entity.Property(e => e.Fornecedor)
                .HasMaxLength(100)
                .IsUnicode(false)
                .HasColumnName("fornecedor");
            entity.Property(e => e.Id)
                .ValueGeneratedOnAdd()
                .HasColumnName("id");
            entity.Property(e => e.IdMorada).HasColumnName("idMorada");
            entity.Property(e => e.IdUtilUltAct).HasColumnName("idUtilUltAct");
            entity.Property(e => e.LinhaPc).HasColumnName("linhaPC");
            entity.Property(e => e.NomeEmpresa)
                .HasMaxLength(100)
                .IsUnicode(false)
                .HasColumnName("nomeEmpresa");
            entity.Property(e => e.NomeRequsitante)
                .HasMaxLength(100)
                .IsUnicode(false)
                .HasColumnName("nomeRequsitante");
            entity.Property(e => e.Quantidade).HasColumnName("quantidade");
            entity.Property(e => e.RefCli)
                .HasMaxLength(20)
                .IsUnicode(false)
                .HasColumnName("refCli");
            entity.Property(e => e.Telefone)
                .HasMaxLength(20)
                .IsUnicode(false)
                .HasColumnName("telefone");
            entity.Property(e => e.UnidMedida)
                .HasMaxLength(10)
                .IsUnicode(false)
                .HasColumnName("unidMedida");
        });

        modelBuilder.Entity<ParserDetail>(entity =>
        {
            entity.HasKey(e => e.Id).HasName("PK__parserDe__3213E83F230C2AA2");

            entity.ToTable("parserDetails");

            entity.HasIndex(e => e.IdHeader, "IDX_IDHeader").HasFillFactor(80);

            entity.Property(e => e.Id).HasColumnName("id");
            entity.Property(e => e.CodDetalhe)
                .HasMaxLength(50)
                .IsUnicode(false)
                .HasColumnName("codDetalhe");
            entity.Property(e => e.CreationDate)
                .HasDefaultValueSql("(getdate())")
                .HasColumnType("datetime")
                .HasColumnName("creationDate");
            entity.Property(e => e.FileName)
                .HasMaxLength(250)
                .IsUnicode(false)
                .HasColumnName("fileName");
            entity.Property(e => e.IdHeader).HasColumnName("idHeader");
            entity.Property(e => e.LineIndex).HasColumnName("lineIndex");
            entity.Property(e => e.M3).HasColumnName("m3");
            entity.Property(e => e.NumVolume).HasColumnName("numVolume");
            entity.Property(e => e.Peso)
                .HasColumnType("money")
                .HasColumnName("peso");
            entity.Property(e => e.RefCli)
                .HasMaxLength(50)
                .IsUnicode(false)
                .HasColumnName("refCli");
            entity.Property(e => e.TipoVolume)
                .HasMaxLength(20)
                .IsUnicode(false)
                .HasColumnName("tipoVolume");
        });

        modelBuilder.Entity<ParserDetailsAt>(entity =>
        {
            entity.ToTable("parserDetailsAT");

            entity.HasIndex(e => e.IdHeader, "idx_idHeader");

            entity.Property(e => e.Id).HasColumnName("id");
            entity.Property(e => e.CreationDate)
                .HasDefaultValueSql("(getdate())")
                .HasColumnType("datetime")
                .HasColumnName("creationDate");
            entity.Property(e => e.Detalhe)
                .HasMaxLength(255)
                .IsUnicode(false)
                .HasColumnName("detalhe");
            entity.Property(e => e.IdHeader).HasColumnName("idHeader");
            entity.Property(e => e.LineIndex).HasColumnName("lineIndex");
        });

        modelBuilder.Entity<ParserDetailsAtLog>(entity =>
        {
            entity.ToTable("parserDetailsAT_Log");

            entity.HasIndex(e => e.IdHeader, "NonClusteredIndex-20200418-213705");

            entity.Property(e => e.Id).HasColumnName("id");
            entity.Property(e => e.BckDate)
                .HasDefaultValueSql("(getdate())")
                .HasColumnType("datetime")
                .HasColumnName("bck_date");
            entity.Property(e => e.CreationDate)
                .HasColumnType("datetime")
                .HasColumnName("creationDate");
            entity.Property(e => e.Detalhe)
                .HasMaxLength(255)
                .IsUnicode(false)
                .HasColumnName("detalhe");
            entity.Property(e => e.IdDetailAt).HasColumnName("idDetailAT");
            entity.Property(e => e.IdHeader).HasColumnName("idHeader");
            entity.Property(e => e.LineIndex).HasColumnName("lineIndex");
        });

        modelBuilder.Entity<ParserDetailsLog>(entity =>
        {
            entity
                .HasNoKey()
                .ToTable("parserDetails_Log");

            entity.HasIndex(e => e.CodDetalhe, "IDX_parserHeaders_Log_codDeGCOM2Usershe").HasFillFactor(80);

            entity.HasIndex(e => e.IdHeader, "idx_parserDetLog_idHeader").HasFillFactor(80);

            entity.Property(e => e.BckDate)
                .HasDefaultValueSql("(getdate())")
                .HasColumnType("datetime")
                .HasColumnName("bck_date");
            entity.Property(e => e.CodDetalhe)
                .HasMaxLength(50)
                .IsUnicode(false)
                .HasColumnName("codDetalhe");
            entity.Property(e => e.CreationDate)
                .HasColumnType("datetime")
                .HasColumnName("creationDate");
            entity.Property(e => e.FileName)
                .HasMaxLength(250)
                .IsUnicode(false)
                .HasColumnName("fileName");
            entity.Property(e => e.Id)
                .ValueGeneratedOnAdd()
                .HasColumnName("id");
            entity.Property(e => e.IdDetail).HasColumnName("idDetail");
            entity.Property(e => e.IdHeader).HasColumnName("idHeader");
            entity.Property(e => e.LineIndex).HasColumnName("lineIndex");
            entity.Property(e => e.M3).HasColumnName("m3");
            entity.Property(e => e.NumVolume).HasColumnName("numVolume");
            entity.Property(e => e.Peso)
                .HasColumnType("money")
                .HasColumnName("peso");
            entity.Property(e => e.RefCli)
                .HasMaxLength(50)
                .IsUnicode(false)
                .HasColumnName("refCli");
            entity.Property(e => e.TipoVolume)
                .HasMaxLength(20)
                .IsUnicode(false)
                .HasColumnName("tipoVolume");
        });

        modelBuilder.Entity<ParserDetailsTemp>(entity =>
        {
            entity
                .HasNoKey()
                .ToTable("parserDetails_TEMP");

            entity.Property(e => e.CodDetalhe)
                .HasMaxLength(20)
                .IsUnicode(false)
                .HasColumnName("codDetalhe");
            entity.Property(e => e.CreationDate)
                .HasDefaultValueSql("(getdate())")
                .HasColumnType("datetime")
                .HasColumnName("creationDate");
            entity.Property(e => e.Id)
                .ValueGeneratedOnAdd()
                .HasColumnName("id");
            entity.Property(e => e.IdHeader).HasColumnName("idHeader");
            entity.Property(e => e.M3)
                .HasColumnType("money")
                .HasColumnName("m3");
            entity.Property(e => e.NumVolume).HasColumnName("numVolume");
            entity.Property(e => e.Peso)
                .HasColumnType("money")
                .HasColumnName("peso");
            entity.Property(e => e.TipoVolume)
                .HasMaxLength(20)
                .IsUnicode(false)
                .HasColumnName("tipoVolume");
        });

        modelBuilder.Entity<ParserErrosInesperado>(entity =>
        {
            entity
                .HasNoKey()
                .ToTable("parserErrosInesperados");

            entity.HasIndex(e => new { e.IdCliParserParam, e.DtIntrod }, "idx_idCliParserParam");

            entity.Property(e => e.DtIntrod)
                .HasColumnType("datetime")
                .HasColumnName("dtIntrod");
            entity.Property(e => e.Error)
                .IsUnicode(false)
                .HasColumnName("error");
            entity.Property(e => e.Id)
                .ValueGeneratedOnAdd()
                .HasColumnName("id");
            entity.Property(e => e.IdCliParserParam).HasColumnName("idCliParserParam");
        });

        modelBuilder.Entity<ParserEstado>(entity =>
        {
            entity.HasKey(e => e.Id).HasName("PK__parserEs__3213E83F6FF047C2");

            entity.ToTable("parserEstados");

            entity.HasIndex(e => e.Awb, "idx_awb");

            entity.HasIndex(e => e.Tipo, "idx_tipo");

            entity.HasIndex(e => e.Tipo, "idx_tipo2");

            entity.HasIndex(e => new { e.Tipo, e.Awb }, "idx_tipo_awb");

            entity.Property(e => e.Id).HasColumnName("id");
            entity.Property(e => e.Awb)
                .HasMaxLength(50)
                .HasColumnName("awb");
            entity.Property(e => e.Comment)
                .HasMaxLength(250)
                .IsUnicode(false)
                .HasColumnName("comment");
            entity.Property(e => e.CreationDate)
                .HasDefaultValueSql("(getdate())")
                .HasColumnType("datetime")
                .HasColumnName("creationDate");
            entity.Property(e => e.FileName)
                .HasMaxLength(250)
                .IsUnicode(false)
                .HasColumnName("fileName");
            entity.Property(e => e.IdRecolhasCep)
                .HasMaxLength(20)
                .HasColumnName("idRecolhasCEP");
            entity.Property(e => e.LineIndex).HasColumnName("lineIndex");
            entity.Property(e => e.Plataforma).HasMaxLength(50);
            entity.Property(e => e.Referencia)
                .HasMaxLength(50)
                .HasColumnName("referencia");
            entity.Property(e => e.Rota).HasMaxLength(50);
            entity.Property(e => e.ScanCode)
                .HasMaxLength(2)
                .IsUnicode(false)
                .HasColumnName("scanCode");
            entity.Property(e => e.ScanDate)
                .HasColumnType("datetime")
                .HasColumnName("scanDate");
            entity.Property(e => e.Signature)
                .HasMaxLength(30)
                .IsUnicode(false)
                .HasColumnName("signature");
            entity.Property(e => e.Tipo)
                .HasMaxLength(50)
                .HasColumnName("tipo");
        });

        modelBuilder.Entity<ParserEstadosLog>(entity =>
        {
            entity.HasKey(e => e.Id).HasName("PK__parserEs__3213E83F6B2B92A5");

            entity.ToTable("parserEstados_LOG");

            entity.Property(e => e.Id).HasColumnName("id");
            entity.Property(e => e.Awb)
                .HasMaxLength(50)
                .HasColumnName("awb");
            entity.Property(e => e.BckDate)
                .HasDefaultValueSql("(getdate())")
                .HasColumnType("datetime")
                .HasColumnName("Bck_Date");
            entity.Property(e => e.Comment)
                .HasMaxLength(250)
                .IsUnicode(false)
                .HasColumnName("comment");
            entity.Property(e => e.CreationDate)
                .HasColumnType("datetime")
                .HasColumnName("creationDate");
            entity.Property(e => e.FileName)
                .HasMaxLength(250)
                .IsUnicode(false)
                .HasColumnName("fileName");
            entity.Property(e => e.IdParserEstados).HasColumnName("idParserEstados");
            entity.Property(e => e.IdRecolhasCep)
                .HasMaxLength(20)
                .HasColumnName("idRecolhasCEP");
            entity.Property(e => e.LineIndex).HasColumnName("lineIndex");
            entity.Property(e => e.Plataforma).HasMaxLength(50);
            entity.Property(e => e.Referencia)
                .HasMaxLength(50)
                .HasColumnName("referencia");
            entity.Property(e => e.Rota).HasMaxLength(50);
            entity.Property(e => e.ScanCode)
                .HasMaxLength(2)
                .IsUnicode(false)
                .HasColumnName("scanCode");
            entity.Property(e => e.ScanDate)
                .HasColumnType("datetime")
                .HasColumnName("scanDate");
            entity.Property(e => e.Signature)
                .HasMaxLength(30)
                .IsUnicode(false)
                .HasColumnName("signature");
            entity.Property(e => e.Tipo)
                .HasMaxLength(50)
                .HasColumnName("tipo");
        });

        modelBuilder.Entity<ParserFileTypesT>(entity =>
        {
            entity
                .HasNoKey()
                .ToTable("parserFileTypes_T");

            entity.Property(e => e.Descricao)
                .HasMaxLength(50)
                .IsUnicode(false)
                .HasColumnName("descricao");
            entity.Property(e => e.Id).HasColumnName("id");
        });

        modelBuilder.Entity<ParserFtp>(entity =>
        {
            entity
                .HasNoKey()
                .ToTable("parserFTP");

            entity.Property(e => e.AddFilePrefix).HasColumnName("addFilePrefix");
            entity.Property(e => e.CheckBackupDir).HasColumnName("checkBackupDir");
            entity.Property(e => e.Dir)
                .HasMaxLength(50)
                .IsUnicode(false)
                .HasColumnName("dir");
            entity.Property(e => e.FileExtension)
                .HasMaxLength(100)
                .IsUnicode(false)
                .HasColumnName("fileExtension");
            entity.Property(e => e.FilePrefix)
                .HasMaxLength(100)
                .IsUnicode(false)
                .HasColumnName("filePrefix");
            entity.Property(e => e.Id)
                .ValueGeneratedOnAdd()
                .HasColumnName("id");
            entity.Property(e => e.IdCliente).HasColumnName("idCliente");
            entity.Property(e => e.SourceBackupDir)
                .HasMaxLength(100)
                .IsUnicode(false)
                .UseCollation("Latin1_General_CI_AS")
                .HasColumnName("sourceBackupDir");
            entity.Property(e => e.SourceFtpPassword)
                .HasMaxLength(100)
                .IsUnicode(false)
                .UseCollation("Latin1_General_CI_AS")
                .HasColumnName("sourceFtpPassword");
            entity.Property(e => e.SourceFtpServer)
                .HasMaxLength(100)
                .IsUnicode(false)
                .UseCollation("Latin1_General_CI_AS")
                .HasColumnName("sourceFtpServer");
            entity.Property(e => e.SourceFtpUser)
                .HasMaxLength(100)
                .IsUnicode(false)
                .UseCollation("Latin1_General_CI_AS")
                .HasColumnName("sourceFtpUser");
            entity.Property(e => e.SourceType)
                .HasMaxLength(3)
                .IsUnicode(false)
                .HasColumnName("sourceType");
        });

        modelBuilder.Entity<ParserHeader>(entity =>
        {
            entity.HasKey(e => e.Id).HasName("PK__parserHe__3213E83F202FBDF7");

            entity.ToTable("parserHeaders");

            entity.HasIndex(e => e.IdSegmento, "idx_idSegmento_moradaDest_localidadeDest").HasFillFactor(80);

            entity.Property(e => e.Id).HasColumnName("id");
            entity.Property(e => e.ActualizaDados)
                .HasDefaultValueSql("((0))")
                .HasColumnName("actualizaDados");
            entity.Property(e => e.AwbCliente)
                .HasMaxLength(50)
                .IsUnicode(false)
                .HasColumnName("awbCliente");
            entity.Property(e => e.ClasseOrigem).HasColumnName("classeOrigem");
            entity.Property(e => e.CodPostalDest)
                .HasMaxLength(10)
                .IsUnicode(false)
                .HasColumnName("codPostalDest");
            entity.Property(e => e.CodPostalExp)
                .HasMaxLength(10)
                .IsUnicode(false)
                .HasColumnName("codPostalExp");
            entity.Property(e => e.CodTipoManifesto).HasMaxLength(20);
            entity.Property(e => e.ContribDest)
                .HasMaxLength(20)
                .IsUnicode(false)
                .HasColumnName("contribDest");
            entity.Property(e => e.ContribExp)
                .HasMaxLength(20)
                .IsUnicode(false)
                .HasColumnName("contribExp");
            entity.Property(e => e.CreationDate)
                .HasDefaultValueSql("(getdate())")
                .HasColumnType("datetime")
                .HasColumnName("creationDate");
            entity.Property(e => e.DataEntregaDest)
                .HasColumnType("datetime")
                .HasColumnName("dataEntregaDest");
            entity.Property(e => e.DataOrigem)
                .HasColumnType("datetime")
                .HasColumnName("dataOrigem");
            entity.Property(e => e.Departamento)
                .HasMaxLength(250)
                .IsUnicode(false)
                .HasColumnName("departamento");
            entity.Property(e => e.DocExpAss).HasColumnName("docExpAss");
            entity.Property(e => e.DtEnvio)
                .HasColumnType("datetime")
                .HasColumnName("dtEnvio");
            entity.Property(e => e.Email)
                .HasMaxLength(50)
                .IsUnicode(false)
                .HasColumnName("email");
            entity.Property(e => e.ErroProcessamento).HasColumnName("erroProcessamento");
            entity.Property(e => e.FileName)
                .HasMaxLength(250)
                .IsUnicode(false)
                .HasColumnName("fileName");
            entity.Property(e => e.GerarRecolha).HasColumnName("gerarRecolha");
            entity.Property(e => e.GrandeSup).HasColumnName("grandeSup");
            entity.Property(e => e.Guia)
                .HasMaxLength(100)
                .IsUnicode(false)
                .HasColumnName("guia");
            entity.Property(e => e.IdCliMorada).HasColumnName("idCliMorada");
            entity.Property(e => e.IdCliente).HasColumnName("idCliente");
            entity.Property(e => e.IdClienteFacturacao).HasColumnName("idClienteFacturacao");
            entity.Property(e => e.IdEntidade).HasColumnName("idEntidade");
            entity.Property(e => e.IdPaisDestino).HasColumnName("idPaisDestino");
            entity.Property(e => e.IdPaisOrigem).HasColumnName("idPaisOrigem");
            entity.Property(e => e.IdProvedor).HasColumnName("idProvedor");
            entity.Property(e => e.IdRecolha).HasColumnName("idRecolha");
            entity.Property(e => e.IdSegmento).HasColumnName("idSegmento");
            entity.Property(e => e.IdTipoLogInv).HasColumnName("idTipoLogInv");
            entity.Property(e => e.Idoficinacorreos)
                .HasMaxLength(50)
                .HasColumnName("IDOFICINACORREOS");
            entity.Property(e => e.ImprimirGuia)
                .HasDefaultValueSql("((0))")
                .HasColumnName("imprimirGuia");
            entity.Property(e => e.LineIndex).HasColumnName("lineIndex");
            entity.Property(e => e.LocalCodPostalDest)
                .HasMaxLength(250)
                .IsUnicode(false)
                .HasColumnName("localCodPostalDest");
            entity.Property(e => e.LocalExp)
                .HasMaxLength(250)
                .IsUnicode(false)
                .HasColumnName("localExp");
            entity.Property(e => e.LocalPagamento).HasColumnName("localPagamento");
            entity.Property(e => e.LocalidadeDest)
                .HasMaxLength(250)
                .IsUnicode(false)
                .HasColumnName("localidadeDest");
            entity.Property(e => e.LocalidadeExp)
                .HasMaxLength(250)
                .IsUnicode(false)
                .HasColumnName("localidadeExp");
            entity.Property(e => e.M3).HasColumnName("m3");
            entity.Property(e => e.Mercadoria)
                .HasMaxLength(250)
                .IsUnicode(false)
                .HasColumnName("mercadoria");
            entity.Property(e => e.MercadoriaVal)
                .HasColumnType("money")
                .HasColumnName("mercadoriaVal");
            entity.Property(e => e.Moeda)
                .HasMaxLength(10)
                .IsUnicode(false)
                .HasColumnName("moeda");
            entity.Property(e => e.MoradaDest)
                .HasMaxLength(250)
                .IsUnicode(false)
                .HasColumnName("moradaDest");
            entity.Property(e => e.MoradaExp)
                .HasMaxLength(250)
                .IsUnicode(false)
                .HasColumnName("moradaExp");
            entity.Property(e => e.NVols).HasColumnName("nVols");
            entity.Property(e => e.NomeContactoDest)
                .HasMaxLength(250)
                .HasColumnName("nomeContactoDest");
            entity.Property(e => e.NomeDest)
                .HasMaxLength(250)
                .IsUnicode(false)
                .HasColumnName("nomeDest");
            entity.Property(e => e.NomeExp)
                .HasMaxLength(250)
                .IsUnicode(false)
                .HasColumnName("nomeExp");
            entity.Property(e => e.NumEnvioDevolvido)
                .HasMaxLength(50)
                .HasColumnName("numEnvioDevolvido");
            entity.Property(e => e.NumGt)
                .HasMaxLength(50)
                .IsUnicode(false)
                .HasColumnName("numGT");
            entity.Property(e => e.Obs)
                .HasMaxLength(1000)
                .IsUnicode(false)
                .HasColumnName("obs");
            entity.Property(e => e.Peso)
                .HasColumnType("money")
                .HasColumnName("peso");
            entity.Property(e => e.RecolhaRemota)
                .HasDefaultValueSql("((0))")
                .HasColumnName("recolhaRemota");
            entity.Property(e => e.ReembVal)
                .HasColumnType("money")
                .HasColumnName("reembVal");
            entity.Property(e => e.ReembolsoObs)
                .HasMaxLength(1000)
                .IsUnicode(false)
                .HasColumnName("reembolsoObs");
            entity.Property(e => e.RefCliente)
                .HasMaxLength(100)
                .IsUnicode(false)
                .HasColumnName("refCliente");
            entity.Property(e => e.RefGeodis)
                .HasMaxLength(50)
                .IsUnicode(false)
                .HasColumnName("refGEODIS");
            entity.Property(e => e.RefOrigem)
                .HasMaxLength(50)
                .HasColumnName("refOrigem");
            entity.Property(e => e.SendEmail).HasColumnName("sendEmail");
            entity.Property(e => e.SerieGuia)
                .HasMaxLength(2)
                .IsUnicode(false)
                .HasColumnName("serieGuia");
            entity.Property(e => e.Swap).HasColumnName("swap");
            entity.Property(e => e.TelefoneDest)
                .HasMaxLength(20)
                .IsUnicode(false)
                .HasColumnName("telefoneDest");
            entity.Property(e => e.TipoEmbalagem).HasColumnName("tipoEmbalagem");
            entity.Property(e => e.TipoServico).HasColumnName("tipoServico");
            entity.Property(e => e.TipoTrafego).HasColumnName("tipoTrafego");
            entity.Property(e => e.ValorSegurado)
                .HasColumnType("money")
                .HasColumnName("valorSegurado");
            entity.Property(e => e.VendaDinheiro).HasColumnName("vendaDinheiro");
        });

        modelBuilder.Entity<ParserHeadersLog>(entity =>
        {
            entity
                .HasNoKey()
                .ToTable("parserHeaders_Log");

            entity.HasIndex(e => e.IdCliente, "MB").HasFillFactor(80);

            entity.HasIndex(e => new { e.CreationDate, e.IdCliente, e.IdCliMorada }, "idx_creationDate");

            entity.HasIndex(e => new { e.FileName, e.RefCliente }, "idx_fileName_refCliente");

            entity.HasIndex(e => e.IdHeader, "idx_idHeader");

            entity.HasIndex(e => e.NumGt, "idx_numgt").HasFillFactor(80);

            entity.Property(e => e.ActualizaDados).HasColumnName("actualizaDados");
            entity.Property(e => e.AwbCliente)
                .HasMaxLength(50)
                .IsUnicode(false)
                .HasColumnName("awbCliente");
            entity.Property(e => e.BckDate)
                .HasDefaultValueSql("(getdate())")
                .HasColumnType("datetime")
                .HasColumnName("bck_date");
            entity.Property(e => e.ClasseOrigem).HasColumnName("classeOrigem");
            entity.Property(e => e.CodPostalDest)
                .HasMaxLength(10)
                .IsUnicode(false)
                .HasColumnName("codPostalDest");
            entity.Property(e => e.CodPostalExp)
                .HasMaxLength(10)
                .IsUnicode(false)
                .HasColumnName("codPostalExp");
            entity.Property(e => e.ContribDest)
                .HasMaxLength(20)
                .IsUnicode(false)
                .HasColumnName("contribDest");
            entity.Property(e => e.ContribExp)
                .HasMaxLength(20)
                .IsUnicode(false)
                .HasColumnName("contribExp");
            entity.Property(e => e.CreationDate)
                .HasColumnType("datetime")
                .HasColumnName("creationDate");
            entity.Property(e => e.DataEntregaDest)
                .HasColumnType("datetime")
                .HasColumnName("dataEntregaDest");
            entity.Property(e => e.DataOrigem)
                .HasColumnType("datetime")
                .HasColumnName("dataOrigem");
            entity.Property(e => e.Departamento)
                .HasMaxLength(250)
                .IsUnicode(false)
                .HasColumnName("departamento");
            entity.Property(e => e.DocExpAss).HasColumnName("docExpAss");
            entity.Property(e => e.DtEnvio)
                .HasColumnType("datetime")
                .HasColumnName("dtEnvio");
            entity.Property(e => e.Email)
                .HasMaxLength(50)
                .IsUnicode(false)
                .HasColumnName("email");
            entity.Property(e => e.FileName)
                .HasMaxLength(250)
                .IsUnicode(false)
                .HasColumnName("fileName");
            entity.Property(e => e.GerarRecolha).HasColumnName("gerarRecolha");
            entity.Property(e => e.GrandeSup).HasColumnName("grandeSup");
            entity.Property(e => e.Guia)
                .HasMaxLength(100)
                .IsUnicode(false)
                .HasColumnName("guia");
            entity.Property(e => e.Id)
                .ValueGeneratedOnAdd()
                .HasColumnName("id");
            entity.Property(e => e.IdCliMorada).HasColumnName("idCliMorada");
            entity.Property(e => e.IdCliente).HasColumnName("idCliente");
            entity.Property(e => e.IdClienteFacturacao).HasColumnName("idClienteFacturacao");
            entity.Property(e => e.IdEntidade).HasColumnName("idEntidade");
            entity.Property(e => e.IdHeader).HasColumnName("idHeader");
            entity.Property(e => e.IdPaisDestino).HasColumnName("idPaisDestino");
            entity.Property(e => e.IdPaisOrigem).HasColumnName("idPaisOrigem");
            entity.Property(e => e.IdProvedor).HasColumnName("idProvedor");
            entity.Property(e => e.IdRecolha).HasColumnName("idRecolha");
            entity.Property(e => e.IdSegmento).HasColumnName("idSegmento");
            entity.Property(e => e.ImprimirGuia).HasColumnName("imprimirGuia");
            entity.Property(e => e.LineIndex).HasColumnName("lineIndex");
            entity.Property(e => e.LocalCodPostalDest)
                .HasMaxLength(250)
                .IsUnicode(false)
                .HasColumnName("localCodPostalDest");
            entity.Property(e => e.LocalExp)
                .HasMaxLength(250)
                .IsUnicode(false)
                .HasColumnName("localExp");
            entity.Property(e => e.LocalPagamento).HasColumnName("localPagamento");
            entity.Property(e => e.LocalidadeDest)
                .HasMaxLength(250)
                .IsUnicode(false)
                .HasColumnName("localidadeDest");
            entity.Property(e => e.LocalidadeExp)
                .HasMaxLength(250)
                .IsUnicode(false)
                .HasColumnName("localidadeExp");
            entity.Property(e => e.M3).HasColumnName("m3");
            entity.Property(e => e.Mercadoria)
                .HasMaxLength(250)
                .IsUnicode(false)
                .HasColumnName("mercadoria");
            entity.Property(e => e.MercadoriaVal)
                .HasColumnType("money")
                .HasColumnName("mercadoriaVal");
            entity.Property(e => e.Moeda)
                .HasMaxLength(10)
                .IsUnicode(false)
                .HasColumnName("moeda");
            entity.Property(e => e.MoradaDest)
                .HasMaxLength(250)
                .IsUnicode(false)
                .HasColumnName("moradaDest");
            entity.Property(e => e.MoradaExp)
                .HasMaxLength(250)
                .IsUnicode(false)
                .HasColumnName("moradaExp");
            entity.Property(e => e.NVols).HasColumnName("nVols");
            entity.Property(e => e.NomeContactoDest)
                .HasMaxLength(250)
                .HasColumnName("nomeContactoDest");
            entity.Property(e => e.NomeDest)
                .HasMaxLength(250)
                .IsUnicode(false)
                .HasColumnName("nomeDest");
            entity.Property(e => e.NomeExp)
                .HasMaxLength(250)
                .IsUnicode(false)
                .HasColumnName("nomeExp");
            entity.Property(e => e.NumEnvioDevolvido)
                .HasMaxLength(50)
                .HasColumnName("numEnvioDevolvido");
            entity.Property(e => e.NumGt)
                .HasMaxLength(50)
                .IsUnicode(false)
                .HasColumnName("numGT");
            entity.Property(e => e.Obs)
                .HasMaxLength(1000)
                .IsUnicode(false)
                .HasColumnName("obs");
            entity.Property(e => e.Peso)
                .HasColumnType("money")
                .HasColumnName("peso");
            entity.Property(e => e.RecolhaRemota)
                .HasDefaultValueSql("((0))")
                .HasColumnName("recolhaRemota");
            entity.Property(e => e.ReembVal)
                .HasColumnType("money")
                .HasColumnName("reembVal");
            entity.Property(e => e.ReembolsoObs)
                .HasMaxLength(1000)
                .IsUnicode(false)
                .HasColumnName("reembolsoObs");
            entity.Property(e => e.RefCliente)
                .HasMaxLength(100)
                .IsUnicode(false)
                .HasColumnName("refCliente");
            entity.Property(e => e.RefGeodis)
                .HasMaxLength(50)
                .IsUnicode(false)
                .HasColumnName("refGEODIS");
            entity.Property(e => e.RefOrigem)
                .HasMaxLength(50)
                .IsUnicode(false)
                .HasColumnName("refOrigem");
            entity.Property(e => e.SendEmail).HasColumnName("sendEmail");
            entity.Property(e => e.SerieGuia)
                .HasMaxLength(2)
                .IsUnicode(false)
                .HasColumnName("serieGuia");
            entity.Property(e => e.Swap).HasColumnName("swap");
            entity.Property(e => e.TelefoneDest)
                .HasMaxLength(20)
                .IsUnicode(false)
                .HasColumnName("telefoneDest");
            entity.Property(e => e.TipoEmbalagem).HasColumnName("tipoEmbalagem");
            entity.Property(e => e.TipoServico).HasColumnName("tipoServico");
            entity.Property(e => e.TipoTrafego).HasColumnName("tipoTrafego");
            entity.Property(e => e.ValorSegurado)
                .HasColumnType("money")
                .HasColumnName("valorSegurado");
            entity.Property(e => e.VendaDinheiro).HasColumnName("vendaDinheiro");
        });

        modelBuilder.Entity<ParserHeadersReferencia>(entity =>
        {
            entity.HasKey(e => e.Id).HasName("PK__parserHe__3213E83F25E8974D");

            entity.ToTable("parserHeadersReferencias");

            entity.HasIndex(e => e.IdHeader, "idx_idHeader");

            entity.Property(e => e.Id).HasColumnName("id");
            entity.Property(e => e.CodReferencia)
                .HasMaxLength(255)
                .IsUnicode(false)
                .HasColumnName("codReferencia");
            entity.Property(e => e.CreationDate)
                .HasDefaultValueSql("(getdate())")
                .HasColumnType("datetime")
                .HasColumnName("creationDate");
            entity.Property(e => e.IdHeader).HasColumnName("idHeader");
            entity.Property(e => e.LineIndex).HasColumnName("lineIndex");
            entity.Property(e => e.Referencia)
                .HasMaxLength(255)
                .IsUnicode(false)
                .HasColumnName("referencia");
        });

        modelBuilder.Entity<ParserHeadersReferenciasLog>(entity =>
        {
            entity
                .HasNoKey()
                .ToTable("parserHeadersReferencias_LOG");

            entity.HasIndex(e => e.IdHeader, "ClusteredIndex-20191007-155647").IsClustered();

            entity.Property(e => e.BckDate)
                .HasDefaultValueSql("(getdate())")
                .HasColumnType("datetime")
                .HasColumnName("bck_date");
            entity.Property(e => e.CodReferencia)
                .HasMaxLength(255)
                .IsUnicode(false)
                .HasColumnName("codReferencia");
            entity.Property(e => e.CreationDate)
                .HasColumnType("datetime")
                .HasColumnName("creationDate");
            entity.Property(e => e.Id)
                .ValueGeneratedOnAdd()
                .HasColumnName("id");
            entity.Property(e => e.IdHeader).HasColumnName("idHeader");
            entity.Property(e => e.IdHeaderReferencia).HasColumnName("idHeaderReferencia");
            entity.Property(e => e.LineIndex).HasColumnName("lineIndex");
            entity.Property(e => e.Referencia)
                .HasMaxLength(255)
                .IsUnicode(false)
                .HasColumnName("referencia");
        });

        modelBuilder.Entity<ParserHeadersTemp>(entity =>
        {
            entity
                .HasNoKey()
                .ToTable("parserHeaders_TEMP");

            entity.Property(e => e.AwbCliente)
                .HasMaxLength(20)
                .IsUnicode(false)
                .HasColumnName("awbCliente");
            entity.Property(e => e.ClasseOrigem).HasColumnName("classeOrigem");
            entity.Property(e => e.CodPostalDest)
                .HasMaxLength(10)
                .IsUnicode(false)
                .HasColumnName("codPostalDest");
            entity.Property(e => e.CodPostalExp)
                .HasMaxLength(10)
                .IsUnicode(false)
                .HasColumnName("codPostalExp");
            entity.Property(e => e.ContribDest)
                .HasMaxLength(20)
                .IsUnicode(false)
                .HasColumnName("contribDest");
            entity.Property(e => e.ContribExp)
                .HasMaxLength(20)
                .IsUnicode(false)
                .HasColumnName("contribExp");
            entity.Property(e => e.CreationDate)
                .HasDefaultValueSql("(getdate())")
                .HasColumnType("datetime")
                .HasColumnName("creationDate");
            entity.Property(e => e.DataEntregaDest)
                .HasColumnType("datetime")
                .HasColumnName("dataEntregaDest");
            entity.Property(e => e.Departamento)
                .HasMaxLength(250)
                .IsUnicode(false)
                .HasColumnName("departamento");
            entity.Property(e => e.DocExpAss).HasColumnName("docExpAss");
            entity.Property(e => e.DtEnvio)
                .HasColumnType("datetime")
                .HasColumnName("dtEnvio");
            entity.Property(e => e.GerarRecolha).HasColumnName("gerarRecolha");
            entity.Property(e => e.GrandeSup).HasColumnName("grandeSup");
            entity.Property(e => e.Guia)
                .HasMaxLength(100)
                .IsUnicode(false)
                .HasColumnName("guia");
            entity.Property(e => e.Id)
                .ValueGeneratedOnAdd()
                .HasColumnName("id");
            entity.Property(e => e.IdCliente).HasColumnName("idCliente");
            entity.Property(e => e.IdClienteFacturacao).HasColumnName("idClienteFacturacao");
            entity.Property(e => e.IdSegmento).HasColumnName("idSegmento");
            entity.Property(e => e.ImprimirGuia)
                .HasDefaultValueSql("((0))")
                .HasColumnName("imprimirGuia");
            entity.Property(e => e.LocalCodPostalDest)
                .HasMaxLength(250)
                .IsUnicode(false)
                .HasColumnName("localCodPostalDest");
            entity.Property(e => e.LocalExp)
                .HasMaxLength(250)
                .IsUnicode(false)
                .HasColumnName("localExp");
            entity.Property(e => e.LocalidadeDest)
                .HasMaxLength(250)
                .IsUnicode(false)
                .HasColumnName("localidadeDest");
            entity.Property(e => e.LocalidadeExp)
                .HasMaxLength(250)
                .IsUnicode(false)
                .HasColumnName("localidadeExp");
            entity.Property(e => e.M3)
                .HasColumnType("money")
                .HasColumnName("m3");
            entity.Property(e => e.Mercadoria)
                .HasMaxLength(250)
                .IsUnicode(false)
                .HasColumnName("mercadoria");
            entity.Property(e => e.MercadoriaVal)
                .HasColumnType("money")
                .HasColumnName("mercadoriaVal");
            entity.Property(e => e.Moeda)
                .HasMaxLength(10)
                .IsUnicode(false)
                .HasColumnName("moeda");
            entity.Property(e => e.MoradaDest)
                .HasMaxLength(250)
                .IsUnicode(false)
                .HasColumnName("moradaDest");
            entity.Property(e => e.MoradaExp)
                .HasMaxLength(250)
                .IsUnicode(false)
                .HasColumnName("moradaExp");
            entity.Property(e => e.NVols).HasColumnName("nVols");
            entity.Property(e => e.NomeDest)
                .HasMaxLength(250)
                .IsUnicode(false)
                .HasColumnName("nomeDest");
            entity.Property(e => e.NomeExp)
                .HasMaxLength(250)
                .IsUnicode(false)
                .HasColumnName("nomeExp");
            entity.Property(e => e.NumGt)
                .HasMaxLength(50)
                .IsUnicode(false)
                .HasColumnName("numGT");
            entity.Property(e => e.Obs)
                .HasMaxLength(1000)
                .IsUnicode(false)
                .HasColumnName("obs");
            entity.Property(e => e.Peso)
                .HasColumnType("money")
                .HasColumnName("peso");
            entity.Property(e => e.ReembVal)
                .HasColumnType("money")
                .HasColumnName("reembVal");
            entity.Property(e => e.ReembolsoObs)
                .HasMaxLength(1000)
                .IsUnicode(false)
                .HasColumnName("reembolsoObs");
            entity.Property(e => e.RefCliente)
                .HasMaxLength(100)
                .IsUnicode(false)
                .HasColumnName("refCliente");
            entity.Property(e => e.SerieGuia)
                .HasMaxLength(2)
                .IsUnicode(false)
                .HasColumnName("serieGuia");
            entity.Property(e => e.TelefoneDest)
                .HasMaxLength(20)
                .IsUnicode(false)
                .HasColumnName("telefoneDest");
            entity.Property(e => e.TipoEmbalagem).HasColumnName("tipoEmbalagem");
            entity.Property(e => e.TipoServico).HasColumnName("tipoServico");
            entity.Property(e => e.TipoTrafego).HasColumnName("tipoTrafego");
        });

        modelBuilder.Entity<ParserLogTemp>(entity =>
        {
            entity.ToTable("parserLogTemp");

            entity.HasIndex(e => new { e.IdHeader, e.Erro }, "idx_idHeader").HasFillFactor(80);

            entity.Property(e => e.Id).HasColumnName("id");
            entity.Property(e => e.Awb)
                .HasMaxLength(50)
                .IsUnicode(false)
                .HasColumnName("awb");
            entity.Property(e => e.AwbDuplicada).HasColumnName("awbDuplicada");
            entity.Property(e => e.DtIntrod)
                .HasColumnType("datetime")
                .HasColumnName("dtIntrod");
            entity.Property(e => e.Erro).HasColumnName("erro");
            entity.Property(e => e.ExceptionMessage)
                .HasMaxLength(250)
                .IsUnicode(false)
                .HasColumnName("exceptionMessage");
            entity.Property(e => e.ExpManifesto).HasColumnName("expManifesto");
            entity.Property(e => e.IdCliMorada).HasColumnName("idCliMorada");
            entity.Property(e => e.IdCliente).HasColumnName("idCliente");
            entity.Property(e => e.IdDetails).HasColumnName("idDetails");
            entity.Property(e => e.IdEntidade).HasColumnName("idEntidade");
            entity.Property(e => e.IdHeader).HasColumnName("idHeader");
            entity.Property(e => e.IdRecolha).HasColumnName("idRecolha");
            entity.Property(e => e.ImpManifesto).HasColumnName("impManifesto");
            entity.Property(e => e.RefCliDuplicada).HasColumnName("refCliDuplicada");
        });

        modelBuilder.Entity<ParserParametrosAdicionai>(entity =>
        {
            entity.HasKey(e => e.Id).HasName("PK_parserParametrosAdicionais_1");

            entity.ToTable("parserParametrosAdicionais");

            entity.Property(e => e.Id).HasColumnName("id");
            entity.Property(e => e.DtIntrod)
                .HasColumnType("datetime")
                .HasColumnName("dtIntrod");
            entity.Property(e => e.FileName)
                .HasMaxLength(260)
                .HasColumnName("fileName");
            entity.Property(e => e.IdCliMorada).HasColumnName("idCliMorada");
            entity.Property(e => e.IdCliente).HasColumnName("idCliente");
            entity.Property(e => e.IdEntidade).HasColumnName("idEntidade");
            entity.Property(e => e.IdUtilIntrod).HasColumnName("idUtilIntrod");
            entity.Property(e => e.PaArrivalDate)
                .HasColumnType("datetime")
                .HasColumnName("pa_arrivalDate");
            entity.Property(e => e.PaDtEntregaDesejada)
                .HasColumnType("datetime")
                .HasColumnName("pa_dtEntregaDesejada");
            entity.Property(e => e.PaRefOrigem)
                .HasMaxLength(50)
                .HasColumnName("pa_refOrigem");
        });

        modelBuilder.Entity<ParserRecolha>(entity =>
        {
            entity.ToTable("parserRecolhas");

            entity.Property(e => e.Id).HasColumnName("id");
            entity.Property(e => e.CamposObrigatorios)
                .HasMaxLength(500)
                .HasColumnName("camposObrigatorios");
            entity.Property(e => e.CheckReferencia).HasColumnName("checkReferencia");
            entity.Property(e => e.Cpostal)
                .HasMaxLength(10)
                .HasColumnName("cpostal");
            entity.Property(e => e.CpostalDestinatario)
                .HasMaxLength(10)
                .HasColumnName("cpostalDestinatario");
            entity.Property(e => e.CreationDate)
                .HasDefaultValueSql("(getdate())")
                .HasColumnType("datetime")
                .HasColumnName("creationDate");
            entity.Property(e => e.DtPup)
                .HasColumnType("date")
                .HasColumnName("dtPUP");
            entity.Property(e => e.EmailNotificacao)
                .HasMaxLength(500)
                .HasColumnName("emailNotificacao");
            entity.Property(e => e.Empresa)
                .HasMaxLength(100)
                .HasColumnName("empresa");
            entity.Property(e => e.EmpresaDestinatario)
                .HasMaxLength(100)
                .HasColumnName("empresaDestinatario");
            entity.Property(e => e.FileName)
                .HasMaxLength(500)
                .HasColumnName("fileName");
            entity.Property(e => e.HoraDisponivel)
                .HasColumnType("datetime")
                .HasColumnName("horaDisponivel");
            entity.Property(e => e.HoraFecho)
                .HasColumnType("datetime")
                .HasColumnName("horaFecho");
            entity.Property(e => e.IdCliMorada).HasColumnName("idCliMorada");
            entity.Property(e => e.IdCliente).HasColumnName("idCliente");
            entity.Property(e => e.IdEntidade).HasColumnName("idEntidade");
            entity.Property(e => e.IdLocalPagamento).HasColumnName("idLocalPagamento");
            entity.Property(e => e.IdPais).HasColumnName("idPais");
            entity.Property(e => e.IdPaisDestinatario).HasColumnName("idPaisDestinatario");
            entity.Property(e => e.IdPaisPagamento).HasColumnName("idPaisPagamento");
            entity.Property(e => e.IdServico).HasColumnName("idServico");
            entity.Property(e => e.IdTipoProduto).HasColumnName("idTipoProduto");
            entity.Property(e => e.LineIndex).HasColumnName("lineIndex");
            entity.Property(e => e.Localidade)
                .HasMaxLength(50)
                .HasColumnName("localidade");
            entity.Property(e => e.LocalidadeDestinatario)
                .HasMaxLength(50)
                .HasColumnName("localidadeDestinatario");
            entity.Property(e => e.Morada)
                .HasMaxLength(250)
                .HasColumnName("morada");
            entity.Property(e => e.MoradaDestinatario)
                .HasMaxLength(250)
                .HasColumnName("moradaDestinatario");
            entity.Property(e => e.Nifpagamento)
                .HasMaxLength(20)
                .HasColumnName("NIFPagamento");
            entity.Property(e => e.Nome)
                .HasMaxLength(100)
                .HasColumnName("nome");
            entity.Property(e => e.NomeDestinatario)
                .HasMaxLength(100)
                .HasColumnName("nomeDestinatario");
            entity.Property(e => e.NumEnvio)
                .HasMaxLength(50)
                .HasColumnName("numEnvio");
            entity.Property(e => e.NumVolumes).HasColumnName("numVolumes");
            entity.Property(e => e.Observacoes)
                .HasMaxLength(500)
                .HasColumnName("observacoes");
            entity.Property(e => e.Peso)
                .HasColumnType("money")
                .HasColumnName("peso");
            entity.Property(e => e.RefOrigem)
                .HasMaxLength(100)
                .HasColumnName("refOrigem");
            entity.Property(e => e.Referencia)
                .HasMaxLength(100)
                .HasColumnName("referencia");
            entity.Property(e => e.Telefone)
                .HasMaxLength(15)
                .HasColumnName("telefone");
            entity.Property(e => e.TelefoneDestinatario)
                .HasMaxLength(15)
                .HasColumnName("telefoneDestinatario");
        });

        modelBuilder.Entity<ParserRecolhaResultado>(entity =>
        {
            entity.ToTable("parserRecolha_Resultado");

            entity.Property(e => e.Id).HasColumnName("id");
            entity.Property(e => e.DescErro)
                .HasMaxLength(500)
                .HasColumnName("descErro");
            entity.Property(e => e.DtIntrod)
                .HasDefaultValueSql("(getdate())")
                .HasColumnType("datetime")
                .HasColumnName("dtIntrod");
            entity.Property(e => e.Erro).HasColumnName("erro");
            entity.Property(e => e.FileName)
                .HasMaxLength(500)
                .HasColumnName("fileName");
            entity.Property(e => e.IdPickup).HasColumnName("idPickup");
            entity.Property(e => e.IdRecolhaHeader).HasColumnName("idRecolhaHeader");
        });

        modelBuilder.Entity<ParserRecolhasLog>(entity =>
        {
            entity.ToTable("parserRecolhas_LOG");

            entity.Property(e => e.Id).HasColumnName("id");
            entity.Property(e => e.BckDate)
                .HasDefaultValueSql("(getdate())")
                .HasColumnType("datetime")
                .HasColumnName("Bck_Date");
            entity.Property(e => e.CamposObrigatorios)
                .HasMaxLength(500)
                .HasColumnName("camposObrigatorios");
            entity.Property(e => e.CheckReferencia).HasColumnName("checkReferencia");
            entity.Property(e => e.Cpostal)
                .HasMaxLength(10)
                .HasColumnName("cpostal");
            entity.Property(e => e.CpostalDestinatario)
                .HasMaxLength(10)
                .HasColumnName("cpostalDestinatario");
            entity.Property(e => e.CreationDate)
                .HasColumnType("datetime")
                .HasColumnName("creationDate");
            entity.Property(e => e.DtPup)
                .HasColumnType("date")
                .HasColumnName("dtPUP");
            entity.Property(e => e.EmailNotificacao)
                .HasMaxLength(500)
                .HasColumnName("emailNotificacao");
            entity.Property(e => e.Empresa)
                .HasMaxLength(100)
                .HasColumnName("empresa");
            entity.Property(e => e.EmpresaDestinatario)
                .HasMaxLength(100)
                .HasColumnName("empresaDestinatario");
            entity.Property(e => e.FileName)
                .HasMaxLength(500)
                .HasColumnName("fileName");
            entity.Property(e => e.HoraDisponivel)
                .HasColumnType("datetime")
                .HasColumnName("horaDisponivel");
            entity.Property(e => e.HoraFecho)
                .HasColumnType("datetime")
                .HasColumnName("horaFecho");
            entity.Property(e => e.IdCliMorada).HasColumnName("idCliMorada");
            entity.Property(e => e.IdCliente).HasColumnName("idCliente");
            entity.Property(e => e.IdEntidade).HasColumnName("idEntidade");
            entity.Property(e => e.IdHeader).HasColumnName("idHeader");
            entity.Property(e => e.IdLocalPagamento).HasColumnName("idLocalPagamento");
            entity.Property(e => e.IdPais).HasColumnName("idPais");
            entity.Property(e => e.IdPaisDestinatario).HasColumnName("idPaisDestinatario");
            entity.Property(e => e.IdPaisPagamento).HasColumnName("idPaisPagamento");
            entity.Property(e => e.IdServico).HasColumnName("idServico");
            entity.Property(e => e.IdTipoProduto).HasColumnName("idTipoProduto");
            entity.Property(e => e.LineIndex).HasColumnName("lineIndex");
            entity.Property(e => e.Localidade)
                .HasMaxLength(50)
                .HasColumnName("localidade");
            entity.Property(e => e.LocalidadeDestinatario)
                .HasMaxLength(50)
                .HasColumnName("localidadeDestinatario");
            entity.Property(e => e.Morada)
                .HasMaxLength(250)
                .HasColumnName("morada");
            entity.Property(e => e.MoradaDestinatario)
                .HasMaxLength(250)
                .HasColumnName("moradaDestinatario");
            entity.Property(e => e.Nifpagamento)
                .HasMaxLength(20)
                .HasColumnName("NIFPagamento");
            entity.Property(e => e.Nome)
                .HasMaxLength(100)
                .HasColumnName("nome");
            entity.Property(e => e.NomeDestinatario)
                .HasMaxLength(100)
                .HasColumnName("nomeDestinatario");
            entity.Property(e => e.NumEnvio)
                .HasMaxLength(50)
                .HasColumnName("numEnvio");
            entity.Property(e => e.NumVolumes).HasColumnName("numVolumes");
            entity.Property(e => e.Observacoes)
                .HasMaxLength(500)
                .HasColumnName("observacoes");
            entity.Property(e => e.Peso)
                .HasColumnType("money")
                .HasColumnName("peso");
            entity.Property(e => e.RefOrigem)
                .HasMaxLength(100)
                .HasColumnName("refOrigem");
            entity.Property(e => e.Referencia)
                .HasMaxLength(100)
                .HasColumnName("referencia");
            entity.Property(e => e.Telefone)
                .HasMaxLength(15)
                .HasColumnName("telefone");
            entity.Property(e => e.TelefoneDestinatario)
                .HasMaxLength(15)
                .HasColumnName("telefoneDestinatario");
        });

        modelBuilder.Entity<ParserReferenciasTipo>(entity =>
        {
            entity.HasKey(e => e.Id).HasName("PK__ParserRe__3214EC27617B39D3");

            entity.ToTable("ParserReferencias_Tipos");

            entity.Property(e => e.Id).HasColumnName("ID");
            entity.Property(e => e.Codigo)
                .HasMaxLength(100)
                .IsUnicode(false);
            entity.Property(e => e.IdManifestoReferenciasTipoT).HasColumnName("IdManifestoReferenciasTipo_T");
        });

        modelBuilder.Entity<ParserRegra>(entity =>
        {
            entity
                .HasNoKey()
                .ToTable("parserRegras");

            entity.Property(e => e.Campo)
                .HasMaxLength(20)
                .IsUnicode(false)
                .HasColumnName("campo");
            entity.Property(e => e.IdClienteParserParametros).HasColumnName("idClienteParserParametros");
            entity.Property(e => e.Regra).HasColumnName("regra");
            entity.Property(e => e.ValorFim)
                .HasMaxLength(50)
                .IsUnicode(false)
                .HasColumnName("valorFim");
            entity.Property(e => e.ValorInicio)
                .HasMaxLength(50)
                .IsUnicode(false)
                .HasColumnName("valorInicio");
        });

        modelBuilder.Entity<ParserRegrasValore>(entity =>
        {
            entity
                .HasNoKey()
                .ToTable("parserRegrasValores");

            entity.Property(e => e.Campo)
                .HasMaxLength(20)
                .IsUnicode(false)
                .HasColumnName("campo");
            entity.Property(e => e.IdClienteParserParametros).HasColumnName("idClienteParserParametros");
            entity.Property(e => e.Regra).HasColumnName("regra");
            entity.Property(e => e.Valor)
                .HasMaxLength(50)
                .IsUnicode(false)
                .HasColumnName("valor");
        });

        modelBuilder.Entity<ParserSourceTypeT>(entity =>
        {
            entity.HasKey(e => e.Id).HasName("PK__parserSo__3213E83F420606BA");

            entity.ToTable("parserSourceType_T");

            entity.Property(e => e.Id)
                .ValueGeneratedNever()
                .HasColumnName("id");
            entity.Property(e => e.Descricao)
                .HasMaxLength(100)
                .IsUnicode(false)
                .HasColumnName("descricao");
        });

        modelBuilder.Entity<ParserSwap>(entity =>
        {
            entity.HasKey(e => e.IdHeader).HasName("PK__parserSw__0DC09BB80B5A87A3");

            entity.ToTable("parserSwaps");

            entity.Property(e => e.IdHeader)
                .ValueGeneratedNever()
                .HasColumnName("idHeader");
            entity.Property(e => e.Anulado).HasColumnName("anulado");
            entity.Property(e => e.Cidade)
                .HasMaxLength(34)
                .HasColumnName("cidade");
            entity.Property(e => e.CodPais)
                .HasMaxLength(2)
                .HasColumnName("codPais");
            entity.Property(e => e.Cpostal)
                .HasMaxLength(10)
                .HasColumnName("cpostal");
            entity.Property(e => e.Departamento)
                .HasMaxLength(34)
                .HasColumnName("departamento");
            entity.Property(e => e.DtUltAct)
                .HasColumnType("datetime")
                .HasColumnName("dtUltAct");
            entity.Property(e => e.Empresa)
                .HasMaxLength(34)
                .HasColumnName("empresa");
            entity.Property(e => e.Estado)
                .HasMaxLength(2)
                .HasColumnName("estado");
            entity.Property(e => e.IdAgrupamento).HasColumnName("idAgrupamento");
            entity.Property(e => e.IdClassDest).HasColumnName("idClassDest");
            entity.Property(e => e.IdCliMorada).HasColumnName("idCliMorada");
            entity.Property(e => e.IdCliente).HasColumnName("idCliente");
            entity.Property(e => e.IdCpostal).HasColumnName("idCpostal");
            entity.Property(e => e.IdDestinatario).HasColumnName("idDestinatario");
            entity.Property(e => e.IdEntidade).HasColumnName("idEntidade");
            entity.Property(e => e.IdPais).HasColumnName("idPais");
            entity.Property(e => e.IdPlataforma).HasColumnName("idPlataforma");
            entity.Property(e => e.IdUltAct).HasColumnName("idUltAct");
            entity.Property(e => e.Morada)
                .HasMaxLength(68)
                .HasColumnName("morada");
            entity.Property(e => e.Nome)
                .HasMaxLength(34)
                .HasColumnName("nome");
            entity.Property(e => e.NumConta)
                .HasMaxLength(20)
                .HasColumnName("numConta");
            entity.Property(e => e.NumContrib)
                .HasMaxLength(34)
                .HasColumnName("numContrib");
            entity.Property(e => e.Telefone)
                .HasMaxLength(15)
                .HasColumnName("telefone");
            entity.Property(e => e.TipoSwap).HasColumnName("tipoSwap");
        });

        modelBuilder.Entity<ParserSwapsLog>(entity =>
        {
            entity.HasKey(e => e.Id).HasName("PK__parserSw__0DC09BB84A0256C1");

            entity.ToTable("parserSwaps_log");

            entity.HasIndex(e => e.IdHeader, "NonClusteredIndex-20200418-213751");

            entity.Property(e => e.Id).HasColumnName("id");
            entity.Property(e => e.Anulado).HasColumnName("anulado");
            entity.Property(e => e.Cidade)
                .HasMaxLength(34)
                .HasColumnName("cidade");
            entity.Property(e => e.CodPais)
                .HasMaxLength(2)
                .HasColumnName("codPais");
            entity.Property(e => e.Cpostal)
                .HasMaxLength(10)
                .HasColumnName("cpostal");
            entity.Property(e => e.Departamento)
                .HasMaxLength(34)
                .HasColumnName("departamento");
            entity.Property(e => e.DtUltAct)
                .HasColumnType("datetime")
                .HasColumnName("dtUltAct");
            entity.Property(e => e.Empresa)
                .HasMaxLength(34)
                .HasColumnName("empresa");
            entity.Property(e => e.Estado)
                .HasMaxLength(2)
                .HasColumnName("estado");
            entity.Property(e => e.IdAgrupamento).HasColumnName("idAgrupamento");
            entity.Property(e => e.IdClassDest).HasColumnName("idClassDest");
            entity.Property(e => e.IdCliMorada).HasColumnName("idCliMorada");
            entity.Property(e => e.IdCliente).HasColumnName("idCliente");
            entity.Property(e => e.IdCpostal).HasColumnName("idCpostal");
            entity.Property(e => e.IdDestinatario).HasColumnName("idDestinatario");
            entity.Property(e => e.IdEntidade).HasColumnName("idEntidade");
            entity.Property(e => e.IdHeader).HasColumnName("idHeader");
            entity.Property(e => e.IdPais).HasColumnName("idPais");
            entity.Property(e => e.IdPlataforma).HasColumnName("idPlataforma");
            entity.Property(e => e.IdUltAct).HasColumnName("idUltAct");
            entity.Property(e => e.Morada)
                .HasMaxLength(68)
                .HasColumnName("morada");
            entity.Property(e => e.Nome)
                .HasMaxLength(34)
                .HasColumnName("nome");
            entity.Property(e => e.NumConta)
                .HasMaxLength(20)
                .HasColumnName("numConta");
            entity.Property(e => e.NumContrib)
                .HasMaxLength(34)
                .HasColumnName("numContrib");
            entity.Property(e => e.Telefone)
                .HasMaxLength(15)
                .HasColumnName("telefone");
            entity.Property(e => e.TipoSwap).HasColumnName("tipoSwap");
        });

        modelBuilder.Entity<PcontrollersT06>(entity =>
        {
            entity
                .HasNoKey()
                .ToTable("PControllersT06");

            entity.Property(e => e.Controller)
                .HasMaxLength(255)
                .HasColumnName("controller");
            entity.Property(e => e.Empresa)
                .HasMaxLength(255)
                .HasColumnName("empresa");
            entity.Property(e => e.GestorComercial)
                .HasMaxLength(255)
                .HasColumnName("gestorComercial");
            entity.Property(e => e.Id).HasColumnName("id");
            entity.Property(e => e.IdMorada).HasColumnName("idMorada");
            entity.Property(e => e.Nome)
                .HasMaxLength(255)
                .HasColumnName("nome");
            entity.Property(e => e.NrContribuinte)
                .HasMaxLength(255)
                .HasColumnName("nrContribuinte");
            entity.Property(e => e.NrSap)
                .HasMaxLength(255)
                .HasColumnName("nrSAP");
            entity.Property(e => e.NumContaFedex).HasMaxLength(255);
            entity.Property(e => e.StCredito)
                .HasMaxLength(255)
                .HasColumnName("st#Credito");
        });

        modelBuilder.Entity<PcontrollersT07>(entity =>
        {
            entity
                .HasNoKey()
                .ToTable("PControllersT07");

            entity.Property(e => e.Controller)
                .HasMaxLength(255)
                .HasColumnName("controller");
            entity.Property(e => e.Empresa)
                .HasMaxLength(255)
                .HasColumnName("empresa");
            entity.Property(e => e.GestorComercial)
                .HasMaxLength(255)
                .HasColumnName("gestorComercial");
            entity.Property(e => e.Id).HasColumnName("id");
            entity.Property(e => e.IdMorada).HasColumnName("idMorada");
            entity.Property(e => e.Nome)
                .HasMaxLength(255)
                .HasColumnName("nome");
            entity.Property(e => e.NrContribuinte)
                .HasMaxLength(255)
                .HasColumnName("nrContribuinte");
            entity.Property(e => e.NrSap)
                .HasMaxLength(255)
                .HasColumnName("nrSAP");
            entity.Property(e => e.StCredito)
                .HasMaxLength(255)
                .HasColumnName("st#Credito");
        });

        modelBuilder.Entity<PendentesSap>(entity =>
        {
            entity
                .HasNoKey()
                .ToTable("PendentesSAP");

            entity.HasIndex(e => new { e.NumDoc, e.IdEntidade }, "Idx_numDOc").HasFillFactor(80);

            entity.HasIndex(e => new { e.CliCounter, e.IdEntidade, e.TipoDoc2, e.DataDoc }, "idx_clicounter_idEntidade_tipoDoc2_dataDoc").HasFillFactor(80);

            entity.Property(e => e.CliCounter).HasColumnName("Cli_Counter");
            entity.Property(e => e.DataDoc)
                .HasColumnType("datetime")
                .HasColumnName("dataDoc");
            entity.Property(e => e.DataVence)
                .HasColumnType("datetime")
                .HasColumnName("dataVence");
            entity.Property(e => e.DebCred).HasMaxLength(1);
            entity.Property(e => e.IdEntidade).HasColumnName("idEntidade");
            entity.Property(e => e.NumDoc)
                .HasMaxLength(50)
                .HasColumnName("numDoc");
            entity.Property(e => e.PendEsc).HasColumnType("money");
            entity.Property(e => e.TipoDoc2)
                .HasMaxLength(10)
                .IsFixedLength()
                .HasColumnName("tipoDoc2");
        });

        modelBuilder.Entity<PerguntasResposta>(entity =>
        {
            entity.HasKey(e => e.Id).HasName("PK__Pergunta__3213E83F1AC55DDA");

            entity.HasIndex(e => new { e.Awb, e.IdEntidade }, "idx_awb_idEntidade");

            entity.HasIndex(e => new { e.IdCodigo, e.IdEntidade, e.IdCliente }, "idx_idCodigo_idEntidade_idCliente");

            entity.HasIndex(e => new { e.IdEntidade, e.IdManifesto }, "idx_idManifesto");

            entity.HasIndex(e => e.Tratada, "idx_tratada");

            entity.Property(e => e.Id).HasColumnName("id");
            entity.Property(e => e.Awb)
                .HasMaxLength(50)
                .IsUnicode(false)
                .HasColumnName("awb");
            entity.Property(e => e.Data)
                .HasColumnType("datetime")
                .HasColumnName("data");
            entity.Property(e => e.DtEnviadoIterface)
                .HasDefaultValueSql("(getdate())")
                .HasColumnType("datetime")
                .HasColumnName("dtEnviadoIterface");
            entity.Property(e => e.DtInsert)
                .HasDefaultValueSql("(getdate())")
                .HasColumnType("datetime")
                .HasColumnName("dtInsert");
            entity.Property(e => e.DtTratada)
                .HasColumnType("datetime")
                .HasColumnName("dtTratada");
            entity.Property(e => e.EnviadoInterface).HasColumnName("enviadoInterface");
            entity.Property(e => e.IdCliente).HasColumnName("idCliente");
            entity.Property(e => e.IdCodigo).HasColumnName("idCodigo");
            entity.Property(e => e.IdDistribuidor).HasColumnName("idDistribuidor");
            entity.Property(e => e.IdEntidade).HasColumnName("idEntidade");
            entity.Property(e => e.IdManifesto).HasColumnName("idManifesto");
            entity.Property(e => e.IdOrigem).HasColumnName("idOrigem");
            entity.Property(e => e.IdOwner).HasColumnName("idOwner");
            entity.Property(e => e.IdPlataforma).HasColumnName("idPlataforma");
            entity.Property(e => e.IdUtilInsert).HasColumnName("idUtilInsert");
            entity.Property(e => e.Obs)
                .HasMaxLength(256)
                .IsUnicode(false)
                .HasColumnName("obs");
            entity.Property(e => e.Scancode)
                .HasMaxLength(8)
                .HasColumnName("scancode");
            entity.Property(e => e.Tratada).HasColumnName("tratada");
        });

        modelBuilder.Entity<PerguntasRespostasM>(entity =>
        {
            entity.HasKey(e => e.Id).HasName("PK__Pergunta__3213E83F22667FA2");

            entity.ToTable("PerguntasRespostas_M");

            entity.HasIndex(e => new { e.IdPergunta, e.Activo }, "idx_idPergunta_activo");

            entity.Property(e => e.Id).HasColumnName("id");
            entity.Property(e => e.Activo).HasColumnName("activo");
            entity.Property(e => e.IdPergunta).HasColumnName("idPergunta");
            entity.Property(e => e.IdResposta).HasColumnName("idResposta");
        });

        modelBuilder.Entity<PerguntasRespostasT>(entity =>
        {
            entity.HasKey(e => e.Id).HasName("PK__Pergunta__3213E83F6265874F");

            entity.ToTable("PerguntasRespostas_T");

            entity.HasIndex(e => new { e.Codigo, e.IdCliente, e.Activo, e.IdEntidade }, "idx_codigo_idCliente_activo_idEntidade");

            entity.Property(e => e.Id).HasColumnName("id");
            entity.Property(e => e.AbreBo).HasColumnName("abreBO");
            entity.Property(e => e.Activo).HasColumnName("activo");
            entity.Property(e => e.Codigo)
                .HasMaxLength(100)
                .HasColumnName("codigo");
            entity.Property(e => e.Descricao)
                .HasMaxLength(100)
                .HasColumnName("descricao");
            entity.Property(e => e.DestinoBo)
                .HasMaxLength(100)
                .HasColumnName("DestinoBO");
            entity.Property(e => e.DtInsert)
                .HasDefaultValueSql("(getdate())")
                .HasColumnType("datetime")
                .HasColumnName("dtInsert");
            entity.Property(e => e.DtUltAct)
                .HasColumnType("datetime")
                .HasColumnName("dtUltAct");
            entity.Property(e => e.IdCliente).HasColumnName("idCliente");
            entity.Property(e => e.IdEntidade).HasColumnName("idEntidade");
            entity.Property(e => e.IdUtilInsert).HasColumnName("idUtilInsert");
            entity.Property(e => e.IdUtilultAct).HasColumnName("idUtilultAct");
            entity.Property(e => e.ScanCode)
                .HasMaxLength(2)
                .HasColumnName("scanCode");
            entity.Property(e => e.TextoDescritivo)
                .HasMaxLength(600)
                .HasColumnName("textoDescritivo");
            entity.Property(e => e.Tipo)
                .HasMaxLength(50)
                .HasColumnName("tipo");
            entity.Property(e => e.TrataFalha).HasColumnName("trataFalha");
        });

        modelBuilder.Entity<PerguntasRespostasTBk>(entity =>
        {
            entity.HasKey(e => e.Id).HasName("PK__Pergunta__3213E83F6265874F_BK");

            entity.ToTable("PerguntasRespostas_T_BK");

            entity.Property(e => e.Id).HasColumnName("id");
            entity.Property(e => e.AbreBo).HasColumnName("abreBO");
            entity.Property(e => e.Activo).HasColumnName("activo");
            entity.Property(e => e.Codigo)
                .HasMaxLength(100)
                .HasColumnName("codigo");
            entity.Property(e => e.Descricao)
                .HasMaxLength(100)
                .HasColumnName("descricao");
            entity.Property(e => e.DestinoBo)
                .HasMaxLength(100)
                .HasColumnName("DestinoBO");
            entity.Property(e => e.DtInsert)
                .HasDefaultValueSql("(getdate())")
                .HasColumnType("datetime")
                .HasColumnName("dtInsert");
            entity.Property(e => e.DtUltAct)
                .HasColumnType("datetime")
                .HasColumnName("dtUltAct");
            entity.Property(e => e.IdCliente).HasColumnName("idCliente");
            entity.Property(e => e.IdEntidade).HasColumnName("idEntidade");
            entity.Property(e => e.IdUtilInsert).HasColumnName("idUtilInsert");
            entity.Property(e => e.IdUtilultAct).HasColumnName("idUtilultAct");
            entity.Property(e => e.ScanCode)
                .HasMaxLength(2)
                .HasColumnName("scanCode");
            entity.Property(e => e.TextoDescritivo)
                .HasMaxLength(600)
                .HasColumnName("textoDescritivo");
            entity.Property(e => e.Tipo)
                .HasMaxLength(50)
                .HasColumnName("tipo");
            entity.Property(e => e.TrataFalha).HasColumnName("trataFalha");
        });

        modelBuilder.Entity<PesoT>(entity =>
        {
            entity.HasKey(e => e.Id).HasName("PK_T_Peso");

            entity.ToTable("Peso_T");

            entity.Property(e => e.Id).HasColumnName("id");
            entity.Property(e => e.Activo)
                .HasDefaultValueSql("(1)")
                .HasColumnName("activo");
            entity.Property(e => e.Descricao)
                .HasMaxLength(50)
                .HasColumnName("descricao");
        });

        modelBuilder.Entity<Pickup>(entity =>
        {
            entity.HasKey(e => e.Id).HasName("PK_T_PUP");

            entity.ToTable("Pickup", tb =>
                {
                    tb.HasTrigger("Pickup_Delegacao_Trigger");
                    tb.HasTrigger("Pickup_TLog_Trigger");
                });

            entity.HasIndex(e => new { e.IdRota, e.Enviado }, "IDX_ROTA").HasFillFactor(80);

            entity.HasIndex(e => new { e.Anulado, e.DtPup }, "Idx_Anulado_dtPup").HasFillFactor(80);

            entity.HasIndex(e => new { e.IdEntidade, e.DtUltAct }, "Idx_IdEntidade_DtUltAct");

            entity.HasIndex(e => new { e.Anulado, e.DtPup, e.IdCliente, e.IdRota }, "idx_anulado_dtPup_cliente_idrota").HasFillFactor(80);

            entity.HasIndex(e => new { e.DtPup, e.Fixo, e.Anulado }, "idx_dtPup_fixo_anulado").HasFillFactor(80);

            entity.HasIndex(e => new { e.IdCliente, e.DtPup }, "idx_idCliente_dtPup").HasFillFactor(80);

            entity.HasIndex(e => new { e.IdGps, e.Id }, "idx_idGps_id").HasFillFactor(80);

            entity.HasIndex(e => new { e.IdTratamento, e.Anulado, e.IdEntidade, e.IdRota, e.IdPlataforma, e.IdCliente, e.IdPickupOrigem, e.DtPup }, "idx_idTratamento_anulado_idEntidade_idRota_idPlataforma_idCliente").HasFillFactor(80);

            entity.HasIndex(e => e.IdCpostal, "idx_idcpostal").HasFillFactor(80);

            entity.HasIndex(e => e.IdDestinatario, "idx_iddestinatario_id").HasFillFactor(80);

            entity.HasIndex(e => new { e.IdEntidade, e.Scancode }, "idx_identidade_scancode").HasFillFactor(80);

            entity.HasIndex(e => e.Scancode, "idx_scancode").HasFillFactor(80);

            entity.Property(e => e.Id).HasColumnName("id");
            entity.Property(e => e.Altura)
                .HasColumnType("money")
                .HasColumnName("altura");
            entity.Property(e => e.Americangold)
                .HasDefaultValueSql("(0)")
                .HasColumnName("americangold");
            entity.Property(e => e.Anulado)
                .HasDefaultValueSql("(0)")
                .HasColumnName("anulado");
            entity.Property(e => e.CamposObrigatorios).HasColumnType("xml");
            entity.Property(e => e.CommentScan)
                .HasMaxLength(500)
                .HasColumnName("commentScan");
            entity.Property(e => e.Comprimento)
                .HasColumnType("money")
                .HasColumnName("comprimento");
            entity.Property(e => e.ContaFedEx).HasColumnName("contaFedEx");
            entity.Property(e => e.ContactoDest)
                .HasMaxLength(50)
                .HasColumnName("contactoDest");
            entity.Property(e => e.ContactoPup)
                .HasMaxLength(50)
                .HasColumnName("contactoPUP");
            entity.Property(e => e.CpostalDest)
                .HasMaxLength(15)
                .HasColumnName("cpostalDest");
            entity.Property(e => e.Daa)
                .HasDefaultValueSql("(0)")
                .HasColumnName("daa");
            entity.Property(e => e.DangerousGoods)
                .HasDefaultValueSql("(0)")
                .HasColumnName("dangerousGoods");
            entity.Property(e => e.DepartamentoFact)
                .HasMaxLength(50)
                .IsUnicode(false)
                .HasColumnName("departamentoFact");
            entity.Property(e => e.DtAnulacao)
                .HasColumnType("datetime")
                .HasColumnName("dtAnulacao");
            entity.Property(e => e.DtEnvInterface)
                .HasColumnType("datetime")
                .HasColumnName("dtEnvInterface");
            entity.Property(e => e.DtEnviado)
                .HasColumnType("datetime")
                .HasColumnName("dtEnviado");
            entity.Property(e => e.DtEnviadoMan)
                .HasColumnType("datetime")
                .HasColumnName("dtEnviadoMan");
            entity.Property(e => e.DtPedido)
                .HasDefaultValueSql("(getdate())")
                .HasColumnType("datetime")
                .HasColumnName("dtPedido");
            entity.Property(e => e.DtPup)
                .HasColumnType("datetime")
                .HasColumnName("dtPup");
            entity.Property(e => e.DtUltAct)
                .HasColumnType("datetime")
                .HasColumnName("dtUltAct");
            entity.Property(e => e.Dtrecolhido)
                .HasColumnType("datetime")
                .HasColumnName("dtrecolhido");
            entity.Property(e => e.EmpresaAlt)
                .HasMaxLength(60)
                .IsUnicode(false)
                .HasColumnName("empresaAlt");
            entity.Property(e => e.EmpresaDest)
                .HasMaxLength(100)
                .HasColumnName("empresaDest");
            entity.Property(e => e.EnvInterface)
                .IsRequired()
                .HasDefaultValueSql("(1)")
                .HasColumnName("envInterface");
            entity.Property(e => e.Enviado)
                .HasDefaultValueSql("(0)")
                .HasColumnName("enviado");
            entity.Property(e => e.EnviadoMan).HasColumnName("enviadoMan");
            entity.Property(e => e.Fef)
                .HasDefaultValueSql("(0)")
                .HasColumnName("fef");
            entity.Property(e => e.Fif).HasColumnName("FIF");
            entity.Property(e => e.Fixo)
                .HasDefaultValueSql("(0)")
                .HasColumnName("fixo");
            entity.Property(e => e.HoraAtribuicao)
                .HasColumnType("datetime")
                .HasColumnName("horaAtribuicao");
            entity.Property(e => e.HoraDisponivel)
                .HasColumnType("datetime")
                .HasColumnName("horaDisponivel");
            entity.Property(e => e.HoraFecho)
                .HasColumnType("datetime")
                .HasColumnName("horaFecho");
            entity.Property(e => e.IGCOM2Userserta).HasColumnName("iGCOM2Userserta");
            entity.Property(e => e.IdClasseOrigem).HasColumnName("idClasseOrigem");
            entity.Property(e => e.IdCliMorada).HasColumnName("idCliMorada");
            entity.Property(e => e.IdCliMoradaPaga).HasColumnName("idCliMoradaPaga");
            entity.Property(e => e.IdCliente).HasColumnName("idCliente");
            entity.Property(e => e.IdCpostal).HasColumnName("idCpostal");
            entity.Property(e => e.IdCpostalDest).HasColumnName("idCPostalDest");
            entity.Property(e => e.IdDestinatario).HasColumnName("idDestinatario");
            entity.Property(e => e.IdDistribuidor)
                .HasDefaultValueSql("(1)")
                .HasColumnName("idDistribuidor");
            entity.Property(e => e.IdEntidade).HasColumnName("idEntidade");
            entity.Property(e => e.IdExportacao).HasColumnName("idExportacao");
            entity.Property(e => e.IdGps).HasColumnName("idGps");
            entity.Property(e => e.IdLocalPagamento).HasColumnName("idLocalPagamento");
            entity.Property(e => e.IdPaisDestino).HasColumnName("idPaisDestino");
            entity.Property(e => e.IdPaisOrigem).HasColumnName("idPaisOrigem");
            entity.Property(e => e.IdPaisPaga).HasColumnName("idPaisPaga");
            entity.Property(e => e.IdPickupOrigem).HasColumnName("idPickupOrigem");
            entity.Property(e => e.IdPickupRdom).HasColumnName("idPickupRDOM");
            entity.Property(e => e.IdPlataforma).HasColumnName("idPlataforma");
            entity.Property(e => e.IdRota)
                .HasDefaultValueSql("(0)")
                .HasColumnName("idRota");
            entity.Property(e => e.IdSegmento).HasColumnName("idSegmento");
            entity.Property(e => e.IdServico).HasColumnName("idServico");
            entity.Property(e => e.IdTipoDangGoods).HasColumnName("idTipoDangGoods");
            entity.Property(e => e.IdTipoIss).HasColumnName("idTipoISS");
            entity.Property(e => e.IdTipoProduto).HasColumnName("idTipoProduto");
            entity.Property(e => e.IdTratamento).HasColumnName("idTratamento");
            entity.Property(e => e.IdUtilAnulacao).HasColumnName("idUtilAnulacao");
            entity.Property(e => e.IdUtilAtribuicao).HasColumnName("idUtilAtribuicao");
            entity.Property(e => e.IdUtilEnviadoMan).HasColumnName("idUtilEnviadoMan");
            entity.Property(e => e.IdUtilPedido).HasColumnName("idUtilPedido");
            entity.Property(e => e.IdUtilRecolhido).HasColumnName("idUtilRecolhido");
            entity.Property(e => e.IdUtilUltAct).HasColumnName("idUtilUltAct");
            entity.Property(e => e.Largura)
                .HasColumnType("money")
                .HasColumnName("largura");
            entity.Property(e => e.LocalidadeDest)
                .HasMaxLength(50)
                .HasColumnName("localidadeDest");
            entity.Property(e => e.LocalidadePup)
                .HasMaxLength(50)
                .HasColumnName("localidadePUP");
            entity.Property(e => e.M3).HasColumnType("money");
            entity.Property(e => e.MoradaDest)
                .HasMaxLength(100)
                .HasColumnName("moradaDest");
            entity.Property(e => e.MoradaPup)
                .HasMaxLength(100)
                .HasColumnName("moradaPUP");
            entity.Property(e => e.NifPup).HasColumnName("nifPUP");
            entity.Property(e => e.Nifpagamento)
                .HasMaxLength(20)
                .HasColumnName("NIFPagamento");
            entity.Property(e => e.NumeroEnvios).HasColumnName("numeroEnvios");
            entity.Property(e => e.NumeroVolumes).HasColumnName("numeroVolumes");
            entity.Property(e => e.Observacoes)
                .HasMaxLength(500)
                .HasColumnName("observacoes");
            entity.Property(e => e.Peso)
                .HasColumnType("money")
                .HasColumnName("peso");
            entity.Property(e => e.PesoVolumetrico)
                .HasColumnType("money")
                .HasColumnName("pesoVolumetrico");
            entity.Property(e => e.RefShipper)
                .HasMaxLength(40)
                .HasColumnName("refShipper");
            entity.Property(e => e.Scancode)
                .HasMaxLength(2)
                .HasColumnName("scancode");
            entity.Property(e => e.Seguro).HasColumnName("seguro");
            entity.Property(e => e.TelefoneDest).HasColumnName("telefoneDest");
            entity.Property(e => e.TelefonePup).HasColumnName("telefonePUP");
            entity.Property(e => e.TrataVolume).HasColumnName("trataVolume");
            entity.Property(e => e.ValorManual).HasColumnName("valorManual");
            entity.Property(e => e.ValorPrevisto)
                .HasColumnType("money")
                .HasColumnName("valorPrevisto");
            entity.Property(e => e.ValorReembolso)
                .HasColumnType("money")
                .HasColumnName("valorReembolso");
            entity.Property(e => e.ValorSegurado)
                .HasColumnType("money")
                .HasColumnName("valorSegurado");
            entity.Property(e => e.VendaDinheiro).HasColumnName("vendaDinheiro");
        });

        modelBuilder.Entity<PickupCustosManuai>(entity =>
        {
            entity.HasKey(e => e.Id).HasName("PK__PickupCu__3213E83F74CBDD8C");

            entity.HasIndex(e => new { e.IdPickupCustoReal, e.Activo }, "idx_idPickupCustoReal_activo");

            entity.Property(e => e.Id).HasColumnName("id");
            entity.Property(e => e.Activo).HasColumnName("activo");
            entity.Property(e => e.DtIntrod)
                .HasColumnType("datetime")
                .HasColumnName("dtIntrod");
            entity.Property(e => e.DtUltAct)
                .HasColumnType("datetime")
                .HasColumnName("dtUltAct");
            entity.Property(e => e.IdPickupCustoReal).HasColumnName("idPickupCustoReal");
            entity.Property(e => e.IdServicoDet).HasColumnName("idServicoDet");
            entity.Property(e => e.IdUtilIntrod).HasColumnName("idUtilIntrod");
            entity.Property(e => e.IdUtilUltAct).HasColumnName("idUtilUltAct");
            entity.Property(e => e.Obs)
                .HasMaxLength(250)
                .IsUnicode(false)
                .HasColumnName("obs");
            entity.Property(e => e.Valor)
                .HasColumnType("money")
                .HasColumnName("valor");
        });

        modelBuilder.Entity<PickupCustosPenalizaco>(entity =>
        {
            entity.HasIndex(e => new { e.IdUtil, e.DtPup }, "idx_idUtil_dtPup");

            entity.HasIndex(e => e.Recalcular, "idx_recalcular");

            entity.Property(e => e.Id).HasColumnName("id");
            entity.Property(e => e.DtIntrod)
                .HasColumnType("datetime")
                .HasColumnName("dtIntrod");
            entity.Property(e => e.DtPup)
                .HasColumnType("datetime")
                .HasColumnName("dtPup");
            entity.Property(e => e.DtUltAct)
                .HasColumnType("datetime")
                .HasColumnName("dtUltAct");
            entity.Property(e => e.IdAgente).HasColumnName("idAgente");
            entity.Property(e => e.IdFornecedor).HasColumnName("idFornecedor");
            entity.Property(e => e.IdMotivoNf).HasColumnName("idMotivoNF");
            entity.Property(e => e.IdPickup).HasColumnName("idPickup");
            entity.Property(e => e.IdPlataforma).HasColumnName("idPlataforma");
            entity.Property(e => e.IdRota).HasColumnName("idRota");
            entity.Property(e => e.IdTarifa).HasColumnName("idTarifa");
            entity.Property(e => e.IdTarifaPenalizacao).HasColumnName("idTarifaPenalizacao");
            entity.Property(e => e.IdUtil).HasColumnName("idUtil");
            entity.Property(e => e.IdUtilIntrod).HasColumnName("idUtilIntrod");
            entity.Property(e => e.IdUtilUltAct).HasColumnName("idUtilUltAct");
            entity.Property(e => e.ParaFacturar).HasColumnName("paraFacturar");
            entity.Property(e => e.Recalcular).HasColumnName("recalcular");
            entity.Property(e => e.Valor)
                .HasColumnType("money")
                .HasColumnName("valor");
            entity.Property(e => e.ValorManual)
                .HasColumnType("money")
                .HasColumnName("valorManual");
        });

        modelBuilder.Entity<PickupCustosPenalizacoesManuai>(entity =>
        {
            entity.HasKey(e => e.Id).HasName("PK__PickupCu__3213E83F7E5547C6");

            entity.HasIndex(e => new { e.IdPickupCustosPenalizacoes, e.Activo }, "idx_idPickupCustosPenalizacoes_activo");

            entity.Property(e => e.Id).HasColumnName("id");
            entity.Property(e => e.Activo).HasColumnName("activo");
            entity.Property(e => e.DtIntrod)
                .HasColumnType("datetime")
                .HasColumnName("dtIntrod");
            entity.Property(e => e.DtUltAct)
                .HasColumnType("datetime")
                .HasColumnName("dtUltAct");
            entity.Property(e => e.IdPickupCustosPenalizacoes).HasColumnName("idPickupCustosPenalizacoes");
            entity.Property(e => e.IdTipoPenalizacao).HasColumnName("idTipoPenalizacao");
            entity.Property(e => e.IdUtilIntrod).HasColumnName("idUtilIntrod");
            entity.Property(e => e.IdUtilUltAct).HasColumnName("idUtilUltAct");
            entity.Property(e => e.Obs)
                .HasMaxLength(250)
                .IsUnicode(false)
                .HasColumnName("obs");
            entity.Property(e => e.Valor)
                .HasColumnType("money")
                .HasColumnName("valor");
        });

        modelBuilder.Entity<PickupCustosPrevisto>(entity =>
        {
            entity.HasKey(e => e.Id).HasName("PK__PickupCu__3213E83F1085D93E");

            entity.HasIndex(e => e.IdPickup, "idx_idPickup").HasFillFactor(80);

            entity.HasIndex(e => new { e.ScanDateDt, e.IdUtil, e.IdRota, e.Valido, e.ValorManual }, "idx_idUtil_idRota_scandatedt_valido_valorManual").HasFillFactor(80);

            entity.HasIndex(e => new { e.IdUtil, e.ScanDateDt }, "idx_idUtil_scanDateDt");

            entity.HasIndex(e => new { e.ScanDateDt, e.IdUtil, e.IdRota }, "idx_idUtil_scandatedt_idRota");

            entity.Property(e => e.Id).HasColumnName("id");
            entity.Property(e => e.DtIntrod)
                .HasColumnType("datetime")
                .HasColumnName("dtIntrod");
            entity.Property(e => e.DtUltAct)
                .HasColumnType("datetime")
                .HasColumnName("dtUltAct");
            entity.Property(e => e.DtvalidManual)
                .HasColumnType("datetime")
                .HasColumnName("dtvalidManual");
            entity.Property(e => e.IdAgente).HasColumnName("idAgente");
            entity.Property(e => e.IdFornecedor).HasColumnName("idFornecedor");
            entity.Property(e => e.IdMotivoNf).HasColumnName("idMotivoNF");
            entity.Property(e => e.IdPickup).HasColumnName("idPickup");
            entity.Property(e => e.IdPlataforma).HasColumnName("idPlataforma");
            entity.Property(e => e.IdRota).HasColumnName("idRota");
            entity.Property(e => e.IdStop).HasColumnName("idStop");
            entity.Property(e => e.IdTarifaEspecial).HasColumnName("idTarifaEspecial");
            entity.Property(e => e.IdTarifaForn).HasColumnName("idTarifaForn");
            entity.Property(e => e.IdTarifaPenalizacao).HasColumnName("idTarifaPenalizacao");
            entity.Property(e => e.IdTipoCusto).HasColumnName("idTipoCusto");
            entity.Property(e => e.IdTipoPenalizacao).HasColumnName("idTipoPenalizacao");
            entity.Property(e => e.IdUtil).HasColumnName("idUtil");
            entity.Property(e => e.IdUtilIntrod).HasColumnName("idUtilIntrod");
            entity.Property(e => e.IdUtilUltAct).HasColumnName("idUtilUltAct");
            entity.Property(e => e.IdUtilValidManual).HasColumnName("idUtilValidManual");
            entity.Property(e => e.Observacoes)
                .HasMaxLength(250)
                .HasColumnName("observacoes");
            entity.Property(e => e.ParaFacturar).HasColumnName("paraFacturar");
            entity.Property(e => e.ScanCode)
                .HasMaxLength(2)
                .IsUnicode(false)
                .HasColumnName("scanCode");
            entity.Property(e => e.ScanDate)
                .HasColumnType("datetime")
                .HasColumnName("scanDate");
            entity.Property(e => e.ScanDateDt)
                .HasColumnType("date")
                .HasColumnName("scanDateDt");
            entity.Property(e => e.ScanDateTm).HasColumnName("scanDateTm");
            entity.Property(e => e.ValidManual)
                .HasDefaultValueSql("((0))")
                .HasColumnName("validManual");
            entity.Property(e => e.Valido)
                .IsRequired()
                .HasDefaultValueSql("((1))")
                .HasColumnName("valido");
            entity.Property(e => e.Valor)
                .HasColumnType("money")
                .HasColumnName("valor");
            entity.Property(e => e.ValorManual).HasColumnName("valorManual");
        });

        modelBuilder.Entity<PickupCustosReai>(entity =>
        {
            entity.HasKey(e => e.Id).HasName("PK__PickupCu__3213E83F74DF5577");

            entity.HasIndex(e => new { e.IdUtil, e.ScanDateDt }, "idx_idUtil_scanDateDt").HasFillFactor(80);

            entity.Property(e => e.Id).HasColumnName("id");
            entity.Property(e => e.DtIntrod)
                .HasColumnType("datetime")
                .HasColumnName("dtIntrod");
            entity.Property(e => e.DtUltAct)
                .HasColumnType("datetime")
                .HasColumnName("dtUltAct");
            entity.Property(e => e.DtvalidManual)
                .HasColumnType("datetime")
                .HasColumnName("dtvalidManual");
            entity.Property(e => e.IdAgente).HasColumnName("idAgente");
            entity.Property(e => e.IdFornecedor).HasColumnName("idFornecedor");
            entity.Property(e => e.IdMotivoNf).HasColumnName("idMotivoNF");
            entity.Property(e => e.IdPickup).HasColumnName("idPickup");
            entity.Property(e => e.IdPlataforma).HasColumnName("idPlataforma");
            entity.Property(e => e.IdRota).HasColumnName("idRota");
            entity.Property(e => e.IdStop).HasColumnName("idStop");
            entity.Property(e => e.IdTarifaEspecial).HasColumnName("idTarifaEspecial");
            entity.Property(e => e.IdTarifaForn).HasColumnName("idTarifaForn");
            entity.Property(e => e.IdTarifaPenalizacao).HasColumnName("idTarifaPenalizacao");
            entity.Property(e => e.IdTipoCusto).HasColumnName("idTipoCusto");
            entity.Property(e => e.IdTipoPenalizacao).HasColumnName("idTipoPenalizacao");
            entity.Property(e => e.IdUtil).HasColumnName("idUtil");
            entity.Property(e => e.IdUtilIntrod).HasColumnName("idUtilIntrod");
            entity.Property(e => e.IdUtilUltAct).HasColumnName("idUtilUltAct");
            entity.Property(e => e.IdUtilvalidManual).HasColumnName("idUtilvalidManual");
            entity.Property(e => e.Observacoes)
                .HasMaxLength(250)
                .HasColumnName("observacoes");
            entity.Property(e => e.ParaFacturar).HasColumnName("paraFacturar");
            entity.Property(e => e.Recalcular).HasColumnName("recalcular");
            entity.Property(e => e.ScanCode)
                .HasMaxLength(2)
                .IsUnicode(false)
                .HasColumnName("scanCode");
            entity.Property(e => e.ScanDate)
                .HasColumnType("datetime")
                .HasColumnName("scanDate");
            entity.Property(e => e.ScanDateDt)
                .HasColumnType("date")
                .HasColumnName("scanDateDt");
            entity.Property(e => e.ScanDateTm).HasColumnName("scanDateTm");
            entity.Property(e => e.ValidManual).HasColumnName("validManual");
            entity.Property(e => e.Valor)
                .HasColumnType("money")
                .HasColumnName("valor");
            entity.Property(e => e.ValorManual)
                .HasColumnType("money")
                .HasColumnName("valorManual");
        });

        modelBuilder.Entity<PickupDelegacao>(entity =>
        {
            entity.HasKey(e => e.Id).HasName("PK__PickupDe__3213E83F0611B029");

            entity.ToTable("PickupDelegacao");

            entity.Property(e => e.Id).HasColumnName("id");
            entity.Property(e => e.DtDelegada)
                .HasColumnType("datetime")
                .HasColumnName("dtDelegada");
            entity.Property(e => e.DtIntrod)
                .HasDefaultValueSql("(getdate())")
                .HasColumnType("datetime")
                .HasColumnName("dtIntrod");
            entity.Property(e => e.IdEntidadeDelegada).HasColumnName("idEntidadeDelegada");
            entity.Property(e => e.IdEntidadeOrigem).HasColumnName("idEntidadeOrigem");
            entity.Property(e => e.IdPickupDelegada).HasColumnName("idPickupDelegada");
            entity.Property(e => e.IdPickupOrigem).HasColumnName("idPickupOrigem");
        });

        modelBuilder.Entity<PickupDocumento>(entity =>
        {
            entity.HasIndex(e => e.IdPickup, "idx_idPickup").HasFillFactor(80);

            entity.Property(e => e.Id).HasColumnName("id");
            entity.Property(e => e.Descricao)
                .HasMaxLength(50)
                .IsUnicode(false)
                .HasColumnName("descricao");
            entity.Property(e => e.DtIntrod)
                .HasColumnType("datetime")
                .HasColumnName("dtIntrod");
            entity.Property(e => e.Guid)
                .HasMaxLength(50)
                .IsUnicode(false)
                .HasColumnName("GUID");
            entity.Property(e => e.IdPickup).HasColumnName("idPickup");
            entity.Property(e => e.IdUtilIntrod).HasColumnName("idUtilIntrod");
            entity.Property(e => e.MimeType)
                .HasMaxLength(50)
                .IsUnicode(false)
                .HasColumnName("mimeType");
            entity.Property(e => e.Nome)
                .HasMaxLength(500)
                .IsUnicode(false)
                .HasColumnName("nome");
            entity.Property(e => e.ServerLocation)
                .HasMaxLength(250)
                .IsUnicode(false)
                .HasColumnName("serverLocation");
            entity.Property(e => e.Tamanho).HasColumnName("tamanho");
        });

        modelBuilder.Entity<PickupEncomendaItem>(entity =>
        {
            entity
                .HasNoKey()
                .ToTable("PickupEncomendaItem");

            entity.Property(e => e.Cancelado).HasColumnName("cancelado");
            entity.Property(e => e.Id)
                .ValueGeneratedOnAdd()
                .HasColumnName("id");
            entity.Property(e => e.IdPickup).HasColumnName("idPickup");
            entity.Property(e => e.IdPickupEncomenda).HasColumnName("idPickupEncomenda");
            entity.Property(e => e.NrItem).HasColumnName("nrItem");
            entity.Property(e => e.RefShipper)
                .HasMaxLength(40)
                .HasColumnName("refShipper");
        });

        modelBuilder.Entity<PickupEncomendum>(entity =>
        {
            entity.Property(e => e.Id).HasColumnName("id");
            entity.Property(e => e.Concluido).HasColumnName("concluido");
            entity.Property(e => e.ContactoDest)
                .HasMaxLength(50)
                .HasColumnName("contactoDest");
            entity.Property(e => e.CpostalDest)
                .HasMaxLength(15)
                .HasColumnName("cpostalDest");
            entity.Property(e => e.DtPickup)
                .HasColumnType("datetime")
                .HasColumnName("dtPickup");
            entity.Property(e => e.EmpresaDest)
                .HasMaxLength(100)
                .HasColumnName("empresaDest");
            entity.Property(e => e.IdCliMorada).HasColumnName("idCliMorada");
            entity.Property(e => e.IdCliente).HasColumnName("idCliente");
            entity.Property(e => e.IdEntidade).HasColumnName("idEntidade");
            entity.Property(e => e.IdManifesto).HasColumnName("idManifesto");
            entity.Property(e => e.IdPaisDestino).HasColumnName("idPaisDestino");
            entity.Property(e => e.LocalidadeDest)
                .HasMaxLength(50)
                .HasColumnName("localidadeDest");
            entity.Property(e => e.MoradaDest)
                .HasMaxLength(100)
                .HasColumnName("moradaDest");
            entity.Property(e => e.NrTotalItems).HasColumnName("nrTotalItems");
            entity.Property(e => e.NumDocAdos).HasColumnName("numDocAdos");
            entity.Property(e => e.NumVolumesManifesto).HasColumnName("numVolumesManifesto");
            entity.Property(e => e.PesoManifesto)
                .HasColumnType("money")
                .HasColumnName("pesoManifesto");
            entity.Property(e => e.RefShipper)
                .HasMaxLength(40)
                .HasColumnName("refShipper");
            entity.Property(e => e.TelefoneDest).HasColumnName("telefoneDest");
        });

        modelBuilder.Entity<PickupEstadosT>(entity =>
        {
            entity.ToTable("PickupEstados_T");

            entity.Property(e => e.Id)
                .ValueGeneratedNever()
                .HasColumnName("id");
            entity.Property(e => e.Anulado).HasColumnName("anulado");
            entity.Property(e => e.Codigo)
                .HasMaxLength(15)
                .HasColumnName("codigo");
            entity.Property(e => e.CommMotorista).HasColumnName("commMotorista");
            entity.Property(e => e.CommPda).HasColumnName("commPDA");
            entity.Property(e => e.Comunicado).HasColumnName("comunicado");
            entity.Property(e => e.DelayUrgente)
                .HasColumnType("datetime")
                .HasColumnName("delayUrgente");
            entity.Property(e => e.Descricao)
                .HasMaxLength(50)
                .HasColumnName("descricao");
            entity.Property(e => e.DevolvidoPda).HasColumnName("devolvidoPDA");
            entity.Property(e => e.Efectuado).HasColumnName("efectuado");
            entity.Property(e => e.Imagem)
                .HasMaxLength(50)
                .HasColumnName("imagem");
            entity.Property(e => e.ImagemUrgente)
                .HasMaxLength(50)
                .HasColumnName("imagemUrgente");
            entity.Property(e => e.Ordem).HasColumnName("ordem");
            entity.Property(e => e.Planeado).HasColumnName("planeado");
            entity.Property(e => e.Recolhido).HasColumnName("recolhido");
            entity.Property(e => e.Tentado).HasColumnName("tentado");
            entity.Property(e => e.Tratar).HasColumnName("tratar");
            entity.Property(e => e.Validade)
                .HasColumnType("datetime")
                .HasColumnName("validade");
            entity.Property(e => e.ValidadeNum)
                .HasColumnType("money")
                .HasColumnName("validadeNum");
        });

        modelBuilder.Entity<PickupInterface>(entity =>
        {
            entity.HasKey(e => new { e.IdPickup, e.IdPickupInterfaceTipo });

            entity.ToTable("PickupInterface");

            entity.Property(e => e.IdPickup).HasColumnName("idPickup");
            entity.Property(e => e.IdPickupInterfaceTipo).HasColumnName("idPickupInterfaceTipo");
            entity.Property(e => e.DtEnv)
                .HasColumnType("datetime")
                .HasColumnName("dtEnv");
        });

        modelBuilder.Entity<PickupInterfaceTipoT>(entity =>
        {
            entity.ToTable("PickupInterfaceTipo_T");

            entity.HasIndex(e => new { e.Codigo, e.Activo }, "idx_codigo_activo");

            entity.Property(e => e.Id).HasColumnName("id");
            entity.Property(e => e.Activo)
                .IsRequired()
                .HasDefaultValueSql("((1))")
                .HasColumnName("activo");
            entity.Property(e => e.Codigo)
                .HasMaxLength(15)
                .HasColumnName("codigo");
            entity.Property(e => e.Descricao)
                .HasMaxLength(50)
                .HasColumnName("descricao");
        });

        modelBuilder.Entity<PickupItem>(entity =>
        {
            entity.HasIndex(e => new { e.IdPickup, e.Activo }, "Idx_idPickup_activo").HasFillFactor(80);

            entity.Property(e => e.Id).HasColumnName("id");
            entity.Property(e => e.Activo).HasColumnName("activo");
            entity.Property(e => e.CodIva)
                .HasMaxLength(10)
                .HasColumnName("codIva");
            entity.Property(e => e.DtIntrod)
                .HasColumnType("datetime")
                .HasColumnName("dtIntrod");
            entity.Property(e => e.DtUltAct)
                .HasColumnType("datetime")
                .HasColumnName("dtUltAct");
            entity.Property(e => e.IdIvareg).HasColumnName("idIVAREG");
            entity.Property(e => e.IdPickup).HasColumnName("idPickup");
            entity.Property(e => e.IdServico).HasColumnName("idServico");
            entity.Property(e => e.IdServicoDet).HasColumnName("idServicoDet");
            entity.Property(e => e.IdUtilIntrod).HasColumnName("idUtilIntrod");
            entity.Property(e => e.IdUtilUltAct).HasColumnName("idUtilUltAct");
            entity.Property(e => e.Idtipoiva).HasColumnName("idtipoiva");
            entity.Property(e => e.Valor)
                .HasColumnType("money")
                .HasColumnName("valor");
        });

        modelBuilder.Entity<PickupLocalPagamentoT>(entity =>
        {
            entity.HasKey(e => e.Id).HasName("PK_PickupContasFedExTipo_T");

            entity.ToTable("PickupLocalPagamento_T");

            entity.Property(e => e.Id).HasColumnName("id");
            entity.Property(e => e.Activo)
                .IsRequired()
                .HasDefaultValueSql("(1)")
                .HasColumnName("activo");
            entity.Property(e => e.Codigo)
                .HasMaxLength(15)
                .HasColumnName("codigo");
            entity.Property(e => e.Descricao)
                .HasMaxLength(50)
                .HasColumnName("descricao");
        });

        modelBuilder.Entity<PickupLog>(entity =>
        {
            entity.ToTable("PickupLog");

            entity.HasIndex(e => new { e.IdPickup, e.Data }, "idx_idPickup_data").HasFillFactor(80);

            entity.Property(e => e.Id).HasColumnName("id");
            entity.Property(e => e.Data)
                .HasColumnType("datetime")
                .HasColumnName("data");
            entity.Property(e => e.IdAccao).HasColumnName("idAccao");
            entity.Property(e => e.IdPickup).HasColumnName("idPickup");
            entity.Property(e => e.IdUtil).HasColumnName("idUtil");
            entity.Property(e => e.Observacoes)
                .HasMaxLength(50)
                .HasColumnName("observacoes");
        });

        modelBuilder.Entity<PickupLogTipoAccoesT>(entity =>
        {
            entity.HasKey(e => e.Id).HasName("PK_PickupLogTipoAccoes");

            entity.ToTable("PickupLogTipoAccoes_T");

            entity.Property(e => e.Id).HasColumnName("id");
            entity.Property(e => e.Descricao)
                .HasMaxLength(50)
                .HasColumnName("descricao");
        });

        modelBuilder.Entity<PickupTlog>(entity =>
        {
            entity.HasKey(e => e.IdTrigger);

            entity.ToTable("Pickup_TLog");

            entity.HasIndex(e => e.Id, "idx_id").HasFillFactor(80);

            entity.Property(e => e.IdTrigger).HasColumnName("idTrigger");
            entity.Property(e => e.Altura)
                .HasColumnType("money")
                .HasColumnName("altura");
            entity.Property(e => e.Americangold)
                .HasDefaultValueSql("((0))")
                .HasColumnName("americangold");
            entity.Property(e => e.Anulado)
                .HasDefaultValueSql("((0))")
                .HasColumnName("anulado");
            entity.Property(e => e.CamposObrigatorios).HasColumnType("xml");
            entity.Property(e => e.CommentScan)
                .HasMaxLength(500)
                .HasColumnName("commentScan");
            entity.Property(e => e.Comprimento)
                .HasColumnType("money")
                .HasColumnName("comprimento");
            entity.Property(e => e.ContaFedEx).HasColumnName("contaFedEx");
            entity.Property(e => e.ContactoDest)
                .HasMaxLength(50)
                .HasColumnName("contactoDest");
            entity.Property(e => e.ContactoPup)
                .HasMaxLength(50)
                .HasColumnName("contactoPUP");
            entity.Property(e => e.CpostalDest)
                .HasMaxLength(15)
                .HasColumnName("cpostalDest");
            entity.Property(e => e.Daa)
                .HasDefaultValueSql("((0))")
                .HasColumnName("daa");
            entity.Property(e => e.DangerousGoods).HasColumnName("dangerousGoods");
            entity.Property(e => e.DepartamentoFact)
                .HasMaxLength(50)
                .IsUnicode(false)
                .HasColumnName("departamentoFact");
            entity.Property(e => e.DtAnulacao)
                .HasColumnType("datetime")
                .HasColumnName("dtAnulacao");
            entity.Property(e => e.DtEnvInterface)
                .HasColumnType("datetime")
                .HasColumnName("dtEnvInterface");
            entity.Property(e => e.DtEnviado)
                .HasColumnType("datetime")
                .HasColumnName("dtEnviado");
            entity.Property(e => e.DtEnviadoMan)
                .HasColumnType("datetime")
                .HasColumnName("dtEnviadoMan");
            entity.Property(e => e.DtPedido)
                .HasDefaultValueSql("(getdate())")
                .HasColumnType("datetime")
                .HasColumnName("dtPedido");
            entity.Property(e => e.DtPup)
                .HasColumnType("datetime")
                .HasColumnName("dtPup");
            entity.Property(e => e.DtTrigger)
                .HasDefaultValueSql("(getdate())")
                .HasColumnType("datetime")
                .HasColumnName("dtTrigger");
            entity.Property(e => e.DtUltAct)
                .HasColumnType("datetime")
                .HasColumnName("dtUltAct");
            entity.Property(e => e.Dtrecolhido)
                .HasColumnType("datetime")
                .HasColumnName("dtrecolhido");
            entity.Property(e => e.EmpresaAlt)
                .HasMaxLength(60)
                .IsUnicode(false)
                .HasColumnName("empresaAlt");
            entity.Property(e => e.EmpresaDest)
                .HasMaxLength(100)
                .HasColumnName("empresaDest");
            entity.Property(e => e.EnvInterface)
                .HasDefaultValueSql("((1))")
                .HasColumnName("envInterface");
            entity.Property(e => e.Enviado)
                .HasDefaultValueSql("((0))")
                .HasColumnName("enviado");
            entity.Property(e => e.EnviadoMan).HasColumnName("enviadoMan");
            entity.Property(e => e.Fef)
                .HasDefaultValueSql("((0))")
                .HasColumnName("fef");
            entity.Property(e => e.Fif).HasColumnName("FIF");
            entity.Property(e => e.Fixo).HasColumnName("fixo");
            entity.Property(e => e.HoraAtribuicao)
                .HasColumnType("datetime")
                .HasColumnName("horaAtribuicao");
            entity.Property(e => e.HoraDisponivel)
                .HasColumnType("datetime")
                .HasColumnName("horaDisponivel");
            entity.Property(e => e.HoraFecho)
                .HasColumnType("datetime")
                .HasColumnName("horaFecho");
            entity.Property(e => e.Id).HasColumnName("id");
            entity.Property(e => e.IGCOM2Userserta).HasColumnName("iGCOM2Userserta");
            entity.Property(e => e.IdClasseOrigem).HasColumnName("idClasseOrigem");
            entity.Property(e => e.IdCliMorada).HasColumnName("idCliMorada");
            entity.Property(e => e.IdCliente).HasColumnName("idCliente");
            entity.Property(e => e.IdCpostal).HasColumnName("idCpostal");
            entity.Property(e => e.IdCpostalDest).HasColumnName("idCPostalDest");
            entity.Property(e => e.IdDestinatario).HasColumnName("idDestinatario");
            entity.Property(e => e.IdDistribuidor)
                .HasDefaultValueSql("((1))")
                .HasColumnName("idDistribuidor");
            entity.Property(e => e.IdEntidade).HasColumnName("idEntidade");
            entity.Property(e => e.IdLocalPagamento).HasColumnName("idLocalPagamento");
            entity.Property(e => e.IdPaisDestino).HasColumnName("idPaisDestino");
            entity.Property(e => e.IdPickupOrigem).HasColumnName("idPickupOrigem");
            entity.Property(e => e.IdPickupRdom).HasColumnName("idPickupRDOM");
            entity.Property(e => e.IdPlataforma).HasColumnName("idPlataforma");
            entity.Property(e => e.IdRota)
                .HasDefaultValueSql("((0))")
                .HasColumnName("idRota");
            entity.Property(e => e.IdSegmento).HasColumnName("idSegmento");
            entity.Property(e => e.IdServico).HasColumnName("idServico");
            entity.Property(e => e.IdTipoDangGoods).HasColumnName("idTipoDangGoods");
            entity.Property(e => e.IdTipoProduto).HasColumnName("idTipoProduto");
            entity.Property(e => e.IdTratamento).HasColumnName("idTratamento");
            entity.Property(e => e.IdUtilAnulacao).HasColumnName("idUtilAnulacao");
            entity.Property(e => e.IdUtilAtribuicao).HasColumnName("idUtilAtribuicao");
            entity.Property(e => e.IdUtilEnviadoMan).HasColumnName("idUtilEnviadoMan");
            entity.Property(e => e.IdUtilPedido).HasColumnName("idUtilPedido");
            entity.Property(e => e.IdUtilUltAct).HasColumnName("idUtilUltAct");
            entity.Property(e => e.Largura)
                .HasColumnType("money")
                .HasColumnName("largura");
            entity.Property(e => e.LocalidadeDest)
                .HasMaxLength(50)
                .HasColumnName("localidadeDest");
            entity.Property(e => e.M3)
                .HasColumnType("money")
                .HasColumnName("m3");
            entity.Property(e => e.MoradaDest)
                .HasMaxLength(100)
                .HasColumnName("moradaDest");
            entity.Property(e => e.MoradaPup)
                .HasMaxLength(100)
                .HasColumnName("moradaPUP");
            entity.Property(e => e.Nifpagamento)
                .HasMaxLength(20)
                .HasColumnName("NIFPagamento");
            entity.Property(e => e.NumeroEnvios).HasColumnName("numeroEnvios");
            entity.Property(e => e.NumeroVolumes).HasColumnName("numeroVolumes");
            entity.Property(e => e.Observacoes)
                .HasMaxLength(500)
                .HasColumnName("observacoes");
            entity.Property(e => e.Peso)
                .HasColumnType("money")
                .HasColumnName("peso");
            entity.Property(e => e.PesoVolumetrico)
                .HasColumnType("money")
                .HasColumnName("pesoVolumetrico");
            entity.Property(e => e.RefShipper)
                .HasMaxLength(40)
                .HasColumnName("refShipper");
            entity.Property(e => e.Scancode)
                .HasMaxLength(2)
                .HasColumnName("scancode");
            entity.Property(e => e.Seguro).HasColumnName("seguro");
            entity.Property(e => e.TelefoneDest).HasColumnName("telefoneDest");
            entity.Property(e => e.TelefonePup).HasColumnName("telefonePUP");
            entity.Property(e => e.ValorPrevisto)
                .HasColumnType("money")
                .HasColumnName("valorPrevisto");
            entity.Property(e => e.ValorReembolso)
                .HasColumnType("money")
                .HasColumnName("valorReembolso");
            entity.Property(e => e.ValorSegurado)
                .HasColumnType("money")
                .HasColumnName("valorSegurado");
            entity.Property(e => e.VendaDinheiro).HasColumnName("vendaDinheiro");
        });

        modelBuilder.Entity<PickupcodesT>(entity =>
        {
            entity.HasKey(e => new { e.Scancode, e.IdEntidade }).HasName("PK_PickupScans_T");

            entity.ToTable("Pickupcodes_T");

            entity.Property(e => e.Scancode)
                .HasMaxLength(2)
                .HasColumnName("scancode");
            entity.Property(e => e.IdEntidade)
                .HasDefaultValueSql("((1))")
                .HasColumnName("idEntidade");
            entity.Property(e => e.Activo)
                .IsRequired()
                .HasDefaultValueSql("((1))")
                .HasColumnName("activo");
            entity.Property(e => e.ComCarga)
                .HasDefaultValueSql("((0))")
                .HasColumnName("comCarga");
            entity.Property(e => e.DescWeb)
                .HasMaxLength(50)
                .HasColumnName("descWeb");
            entity.Property(e => e.Descricao)
                .HasMaxLength(50)
                .HasColumnName("descricao");
            entity.Property(e => e.DexAceitavel).HasColumnName("dex_aceitavel");
            entity.Property(e => e.DexInaceitavel).HasColumnName("dex_inaceitavel");
            entity.Property(e => e.Finaliza).HasColumnName("finaliza");
            entity.Property(e => e.IdTrataDept).HasColumnName("idTrataDept");
            entity.Property(e => e.IdTrataGrupo).HasColumnName("idTrataGrupo");
            entity.Property(e => e.NotifCliente).HasColumnName("notifCliente");
            entity.Property(e => e.ParaFacturarFornecedor).HasColumnName("paraFacturarFornecedor");
            entity.Property(e => e.Poddex).HasColumnName("poddex");
            entity.Property(e => e.ReAgenda).HasDefaultValueSql("((0))");
            entity.Property(e => e.ScanType)
                .HasMaxLength(2)
                .IsUnicode(false)
                .IsFixedLength()
                .HasColumnName("scanType");
            entity.Property(e => e.ScanTypeScanCode)
                .HasMaxLength(2)
                .IsUnicode(false)
                .IsFixedLength()
                .HasColumnName("scanTypeScanCode");
            entity.Property(e => e.Tratamento).HasColumnName("tratamento");
            entity.Property(e => e.TratamentoCliente).HasColumnName("tratamentoCliente");
        });

        modelBuilder.Entity<PjDestinatario>(entity =>
        {
            entity
                .HasNoKey()
                .ToTable("PJ_Destinatarios");

            entity.Property(e => e.Nome)
                .HasMaxLength(4000)
                .HasColumnName("nome");
        });

        modelBuilder.Entity<PjDestinatarios2>(entity =>
        {
            entity
                .HasNoKey()
                .ToTable("PJ_Destinatarios2");

            entity.Property(e => e.Morada)
                .HasMaxLength(400)
                .HasColumnName("morada");
            entity.Property(e => e.Nome)
                .HasMaxLength(400)
                .HasColumnName("nome");
        });

        modelBuilder.Entity<PjDestinatarios3>(entity =>
        {
            entity
                .HasNoKey()
                .ToTable("PJ_Destinatarios3");

            entity.Property(e => e.Morada)
                .HasMaxLength(68)
                .HasColumnName("morada");
            entity.Property(e => e.Nome)
                .HasMaxLength(100)
                .HasColumnName("nome");
        });

        modelBuilder.Entity<PjInfo>(entity =>
        {
            entity
                .HasNoKey()
                .ToTable("PJ_Info");

            entity.Property(e => e.Confidence).HasColumnType("decimal(18, 10)");
            entity.Property(e => e.Id)
                .ValueGeneratedOnAdd()
                .HasColumnName("ID");
            entity.Property(e => e.NomeEnvio).HasColumnName("nome_envio");
            entity.Property(e => e.NomeOrigem).HasColumnName("nome_origem");
            entity.Property(e => e.Similarity).HasColumnType("decimal(18, 10)");
            entity.Property(e => e.SimilarityNome)
                .HasColumnType("decimal(18, 10)")
                .HasColumnName("_Similarity_nome");
        });

        modelBuilder.Entity<PjInfo2>(entity =>
        {
            entity
                .HasNoKey()
                .ToTable("PJ_Info2");

            entity.Property(e => e.Confidence).HasColumnType("decimal(18, 10)");
            entity.Property(e => e.Id)
                .ValueGeneratedOnAdd()
                .HasColumnName("ID");
            entity.Property(e => e.IdMaster).HasColumnName("idMaster");
            entity.Property(e => e.MoradaEnvioDest).HasColumnName("morada_envio_dest");
            entity.Property(e => e.MoradaEnvioExp).HasColumnName("morada_envio_exp");
            entity.Property(e => e.MoradaOrigem).HasColumnName("morada_origem");
            entity.Property(e => e.NomeEnvio).HasColumnName("nome_envio");
            entity.Property(e => e.NomeOrigem).HasColumnName("nome_origem");
            entity.Property(e => e.Similarity).HasColumnType("decimal(18, 10)");
            entity.Property(e => e.SimilarityNome)
                .HasColumnType("decimal(18, 10)")
                .HasColumnName("_Similarity_nome");
        });

        modelBuilder.Entity<PjInfo3>(entity =>
        {
            entity
                .HasNoKey()
                .ToTable("PJ_Info3");

            entity.Property(e => e.Confidence).HasColumnType("decimal(18, 10)");
            entity.Property(e => e.Id)
                .ValueGeneratedOnAdd()
                .HasColumnName("ID");
            entity.Property(e => e.IdMaster).HasColumnName("idMaster");
            entity.Property(e => e.MoradaEnvioDest).HasColumnName("morada_envio_dest");
            entity.Property(e => e.MoradaEnvioExp).HasColumnName("morada_envio_exp");
            entity.Property(e => e.MoradaOrigem).HasColumnName("morada_origem");
            entity.Property(e => e.NomeEnvio).HasColumnName("nome_envio");
            entity.Property(e => e.NomeOrigem).HasColumnName("nome_origem");
            entity.Property(e => e.Similarity).HasColumnType("decimal(18, 10)");
            entity.Property(e => e.SimilarityNomeOuMorada)
                .HasColumnType("decimal(18, 10)")
                .HasColumnName("_Similarity_nome_ou_morada");
        });

        modelBuilder.Entity<PjManifesto>(entity =>
        {
            entity
                .HasNoKey()
                .ToTable("PJ_Manifestos");

            entity.Property(e => e.Awb)
                .HasMaxLength(20)
                .HasColumnName("awb");
            entity.Property(e => e.DtEnvio)
                .HasColumnType("datetime")
                .HasColumnName("dtEnvio");
            entity.Property(e => e.Empresa)
                .HasMaxLength(4000)
                .HasColumnName("empresa");
            entity.Property(e => e.IdMaster).HasColumnName("idMAster");
            entity.Property(e => e.Nome)
                .HasMaxLength(4000)
                .HasColumnName("nome");
        });

        modelBuilder.Entity<PjManifestos2>(entity =>
        {
            entity
                .HasNoKey()
                .ToTable("PJ_Manifestos2");

            entity.Property(e => e.Awb)
                .HasMaxLength(20)
                .HasColumnName("awb");
            entity.Property(e => e.DtEnvio)
                .HasColumnType("datetime")
                .HasColumnName("dtEnvio");
            entity.Property(e => e.Empresa)
                .HasMaxLength(4000)
                .HasColumnName("empresa");
            entity.Property(e => e.IdMaster).HasColumnName("idMAster");
            entity.Property(e => e.Nome)
                .HasMaxLength(4000)
                .HasColumnName("nome");
        });

        modelBuilder.Entity<PjManifestosNome>(entity =>
        {
            entity
                .HasNoKey()
                .ToTable("pj_manifestos_nomes");

            entity.Property(e => e.Nome)
                .HasMaxLength(4000)
                .HasColumnName("nome");
        });

        modelBuilder.Entity<PjManifestosNomes2>(entity =>
        {
            entity
                .HasNoKey()
                .ToTable("pj_manifestos_nomes2");

            entity.Property(e => e.IdMaster).HasColumnName("idMaster");
            entity.Property(e => e.MoradaDest)
                .HasMaxLength(4000)
                .HasColumnName("moradaDest");
            entity.Property(e => e.MoradaExp)
                .HasMaxLength(4000)
                .HasColumnName("moradaExp");
            entity.Property(e => e.Nome)
                .HasMaxLength(4000)
                .HasColumnName("nome");
        });

        modelBuilder.Entity<PjManifestosNomes3>(entity =>
        {
            entity
                .HasNoKey()
                .ToTable("pj_manifestos_nomes3");

            entity.Property(e => e.IdMaster).HasColumnName("idMaster");
            entity.Property(e => e.MoradaDest)
                .HasMaxLength(68)
                .HasColumnName("moradaDest");
            entity.Property(e => e.MoradaExp)
                .HasMaxLength(68)
                .HasColumnName("moradaExp");
            entity.Property(e => e.Nome)
                .HasMaxLength(100)
                .HasColumnName("nome");
        });

        modelBuilder.Entity<PlaneamentoControloImpressao>(entity =>
        {
            entity.HasKey(e => e.Id).HasName("PK__Planeame__3213E83F2601050C");

            entity.ToTable("PlaneamentoControloImpressao");

            entity.HasIndex(e => new { e.Data, e.IdRota }, "idx_data_idRota");

            entity.Property(e => e.Id).HasColumnName("id");
            entity.Property(e => e.Data)
                .HasColumnType("datetime")
                .HasColumnName("data");
            entity.Property(e => e.Dtimpresso)
                .HasColumnType("datetime")
                .HasColumnName("dtimpresso");
            entity.Property(e => e.IdManifesto).HasColumnName("idManifesto");
            entity.Property(e => e.IdRecolha).HasColumnName("idRecolha");
            entity.Property(e => e.IdRota).HasColumnName("idRota");
            entity.Property(e => e.IdUtilImp).HasColumnName("idUtilImp");
            entity.Property(e => e.Impresso).HasColumnName("impresso");
            entity.Property(e => e.NumDocAdos).HasColumnName("numDocAdos");
            entity.Property(e => e.Tipo).HasMaxLength(50);
        });

        modelBuilder.Entity<PlataformaCliente>(entity =>
        {
            entity.HasKey(e => new { e.IdPlataforma, e.IdCliente, e.IdEntidade, e.CodCliente });

            entity.ToTable("PlataformaCliente");

            entity.HasIndex(e => new { e.IdCpostalInicio, e.IdCpostalFim }, "idx_cpIni_cpFim").HasFillFactor(80);

            entity.Property(e => e.IdPlataforma).HasColumnName("idPlataforma");
            entity.Property(e => e.IdCliente).HasColumnName("idCliente");
            entity.Property(e => e.IdEntidade).HasColumnName("idEntidade");
            entity.Property(e => e.CodCliente)
                .HasMaxLength(10)
                .IsUnicode(false)
                .HasColumnName("codCliente");
            entity.Property(e => e.IdCliMorada).HasColumnName("idCliMorada");
            entity.Property(e => e.IdCpostalFim).HasColumnName("idCPostalFim");
            entity.Property(e => e.IdCpostalInicio).HasColumnName("idCPostalInicio");
        });

        modelBuilder.Entity<PlataformaRegT>(entity =>
        {
            entity.HasKey(e => e.Id).HasName("PK_PlataformaSeg_T");

            entity.ToTable("PlataformaReg_T");

            entity.Property(e => e.Id).HasColumnName("id");
            entity.Property(e => e.Codigo)
                .HasMaxLength(15)
                .HasColumnName("codigo");
            entity.Property(e => e.Descricao)
                .HasMaxLength(50)
                .HasColumnName("descricao");
        });

        modelBuilder.Entity<PlataformaT>(entity =>
        {
            entity.ToTable("Plataforma_T");

            entity.HasIndex(e => e.IdPlataformaReg, "idx_idPlataformaReg");

            entity.Property(e => e.Id).HasColumnName("id");
            entity.Property(e => e.Activo)
                .HasDefaultValueSql("((1))")
                .HasColumnName("activo");
            entity.Property(e => e.CodCurto)
                .HasMaxLength(5)
                .HasColumnName("codCurto");
            entity.Property(e => e.Codigo)
                .HasMaxLength(15)
                .HasColumnName("codigo");
            entity.Property(e => e.CodigoFact)
                .HasMaxLength(5)
                .HasDefaultValueSql("('')")
                .HasColumnName("codigoFact");
            entity.Property(e => e.Descricao)
                .HasMaxLength(50)
                .HasColumnName("descricao");
            entity.Property(e => e.Email).HasMaxLength(50);
            entity.Property(e => e.IdCliMoradaDevgr).HasColumnName("idCliMoradaDEVGR");
            entity.Property(e => e.IdCliMoradaReembolsos).HasColumnName("idCliMoradaReembolsos");
            entity.Property(e => e.IdClienteDevgr).HasColumnName("idClienteDEVGR");
            entity.Property(e => e.IdClienteReembolsos).HasColumnName("idClienteReembolsos");
            entity.Property(e => e.IdEntidade).HasColumnName("idEntidade");
            entity.Property(e => e.IdPais).HasColumnName("idPais");
            entity.Property(e => e.IdPlataformaReg).HasColumnName("idPlataformaReg");
            entity.Property(e => e.Ordem).HasColumnName("ordem");
            entity.Property(e => e.SapTipoDoc)
                .HasMaxLength(5)
                .HasColumnName("sap_TIPO_DOC");
            entity.Property(e => e.UrsaCode)
                .HasMaxLength(5)
                .HasColumnName("ursaCode");
            entity.Property(e => e.UserCosmos)
                .HasMaxLength(10)
                .HasColumnName("userCosmos");
        });

        modelBuilder.Entity<PlataformaZonasT>(entity =>
        {
            entity.ToTable("PlataformaZonas_T");

            entity.Property(e => e.Id).HasColumnName("id");
            entity.Property(e => e.CodPlataformaAgente).HasColumnName("codPlataformaAgente");
            entity.Property(e => e.CodPostalDefault)
                .HasMaxLength(10)
                .IsUnicode(false);
            entity.Property(e => e.IdPlataforma).HasColumnName("idPlataforma");
            entity.Property(e => e.Zona)
                .HasMaxLength(30)
                .HasColumnName("zona");
        });

        modelBuilder.Entity<PlataformasEntidadesM>(entity =>
        {
            entity.ToTable("PlataformasEntidades_M");

            entity.HasIndex(e => new { e.IdEntidade, e.IdPlataforma, e.Activa }, "idx_entidade_idplat_activo");

            entity.Property(e => e.Id).HasColumnName("id");
            entity.Property(e => e.Activa)
                .HasDefaultValueSql("((0))")
                .HasColumnName("activa");
            entity.Property(e => e.Descricao)
                .HasMaxLength(200)
                .HasColumnName("descricao");
            entity.Property(e => e.IdEntidade).HasColumnName("idEntidade");
            entity.Property(e => e.IdPlataforma).HasColumnName("idPlataforma");
        });

        modelBuilder.Entity<PlataformasM>(entity =>
        {
            entity
                .HasNoKey()
                .ToTable("Plataformas_M");

            entity.HasIndex(e => e.IdEntidade2, "idx_Plataforma_M_idEntidade2");

            entity.HasIndex(e => e.IdPlataforma1, "idx_Plataformas_M_idplataforma1");

            entity.Property(e => e.IdEntidade1).HasColumnName("idEntidade1");
            entity.Property(e => e.IdEntidade2).HasColumnName("idEntidade2");
            entity.Property(e => e.IdPlataforma1).HasColumnName("idPlataforma1");
            entity.Property(e => e.IdPlataforma2).HasColumnName("idPlataforma2");
        });

        modelBuilder.Entity<PlataformasParceirosM>(entity =>
        {
            entity.HasKey(e => e.Id).HasName("PK__Platafor__3213E83F72B6ADB6");

            entity.ToTable("PlataformasParceiros_M");

            entity.HasIndex(e => new { e.IdCliente, e.IdEntidade, e.IdPlataformaRangel }, "idx_PlataformasParceiros_M_idCliente_idPlataforma_IdEntidade");

            entity.Property(e => e.Id).HasColumnName("id");
            entity.Property(e => e.Descricao)
                .HasMaxLength(200)
                .HasColumnName("descricao");
            entity.Property(e => e.IdCliente).HasColumnName("idCliente");
            entity.Property(e => e.IdEntidade).HasColumnName("idEntidade");
            entity.Property(e => e.IdPlataformaRangel).HasColumnName("idPlataformaRangel");
            entity.Property(e => e.ReferenciaParceiro)
                .HasMaxLength(200)
                .HasColumnName("referenciaParceiro");
        });

        modelBuilder.Entity<PortalClientesMap>(entity =>
        {
            entity.HasKey(e => e.IdCliente);

            entity.ToTable("PortalClientesMap");

            entity.Property(e => e.IdCliente)
                .ValueGeneratedNever()
                .HasColumnName("idCliente");
            entity.Property(e => e.IdCliMorada).HasColumnName("idCliMorada");
            entity.Property(e => e.IdClientePortal).HasColumnName("idClientePortal");
            entity.Property(e => e.IdEntidade).HasColumnName("idEntidade");
        });

        modelBuilder.Entity<PrevisoesEntregaT>(entity =>
        {
            entity.HasKey(e => e.Id).HasName("PK__Previsoe__3213E83F6CC931F9");

            entity.ToTable("PrevisoesEntrega_T");

            entity.Property(e => e.Id).HasColumnName("id");
            entity.Property(e => e.Activo).HasColumnName("activo");
            entity.Property(e => e.Descricao)
                .HasMaxLength(1000)
                .HasColumnName("descricao");
            entity.Property(e => e.HoraFim).HasColumnName("horaFim");
            entity.Property(e => e.HoraInicio).HasColumnName("horaInicio");
        });

        modelBuilder.Entity<ProducaoCustosPenalizaco>(entity =>
        {
            entity.HasKey(e => e.Id).HasName("PK__Producao__3213E83F761D9273");

            entity.HasIndex(e => new { e.Data, e.IdUtil }, "idx_data_idUtil").HasFillFactor(80);

            entity.Property(e => e.Id).HasColumnName("id");
            entity.Property(e => e.Confirmado)
                .HasDefaultValueSql("((0))")
                .HasColumnName("confirmado");
            entity.Property(e => e.Data)
                .HasColumnType("date")
                .HasColumnName("data");
            entity.Property(e => e.DtConfirmado)
                .HasColumnType("datetime")
                .HasColumnName("dtConfirmado");
            entity.Property(e => e.DtIntrod)
                .HasColumnType("datetime")
                .HasColumnName("dtIntrod");
            entity.Property(e => e.DtUtlAct)
                .HasColumnType("datetime")
                .HasColumnName("dtUtlAct");
            entity.Property(e => e.DtValidado)
                .HasColumnType("datetime")
                .HasColumnName("dtValidado");
            entity.Property(e => e.IdRota).HasColumnName("idRota");
            entity.Property(e => e.IdTipoPenalAdicional).HasColumnName("idTipoPenalAdicional");
            entity.Property(e => e.IdTipoValAdicional).HasColumnName("idTipoValAdicional");
            entity.Property(e => e.IdUtil).HasColumnName("idUtil");
            entity.Property(e => e.IdUtilConfirmado).HasColumnName("idUtilConfirmado");
            entity.Property(e => e.IdUtilIntrod).HasColumnName("idUtilIntrod");
            entity.Property(e => e.IdUtilUltAct).HasColumnName("idUtilUltAct");
            entity.Property(e => e.IdUtilValidado).HasColumnName("idUtilValidado");
            entity.Property(e => e.NumEntrs).HasColumnName("numEntrs");
            entity.Property(e => e.NumEntrsDom).HasColumnName("numEntrsDom");
            entity.Property(e => e.NumEntrsInt).HasColumnName("numEntrsInt");
            entity.Property(e => e.NumPenalEntrs).HasColumnName("numPenalEntrs");
            entity.Property(e => e.NumPenalRecs).HasColumnName("numPenalRecs");
            entity.Property(e => e.NumRecs).HasColumnName("numRecs");
            entity.Property(e => e.NumRecsDom).HasColumnName("numRecsDom");
            entity.Property(e => e.NumRecsInt).HasColumnName("numRecsInt");
            entity.Property(e => e.TotalCusto)
                .HasColumnType("money")
                .HasColumnName("totalCusto");
            entity.Property(e => e.TotalCustoManual)
                .HasColumnType("money")
                .HasColumnName("totalCustoManual");
            entity.Property(e => e.TotalPenal)
                .HasColumnType("money")
                .HasColumnName("totalPenal");
            entity.Property(e => e.TotalPenalManual)
                .HasColumnType("money")
                .HasColumnName("totalPenalManual");
            entity.Property(e => e.ValAdicional)
                .HasColumnType("money")
                .HasColumnName("valAdicional");
            entity.Property(e => e.ValPenalAdicional)
                .HasColumnType("money")
                .HasColumnName("valPenalAdicional");
            entity.Property(e => e.Validado).HasColumnName("validado");
            entity.Property(e => e.ValorEntrs)
                .HasColumnType("money")
                .HasColumnName("valorEntrs");
            entity.Property(e => e.ValorPenalEntrs)
                .HasColumnType("money")
                .HasColumnName("valorPenalEntrs");
            entity.Property(e => e.ValorPenalRecs)
                .HasColumnType("money")
                .HasColumnName("valorPenalRecs");
            entity.Property(e => e.ValorRecs)
                .HasColumnType("money")
                .HasColumnName("valorRecs");
        });

        modelBuilder.Entity<ProducaoPenalizacoesTipoT>(entity =>
        {
            entity.HasKey(e => e.Id).HasName("PK__producao__3213E83F3BA86EC9");

            entity.ToTable("producaoPenalizacoesTipo_T");

            entity.Property(e => e.Id).HasColumnName("id");
            entity.Property(e => e.Activo).HasColumnName("activo");
            entity.Property(e => e.Codigo)
                .HasMaxLength(25)
                .HasColumnName("codigo");
            entity.Property(e => e.Descricao)
                .HasMaxLength(100)
                .IsUnicode(false)
                .HasColumnName("descricao");
            entity.Property(e => e.ValorDefault)
                .HasColumnType("money")
                .HasColumnName("valorDefault");
        });

        modelBuilder.Entity<ProdutoFamiliasT>(entity =>
        {
            entity.ToTable("ProdutoFamilias_T");

            entity.HasIndex(e => e.CodigoVanguarda, "idx_codigoVanguarda").HasFillFactor(80);

            entity.HasIndex(e => new { e.ImpExp, e.IncIva }, "idx_impexp_iva").HasFillFactor(80);

            entity.Property(e => e.Id).HasColumnName("id");
            entity.Property(e => e.Activo)
                .IsRequired()
                .HasDefaultValueSql("((1))")
                .HasColumnName("activo");
            entity.Property(e => e.CgTpProdutoVang).HasColumnName("cg_tpProdutoVang");
            entity.Property(e => e.CodigoVanguarda)
                .HasMaxLength(50)
                .HasColumnName("codigoVanguarda");
            entity.Property(e => e.Descricao)
                .HasMaxLength(50)
                .HasColumnName("descricao");
            entity.Property(e => e.ImpExp).HasMaxLength(3);
            entity.Property(e => e.IncIva)
                .HasDefaultValueSql("((0))")
                .HasColumnName("incIVA");
            entity.Property(e => e.Observacoes)
                .HasMaxLength(150)
                .HasColumnName("observacoes");
        });

        modelBuilder.Entity<ProdutoPesosT>(entity =>
        {
            entity.ToTable("ProdutoPesos_T");

            entity.Property(e => e.Id).HasColumnName("id");
            entity.Property(e => e.Activo)
                .HasDefaultValueSql("(1)")
                .HasColumnName("activo");
            entity.Property(e => e.Codigo)
                .HasMaxLength(10)
                .HasColumnName("codigo");
            entity.Property(e => e.Descricao)
                .HasMaxLength(50)
                .HasColumnName("descricao");
        });

        modelBuilder.Entity<ProdutoServico>(entity =>
        {
            entity.Property(e => e.Id).HasColumnName("id");
            entity.Property(e => e.CodigoGrasp)
                .HasMaxLength(2)
                .HasColumnName("codigoGrasp");
            entity.Property(e => e.CodigoGraspNovo)
                .HasMaxLength(2)
                .HasColumnName("codigoGrasp_novo");
            entity.Property(e => e.IdEntidade).HasColumnName("idEntidade");
            entity.Property(e => e.IdProduto).HasColumnName("idProduto");
            entity.Property(e => e.IdProdutoServico).HasColumnName("idProdutoServico");
            entity.Property(e => e.IdServico).HasColumnName("idServico");
            entity.Property(e => e.SiglaGrasp)
                .HasMaxLength(2)
                .HasColumnName("siglaGrasp");
        });

        modelBuilder.Entity<ProdutoTiposM>(entity =>
        {
            entity
                .HasNoKey()
                .ToTable("ProdutoTipos_M");

            entity.Property(e => e.CodigoCliente)
                .HasMaxLength(20)
                .HasColumnName("codigoCliente");
            entity.Property(e => e.DescricaoCliente)
                .HasMaxLength(100)
                .HasColumnName("descricaoCliente");
            entity.Property(e => e.IdCliente).HasColumnName("idCliente");
            entity.Property(e => e.IdEntidade).HasColumnName("idEntidade");
            entity.Property(e => e.IdRangel).HasColumnName("idRangel");
        });

        modelBuilder.Entity<ProdutoTiposT>(entity =>
        {
            entity.HasKey(e => e.Id).HasName("PK_T_MaterialTipo");

            entity.ToTable("ProdutoTipos_T");

            entity.HasIndex(e => e.IdProdutoFact, "PK_idprodutoFact").HasFillFactor(80);

            entity.HasIndex(e => e.IdFamiliaProduto, "idx_idFamiliaProduto").HasFillFactor(80);

            entity.Property(e => e.Id).HasColumnName("id");
            entity.Property(e => e.Activo)
                .HasDefaultValueSql("((1))")
                .HasColumnName("activo");
            entity.Property(e => e.Adicional)
                .HasDefaultValueSql("((0))")
                .HasColumnName("adicional");
            entity.Property(e => e.Altura)
                .HasColumnType("money")
                .HasColumnName("altura");
            entity.Property(e => e.ArredondamentoPesoFact)
                .HasColumnType("money")
                .HasColumnName("arredondamentoPesoFact");
            entity.Property(e => e.Codigo)
                .HasMaxLength(20)
                .HasColumnName("codigo");
            entity.Property(e => e.CodigoAwb)
                .HasMaxLength(2)
                .HasColumnName("codigoAWB");
            entity.Property(e => e.CodigoCosmosNovo)
                .HasMaxLength(2)
                .HasColumnName("codigoCosmos_novo");
            entity.Property(e => e.CodigoDlink).HasColumnName("codigoDLink");
            entity.Property(e => e.CodigoFedex)
                .HasMaxLength(1)
                .HasColumnName("codigoFedex");
            entity.Property(e => e.CodigoGidwin)
                .HasMaxLength(10)
                .HasColumnName("codigoGidwin");
            entity.Property(e => e.CodigoGrasp)
                .HasMaxLength(1)
                .HasColumnName("codigoGrasp");
            entity.Property(e => e.Comissionavel)
                .IsRequired()
                .HasDefaultValueSql("((1))")
                .HasColumnName("comissionavel");
            entity.Property(e => e.Comprimento)
                .HasColumnType("money")
                .HasColumnName("comprimento");
            entity.Property(e => e.Custo)
                .HasColumnType("money")
                .HasColumnName("custo");
            entity.Property(e => e.Descricao)
                .HasMaxLength(50)
                .HasColumnName("descricao");
            entity.Property(e => e.Entrega)
                .HasDefaultValueSql("((1))")
                .HasColumnName("entrega");
            entity.Property(e => e.EnvInterface).HasColumnName("envInterface");
            entity.Property(e => e.FactZero).HasColumnName("fact_zero");
            entity.Property(e => e.FacturaManual)
                .HasDefaultValueSql("((0))")
                .HasColumnName("facturaManual");
            entity.Property(e => e.IdEntidade)
                .HasDefaultValueSql("((1))")
                .HasColumnName("idEntidade");
            entity.Property(e => e.IdFamiliaProduto).HasColumnName("idFamiliaProduto");
            entity.Property(e => e.IdProdutoFact).HasColumnName("idProdutoFact");
            entity.Property(e => e.IdTipoIvamaterial).HasColumnName("idTipoIVAMaterial");
            entity.Property(e => e.IncrementoPesoMaximoFact)
                .HasColumnType("money")
                .HasColumnName("incrementoPesoMaximoFact");
            entity.Property(e => e.IsentoIva)
                .HasDefaultValueSql("((0))")
                .HasColumnName("isentoIVA");
            entity.Property(e => e.Largura)
                .HasColumnType("money")
                .HasColumnName("largura");
            entity.Property(e => e.Material)
                .HasDefaultValueSql("((0))")
                .HasColumnName("material");
            entity.Property(e => e.PesoMaximo)
                .HasColumnType("money")
                .HasColumnName("pesoMaximo");
            entity.Property(e => e.PesoMinimo)
                .HasColumnType("money")
                .HasColumnName("pesoMinimo");
            entity.Property(e => e.PesoMinimoFact)
                .HasColumnType("money")
                .HasColumnName("pesoMinimoFact");
            entity.Property(e => e.Pickup)
                .HasDefaultValueSql("((1))")
                .HasColumnName("pickup");
            entity.Property(e => e.TaxaSobreValor)
                .HasColumnType("money")
                .HasColumnName("taxaSobreValor");
            entity.Property(e => e.TemVolumetrico).HasColumnName("temVolumetrico");
            entity.Property(e => e.ValorMinimoFact)
                .HasColumnType("money")
                .HasColumnName("valorMinimoFact");
            entity.Property(e => e.VariaPeso).HasColumnName("variaPeso");
        });

        modelBuilder.Entity<ProdutosProvedoresT>(entity =>
        {
            entity.ToTable("ProdutosProvedores_T");

            entity.Property(e => e.Id).HasColumnName("id");
            entity.Property(e => e.CodigoProdutoProvedor)
                .HasMaxLength(100)
                .HasColumnName("codigoProdutoProvedor");
            entity.Property(e => e.IdProduto).HasColumnName("idProduto");
            entity.Property(e => e.IdProvedor).HasColumnName("idProvedor");
        });

        modelBuilder.Entity<ProformaLin>(entity =>
        {
            entity.HasKey(e => e.Id).HasName("PK__Proforma__3213E83F56B31585");

            entity.ToTable("ProformaLin");

            entity.Property(e => e.Id).HasColumnName("id");
            entity.Property(e => e.Awbnumber)
                .HasMaxLength(50)
                .HasColumnName("awbnumber");
            entity.Property(e => e.Cambio)
                .HasColumnType("money")
                .HasColumnName("cambio");
            entity.Property(e => e.CodIva)
                .HasMaxLength(10)
                .HasColumnName("codIva");
            entity.Property(e => e.DestCpostal)
                .HasMaxLength(15)
                .HasColumnName("DestCPostal");
            entity.Property(e => e.DestPais).HasMaxLength(50);
            entity.Property(e => e.Dimensoes)
                .HasMaxLength(50)
                .HasColumnName("dimensoes");
            entity.Property(e => e.DtAnulacao)
                .HasColumnType("datetime")
                .HasColumnName("dtAnulacao");
            entity.Property(e => e.DtAssociacaoManif)
                .HasColumnType("datetime")
                .HasColumnName("dtAssociacaoManif");
            entity.Property(e => e.DtIntrod)
                .HasColumnType("datetime")
                .HasColumnName("dtIntrod");
            entity.Property(e => e.IdCabFactura).HasColumnName("idCabFactura");
            entity.Property(e => e.IdManifesto).HasColumnName("idManifesto");
            entity.Property(e => e.IdMoeda).HasColumnName("idMoeda");
            entity.Property(e => e.IdProformaCab).HasColumnName("idProformaCab");
            entity.Property(e => e.IdRegime).HasColumnName("idRegime");
            entity.Property(e => e.IdServico).HasColumnName("idServico");
            entity.Property(e => e.IdServicoDet).HasColumnName("idServicoDet");
            entity.Property(e => e.IdTarifa).HasColumnName("idTarifa");
            entity.Property(e => e.IdTipoIva).HasColumnName("idTipoIVA");
            entity.Property(e => e.IdTipoProduto).HasColumnName("idTipoProduto");
            entity.Property(e => e.IdUtilAnulacao).HasColumnName("idUtilAnulacao");
            entity.Property(e => e.IdUtilAssociacaoManif).HasColumnName("idUtilAssociacaoManif");
            entity.Property(e => e.IdUtilIntrod).HasColumnName("idUtilIntrod");
            entity.Property(e => e.Lin).HasColumnName("lin");
            entity.Property(e => e.M3)
                .HasColumnType("money")
                .HasColumnName("m3");
            entity.Property(e => e.NumVolumes).HasColumnName("numVolumes");
            entity.Property(e => e.Observacoes)
                .HasMaxLength(1000)
                .HasColumnName("observacoes");
            entity.Property(e => e.OrigCpostal).HasMaxLength(15);
            entity.Property(e => e.Peso)
                .HasColumnType("money")
                .HasColumnName("peso");
            entity.Property(e => e.PesoVol)
                .HasColumnType("money")
                .HasColumnName("pesoVol");
            entity.Property(e => e.Quantidade)
                .HasColumnType("money")
                .HasColumnName("quantidade");
            entity.Property(e => e.TaxaIva)
                .HasColumnType("money")
                .HasColumnName("taxaIVA");
            entity.Property(e => e.ValorCiva)
                .HasColumnType("money")
                .HasColumnName("valorCIVA");
            entity.Property(e => e.ValorIva)
                .HasColumnType("money")
                .HasColumnName("valorIVA");
            entity.Property(e => e.ValorSiva)
                .HasColumnType("money")
                .HasColumnName("valorSIVA");
            entity.Property(e => e.ValorUnitario)
                .HasColumnType("money")
                .HasColumnName("valorUnitario");
        });

        modelBuilder.Entity<Provedore>(entity =>
        {
            entity.HasKey(e => e.Id).HasName("PK__Provedor__3213E83F71DF089F");

            entity.Property(e => e.Id).HasColumnName("id");
            entity.Property(e => e.Activo).HasColumnName("activo");
            entity.Property(e => e.Codigo)
                .HasMaxLength(50)
                .HasColumnName("codigo");
            entity.Property(e => e.IdCliMorada).HasColumnName("idCliMorada");
            entity.Property(e => e.IdCliente).HasColumnName("idCliente");
            entity.Property(e => e.Nome).HasMaxLength(100);
        });

        modelBuilder.Entity<Ptinfo>(entity =>
        {
            entity
                .HasNoKey()
                .ToTable("PTInfo");

            entity.Property(e => e.Awb)
                .HasMaxLength(20)
                .HasColumnName("awb");
            entity.Property(e => e.Comment).HasMaxLength(500);
        });

        modelBuilder.Entity<Ptpendente>(entity =>
        {
            entity
                .HasNoKey()
                .ToTable("PTPendentes");

            entity.Property(e => e.Id).HasColumnName("id");
        });

        modelBuilder.Entity<Ptsaraiva>(entity =>
        {
            entity
                .HasNoKey()
                .ToTable("ptsaraiva");

            entity.Property(e => e.AwbNumber)
                .HasMaxLength(50)
                .HasColumnName("awb_number");
            entity.Property(e => e.DtEnvio)
                .HasColumnType("date")
                .HasColumnName("dtEnvio");
            entity.Property(e => e.IdCliente).HasColumnName("idCliente");
            entity.Property(e => e.NumPacotes).HasColumnName("numPacotes");
            entity.Property(e => e.Objecto).HasMaxLength(50);
            entity.Property(e => e.Peso)
                .HasColumnType("money")
                .HasColumnName("peso");
            entity.Property(e => e.RefExp).HasMaxLength(40);
        });

        modelBuilder.Entity<Pudo>(entity =>
        {
            entity.HasKey(e => e.Id).HasName("PK__Pudo__3213E83F4181961E");

            entity.ToTable("Pudo");

            entity.HasIndex(e => new { e.Codigo, e.Activo }, "idx_codigo");

            entity.Property(e => e.Id).HasColumnName("id");
            entity.Property(e => e.Codigo)
                .HasMaxLength(50)
                .HasColumnName("codigo");
            entity.Property(e => e.Coordenadas)
                .HasMaxLength(50)
                .HasColumnName("coordenadas");
            entity.Property(e => e.Cpostal)
                .HasMaxLength(10)
                .HasColumnName("cpostal");
            entity.Property(e => e.DtIntrod)
                .HasDefaultValueSql("(getdate())")
                .HasColumnType("datetime")
                .HasColumnName("dtIntrod");
            entity.Property(e => e.DtUltAct)
                .HasColumnType("datetime")
                .HasColumnName("dtUltAct");
            entity.Property(e => e.HoraAbertura1).HasColumnType("datetime");
            entity.Property(e => e.HoraAbertura2).HasColumnType("datetime");
            entity.Property(e => e.HoraFecho1).HasColumnType("datetime");
            entity.Property(e => e.HoraFecho2).HasColumnType("datetime");
            entity.Property(e => e.IdCliente).HasColumnName("idCliente");
            entity.Property(e => e.IdCpostal).HasColumnName("idCpostal");
            entity.Property(e => e.IdPais).HasColumnName("idPais");
            entity.Property(e => e.IdPlataforma).HasColumnName("idPlataforma");
            entity.Property(e => e.IdUtilIntrod).HasColumnName("idUtilIntrod");
            entity.Property(e => e.IdUtilUltAct).HasColumnName("idUtilUltAct");
            entity.Property(e => e.Localidade)
                .HasMaxLength(100)
                .HasColumnName("localidade");
            entity.Property(e => e.Morada)
                .HasMaxLength(200)
                .HasColumnName("morada");
            entity.Property(e => e.Nome)
                .HasMaxLength(100)
                .HasColumnName("nome");
        });

        modelBuilder.Entity<PudoClienteConfig>(entity =>
        {
            entity.HasKey(e => e.Id).HasName("PK__PudoClie__3213E83F28F70E61");

            entity.ToTable("PudoClienteConfig");

            entity.Property(e => e.Id).HasColumnName("id");
            entity.Property(e => e.Activo).HasColumnName("activo");
            entity.Property(e => e.DtUltAct)
                .HasColumnType("datetime")
                .HasColumnName("dtUltAct");
            entity.Property(e => e.Dtintrod)
                .HasDefaultValueSql("(getdate())")
                .HasColumnType("datetime")
                .HasColumnName("dtintrod");
            entity.Property(e => e.IdCliMorada).HasColumnName("idCliMorada");
            entity.Property(e => e.IdCliente).HasColumnName("idCliente");
            entity.Property(e => e.IdPudo).HasColumnName("idPudo");
            entity.Property(e => e.IdTipoConfig).HasColumnName("idTipoConfig");
            entity.Property(e => e.IdUtilIntrod).HasColumnName("idUtilIntrod");
            entity.Property(e => e.IdUtilUltAct).HasColumnName("idUtilUltAct");
            entity.Property(e => e.MetodoNotificacao).HasMaxLength(20);
            entity.Property(e => e.TempoRetencao).HasColumnName("tempoRetencao");
        });

        modelBuilder.Entity<PudoClienteConfigOpco>(entity =>
        {
            entity.HasKey(e => e.Id).HasName("PK__PudoClie__3213E83F79CC9CD1");

            entity.Property(e => e.Id).HasColumnName("id");
            entity.Property(e => e.Activo).HasColumnName("activo");
            entity.Property(e => e.CodigoGeral)
                .HasMaxLength(200)
                .HasColumnName("codigoGeral");
            entity.Property(e => e.DtIntrod)
                .HasColumnType("datetime")
                .HasColumnName("dtIntrod");
            entity.Property(e => e.DtUltAct)
                .HasColumnType("datetime")
                .HasColumnName("dtUltAct");
            entity.Property(e => e.IdOpcao).HasColumnName("idOpcao");
            entity.Property(e => e.IdPudoCliente).HasColumnName("idPudoCliente");
            entity.Property(e => e.IdUtilIntrod).HasColumnName("idUtilIntrod");
            entity.Property(e => e.IdUtilUltAct).HasColumnName("idUtilUltAct");
        });

        modelBuilder.Entity<PudoCpostal>(entity =>
        {
            entity.HasKey(e => e.Id).HasName("PK__PudoCpos__3213E83F481A506B");

            entity.ToTable("PudoCpostal");

            entity.HasIndex(e => e.IdPudo, "idx_idPudo");

            entity.Property(e => e.Id).HasColumnName("id");
            entity.Property(e => e.DtIntrod)
                .HasDefaultValueSql("(getdate())")
                .HasColumnType("datetime")
                .HasColumnName("dtIntrod");
            entity.Property(e => e.IdCpostal).HasColumnName("idCpostal");
            entity.Property(e => e.IdPudo).HasColumnName("idPudo");
            entity.Property(e => e.IdUtilIntrod).HasColumnName("idUtilIntrod");
        });

        modelBuilder.Entity<PudoManifesto>(entity =>
        {
            entity.HasKey(e => e.Id).HasName("PK__PudoMani__3213E83F46464B3B");

            entity.ToTable("PudoManifesto");

            entity.HasIndex(e => new { e.IdMaster, e.IdPudoDestino }, "idx_idManifesto_idPudoDestino");

            entity.HasIndex(e => new { e.IdMaster, e.IdPudoOrigem }, "idx_idManifesto_idPudoOrigem");

            entity.Property(e => e.Id).HasColumnName("id");
            entity.Property(e => e.Concluido).HasColumnName("concluido");
            entity.Property(e => e.Devolvido).HasColumnName("devolvido");
            entity.Property(e => e.DtConcluido)
                .HasColumnType("datetime")
                .HasColumnName("dtConcluido");
            entity.Property(e => e.DtEntregue)
                .HasColumnType("datetime")
                .HasColumnName("dtEntregue");
            entity.Property(e => e.DtIntrod)
                .HasDefaultValueSql("(getdate())")
                .HasColumnType("datetime")
                .HasColumnName("dtIntrod");
            entity.Property(e => e.DtParaDevolver)
                .HasColumnType("datetime")
                .HasColumnName("dtParaDevolver");
            entity.Property(e => e.DtUltAct)
                .HasColumnType("datetime")
                .HasColumnName("dtUltAct");
            entity.Property(e => e.IdMaster).HasColumnName("idMaster");
            entity.Property(e => e.IdPudoDestino).HasColumnName("idPudoDestino");
            entity.Property(e => e.IdPudoOrigem).HasColumnName("idPudoOrigem");
            entity.Property(e => e.IdUtilUltAct).HasColumnName("idUtilUltAct");
            entity.Property(e => e.IdUtilintrod).HasColumnName("idUtilintrod");
            entity.Property(e => e.ParaDevolver).HasColumnName("paraDevolver");
        });

        modelBuilder.Entity<PudoManifestoLog>(entity =>
        {
            entity.HasKey(e => e.Id).HasName("PK__PudoMani__3213E83F7D9D2DB5");

            entity.ToTable("PudoManifesto_LOG");

            entity.Property(e => e.Id).HasColumnName("id");
            entity.Property(e => e.Concluido).HasColumnName("concluido");
            entity.Property(e => e.Devolvido).HasColumnName("devolvido");
            entity.Property(e => e.DtConcluido)
                .HasColumnType("datetime")
                .HasColumnName("dtConcluido");
            entity.Property(e => e.DtEntregue)
                .HasColumnType("datetime")
                .HasColumnName("dtEntregue");
            entity.Property(e => e.DtIntrod)
                .HasColumnType("datetime")
                .HasColumnName("dtIntrod");
            entity.Property(e => e.DtParaDevolver)
                .HasColumnType("datetime")
                .HasColumnName("dtParaDevolver");
            entity.Property(e => e.DtTrigger)
                .HasDefaultValueSql("(getdate())")
                .HasColumnType("datetime")
                .HasColumnName("dtTrigger");
            entity.Property(e => e.DtUltAct)
                .HasColumnType("datetime")
                .HasColumnName("dtUltAct");
            entity.Property(e => e.IdMaster).HasColumnName("idMaster");
            entity.Property(e => e.IdPudoDestino).HasColumnName("idPudoDestino");
            entity.Property(e => e.IdPudoManifesto).HasColumnName("idPudoManifesto");
            entity.Property(e => e.IdPudoOrigem).HasColumnName("idPudoOrigem");
            entity.Property(e => e.IdUtilUltAct).HasColumnName("idUtilUltAct");
            entity.Property(e => e.IdUtilintrod).HasColumnName("idUtilintrod");
            entity.Property(e => e.ParaDevolver).HasColumnName("paraDevolver");
        });

        modelBuilder.Entity<PudoManifestoRecolha>(entity =>
        {
            entity.HasKey(e => e.Id).HasName("PK__PudoMani__3213E83F1D9968FE");

            entity.ToTable("PudoManifestoRecolha");

            entity.Property(e => e.Id).HasColumnName("id");
            entity.Property(e => e.Awb)
                .HasMaxLength(50)
                .HasColumnName("awb");
            entity.Property(e => e.Dtintrod)
                .HasDefaultValueSql("(getdate())")
                .HasColumnType("datetime")
                .HasColumnName("dtintrod");
            entity.Property(e => e.IdCobranca).HasColumnName("idCobranca");
            entity.Property(e => e.IdManifesto).HasColumnName("idManifesto");
            entity.Property(e => e.IdMaster).HasColumnName("idMaster");
            entity.Property(e => e.IdPudo).HasColumnName("idPudo");
            entity.Property(e => e.Master).HasMaxLength(50);
            entity.Property(e => e.Obs).HasMaxLength(500);
            entity.Property(e => e.TipoDetelhe).HasMaxLength(50);
        });

        modelBuilder.Entity<Pupfixo>(entity =>
        {
            entity.HasKey(e => e.Id).HasName("PK_T_PUPFixo");

            entity.ToTable("PUPFixo");

            entity.HasIndex(e => e.IdCliente, "idx_idcliente").HasFillFactor(80);

            entity.Property(e => e.Id).HasColumnName("id");
            entity.Property(e => e.Activo)
                .HasDefaultValueSql("(1)")
                .HasColumnName("activo");
            entity.Property(e => e.Altura)
                .HasColumnType("money")
                .HasColumnName("altura");
            entity.Property(e => e.Comprimento)
                .HasColumnType("money")
                .HasColumnName("comprimento");
            entity.Property(e => e.DtFim)
                .HasColumnType("datetime")
                .HasColumnName("dtFim");
            entity.Property(e => e.DtFimFecho)
                .HasColumnType("datetime")
                .HasColumnName("dtFimFecho");
            entity.Property(e => e.DtInicio)
                .HasColumnType("datetime")
                .HasColumnName("dtInicio");
            entity.Property(e => e.DtInicioFecho)
                .HasColumnType("datetime")
                .HasColumnName("dtInicioFecho");
            entity.Property(e => e.DtIntrod)
                .HasColumnType("datetime")
                .HasColumnName("dtIntrod");
            entity.Property(e => e.DtUltActualizacao)
                .HasDefaultValueSql("(getdate())")
                .HasColumnType("datetime")
                .HasColumnName("dtUltActualizacao");
            entity.Property(e => e.Experiencia).HasColumnName("experiencia");
            entity.Property(e => e.Horadisponivel)
                .HasColumnType("datetime")
                .HasColumnName("horadisponivel");
            entity.Property(e => e.Horafecho)
                .HasColumnType("datetime")
                .HasColumnName("horafecho");
            entity.Property(e => e.IdCliMorada).HasColumnName("idCliMorada");
            entity.Property(e => e.IdCliente).HasColumnName("idCliente");
            entity.Property(e => e.IdDistribuidor)
                .HasDefaultValueSql("(1)")
                .HasColumnName("idDistribuidor");
            entity.Property(e => e.IdEntidade).HasDefaultValueSql("(1)");
            entity.Property(e => e.IdPlataforma).HasColumnName("idPlataforma");
            entity.Property(e => e.IdRotaDefault).HasColumnName("idRotaDefault");
            entity.Property(e => e.IdSegmento).HasColumnName("idSegmento");
            entity.Property(e => e.IdTipoProduto).HasColumnName("idTipoProduto");
            entity.Property(e => e.IdUtilIntrod).HasColumnName("idUtilIntrod");
            entity.Property(e => e.IdUtilUltActualizacao).HasColumnName("idUtilUltActualizacao");
            entity.Property(e => e.IdZonaPaisDestino).HasColumnName("idZonaPaisDestino");
            entity.Property(e => e.Largura)
                .HasColumnType("money")
                .HasColumnName("largura");
            entity.Property(e => e.NumeroEnvios).HasColumnName("numeroEnvios");
            entity.Property(e => e.NumeroVolumes).HasColumnName("numeroVolumes");
            entity.Property(e => e.Observacoes)
                .HasMaxLength(150)
                .HasColumnName("observacoes");
            entity.Property(e => e.Peso)
                .HasColumnType("money")
                .HasColumnName("peso");
            entity.Property(e => e.Quarta).HasColumnName("quarta");
            entity.Property(e => e.Quinta).HasColumnName("quinta");
            entity.Property(e => e.Segunda).HasColumnName("segunda");
            entity.Property(e => e.Sexta).HasColumnName("sexta");
            entity.Property(e => e.StCredito).HasColumnName("stCredito");
            entity.Property(e => e.Terca).HasColumnName("terca");
        });

        modelBuilder.Entity<PupfixoLog>(entity =>
        {
            entity.ToTable("PUPFixoLog");

            entity.Property(e => e.Id).HasColumnName("id");
            entity.Property(e => e.Data)
                .HasDefaultValueSql("(getdate())")
                .HasColumnType("datetime")
                .HasColumnName("data");
            entity.Property(e => e.IdPupFixo).HasColumnName("idPupFixo");
            entity.Property(e => e.IdUtil).HasColumnName("idUtil");
            entity.Property(e => e.Observacoes)
                .HasMaxLength(50)
                .HasColumnName("observacoes");
        });

        modelBuilder.Entity<RealocarRecolhasRota>(entity =>
        {
            entity.HasKey(e => e.Id).HasName("PK__Realocar__3213E83F2CFF0FA3");

            entity.HasIndex(e => new { e.DtInicio, e.DtFim, e.IdRota1, e.Activo }, "idx_dtIncio_dtfim_idRota1_activo");

            entity.HasIndex(e => new { e.DtInicio, e.DtFim, e.Activo }, "idx_dtincio_dtfim_activo");

            entity.Property(e => e.Id).HasColumnName("id");
            entity.Property(e => e.Activo).HasColumnName("activo");
            entity.Property(e => e.DtFim)
                .HasColumnType("datetime")
                .HasColumnName("dtFim");
            entity.Property(e => e.DtInicio)
                .HasColumnType("datetime")
                .HasColumnName("dtInicio");
            entity.Property(e => e.DtIntrod)
                .HasColumnType("datetime")
                .HasColumnName("dtIntrod");
            entity.Property(e => e.DtUltAct)
                .HasColumnType("datetime")
                .HasColumnName("dtUltAct");
            entity.Property(e => e.IdRota1).HasColumnName("idRota1");
            entity.Property(e => e.IdRota2).HasColumnName("idRota2");
            entity.Property(e => e.IdUtilIntrod).HasColumnName("idUtilIntrod");
            entity.Property(e => e.IdUtilUltAct).HasColumnName("idUtilUltAct");
            entity.Property(e => e.Rota1).HasMaxLength(50);
            entity.Property(e => e.Rota2).HasMaxLength(50);
        });

        modelBuilder.Entity<Reclamacao>(entity =>
        {
            entity.HasKey(e => e.Id).HasName("PK_T_Reclamacao");

            entity.ToTable("Reclamacao");

            entity.HasIndex(e => new { e.IdCliente, e.IdEntidade }, "idx_IdCliente").HasFillFactor(80);

            entity.HasIndex(e => new { e.Anulada, e.IdEntidade, e.IdRegime }, "idx_anulada_identidade_idRegime").HasFillFactor(80);

            entity.HasIndex(e => new { e.DtIntrod, e.IdUtilIntrod, e.IdCliente, e.Awb, e.Concluida, e.Encerrada, e.Anulada }, "idx_dtIntrod_idutilintrod_idcliente_awb_concluida_encerrada_anulada").HasFillFactor(80);

            entity.Property(e => e.Id).HasColumnName("id");
            entity.Property(e => e.Anulada).HasColumnName("anulada");
            entity.Property(e => e.Awb).HasColumnName("awb");
            entity.Property(e => e.Codigo)
                .HasMaxLength(10)
                .HasColumnName("codigo");
            entity.Property(e => e.Concluida).HasColumnName("concluida");
            entity.Property(e => e.Contacto)
                .HasMaxLength(50)
                .HasColumnName("contacto");
            entity.Property(e => e.CreditoDanos)
                .HasColumnType("money")
                .HasColumnName("creditoDanos");
            entity.Property(e => e.CreditoMbg)
                .HasColumnType("money")
                .HasColumnName("creditoMBG");
            entity.Property(e => e.CreditoSeguro)
                .HasColumnType("money")
                .HasColumnName("creditoSeguro");
            entity.Property(e => e.CreditoTransporte)
                .HasColumnType("money")
                .HasColumnName("creditoTransporte");
            entity.Property(e => e.DtAbertura)
                .HasDefaultValueSql("(getdate())")
                .HasColumnType("datetime")
                .HasColumnName("dtAbertura");
            entity.Property(e => e.DtAnulada)
                .HasColumnType("datetime")
                .HasColumnName("dtAnulada");
            entity.Property(e => e.DtConclusao)
                .HasColumnType("datetime")
                .HasColumnName("dtConclusao");
            entity.Property(e => e.DtCreditoTransporte)
                .HasColumnType("datetime")
                .HasColumnName("dtCreditoTransporte");
            entity.Property(e => e.DtDanos)
                .HasColumnType("datetime")
                .HasColumnName("dtDanos");
            entity.Property(e => e.DtEncerramento)
                .HasColumnType("datetime")
                .HasColumnName("dtEncerramento");
            entity.Property(e => e.DtIntrod)
                .HasDefaultValueSql("(getdate())")
                .HasColumnType("datetime")
                .HasColumnName("dtIntrod");
            entity.Property(e => e.DtMbg)
                .HasColumnType("datetime")
                .HasColumnName("dtMBG");
            entity.Property(e => e.DtMbgpedido)
                .HasColumnType("datetime")
                .HasColumnName("dtMBGPedido");
            entity.Property(e => e.DtPedidoCreditoTransporte)
                .HasColumnType("datetime")
                .HasColumnName("dtPedidoCreditoTransporte");
            entity.Property(e => e.DtPedidoDanos)
                .HasColumnType("datetime")
                .HasColumnName("dtPedidoDanos");
            entity.Property(e => e.DtPedidoseguro)
                .HasColumnType("datetime")
                .HasColumnName("dtPedidoseguro");
            entity.Property(e => e.DtSeguro)
                .HasColumnType("datetime")
                .HasColumnName("dtSeguro");
            entity.Property(e => e.Encerrada).HasColumnName("encerrada");
            entity.Property(e => e.Factura)
                .HasMaxLength(15)
                .HasColumnName("factura");
            entity.Property(e => e.FaxParticular)
                .HasMaxLength(50)
                .HasColumnName("fax_particular");
            entity.Property(e => e.IdCategoria).HasColumnName("idCategoria");
            entity.Property(e => e.IdCausa).HasColumnName("idCausa");
            entity.Property(e => e.IdCausaDetalhe).HasColumnName("idCausaDetalhe");
            entity.Property(e => e.IdCliMorada).HasColumnName("idCliMorada");
            entity.Property(e => e.IdCliente).HasColumnName("idCliente");
            entity.Property(e => e.IdEntidade)
                .HasDefaultValueSql("((1))")
                .HasColumnName("idEntidade");
            entity.Property(e => e.IdLocalOcorrencia).HasColumnName("idLocalOcorrencia");
            entity.Property(e => e.IdMeioEntrada).HasColumnName("idMeioEntrada");
            entity.Property(e => e.IdReclamacaoPai).HasColumnName("idReclamacaoPai");
            entity.Property(e => e.IdRegime).HasColumnName("idRegime");
            entity.Property(e => e.IdResolucao).HasColumnName("idResolucao");
            entity.Property(e => e.IdTipo).HasColumnName("idTipo");
            entity.Property(e => e.IdUtilAnulada).HasColumnName("idUtilAnulada");
            entity.Property(e => e.IdUtilConclusao).HasColumnName("idUtilConclusao");
            entity.Property(e => e.IdUtilEncerramento).HasColumnName("idUtilEncerramento");
            entity.Property(e => e.IdUtilIntrod).HasColumnName("idUtilIntrod");
            entity.Property(e => e.LocalDeteccao)
                .HasMaxLength(50)
                .HasColumnName("localDeteccao");
            entity.Property(e => e.MoradaParticular)
                .HasMaxLength(50)
                .HasColumnName("morada_particular");
            entity.Property(e => e.NrContaFedex)
                .HasMaxLength(9)
                .HasColumnName("nr_conta_fedex");
            entity.Property(e => e.Pac).HasColumnName("PAC");
            entity.Property(e => e.Pertinente).HasColumnName("pertinente");
            entity.Property(e => e.Peso)
                .HasColumnType("money")
                .HasColumnName("peso");
            entity.Property(e => e.TelfParticular)
                .HasMaxLength(50)
                .HasColumnName("telf_particular");
        });

        modelBuilder.Entity<ReclamacaoAwb>(entity =>
        {
            entity.HasKey(e => e.Id).HasName("PK_ReclamacaoAwbs_1");

            entity.HasIndex(e => new { e.IdReclamacao, e.Awbnumber }, "idRecAwb")
                .IsDescending(true, false)
                .HasFillFactor(80);

            entity.HasIndex(e => new { e.Anulada, e.IdManifesto, e.IdReclamacao }, "idx_anulada_idManifesto_idReclamacao").HasFillFactor(80);

            entity.HasIndex(e => e.AwbRpi, "idx_awbRPI").HasFillFactor(80);

            entity.HasIndex(e => e.Awbnumber, "idx_awbnumber").HasFillFactor(80);

            entity.HasIndex(e => new { e.IdReclamacao, e.Anulada, e.IdManifesto }, "idx_idReclamacao_anulada_idManifesto");

            entity.Property(e => e.Id).HasColumnName("id");
            entity.Property(e => e.Anulada)
                .HasDefaultValueSql("((0))")
                .HasColumnName("anulada");
            entity.Property(e => e.AwbRpi)
                .HasMaxLength(20)
                .HasColumnName("awbRPI");
            entity.Property(e => e.Awbnumber)
                .HasMaxLength(50)
                .HasColumnName("awbnumber");
            entity.Property(e => e.CreditoDanos)
                .HasColumnType("money")
                .HasColumnName("creditoDanos");
            entity.Property(e => e.CreditoMbg)
                .HasColumnType("money")
                .HasColumnName("creditoMBG");
            entity.Property(e => e.CreditoSeguro)
                .HasColumnType("money")
                .HasColumnName("creditoSeguro");
            entity.Property(e => e.CreditoTransporte)
                .HasColumnType("money")
                .HasColumnName("creditoTransporte");
            entity.Property(e => e.DtCreditoTransporte)
                .HasColumnType("datetime")
                .HasColumnName("dtCreditoTransporte");
            entity.Property(e => e.DtDanos)
                .HasColumnType("datetime")
                .HasColumnName("dtDanos");
            entity.Property(e => e.DtIntrod)
                .HasDefaultValueSql("(getdate())")
                .HasColumnType("datetime")
                .HasColumnName("dtIntrod");
            entity.Property(e => e.DtMbg)
                .HasColumnType("datetime")
                .HasColumnName("dtMBG");
            entity.Property(e => e.DtMbgpedido)
                .HasColumnType("datetime")
                .HasColumnName("dtMBGPedido");
            entity.Property(e => e.DtPedidoCreditoTransporte)
                .HasColumnType("datetime")
                .HasColumnName("dtPedidoCreditoTransporte");
            entity.Property(e => e.DtPedidoDanos)
                .HasColumnType("datetime")
                .HasColumnName("dtPedidoDanos");
            entity.Property(e => e.DtPedidoseguro)
                .HasColumnType("datetime")
                .HasColumnName("dtPedidoseguro");
            entity.Property(e => e.DtSeguro)
                .HasColumnType("datetime")
                .HasColumnName("dtSeguro");
            entity.Property(e => e.DtUltAct)
                .HasColumnType("datetime")
                .HasColumnName("dtUltAct");
            entity.Property(e => e.IdManifesto).HasColumnName("idManifesto");
            entity.Property(e => e.IdReclamacao).HasColumnName("idReclamacao");
            entity.Property(e => e.IdUtilIntrod).HasColumnName("idUtilIntrod");
            entity.Property(e => e.IdUtilUltAct).HasColumnName("idUtilUltAct");
        });

        modelBuilder.Entity<ReclamacaoCategoriaT>(entity =>
        {
            entity.ToTable("ReclamacaoCategoria_T");

            entity.HasIndex(e => new { e.IdEntidade, e.Activo, e.Codigo }, "idx_idEntidade_activo_codigo").HasFillFactor(80);

            entity.Property(e => e.Id).HasColumnName("id");
            entity.Property(e => e.Activo)
                .IsRequired()
                .HasDefaultValueSql("((1))")
                .HasColumnName("activo");
            entity.Property(e => e.Codigo)
                .HasMaxLength(10)
                .HasColumnName("codigo");
            entity.Property(e => e.Descricao)
                .HasMaxLength(50)
                .HasColumnName("descricao");
            entity.Property(e => e.IdEntidade)
                .HasDefaultValueSql("((1))")
                .HasColumnName("idEntidade");
        });

        modelBuilder.Entity<ReclamacaoCausaDetalhe>(entity =>
        {
            entity.HasKey(e => e.Id).HasName("PK__ReclamacaoCausaD__1E2636F2");

            entity.HasIndex(e => new { e.IdReclamacaoCausa, e.Activo }, "IDX_idReclamacaoCausa").HasFillFactor(80);

            entity.Property(e => e.Id).HasColumnName("id");
            entity.Property(e => e.Activo)
                .IsRequired()
                .HasDefaultValueSql("((1))")
                .HasColumnName("activo");
            entity.Property(e => e.Descricao)
                .HasMaxLength(50)
                .HasColumnName("descricao");
            entity.Property(e => e.IdEntidade)
                .HasDefaultValueSql("((1))")
                .HasColumnName("idEntidade");
            entity.Property(e => e.IdReclamacaoCausa).HasColumnName("idReclamacaoCausa");
        });

        modelBuilder.Entity<ReclamacaoCausaT>(entity =>
        {
            entity.ToTable("ReclamacaoCausa_T");

            entity.Property(e => e.Id).HasColumnName("id");
            entity.Property(e => e.Activo)
                .IsRequired()
                .HasDefaultValueSql("(1)")
                .HasColumnName("activo");
            entity.Property(e => e.Descricao)
                .HasMaxLength(50)
                .HasColumnName("descricao");
            entity.Property(e => e.IdEntidade)
                .HasDefaultValueSql("(1)")
                .HasColumnName("idEntidade");
        });

        modelBuilder.Entity<ReclamacaoDetalhe>(entity =>
        {
            entity.HasIndex(e => e.IdUtilDestino, "idx_IdUtilDestino").HasFillFactor(80);

            entity.HasIndex(e => e.IdUtilIntrod, "idx_IdUtilIntrod").HasFillFactor(80);

            entity.HasIndex(e => new { e.IGCOM2Userserta, e.IdReclamacao }, "idx_iGCOM2Userserta_idReclamacao").HasFillFactor(80);

            entity.HasIndex(e => e.IdEstado, "idx_idEstado").HasFillFactor(80);

            entity.HasIndex(e => e.IdReclamacao, "idx_idReclamacao").HasFillFactor(80);

            entity.Property(e => e.Id).HasColumnName("id");
            entity.Property(e => e.DtIntrod)
                .HasDefaultValueSql("(getdate())")
                .HasColumnType("datetime")
                .HasColumnName("dtIntrod");
            entity.Property(e => e.IGCOM2Userserta).HasColumnName("iGCOM2Userserta");
            entity.Property(e => e.IdEstado).HasColumnName("idEstado");
            entity.Property(e => e.IdReclamacao).HasColumnName("idReclamacao");
            entity.Property(e => e.IdUtilDestino).HasColumnName("idUtilDestino");
            entity.Property(e => e.IdUtilIntrod).HasColumnName("idUtilIntrod");
            entity.Property(e => e.Observacoes)
                .HasMaxLength(500)
                .HasColumnName("observacoes");
        });

        modelBuilder.Entity<ReclamacaoDocumento>(entity =>
        {
            entity.Property(e => e.Id).HasColumnName("id");
            entity.Property(e => e.Descricao)
                .HasMaxLength(50)
                .IsUnicode(false)
                .HasColumnName("descricao");
            entity.Property(e => e.DtIntrod)
                .HasColumnType("datetime")
                .HasColumnName("dtIntrod");
            entity.Property(e => e.Guid)
                .HasMaxLength(50)
                .IsUnicode(false)
                .HasColumnName("GUID");
            entity.Property(e => e.IdReclamacao).HasColumnName("idReclamacao");
            entity.Property(e => e.IdUtilIntrod).HasColumnName("idUtilIntrod");
            entity.Property(e => e.MimeType)
                .HasMaxLength(50)
                .IsUnicode(false)
                .HasColumnName("mimeType");
            entity.Property(e => e.Nome)
                .HasMaxLength(500)
                .IsUnicode(false)
                .HasColumnName("nome");
            entity.Property(e => e.ServerLocation)
                .HasMaxLength(250)
                .IsUnicode(false)
                .HasColumnName("serverLocation");
            entity.Property(e => e.Tamanho).HasColumnName("tamanho");
        });

        modelBuilder.Entity<ReclamacaoEstadoGeralT>(entity =>
        {
            entity.ToTable("ReclamacaoEstadoGeral_T");

            entity.Property(e => e.Id).HasColumnName("id");
            entity.Property(e => e.Activo).HasColumnName("activo");
            entity.Property(e => e.Descricao)
                .HasMaxLength(50)
                .HasColumnName("descricao");
        });

        modelBuilder.Entity<ReclamacaoEstadoT>(entity =>
        {
            entity.HasKey(e => e.Id).HasName("PK_T_ReclamacaoEstado");

            entity.ToTable("ReclamacaoEstado_T");

            entity.HasIndex(e => e.Concluido, "idx_concluido").HasFillFactor(80);

            entity.Property(e => e.Id).HasColumnName("id");
            entity.Property(e => e.Activo)
                .IsRequired()
                .HasDefaultValueSql("((1))")
                .HasColumnName("activo");
            entity.Property(e => e.Concluido).HasColumnName("concluido");
            entity.Property(e => e.Descricao)
                .HasMaxLength(50)
                .HasColumnName("descricao");
            entity.Property(e => e.Externo).HasColumnName("externo");
            entity.Property(e => e.IdEntidade)
                .HasDefaultValueSql("((1))")
                .HasColumnName("idEntidade");
            entity.Property(e => e.MaxMinutosResposta).HasColumnName("maxMinutosResposta");
            entity.Property(e => e.MaxMinutosRespostaSup).HasColumnName("maxMinutosRespostaSup");
        });

        modelBuilder.Entity<ReclamacaoLocalCausaT>(entity =>
        {
            entity.HasKey(e => new { e.IdLocal, e.IdCausa });

            entity.ToTable("ReclamacaoLocalCausa_T");

            entity.Property(e => e.IdLocal).HasColumnName("idLocal");
            entity.Property(e => e.IdCausa).HasColumnName("idCausa");
            entity.Property(e => e.Id)
                .ValueGeneratedOnAdd()
                .HasColumnName("id");
        });

        modelBuilder.Entity<ReclamacaoLocalT>(entity =>
        {
            entity.ToTable("ReclamacaoLocal_T");

            entity.Property(e => e.Id).HasColumnName("id");
            entity.Property(e => e.Activo)
                .IsRequired()
                .HasDefaultValueSql("(1)")
                .HasColumnName("activo");
            entity.Property(e => e.Descricao)
                .HasMaxLength(50)
                .HasColumnName("descricao");
            entity.Property(e => e.IdDepartamento).HasColumnName("idDepartamento");
            entity.Property(e => e.IdEntidade)
                .HasDefaultValueSql("(1)")
                .HasColumnName("idEntidade");
            entity.Property(e => e.IdGrupo).HasColumnName("idGrupo");
            entity.Property(e => e.IdPlataforma).HasColumnName("idPlataforma");
        });

        modelBuilder.Entity<ReclamacaoMeiosEntradaT>(entity =>
        {
            entity.ToTable("ReclamacaoMeiosEntrada_T");

            entity.Property(e => e.Id).HasColumnName("id");
            entity.Property(e => e.Activo)
                .IsRequired()
                .HasDefaultValueSql("((1))")
                .HasColumnName("activo");
            entity.Property(e => e.Descricao)
                .HasMaxLength(50)
                .HasColumnName("descricao");
            entity.Property(e => e.Visivel)
                .IsRequired()
                .HasDefaultValueSql("((1))")
                .HasColumnName("visivel");
        });

        modelBuilder.Entity<ReclamacaoRegimeT>(entity =>
        {
            entity.ToTable("ReclamacaoRegime_T");

            entity.Property(e => e.Id).HasColumnName("id");
            entity.Property(e => e.Activo)
                .IsRequired()
                .HasDefaultValueSql("((1))")
                .HasColumnName("activo");
            entity.Property(e => e.Codigo)
                .HasMaxLength(10)
                .HasColumnName("codigo");
            entity.Property(e => e.Descricao)
                .HasMaxLength(50)
                .HasColumnName("descricao");
            entity.Property(e => e.IdEntidade)
                .HasDefaultValueSql("((1))")
                .HasColumnName("idEntidade");
            entity.Property(e => e.IdRegime).HasColumnName("idRegime");
        });

        modelBuilder.Entity<ReclamacaoResolucaoT>(entity =>
        {
            entity.ToTable("ReclamacaoResolucao_T");

            entity.Property(e => e.Id).HasColumnName("id");
            entity.Property(e => e.Activo)
                .IsRequired()
                .HasDefaultValueSql("(1)")
                .HasColumnName("activo");
            entity.Property(e => e.AfectaCustos).HasColumnName("afectaCustos");
            entity.Property(e => e.Descricao)
                .HasMaxLength(50)
                .HasColumnName("descricao");
            entity.Property(e => e.IdEntidade)
                .HasDefaultValueSql("(1)")
                .HasColumnName("idEntidade");
        });

        modelBuilder.Entity<ReclamacaoTipoCausaT>(entity =>
        {
            entity.HasKey(e => new { e.IdTipo, e.IdCausa });

            entity.ToTable("ReclamacaoTipoCausa_T");

            entity.Property(e => e.IdTipo).HasColumnName("idTipo");
            entity.Property(e => e.IdCausa).HasColumnName("idCausa");
            entity.Property(e => e.Id)
                .ValueGeneratedOnAdd()
                .HasColumnName("id");
        });

        modelBuilder.Entity<ReclamacaoTipoT>(entity =>
        {
            entity.ToTable("ReclamacaoTipo_T");

            entity.Property(e => e.Id).HasColumnName("id");
            entity.Property(e => e.Activo)
                .IsRequired()
                .HasDefaultValueSql("(1)")
                .HasColumnName("activo");
            entity.Property(e => e.Descricao)
                .HasMaxLength(50)
                .HasColumnName("descricao");
            entity.Property(e => e.IdEntidade)
                .HasDefaultValueSql("(1)")
                .HasColumnName("idEntidade");
        });

        modelBuilder.Entity<RecolhaPrevisoesEntrega>(entity =>
        {
            entity.HasKey(e => e.Id).HasName("PK__RecolhaP__3213E83F62E49916");

            entity.ToTable("RecolhaPrevisoesEntrega");

            entity.HasIndex(e => new { e.IdPickup, e.Data }, "idx_idPickup_data");

            entity.Property(e => e.Id).HasColumnName("id");
            entity.Property(e => e.Data)
                .HasColumnType("date")
                .HasColumnName("data");
            entity.Property(e => e.DtIntrod)
                .HasColumnType("datetime")
                .HasColumnName("dtIntrod");
            entity.Property(e => e.HoraFim).HasColumnName("horaFim");
            entity.Property(e => e.HoraInicio).HasColumnName("horaInicio");
            entity.Property(e => e.IdMotorista).HasColumnName("idMotorista");
            entity.Property(e => e.IdPickup).HasColumnName("idPickup");
            entity.Property(e => e.IdRota).HasColumnName("idRota");
            entity.Property(e => e.IdUtilIntrod).HasColumnName("idUtilIntrod");
        });

        modelBuilder.Entity<RecolhasDestinatario>(entity =>
        {
            entity.HasKey(e => e.CodigoCliente).HasName("PK__Recolhas__3213E83F76B76FCF");

            entity.HasIndex(e => new { e.IdCliente, e.IdCliMorada, e.Activo }, "idx_IdCliente_idCliMorada_activo");

            entity.HasIndex(e => new { e.IdCliente, e.Activo }, "idx_idCliente_activo");

            entity.Property(e => e.CodigoCliente).HasMaxLength(100);
            entity.Property(e => e.Activo).HasColumnName("activo");
            entity.Property(e => e.CpostalDest)
                .HasMaxLength(10)
                .HasColumnName("cpostalDest");
            entity.Property(e => e.DescricaoProduto)
                .HasMaxLength(100)
                .HasColumnName("descricaoProduto");
            entity.Property(e => e.Dtintrod)
                .HasDefaultValueSql("(getdate())")
                .HasColumnType("datetime")
                .HasColumnName("dtintrod");
            entity.Property(e => e.EmailDest)
                .HasMaxLength(100)
                .HasColumnName("emailDest");
            entity.Property(e => e.Id)
                .ValueGeneratedOnAdd()
                .HasColumnName("id");
            entity.Property(e => e.IdCliMorada).HasColumnName("idCliMorada");
            entity.Property(e => e.IdCliente).HasColumnName("idCliente");
            entity.Property(e => e.IdEntidade).HasColumnName("idEntidade");
            entity.Property(e => e.IdProduto).HasColumnName("idProduto");
            entity.Property(e => e.LocalidadeDest)
                .HasMaxLength(100)
                .HasColumnName("localidadeDest");
            entity.Property(e => e.MoradaDest)
                .HasMaxLength(100)
                .HasColumnName("moradaDest");
            entity.Property(e => e.NifDest)
                .HasMaxLength(100)
                .HasColumnName("nifDest");
            entity.Property(e => e.NomeDest).HasMaxLength(100);
            entity.Property(e => e.PaisDest).HasMaxLength(10);
            entity.Property(e => e.TelefoneDest)
                .HasMaxLength(100)
                .HasColumnName("telefoneDest");
        });

        modelBuilder.Entity<RecolhasProvedorCriacao>(entity =>
        {
            entity.HasKey(e => e.Id).HasName("PK__RECOLHAS__3213E83F765C06FE");

            entity.ToTable("RECOLHAS_PROVEDOR_CRIACAO");

            entity.HasIndex(e => e.IdRecolha, "idx_idRecolha");

            entity.Property(e => e.Id).HasColumnName("id");
            entity.Property(e => e.Concluida).HasColumnName("concluida");
            entity.Property(e => e.DtConclusao)
                .HasColumnType("datetime")
                .HasColumnName("dtConclusao");
            entity.Property(e => e.DtCriacaoProvedor)
                .HasColumnType("datetime")
                .HasColumnName("dtCriacaoProvedor");
            entity.Property(e => e.DtIntrod)
                .HasDefaultValueSql("(getdate())")
                .HasColumnType("datetime")
                .HasColumnName("dtIntrod");
            entity.Property(e => e.DtUltAct)
                .HasColumnType("datetime")
                .HasColumnName("dtUltAct");
            entity.Property(e => e.IdProvedor).HasColumnName("idProvedor");
            entity.Property(e => e.IdRecolha).HasColumnName("idRecolha");
            entity.Property(e => e.IdRecolhaParceiro)
                .HasMaxLength(100)
                .HasColumnName("idRecolhaParceiro");
            entity.Property(e => e.IdUtilIntrod).HasColumnName("idUtilIntrod");
            entity.Property(e => e.Msg)
                .HasMaxLength(500)
                .HasColumnName("msg");
            entity.Property(e => e.Provedor).HasMaxLength(100);
        });

        modelBuilder.Entity<ReemBolsosAgrupamento>(entity =>
        {
            entity.HasKey(e => e.Id).HasName("PK__ReemBols__3213E83F3D62C1FA");

            entity.HasIndex(e => new { e.IdCliente, e.TipoAgrupamento, e.Activo }, "idx_idCliente_tipo_activo");

            entity.Property(e => e.Id).HasColumnName("id");
            entity.Property(e => e.Activo).HasColumnName("activo");
            entity.Property(e => e.DtIntrod)
                .HasColumnType("datetime")
                .HasColumnName("dtIntrod");
            entity.Property(e => e.DtUltAct)
                .HasColumnType("datetime")
                .HasColumnName("dtUltAct");
            entity.Property(e => e.IdCliMorada).HasColumnName("idCliMorada");
            entity.Property(e => e.IdCliMoradaDestino).HasColumnName("idCliMoradaDestino");
            entity.Property(e => e.IdCliente).HasColumnName("idCliente");
            entity.Property(e => e.IdUtilIntrod).HasColumnName("idUtilIntrod");
            entity.Property(e => e.IdUtilUltAct).HasColumnName("idUtilUltAct");
            entity.Property(e => e.Texto).HasMaxLength(500);
            entity.Property(e => e.TipoAgrupamento).HasColumnName("tipoAgrupamento");
        });

        modelBuilder.Entity<ReemBolsosAgrupamentosT>(entity =>
        {
            entity.HasKey(e => e.Id).HasName("PK__ReemBols__3213E83F4C1AF5A5");

            entity.ToTable("ReemBolsosAgrupamentos_T");

            entity.HasIndex(e => new { e.Codigo, e.Activo }, "idx_codigo_activo");

            entity.Property(e => e.Id).HasColumnName("id");
            entity.Property(e => e.Activo).HasColumnName("activo");
            entity.Property(e => e.Codigo)
                .HasMaxLength(50)
                .HasColumnName("codigo");
            entity.Property(e => e.Descricao)
                .HasMaxLength(200)
                .HasColumnName("descricao");
        });

        modelBuilder.Entity<RegimeManifesto>(entity =>
        {
            entity.HasIndex(e => new { e.IdRegime, e.CodigoManif }, "idx_idRegime_codigoManif").HasFillFactor(80);

            entity.Property(e => e.Id).HasColumnName("id");
            entity.Property(e => e.CodigoManif)
                .HasMaxLength(50)
                .HasColumnName("codigoManif");
            entity.Property(e => e.IdRegime).HasColumnName("idRegime");
        });

        modelBuilder.Entity<RegimeT>(entity =>
        {
            entity.ToTable("Regime_T");

            entity.HasIndex(e => new { e.GesEntrega, e.Id }, "idx_gesEntrega_id");

            entity.HasIndex(e => new { e.GesRecolha, e.Id }, "idx_gesRecolha_id");

            entity.Property(e => e.Id).HasColumnName("id");
            entity.Property(e => e.Activo)
                .IsRequired()
                .HasDefaultValueSql("((1))")
                .HasColumnName("activo");
            entity.Property(e => e.CgTpProdutoVang)
                .HasMaxLength(10)
                .HasColumnName("cg_tpProdutoVang");
            entity.Property(e => e.Codigo)
                .HasMaxLength(25)
                .HasColumnName("codigo");
            entity.Property(e => e.Descricao)
                .HasMaxLength(50)
                .HasColumnName("descricao");
            entity.Property(e => e.GesEntrega).HasColumnName("gesEntrega");
            entity.Property(e => e.GesRecolha).HasColumnName("gesRecolha");
            entity.Property(e => e.IdEntidade)
                .HasDefaultValueSql("((1))")
                .HasColumnName("idEntidade");
            entity.Property(e => e.TemPotNeg).HasColumnName("temPotNeg");
            entity.Property(e => e.ViaParser).HasColumnName("viaParser");
        });

        modelBuilder.Entity<RegrasValidacaoAwb>(entity =>
        {
            entity.HasKey(e => e.Id).HasName("PK__RegrasVa__3214EC075A5273E4");

            entity.ToTable("RegrasValidacaoAwb");

            entity.HasIndex(e => new { e.Activo, e.IdEntidade, e.IdCliente }, "idx_activo_identidade_idcliente");

            entity.Property(e => e.DtEnvInterface).HasColumnType("datetime");
            entity.Property(e => e.EnvInterface).HasColumnName("envInterface");
            entity.Property(e => e.Observacoes).HasMaxLength(500);
            entity.Property(e => e.OrdemValidacao).HasColumnName("ordemValidacao");
        });

        modelBuilder.Entity<RegularidadeT>(entity =>
        {
            entity.ToTable("Regularidade_T");

            entity.Property(e => e.Id).HasColumnName("id");
            entity.Property(e => e.Activo)
                .HasDefaultValueSql("((0))")
                .HasColumnName("activo");
            entity.Property(e => e.Descricao)
                .HasMaxLength(50)
                .HasColumnName("descricao");
            entity.Property(e => e.Dias).HasColumnName("dias");
            entity.Property(e => e.Workdayonly).HasColumnName("workdayonly");
        });

        modelBuilder.Entity<RelatoriosEmail>(entity =>
        {
            entity.HasIndex(e => new { e.Horainicio, e.Horafim, e.UltHora, e.Lastemail, e.Regularidade, e.Dias, e.Workdayonly }, "idx_horarios").HasFillFactor(80);

            entity.HasIndex(e => new { e.Idutil, e.Activo }, "idx_idUtil_activo").HasFillFactor(80);

            entity.Property(e => e.Id).HasColumnName("id");
            entity.Property(e => e.Activo).HasColumnName("activo");
            entity.Property(e => e.Dias)
                .HasMaxLength(50)
                .HasComment("colocar os dias que se quer que corra ex: |1|15|29|")
                .HasColumnName("dias");
            entity.Property(e => e.Ficheiro)
                .HasMaxLength(300)
                .HasColumnName("ficheiro");
            entity.Property(e => e.Formato)
                .HasMaxLength(3)
                .HasColumnName("formato");
            entity.Property(e => e.Horafim)
                .HasColumnType("datetime")
                .HasColumnName("horafim");
            entity.Property(e => e.Horainicio)
                .HasColumnType("datetime")
                .HasColumnName("horainicio");
            entity.Property(e => e.IdCliMorada).HasColumnName("idCliMorada");
            entity.Property(e => e.IdEntidade)
                .HasDefaultValueSql("((1))")
                .HasColumnName("idEntidade");
            entity.Property(e => e.Idcliente).HasColumnName("idcliente");
            entity.Property(e => e.Idutil).HasColumnName("idutil");
            entity.Property(e => e.Lastemail)
                .HasColumnType("datetime")
                .HasColumnName("lastemail");
            entity.Property(e => e.Params)
                .HasMaxLength(1000)
                .HasComment("separados por '|' ex: |@idutil|1212| ")
                .HasColumnName("params");
            entity.Property(e => e.Regularidade).HasColumnName("regularidade");
            entity.Property(e => e.SendEmpty).HasColumnName("sendEmpty");
            entity.Property(e => e.Sender)
                .HasMaxLength(50)
                .HasColumnName("sender");
            entity.Property(e => e.Texto)
                .HasMaxLength(250)
                .HasColumnName("texto");
            entity.Property(e => e.Titulo)
                .HasMaxLength(100)
                .HasColumnName("titulo");
            entity.Property(e => e.UltHora)
                .HasColumnType("datetime")
                .HasColumnName("ultHora");
            entity.Property(e => e.Workdayonly).HasColumnName("workdayonly");
        });

        modelBuilder.Entity<Renting>(entity =>
        {
            entity
                .HasNoKey()
                .ToTable("renting");

            entity.Property(e => e.F1).HasMaxLength(255);
            entity.Property(e => e.F12).HasMaxLength(255);
            entity.Property(e => e.F3).HasMaxLength(255);
            entity.Property(e => e.F4).HasMaxLength(255);
            entity.Property(e => e.F5).HasColumnType("smalldatetime");
            entity.Property(e => e.F8).HasColumnType("smalldatetime");
        });

        modelBuilder.Entity<Reparticao>(entity =>
        {
            entity
                .HasNoKey()
                .ToTable("reparticao");

            entity.Property(e => e.IdCliente).HasColumnName("idCliente");
            entity.Property(e => e.SplitFinal)
                .HasMaxLength(255)
                .HasColumnName("SPLIT FINAL");
            entity.Property(e => e.ZonasFinal)
                .HasMaxLength(255)
                .HasColumnName("ZONAS FINAL");
        });

        modelBuilder.Entity<Rex2Tarifa>(entity =>
        {
            entity
                .HasNoKey()
                .ToTable("REX2_TARIFAS");

            entity.Property(e => e.Codigo)
                .HasMaxLength(250)
                .HasColumnName("codigo");
            entity.Property(e => e.IdCliente).HasColumnName("idCliente");
            entity.Property(e => e.IdRegime).HasColumnName("idRegime");
            entity.Property(e => e.IdServico).HasColumnName("idServico");
        });

        modelBuilder.Entity<RotaClasseT>(entity =>
        {
            entity.ToTable("RotaClasse_T");

            entity.Property(e => e.Id).HasColumnName("id");
            entity.Property(e => e.Activo)
                .IsRequired()
                .HasDefaultValueSql("((1))")
                .HasColumnName("activo");
            entity.Property(e => e.Descricao)
                .HasMaxLength(250)
                .IsUnicode(false)
                .HasColumnName("descricao");
        });

        modelBuilder.Entity<RotaModoTransporteT>(entity =>
        {
            entity.ToTable("RotaModoTransporte_T");

            entity.Property(e => e.Id).HasColumnName("id");
            entity.Property(e => e.Descricao)
                .HasMaxLength(100)
                .HasColumnName("descricao");
        });

        modelBuilder.Entity<RotaSegmentosT>(entity =>
        {
            entity
                .HasNoKey()
                .ToTable("RotaSegmentos_T");

            entity.HasIndex(e => e.Codigo, "Idx_codigo")
                .IsUnique()
                .HasFillFactor(80);

            entity.HasIndex(e => e.Id, "PK_RotaSegmentos_T")
                .IsClustered()
                .HasFillFactor(80);

            entity.HasIndex(e => new { e.Codigo, e.Id }, "idx_codigo_id").HasFillFactor(80);

            entity.Property(e => e.Codigo)
                .HasMaxLength(5)
                .IsUnicode(false)
                .HasColumnName("codigo");
            entity.Property(e => e.Descricao)
                .HasMaxLength(250)
                .IsUnicode(false)
                .HasColumnName("descricao");
            entity.Property(e => e.Id)
                .ValueGeneratedOnAdd()
                .HasColumnName("id");
            entity.Property(e => e.MaxPesoVol)
                .HasColumnType("money")
                .HasColumnName("maxPesoVol");
            entity.Property(e => e.MaxVols).HasColumnName("maxVols");
        });

        modelBuilder.Entity<RotaUtilizadoresLog>(entity =>
        {
            entity.ToTable("RotaUtilizadoresLog");

            entity.Property(e => e.Id).HasColumnName("id");
            entity.Property(e => e.Activo).HasColumnName("activo");
            entity.Property(e => e.Data)
                .HasColumnType("datetime")
                .HasColumnName("data");
            entity.Property(e => e.DtIntrod)
                .HasColumnType("datetime")
                .HasColumnName("dtIntrod");
            entity.Property(e => e.IdRota).HasColumnName("idRota");
            entity.Property(e => e.IdUtilIntrod).HasColumnName("idUtilIntrod");
            entity.Property(e => e.IdUtilizador).HasColumnName("idUtilizador");
        });

        modelBuilder.Entity<RotaViasT>(entity =>
        {
            entity.ToTable("RotaVias_T");

            entity.Property(e => e.Id).HasColumnName("id");
            entity.Property(e => e.Descricao)
                .HasMaxLength(250)
                .IsUnicode(false)
                .HasColumnName("descricao");
        });

        modelBuilder.Entity<RotasAngTemporarium>(entity =>
        {
            entity
                .HasNoKey()
                .ToTable("RotasANG_TEMPORARIA");

            entity.Property(e => e.Activo).HasColumnName("activo");
            entity.Property(e => e.Codigo)
                .HasMaxLength(5)
                .HasColumnName("codigo");
            entity.Property(e => e.Descricao)
                .HasMaxLength(50)
                .HasColumnName("descricao");
            entity.Property(e => e.Distribuicao).HasColumnName("distribuicao");
            entity.Property(e => e.DtEnvInterface)
                .HasColumnType("datetime")
                .HasColumnName("dtEnvInterface");
            entity.Property(e => e.DtIntrod)
                .HasColumnType("datetime")
                .HasColumnName("dtIntrod");
            entity.Property(e => e.DtUltAct)
                .HasColumnType("datetime")
                .HasColumnName("dtUltAct");
            entity.Property(e => e.EnvInterface).HasColumnName("envInterface");
            entity.Property(e => e.Estacao).HasColumnName("estacao");
            entity.Property(e => e.Id)
                .ValueGeneratedOnAdd()
                .HasColumnName("id");
            entity.Property(e => e.IdClasse).HasColumnName("idClasse");
            entity.Property(e => e.IdEntidade).HasColumnName("idEntidade");
            entity.Property(e => e.IdEntidadeDelega).HasColumnName("idEntidadeDelega");
            entity.Property(e => e.IdModoTransporte).HasColumnName("idModoTransporte");
            entity.Property(e => e.IdPlataforma).HasColumnName("idPlataforma");
            entity.Property(e => e.IdSegmento).HasColumnName("idSegmento");
            entity.Property(e => e.IdTarifa).HasColumnName("idTarifa");
            entity.Property(e => e.IdUtilIntrod).HasColumnName("idUtilIntrod");
            entity.Property(e => e.IdUtilUltAct).HasColumnName("idUtilUltAct");
            entity.Property(e => e.IdUtilizador).HasColumnName("idUtilizador");
            entity.Property(e => e.IdVia).HasColumnName("idVia");
            entity.Property(e => e.IdZona).HasColumnName("idZona");
            entity.Property(e => e.IsSecurityControl).HasColumnName("isSecurityControl");
            entity.Property(e => e.PesoMax).HasColumnName("pesoMax");
            entity.Property(e => e.PesoMin).HasColumnName("pesoMin");
            entity.Property(e => e.TratarVolume).HasColumnName("tratarVolume");
            entity.Property(e => e.VolumeMaxM3).HasColumnName("volumeMaxM3");
            entity.Property(e => e.VolumeMinM3).HasColumnName("volumeMinM3");
            entity.Property(e => e.VolumesMax).HasColumnName("volumesMax");
            entity.Property(e => e.VolumesMin).HasColumnName("volumesMin");
        });

        modelBuilder.Entity<RotasCodPostaisEntrega>(entity =>
        {
            entity.HasKey(e => new { e.IdRota, e.IdCp, e.IdEntidade });

            entity.ToTable("Rotas_CodPostais_Entregas");

            entity.HasIndex(e => new { e.IdRota, e.IdEntidade, e.IdCp }, "idx_idRota_idEntidade_idCP").HasFillFactor(80);

            entity.HasIndex(e => new { e.IdCp, e.IdEntidade }, "idx_idcpostal_identidade").HasFillFactor(80);

            entity.Property(e => e.IdRota).HasColumnName("idRota");
            entity.Property(e => e.IdCp).HasColumnName("idCP");
            entity.Property(e => e.IdEntidade).HasColumnName("idEntidade");
            entity.Property(e => e.CutOff1)
                .HasColumnType("datetime")
                .HasColumnName("cutOff1");
            entity.Property(e => e.CutOff2)
                .HasColumnType("datetime")
                .HasColumnName("cutOff2");
            entity.Property(e => e.DiasOb).HasColumnName("diasOB");
            entity.Property(e => e.DtIntrod)
                .HasColumnType("datetime")
                .HasColumnName("dtIntrod");
            entity.Property(e => e.DtUltAct)
                .HasColumnType("datetime")
                .HasColumnName("dtUltAct");
            entity.Property(e => e.IdUtilIntrod).HasColumnName("idUtilIntrod");
            entity.Property(e => e.IdUtilUltAct).HasColumnName("idUtilUltAct");
        });

        modelBuilder.Entity<RotasCodPostaisRecolha>(entity =>
        {
            entity.HasKey(e => new { e.IdRota, e.IdCp, e.IdEntidade });

            entity.ToTable("Rotas_CodPostais_Recolhas");

            entity.HasIndex(e => e.IdEntidade, "IdEntidade_Idx").HasFillFactor(80);

            entity.HasIndex(e => new { e.IdCp, e.IdEntidade }, "idx_idcpostal_identidade").HasFillFactor(80);

            entity.Property(e => e.IdRota).HasColumnName("idRota");
            entity.Property(e => e.IdCp).HasColumnName("idCP");
            entity.Property(e => e.IdEntidade).HasColumnName("idEntidade");
            entity.Property(e => e.CutOff1)
                .HasColumnType("datetime")
                .HasColumnName("cutOff1");
            entity.Property(e => e.CutOff2)
                .HasColumnType("datetime")
                .HasColumnName("cutOff2");
            entity.Property(e => e.DiasIb).HasColumnName("diasIB");
            entity.Property(e => e.DtIntrod)
                .HasColumnType("datetime")
                .HasColumnName("dtIntrod");
            entity.Property(e => e.DtUltAct)
                .HasColumnType("datetime")
                .HasColumnName("dtUltAct");
            entity.Property(e => e.IdUtilIntrod).HasColumnName("idUtilIntrod");
            entity.Property(e => e.IdUtilUltAct).HasColumnName("idUtilUltAct");
            entity.Property(e => e.Req)
                .HasColumnType("datetime")
                .HasColumnName("req");
        });

        modelBuilder.Entity<RotasCodPostaisRecolhasBackup>(entity =>
        {
            entity
                .HasNoKey()
                .ToTable("Rotas_CodPostais_Recolhas_backup");

            entity.Property(e => e.CutOff1)
                .HasColumnType("datetime")
                .HasColumnName("cutOff1");
            entity.Property(e => e.CutOff2)
                .HasColumnType("datetime")
                .HasColumnName("cutOff2");
            entity.Property(e => e.DiasIb).HasColumnName("diasIB");
            entity.Property(e => e.DtIntrod)
                .HasColumnType("datetime")
                .HasColumnName("dtIntrod");
            entity.Property(e => e.DtUltAct)
                .HasColumnType("datetime")
                .HasColumnName("dtUltAct");
            entity.Property(e => e.IdCp).HasColumnName("idCP");
            entity.Property(e => e.IdEntidade).HasColumnName("idEntidade");
            entity.Property(e => e.IdRota).HasColumnName("idRota");
            entity.Property(e => e.IdUtilIntrod).HasColumnName("idUtilIntrod");
            entity.Property(e => e.IdUtilUltAct).HasColumnName("idUtilUltAct");
            entity.Property(e => e.Req)
                .HasColumnType("datetime")
                .HasColumnName("req");
        });

        modelBuilder.Entity<RotasEntidadesM>(entity =>
        {
            entity.ToTable("RotasEntidades_M");

            entity.HasIndex(e => new { e.IdRota, e.IdEntidade }, "IX_RotasEntidades_idRota_idEntidade").IsUnique();

            entity.Property(e => e.Id).HasColumnName("id");
            entity.Property(e => e.Activo).HasColumnName("activo");
            entity.Property(e => e.DtUltAct)
                .HasDefaultValueSql("(getdate())")
                .HasColumnType("datetime")
                .HasColumnName("dtUltAct");
            entity.Property(e => e.IdEntidade).HasColumnName("idEntidade");
            entity.Property(e => e.IdRota).HasColumnName("idRota");
            entity.Property(e => e.IdUtilUltAct).HasColumnName("idUtilUltAct");
        });

        modelBuilder.Entity<Rotum>(entity =>
        {
            entity.HasKey(e => e.Id).HasName("PK_T_Rota");

            entity.ToTable(tb => tb.HasTrigger("Rota_Update_Trigger"));

            entity.HasIndex(e => e.IdSegmento, "Idx_IdSegmento").HasFillFactor(80);

            entity.HasIndex(e => new { e.IdPlataforma, e.IdSegmento, e.IdClasse }, "Idx_Plataforma").HasFillFactor(80);

            entity.HasIndex(e => e.Codigo, "idx_codigo").HasFillFactor(80);

            entity.HasIndex(e => e.IdUtilizador, "idx_idUtilizador");

            entity.Property(e => e.Id).HasColumnName("id");
            entity.Property(e => e.Activo)
                .HasDefaultValueSql("((1))")
                .HasColumnName("activo");
            entity.Property(e => e.Codigo)
                .HasMaxLength(5)
                .HasColumnName("codigo");
            entity.Property(e => e.Descricao)
                .HasMaxLength(50)
                .HasColumnName("descricao");
            entity.Property(e => e.Distribuicao).HasColumnName("distribuicao");
            entity.Property(e => e.DtEnvInterface)
                .HasColumnType("datetime")
                .HasColumnName("dtEnvInterface");
            entity.Property(e => e.DtIntrod)
                .HasDefaultValueSql("(getdate())")
                .HasColumnType("datetime")
                .HasColumnName("dtIntrod");
            entity.Property(e => e.DtUltAct)
                .HasDefaultValueSql("(getdate())")
                .HasColumnType("datetime")
                .HasColumnName("dtUltAct");
            entity.Property(e => e.EnvInterface).HasColumnName("envInterface");
            entity.Property(e => e.Estacao).HasColumnName("estacao");
            entity.Property(e => e.IdClasse).HasColumnName("idClasse");
            entity.Property(e => e.IdEntidade).HasColumnName("idEntidade");
            entity.Property(e => e.IdEntidadeDelega).HasColumnName("idEntidadeDelega");
            entity.Property(e => e.IdModoTransporte).HasColumnName("idModoTransporte");
            entity.Property(e => e.IdPlataforma).HasColumnName("idPlataforma");
            entity.Property(e => e.IdSegmento).HasColumnName("idSegmento");
            entity.Property(e => e.IdTarifa).HasColumnName("idTarifa");
            entity.Property(e => e.IdUtilIntrod).HasColumnName("idUtilIntrod");
            entity.Property(e => e.IdUtilUltAct).HasColumnName("idUtilUltAct");
            entity.Property(e => e.IdUtilizador).HasColumnName("idUtilizador");
            entity.Property(e => e.IdVia).HasColumnName("idVia");
            entity.Property(e => e.IdZona).HasColumnName("idZona");
            entity.Property(e => e.IsSecurityControl).HasColumnName("isSecurityControl");
            entity.Property(e => e.PesoMax).HasColumnName("pesoMax");
            entity.Property(e => e.PesoMin).HasColumnName("pesoMin");
            entity.Property(e => e.TratarVolume)
                .IsRequired()
                .HasDefaultValueSql("((1))")
                .HasColumnName("tratarVolume");
            entity.Property(e => e.VolumeMaxM3).HasColumnName("volumeMaxM3");
            entity.Property(e => e.VolumeMinM3).HasColumnName("volumeMinM3");
            entity.Property(e => e.VolumesMax).HasColumnName("volumesMax");
            entity.Property(e => e.VolumesMin).HasColumnName("volumesMin");
        });

        modelBuilder.Entity<SalesHistory>(entity =>
        {
            entity.HasKey(e => e.SaleId);

            entity.ToTable("SalesHistory", tb => tb.HasTrigger("tr_SalesHistory"));

            entity.Property(e => e.SaleId).HasColumnName("SaleID");
            entity.Property(e => e.Product)
                .HasMaxLength(30)
                .IsUnicode(false);
            entity.Property(e => e.SaleDate).HasColumnType("datetime");
            entity.Property(e => e.SalePrice).HasColumnType("money");
        });

        modelBuilder.Entity<SalesHistoryAudit>(entity =>
        {
            entity
                .HasNoKey()
                .ToTable("SalesHistoryAudit");

            entity.Property(e => e.AuditId)
                .ValueGeneratedOnAdd()
                .HasColumnName("AuditID");
            entity.Property(e => e.ColumnsUpdated).HasColumnType("xml");
            entity.Property(e => e.SaleId).HasColumnName("SaleID");
            entity.Property(e => e.TableName)
                .HasMaxLength(30)
                .IsUnicode(false);
            entity.Property(e => e.UpdateDate).HasColumnType("datetime");
        });

        modelBuilder.Entity<SalesLead>(entity =>
        {
            entity.ToTable("SalesLead", tb => tb.HasTrigger("SalesLeadEstadosLog_Trigger"));

            entity.HasIndex(e => new { e.IdEntidade, e.DtIntrod }, "Idx_idEntidade_dtIntrod");

            entity.HasIndex(e => new { e.IdEntidade, e.IdTipoOrigem, e.IdEstado }, "idx_idEntidade_idTipoOrigem_idEstado");

            entity.Property(e => e.Id).HasColumnName("id");
            entity.Property(e => e.Contacto)
                .HasMaxLength(50)
                .HasColumnName("contacto");
            entity.Property(e => e.Cpostal)
                .HasMaxLength(15)
                .HasColumnName("cpostal");
            entity.Property(e => e.DtAcordo)
                .HasColumnType("datetime")
                .HasColumnName("dtAcordo");
            entity.Property(e => e.DtEstado)
                .HasColumnType("datetime")
                .HasColumnName("dtEstado");
            entity.Property(e => e.DtIntrod)
                .HasColumnType("datetime")
                .HasColumnName("dtIntrod");
            entity.Property(e => e.DtUltAct)
                .HasColumnType("datetime")
                .HasColumnName("dtUltAct");
            entity.Property(e => e.DtValor1)
                .HasColumnType("datetime")
                .HasColumnName("dtValor1");
            entity.Property(e => e.DtValor2)
                .HasColumnType("datetime")
                .HasColumnName("dtValor2");
            entity.Property(e => e.Email)
                .HasMaxLength(50)
                .HasColumnName("email");
            entity.Property(e => e.Fechada).HasColumnName("fechada");
            entity.Property(e => e.IdAcordo).HasColumnName("idAcordo");
            entity.Property(e => e.IdCae).HasColumnName("idCae");
            entity.Property(e => e.IdCliMorada).HasColumnName("idCliMorada");
            entity.Property(e => e.IdCliente).HasColumnName("idCliente");
            entity.Property(e => e.IdConcorrente).HasColumnName("idConcorrente");
            entity.Property(e => e.IdCpostal).HasColumnName("idCpostal");
            entity.Property(e => e.IdEntidade).HasColumnName("idEntidade");
            entity.Property(e => e.IdEstado).HasColumnName("idEstado");
            entity.Property(e => e.IdOrigem).HasColumnName("idOrigem");
            entity.Property(e => e.IdPais).HasColumnName("idPais");
            entity.Property(e => e.IdStatusReason).HasColumnName("idStatusReason");
            entity.Property(e => e.IdStatusReasonTrf).HasColumnName("idStatusReasonTRF");
            entity.Property(e => e.IdTipoOrigem).HasColumnName("idTipoOrigem");
            entity.Property(e => e.IdUtilAcordo).HasColumnName("idUtilAcordo");
            entity.Property(e => e.IdUtilEstado).HasColumnName("idUtilEstado");
            entity.Property(e => e.IdUtilIntrod).HasColumnName("idUtilIntrod");
            entity.Property(e => e.IdUtilResp).HasColumnName("idUtilResp");
            entity.Property(e => e.IdUtilUltAct).HasColumnName("idUtilUltAct");
            entity.Property(e => e.IdleadstatusMotivo).HasColumnName("idleadstatusMotivo");
            entity.Property(e => e.LeadstatusTrfobs)
                .HasMaxLength(250)
                .HasColumnName("leadstatusTRFOBS");
            entity.Property(e => e.Localidade)
                .HasMaxLength(100)
                .HasColumnName("localidade");
            entity.Property(e => e.Morada)
                .HasMaxLength(100)
                .HasColumnName("morada");
            entity.Property(e => e.Nif)
                .HasMaxLength(20)
                .HasColumnName("nif");
            entity.Property(e => e.Nome)
                .HasMaxLength(50)
                .HasColumnName("nome");
            entity.Property(e => e.ObsAcordo).HasMaxLength(250);
            entity.Property(e => e.ObsEstado).HasMaxLength(1500);
            entity.Property(e => e.Observacoes)
                .HasMaxLength(250)
                .HasColumnName("observacoes");
            entity.Property(e => e.Potencial).HasColumnName("potencial");
            entity.Property(e => e.Telefone)
                .HasMaxLength(13)
                .HasColumnName("telefone");
            entity.Property(e => e.Valor1)
                .HasColumnType("money")
                .HasColumnName("valor1");
            entity.Property(e => e.Valor2)
                .HasColumnType("money")
                .HasColumnName("valor2");
        });

        modelBuilder.Entity<SalesLeadAcordoTiposT>(entity =>
        {
            entity.ToTable("SalesLeadAcordoTipos_T");

            entity.Property(e => e.Id).HasColumnName("id");
            entity.Property(e => e.Descricao)
                .HasMaxLength(50)
                .HasColumnName("descricao");
        });

        modelBuilder.Entity<SalesLeadEntrevista>(entity =>
        {
            entity.HasKey(e => new { e.IdEntrevistaOrig, e.IdSalesLead }).HasName("PK_CrossSelling");

            entity.HasIndex(e => e.IdEntrevistaDestino, "Idx_idEntrevistaDestino");

            entity.HasIndex(e => e.IdSalesLead, "Idx_idSalesLead");

            entity.Property(e => e.IdEntrevistaOrig).HasColumnName("idEntrevistaOrig");
            entity.Property(e => e.IdSalesLead).HasColumnName("idSalesLead");
            entity.Property(e => e.Id)
                .ValueGeneratedOnAdd()
                .HasColumnName("id");
            entity.Property(e => e.IdEntrevistaDestino).HasColumnName("idEntrevistaDestino");
        });

        modelBuilder.Entity<SalesLeadEstadosLog>(entity =>
        {
            entity.ToTable("SalesLeadEstadosLog");

            entity.HasIndex(e => e.IdSalesLead, "idx_idSaleslead");

            entity.Property(e => e.Id).HasColumnName("id");
            entity.Property(e => e.DtUltAct)
                .HasColumnType("datetime")
                .HasColumnName("dtUltAct");
            entity.Property(e => e.DtUtilIntrod)
                .HasColumnType("datetime")
                .HasColumnName("dtUtilIntrod");
            entity.Property(e => e.IdCliMorada).HasColumnName("idCliMorada");
            entity.Property(e => e.IdCliente).HasColumnName("idCliente");
            entity.Property(e => e.IdEntidade).HasColumnName("idEntidade");
            entity.Property(e => e.IdLeadStatus).HasColumnName("idLeadStatus");
            entity.Property(e => e.IdOrigem).HasColumnName("idOrigem");
            entity.Property(e => e.IdSalesLead).HasColumnName("idSalesLead");
            entity.Property(e => e.IdStatusReason).HasColumnName("idStatusReason");
            entity.Property(e => e.IdStatusReasonTrf).HasColumnName("idStatusReasonTRF");
            entity.Property(e => e.IdUtilIntrod).HasColumnName("idUtilIntrod");
            entity.Property(e => e.IdUtilResp).HasColumnName("idUtilResp");
            entity.Property(e => e.IdUtilUltAct).HasColumnName("idUtilUltAct");
        });

        modelBuilder.Entity<SalesLeadEstadosT>(entity =>
        {
            entity.ToTable("SalesLeadEstados_T");

            entity.Property(e => e.Id).HasColumnName("id");
            entity.Property(e => e.Codigo)
                .HasMaxLength(15)
                .HasColumnName("codigo");
            entity.Property(e => e.Descricao)
                .HasMaxLength(50)
                .HasColumnName("descricao");
            entity.Property(e => e.IdEntidade).HasColumnName("idEntidade");
            entity.Property(e => e.IdTipoOrigem).HasColumnName("idTipoOrigem");
            entity.Property(e => e.IsAuto).HasColumnName("isAuto");
            entity.Property(e => e.IsDefault).HasColumnName("isDefault");
            entity.Property(e => e.IsManual)
                .IsRequired()
                .HasDefaultValueSql("((1))")
                .HasColumnName("isManual");
            entity.Property(e => e.IsSalesLeadValido).HasColumnName("isSalesLeadValido");
            entity.Property(e => e.Pendente)
                .IsRequired()
                .HasDefaultValueSql("((1))")
                .HasColumnName("pendente");
        });

        modelBuilder.Entity<SalesLeadOrigemGrupoT>(entity =>
        {
            entity.ToTable("SalesLeadOrigemGrupo_T");

            entity.Property(e => e.Id)
                .ValueGeneratedOnAdd()
                .HasColumnName("id");
            entity.Property(e => e.Activo)
                .IsRequired()
                .HasDefaultValueSql("((1))")
                .HasColumnName("activo");
            entity.Property(e => e.Codigo)
                .HasMaxLength(15)
                .HasColumnName("codigo");
            entity.Property(e => e.Descricao)
                .HasMaxLength(50)
                .HasColumnName("descricao");
        });

        modelBuilder.Entity<SalesLeadOrigemTipoT>(entity =>
        {
            entity.ToTable("SalesLeadOrigemTipo_T");

            entity.Property(e => e.Id)
                .ValueGeneratedOnAdd()
                .HasColumnName("id");
            entity.Property(e => e.Activo)
                .IsRequired()
                .HasDefaultValueSql("((1))")
                .HasColumnName("activo");
            entity.Property(e => e.Codigo)
                .HasMaxLength(15)
                .HasColumnName("codigo");
            entity.Property(e => e.Descricao)
                .HasMaxLength(50)
                .HasColumnName("descricao");
        });

        modelBuilder.Entity<SalesLeadProspect>(entity =>
        {
            entity.ToTable("SalesLeadProspect");

            entity.Property(e => e.Id).HasColumnName("ID");
            entity.Property(e => e.DataProcessada).HasColumnType("datetime");
            entity.Property(e => e.Equipa).HasMaxLength(255);
            entity.Property(e => e.Facturacao).HasColumnType("money");
            entity.Property(e => e.Localidade).HasMaxLength(255);
            entity.Property(e => e.Nif)
                .HasMaxLength(20)
                .HasColumnName("NIF");
            entity.Property(e => e.Nome).HasMaxLength(255);
            entity.Property(e => e.Prospect).HasMaxLength(255);
            entity.Property(e => e.StatusComercial).HasMaxLength(255);
            entity.Property(e => e.StatusCredito).HasMaxLength(255);
        });

        modelBuilder.Entity<SalesLeadStatusReasonsT>(entity =>
        {
            entity.ToTable("SalesLeadStatusReasons_T");

            entity.Property(e => e.Id)
                .ValueGeneratedOnAdd()
                .HasColumnName("id");
            entity.Property(e => e.Activo)
                .IsRequired()
                .HasDefaultValueSql("((1))")
                .HasColumnName("activo");
            entity.Property(e => e.Codigo).HasMaxLength(30);
            entity.Property(e => e.Descricao)
                .HasMaxLength(50)
                .HasColumnName("descricao");
            entity.Property(e => e.DtIntrod)
                .HasColumnType("datetime")
                .HasColumnName("dtIntrod");
            entity.Property(e => e.DtUltAct)
                .HasColumnType("datetime")
                .HasColumnName("dtUltAct");
            entity.Property(e => e.Fecha).HasColumnName("fecha");
            entity.Property(e => e.IdLeadStatus).HasColumnName("idLeadStatus");
            entity.Property(e => e.IdUtilIntrod).HasColumnName("idUtilIntrod");
            entity.Property(e => e.IdUtilUltAct).HasColumnName("idUtilUltAct");
        });

        modelBuilder.Entity<SalesLeadStatusReasonsTrfT>(entity =>
        {
            entity
                .HasNoKey()
                .ToTable("SalesLeadStatusReasonsTRF_T");

            entity.Property(e => e.Activo).HasColumnName("activo");
            entity.Property(e => e.Codigo).HasMaxLength(30);
            entity.Property(e => e.DescCurta)
                .HasMaxLength(30)
                .HasColumnName("descCurta");
            entity.Property(e => e.Descricao)
                .HasMaxLength(50)
                .HasColumnName("descricao");
            entity.Property(e => e.DtIntrod)
                .HasColumnType("datetime")
                .HasColumnName("dtIntrod");
            entity.Property(e => e.DtUltAct)
                .HasColumnType("datetime")
                .HasColumnName("dtUltAct");
            entity.Property(e => e.Id).HasColumnName("id");
            entity.Property(e => e.IdEntidade).HasColumnName("idEntidade");
            entity.Property(e => e.IdLeadStatus).HasColumnName("idLeadStatus");
            entity.Property(e => e.IdUtilIntrod).HasColumnName("idUtilIntrod");
            entity.Property(e => e.IdUtilUltAct).HasColumnName("idUtilUltAct");
        });

        modelBuilder.Entity<SalesLeadStatusT>(entity =>
        {
            entity.ToTable("SalesLeadStatus_T");

            entity.Property(e => e.Id)
                .ValueGeneratedOnAdd()
                .HasColumnName("id");
            entity.Property(e => e.Activo)
                .IsRequired()
                .HasDefaultValueSql("((1))")
                .HasColumnName("activo");
            entity.Property(e => e.Descricao)
                .HasMaxLength(50)
                .HasColumnName("descricao");
        });

        modelBuilder.Entity<SalesLeadsEnvio>(entity =>
        {
            entity.Property(e => e.Id).HasColumnName("id");
            entity.Property(e => e.IdPeriocidade).HasColumnName("idPeriocidade");
            entity.Property(e => e.IdPesoMedio).HasColumnName("idPesoMedio");
            entity.Property(e => e.IdRegime).HasColumnName("idRegime");
            entity.Property(e => e.IdSalesLead).HasColumnName("idSalesLead");
            entity.Property(e => e.IdServico).HasColumnName("idServico");
            entity.Property(e => e.NumeroEnvios).HasColumnName("numeroEnvios");
        });

        modelBuilder.Entity<SalesLeadsEnviosZona>(entity =>
        {
            entity.HasKey(e => e.Id).HasName("PK_SalesLeadEnviosZonas");

            entity.Property(e => e.Id).HasColumnName("id");
            entity.Property(e => e.IdRegime).HasColumnName("idRegime");
            entity.Property(e => e.IdSalesLead).HasColumnName("idSalesLead");
            entity.Property(e => e.IdServico).HasColumnName("idServico");
            entity.Property(e => e.IdZonaPais).HasColumnName("idZonaPais");
            entity.Property(e => e.Percentagem).HasColumnName("percentagem");
        });

        modelBuilder.Entity<SalesLeadsFormulaValoresT>(entity =>
        {
            entity.HasKey(e => e.Id).HasName("PK_SalesLeadsFormulaValores");

            entity.ToTable("SalesLeadsFormulaValores_T");

            entity.Property(e => e.Id).HasColumnName("id");
            entity.Property(e => e.Escalao)
                .HasColumnType("money")
                .HasColumnName("escalao");
            entity.Property(e => e.EscalaoSeg)
                .HasColumnType("money")
                .HasColumnName("escalaoSeg");
            entity.Property(e => e.Fase).HasColumnName("fase");
            entity.Property(e => e.IdDepartUtil).HasColumnName("idDepartUtil");
            entity.Property(e => e.IdEntidade).HasColumnName("idEntidade");
            entity.Property(e => e.Valor)
                .HasColumnType("money")
                .HasColumnName("valor");
        });

        modelBuilder.Entity<SalesLeadsMotivosT>(entity =>
        {
            entity
                .HasNoKey()
                .ToTable("SalesLeadsMotivos_T");

            entity.Property(e => e.Activo).HasColumnName("activo");
            entity.Property(e => e.Codigo).HasMaxLength(20);
            entity.Property(e => e.Descricao).HasMaxLength(30);
            entity.Property(e => e.Id).HasColumnName("id");
            entity.Property(e => e.Modulo).HasMaxLength(20);
        });

        modelBuilder.Entity<SalesLeadsOrigemT>(entity =>
        {
            entity.ToTable("SalesLeadsOrigem_T");

            entity.Property(e => e.Id)
                .ValueGeneratedOnAdd()
                .HasColumnName("id");
            entity.Property(e => e.Activo)
                .IsRequired()
                .HasDefaultValueSql("((1))")
                .HasColumnName("activo");
            entity.Property(e => e.Descricao)
                .HasMaxLength(50)
                .HasColumnName("descricao");
            entity.Property(e => e.DtIntrod)
                .HasColumnType("datetime")
                .HasColumnName("dtIntrod");
            entity.Property(e => e.DtUltAct)
                .HasColumnType("datetime")
                .HasColumnName("dtUltAct");
            entity.Property(e => e.Grupo)
                .HasMaxLength(10)
                .HasColumnName("grupo");
            entity.Property(e => e.IdUtilIntrod).HasColumnName("idUtilIntrod");
            entity.Property(e => e.IdUtilUltAct).HasColumnName("idUtilUltAct");
            entity.Property(e => e.OffTime).HasColumnType("decimal(9, 2)");
            entity.Property(e => e.OnTime).HasColumnType("decimal(9, 2)");
            entity.Property(e => e.ToleranceTime).HasColumnType("decimal(9, 2)");
        });

        modelBuilder.Entity<ScanCodesTratamentoAuto>(entity =>
        {
            entity.HasKey(e => e.Id).HasName("PK__ScanCode__3213E83F3D63215F");

            entity.ToTable("ScanCodesTratamentoAuto");

            entity.Property(e => e.Id).HasColumnName("id");
            entity.Property(e => e.DtUltAct)
                .HasColumnType("datetime")
                .HasColumnName("dtUltAct");
            entity.Property(e => e.IdUtilUltAct).HasColumnName("idUtilUltAct");
            entity.Property(e => e.Observacoes).HasMaxLength(50);
            entity.Property(e => e.ScanDex).HasMaxLength(2);
            entity.Property(e => e.ScanTratamento).HasMaxLength(2);
        });

        modelBuilder.Entity<ScanTypeExportLayoutReqT>(entity =>
        {
            entity.HasKey(e => new { e.ScanType, e.IdEntidade, e.Field, e.AdicCriteria, e.ScanCode });

            entity.ToTable("ScanTypeExportLayoutReq_T");

            entity.Property(e => e.ScanType)
                .HasMaxLength(2)
                .IsUnicode(false)
                .HasColumnName("scanType");
            entity.Property(e => e.IdEntidade).HasColumnName("idEntidade");
            entity.Property(e => e.Field)
                .HasMaxLength(50)
                .HasColumnName("field");
            entity.Property(e => e.AdicCriteria)
                .HasMaxLength(25)
                .HasColumnName("adicCriteria");
            entity.Property(e => e.ScanCode)
                .HasMaxLength(2)
                .HasColumnName("scanCode");
            entity.Property(e => e.DataColumnValue)
                .HasMaxLength(50)
                .HasColumnName("dataColumnValue");
            entity.Property(e => e.ReqType)
                .HasMaxLength(2)
                .HasColumnName("reqType");
        });

        modelBuilder.Entity<ScanTypeExportLayoutT>(entity =>
        {
            entity.HasKey(e => new { e.ScanType, e.IdEntidade, e.Field });

            entity.ToTable("ScanTypeExportLayout_T");

            entity.Property(e => e.ScanType)
                .HasMaxLength(2)
                .IsUnicode(false)
                .HasColumnName("scanType");
            entity.Property(e => e.IdEntidade).HasColumnName("idEntidade");
            entity.Property(e => e.Field)
                .HasMaxLength(50)
                .HasColumnName("field");
            entity.Property(e => e.DataColumn)
                .HasMaxLength(128)
                .HasColumnName("dataColumn");
            entity.Property(e => e.DataFormat)
                .HasMaxLength(20)
                .HasColumnName("dataFormat");
            entity.Property(e => e.DataType)
                .HasMaxLength(20)
                .HasColumnName("dataType");
            entity.Property(e => e.Description)
                .HasColumnType("ntext")
                .HasColumnName("description");
            entity.Property(e => e.Length).HasColumnName("length");
            entity.Property(e => e.Ordem).HasColumnName("ordem");
            entity.Property(e => e.Remarks)
                .HasColumnType("ntext")
                .HasColumnName("remarks");
        });

        modelBuilder.Entity<ScanTypeT>(entity =>
        {
            entity.HasKey(e => new { e.ScanTypeCode, e.IdEntidade });

            entity.ToTable("ScanType_T");

            entity.HasIndex(e => new { e.ScanType, e.IdEntidade }, "NonClusteredIndex-20171226-113056");

            entity.Property(e => e.ScanTypeCode)
                .HasMaxLength(10)
                .HasColumnName("scanTypeCode");
            entity.Property(e => e.IdEntidade).HasColumnName("idEntidade");
            entity.Property(e => e.Definicao)
                .HasMaxLength(250)
                .HasColumnName("definicao");
            entity.Property(e => e.Descricao)
                .HasMaxLength(50)
                .HasColumnName("descricao");
            entity.Property(e => e.ScanType)
                .HasMaxLength(2)
                .IsUnicode(false)
                .HasColumnName("scanType");
        });

        modelBuilder.Entity<ScancodesOpDistribuicao>(entity =>
        {
            entity.HasKey(e => new { e.Scancode, e.IdEntidade });

            entity.ToTable("Scancodes_OpDistribuicao");

            entity.Property(e => e.Scancode)
                .HasMaxLength(2)
                .HasColumnName("scancode");
            entity.Property(e => e.IdEntidade).HasColumnName("idEntidade");
        });

        modelBuilder.Entity<ScancodesT>(entity =>
        {
            entity.HasKey(e => new { e.Scancode, e.IdEntidade }).HasName("PK_Scans_T");

            entity.ToTable("Scancodes_T");

            entity.HasIndex(e => new { e.Finaliza, e.Poddex, e.Scancode, e.IdEntidade, e.IdTrataDept, e.IdTrataGrupo }, "idx_finaliza_poddex").HasFillFactor(80);

            entity.HasIndex(e => new { e.IdEntidade, e.FinalizaGestaoAdministr }, "idx_idEntidade_finaliza_gestao_administr");

            entity.HasIndex(e => new { e.ParaFacturarCliente, e.Scancode, e.IdEntidade, e.IdTrataDept, e.IdTrataGrupo }, "idx_paraFacturarCliente").HasFillFactor(80);

            entity.HasIndex(e => new { e.Poddex, e.Finaliza, e.Scancode, e.IdEntidade }, "idx_poddex_finaliza_scancode_idEntidade").HasFillFactor(80);

            entity.HasIndex(e => new { e.SaidaDistribuicao, e.Scancode, e.IdEntidade }, "idx_saida_distribuicao_scancode_idEntidade");

            entity.Property(e => e.Scancode)
                .HasMaxLength(2)
                .HasColumnName("scancode");
            entity.Property(e => e.IdEntidade)
                .HasDefaultValueSql("((1))")
                .HasColumnName("idEntidade");
            entity.Property(e => e.Activo)
                .IsRequired()
                .HasDefaultValueSql("((1))")
                .HasColumnName("activo");
            entity.Property(e => e.AplicaMaster).HasColumnName("aplica_master");
            entity.Property(e => e.Categoria)
                .HasMaxLength(50)
                .IsUnicode(false)
                .HasColumnName("categoria");
            entity.Property(e => e.ContaTempoTransito).HasColumnName("contaTempoTransito");
            entity.Property(e => e.Definicao)
                .HasMaxLength(250)
                .HasColumnName("definicao");
            entity.Property(e => e.DescTipoScan)
                .HasMaxLength(50)
                .HasColumnName("descTipoScan");
            entity.Property(e => e.DescWeb)
                .HasMaxLength(50)
                .HasColumnName("descWeb");
            entity.Property(e => e.Descricao)
                .HasMaxLength(50)
                .HasColumnName("descricao");
            entity.Property(e => e.DexAceitavel).HasColumnName("dex_aceitavel");
            entity.Property(e => e.DexInaceitavel).HasColumnName("dex_inaceitavel");
            entity.Property(e => e.DiasDistribuicao)
                .HasDefaultValueSql("((-1))")
                .HasColumnName("dias_distribuicao");
            entity.Property(e => e.Distribuicao).HasColumnName("distribuicao");
            entity.Property(e => e.EnvPortal)
                .IsRequired()
                .HasDefaultValueSql("((1))")
                .HasColumnName("envPortal");
            entity.Property(e => e.Estacao).HasColumnName("estacao");
            entity.Property(e => e.Finaliza).HasColumnName("finaliza");
            entity.Property(e => e.FinalizaGestaoAdministr).HasColumnName("finaliza_gestao_administr");
            entity.Property(e => e.Gera2TentativaEntrega).HasColumnName("gera2TentativaEntrega");
            entity.Property(e => e.GestaoAdministr).HasColumnName("gestao_administr");
            entity.Property(e => e.IdIncidenciaTipo).HasColumnName("idIncidenciaTipo");
            entity.Property(e => e.IdNotificacaoTipo).HasColumnName("idNotificacaoTipo");
            entity.Property(e => e.IdTrataDept).HasColumnName("idTrataDept");
            entity.Property(e => e.IdTrataGrupo).HasColumnName("idTrataGrupo");
            entity.Property(e => e.ImgCtrlRoom)
                .HasMaxLength(50)
                .HasColumnName("imgCtrlRoom");
            entity.Property(e => e.IniciaEntrega).HasColumnName("iniciaEntrega");
            entity.Property(e => e.IsScanControlo).HasColumnName("isScanControlo");
            entity.Property(e => e.IsScanFisico).HasColumnName("isScanFisico");
            entity.Property(e => e.IsValidNivelServico)
                .IsRequired()
                .HasDefaultValueSql("((1))")
                .HasColumnName("isValidNivelServico");
            entity.Property(e => e.OrdemCtrlRoom).HasColumnName("ordemCtrlRoom");
            entity.Property(e => e.ParaCobrancas).HasColumnName("para_cobrancas");
            entity.Property(e => e.ParaFacturar).HasColumnName("paraFacturar");
            entity.Property(e => e.ParaFacturarCliente).HasColumnName("paraFacturarCliente");
            entity.Property(e => e.ParaFacturarFornecedor).HasColumnName("paraFacturarFornecedor");
            entity.Property(e => e.Pda).HasColumnName("pda");
            entity.Property(e => e.Poddex).HasColumnName("poddex");
            entity.Property(e => e.Producao)
                .HasDefaultValueSql("((0))")
                .HasColumnName("PRODUCAO");
            entity.Property(e => e.SaidaDistribuicao).HasColumnName("saida_distribuicao");
            entity.Property(e => e.ScanType)
                .HasMaxLength(2)
                .IsUnicode(false)
                .HasColumnName("scanType");
            entity.Property(e => e.ScanTypeCode)
                .HasMaxLength(10)
                .HasColumnName("scanTypeCode");
            entity.Property(e => e.Security)
                .HasDefaultValueSql("((0))")
                .HasComment("Bit utilizado para o relatorio de 71 e distribuição para nao ter que martelar scans")
                .HasColumnName("security");
            entity.Property(e => e.SmallImg)
                .HasMaxLength(50)
                .HasColumnName("small_img");
            entity.Property(e => e.TrataNumRepeticoes).HasColumnName("trataNumRepeticoes");
            entity.Property(e => e.Tratamento).HasColumnName("tratamento");
            entity.Property(e => e.TratamentoCliente).HasColumnName("tratamentoCliente");
            entity.Property(e => e.TratamentoInterno).HasColumnName("tratamentoInterno");
        });

        modelBuilder.Entity<ScancodesTranslationsT>(entity =>
        {
            entity
                .HasNoKey()
                .ToTable("ScancodesTranslations_T");

            entity.Property(e => e.DescWeb)
                .HasMaxLength(50)
                .HasColumnName("descWeb");
            entity.Property(e => e.Descricao)
                .HasMaxLength(50)
                .HasColumnName("descricao");
            entity.Property(e => e.Id)
                .ValueGeneratedOnAdd()
                .HasColumnName("id");
            entity.Property(e => e.IdEntidade).HasColumnName("idEntidade");
            entity.Property(e => e.Lingua).HasMaxLength(10);
            entity.Property(e => e.Scancode)
                .HasMaxLength(2)
                .HasColumnName("scancode");
        });

        modelBuilder.Entity<ScansObfedex>(entity =>
        {
            entity.HasKey(e => e.Id).HasName("PK__ScansOBF__3214EC0750AE5AF4");

            entity.ToTable("ScansOBFedex");

            entity.HasIndex(e => new { e.Awb, e.ScanDate }, "idx_awb_scandate");

            entity.Property(e => e.Awb)
                .HasMaxLength(40)
                .HasColumnName("awb");
            entity.Property(e => e.Ded)
                .HasColumnType("datetime")
                .HasColumnName("ded");
            entity.Property(e => e.DtIntrod)
                .HasDefaultValueSql("(getdate())")
                .HasColumnType("datetime")
                .HasColumnName("dtIntrod");
            entity.Property(e => e.EventCode).HasMaxLength(2);
            entity.Property(e => e.EventDescription).HasMaxLength(200);
            entity.Property(e => e.ExcepCode).HasMaxLength(10);
            entity.Property(e => e.ExcepDescription).HasMaxLength(200);
            entity.Property(e => e.ScanDate)
                .HasColumnType("datetime")
                .HasColumnName("scanDate");
        });

        modelBuilder.Entity<ScansProvedoresT>(entity =>
        {
            entity.ToTable("ScansProvedores_T");

            entity.Property(e => e.Id).HasColumnName("id");
            entity.Property(e => e.CodigoScanProvedor)
                .HasMaxLength(100)
                .HasColumnName("codigoScanProvedor");
            entity.Property(e => e.IdProvedor).HasColumnName("idProvedor");
            entity.Property(e => e.IdScan)
                .HasMaxLength(2)
                .HasColumnName("idScan");
        });

        modelBuilder.Entity<SegmentosT>(entity =>
        {
            entity.HasKey(e => e.Id).HasName("PK_T_Segmentos");

            entity.ToTable("Segmentos_T");

            entity.Property(e => e.Id).HasColumnName("id");
            entity.Property(e => e.Descricao)
                .HasMaxLength(50)
                .HasColumnName("descricao");
        });

        modelBuilder.Entity<ServicosCliente>(entity =>
        {
            entity.HasIndex(e => new { e.IdServico, e.IdCliente }, "idx_idServico_idCliente").HasFillFactor(80);

            entity.Property(e => e.Id).HasColumnName("id");
            entity.Property(e => e.IdCliMorada).HasColumnName("idCliMorada");
            entity.Property(e => e.IdCliente).HasColumnName("idCliente");
            entity.Property(e => e.IdServico).HasColumnName("idServico");
        });

        modelBuilder.Entity<ServicosDetAreaNegT>(entity =>
        {
            entity.ToTable("ServicosDetAreaNeg_T");

            entity.Property(e => e.Id).HasColumnName("id");
            entity.Property(e => e.Activa)
                .IsRequired()
                .HasDefaultValueSql("(1)")
                .HasColumnName("activa");
            entity.Property(e => e.Codigo)
                .HasMaxLength(15)
                .HasColumnName("codigo");
            entity.Property(e => e.Descricao)
                .HasMaxLength(50)
                .HasColumnName("descricao");
        });

        modelBuilder.Entity<ServicosDetT>(entity =>
        {
            entity.HasKey(e => e.Id).HasName("PK_ServicosAdic_T");

            entity.ToTable("ServicosDet_T");

            entity.Property(e => e.Id).HasColumnName("id");
            entity.Property(e => e.Activo)
                .IsRequired()
                .HasDefaultValueSql("((1))")
                .HasColumnName("activo");
            entity.Property(e => e.AlteraCliente).HasColumnName("alteraCliente");
            entity.Property(e => e.AlteraDesconto).HasColumnName("alteraDesconto");
            entity.Property(e => e.AssociaCliente).HasColumnName("associaCliente");
            entity.Property(e => e.CgTpProdutoVang).HasColumnName("cg_tpProdutoVang");
            entity.Property(e => e.CodIva)
                .HasMaxLength(10)
                .HasColumnName("codIva");
            entity.Property(e => e.Codigo)
                .HasMaxLength(25)
                .HasColumnName("codigo");
            entity.Property(e => e.DescSos)
                .HasMaxLength(25)
                .HasColumnName("descSOS");
            entity.Property(e => e.Descricao)
                .HasMaxLength(60)
                .HasColumnName("descricao");
            entity.Property(e => e.DescricaoWeb)
                .HasMaxLength(100)
                .HasColumnName("descricaoWEB");
            entity.Property(e => e.IdAreaNeg)
                .HasDefaultValueSql("((1))")
                .HasColumnName("idAreaNeg");
            entity.Property(e => e.IdEntidade).HasColumnName("idEntidade");
            entity.Property(e => e.IdServicoDetBase).HasColumnName("idServicoDetBase");
            entity.Property(e => e.IdTipoIva).HasColumnName("idTipoIVA");
            entity.Property(e => e.ImportaCliente).HasColumnName("importaCliente");
            entity.Property(e => e.IncLinZero).HasColumnName("incLinZero");
            entity.Property(e => e.IsAdicional)
                .IsRequired()
                .HasDefaultValueSql("((1))")
                .HasColumnName("isAdicional");
            entity.Property(e => e.IsAuto).HasColumnName("isAuto");
            entity.Property(e => e.IsComissionavel)
                .IsRequired()
                .HasDefaultValueSql("((1))")
                .HasColumnName("isComissionavel");
            entity.Property(e => e.IsManual)
                .IsRequired()
                .HasDefaultValueSql("((1))")
                .HasColumnName("isManual");
            entity.Property(e => e.IsObrigatorio).HasColumnName("isObrigatorio");
            entity.Property(e => e.IsProducaoAgente).HasColumnName("isProducaoAgente");
            entity.Property(e => e.IsValidForSos).HasColumnName("isValidForSOS");
            entity.Property(e => e.IsValidRecolha)
                .HasDefaultValueSql("((0))")
                .HasColumnName("isValidRecolha");
            entity.Property(e => e.MostraCliente).HasColumnName("mostraCliente");
            entity.Property(e => e.MostraDesconto).HasColumnName("mostraDesconto");
            entity.Property(e => e.MostraWeb).HasColumnName("mostraWeb");
            entity.Property(e => e.ObrigatoriaSeValor).HasColumnName("obrigatoriaSeValor");
            entity.Property(e => e.PodeReqValidacao).HasColumnName("podeReqValidacao");
            entity.Property(e => e.TemTarifa).HasColumnName("temTarifa");
        });

        modelBuilder.Entity<ServicosDetTBackupHd>(entity =>
        {
            entity
                .HasNoKey()
                .ToTable("ServicosDet_T_backupHD");

            entity.Property(e => e.Activo).HasColumnName("activo");
            entity.Property(e => e.AlteraCliente).HasColumnName("alteraCliente");
            entity.Property(e => e.AlteraDesconto).HasColumnName("alteraDesconto");
            entity.Property(e => e.AssociaCliente).HasColumnName("associaCliente");
            entity.Property(e => e.CgTpProdutoVang).HasColumnName("cg_tpProdutoVang");
            entity.Property(e => e.CodIva)
                .HasMaxLength(10)
                .HasColumnName("codIva");
            entity.Property(e => e.Codigo)
                .HasMaxLength(25)
                .HasColumnName("codigo");
            entity.Property(e => e.DescSos)
                .HasMaxLength(25)
                .HasColumnName("descSOS");
            entity.Property(e => e.Descricao)
                .HasMaxLength(60)
                .HasColumnName("descricao");
            entity.Property(e => e.Id).HasColumnName("id");
            entity.Property(e => e.IdAreaNeg).HasColumnName("idAreaNeg");
            entity.Property(e => e.IdEntidade).HasColumnName("idEntidade");
            entity.Property(e => e.IdServicoDetBase).HasColumnName("idServicoDetBase");
            entity.Property(e => e.IdTipoIva).HasColumnName("idTipoIVA");
            entity.Property(e => e.ImportaCliente).HasColumnName("importaCliente");
            entity.Property(e => e.IncLinZero).HasColumnName("incLinZero");
            entity.Property(e => e.IsAdicional).HasColumnName("isAdicional");
            entity.Property(e => e.IsAuto).HasColumnName("isAuto");
            entity.Property(e => e.IsComissionavel).HasColumnName("isComissionavel");
            entity.Property(e => e.IsManual).HasColumnName("isManual");
            entity.Property(e => e.IsObrigatorio).HasColumnName("isObrigatorio");
            entity.Property(e => e.IsProducaoAgente).HasColumnName("isProducaoAgente");
            entity.Property(e => e.IsValidForSos).HasColumnName("isValidForSOS");
            entity.Property(e => e.IsValidRecolha).HasColumnName("isValidRecolha");
            entity.Property(e => e.MostraCliente).HasColumnName("mostraCliente");
            entity.Property(e => e.MostraDesconto).HasColumnName("mostraDesconto");
            entity.Property(e => e.ObrigatoriaSeValor).HasColumnName("obrigatoriaSeValor");
            entity.Property(e => e.PodeReqValidacao).HasColumnName("podeReqValidacao");
            entity.Property(e => e.TemTarifa).HasColumnName("temTarifa");
        });

        modelBuilder.Entity<ServicosDetTBk20170317>(entity =>
        {
            entity
                .HasNoKey()
                .ToTable("ServicosDet_T_BK20170317");

            entity.Property(e => e.Activo).HasColumnName("activo");
            entity.Property(e => e.AlteraCliente).HasColumnName("alteraCliente");
            entity.Property(e => e.AlteraDesconto).HasColumnName("alteraDesconto");
            entity.Property(e => e.AssociaCliente).HasColumnName("associaCliente");
            entity.Property(e => e.CgTpProdutoVang).HasColumnName("cg_tpProdutoVang");
            entity.Property(e => e.CodIva)
                .HasMaxLength(10)
                .HasColumnName("codIva");
            entity.Property(e => e.Codigo)
                .HasMaxLength(25)
                .HasColumnName("codigo");
            entity.Property(e => e.DescSos)
                .HasMaxLength(25)
                .HasColumnName("descSOS");
            entity.Property(e => e.Descricao)
                .HasMaxLength(60)
                .HasColumnName("descricao");
            entity.Property(e => e.DescricaoWeb)
                .HasMaxLength(100)
                .HasColumnName("descricaoWEB");
            entity.Property(e => e.Id)
                .ValueGeneratedOnAdd()
                .HasColumnName("id");
            entity.Property(e => e.IdAreaNeg).HasColumnName("idAreaNeg");
            entity.Property(e => e.IdEntidade).HasColumnName("idEntidade");
            entity.Property(e => e.IdServicoDetBase).HasColumnName("idServicoDetBase");
            entity.Property(e => e.IdTipoIva).HasColumnName("idTipoIVA");
            entity.Property(e => e.ImportaCliente).HasColumnName("importaCliente");
            entity.Property(e => e.IncLinZero).HasColumnName("incLinZero");
            entity.Property(e => e.IsAdicional).HasColumnName("isAdicional");
            entity.Property(e => e.IsAuto).HasColumnName("isAuto");
            entity.Property(e => e.IsComissionavel).HasColumnName("isComissionavel");
            entity.Property(e => e.IsManual).HasColumnName("isManual");
            entity.Property(e => e.IsObrigatorio).HasColumnName("isObrigatorio");
            entity.Property(e => e.IsProducaoAgente).HasColumnName("isProducaoAgente");
            entity.Property(e => e.IsValidForSos).HasColumnName("isValidForSOS");
            entity.Property(e => e.IsValidRecolha).HasColumnName("isValidRecolha");
            entity.Property(e => e.MostraCliente).HasColumnName("mostraCliente");
            entity.Property(e => e.MostraDesconto).HasColumnName("mostraDesconto");
            entity.Property(e => e.MostraWeb).HasColumnName("mostraWeb");
            entity.Property(e => e.ObrigatoriaSeValor).HasColumnName("obrigatoriaSeValor");
            entity.Property(e => e.PodeReqValidacao).HasColumnName("podeReqValidacao");
            entity.Property(e => e.TemTarifa).HasColumnName("temTarifa");
        });

        modelBuilder.Entity<ServicosDiasTransito>(entity =>
        {
            entity.ToTable("ServicosDiasTransito");

            entity.Property(e => e.Id).HasColumnName("id");
            entity.Property(e => e.DiasTransito).HasColumnName("diasTransito");
            entity.Property(e => e.IdServico).HasColumnName("idServico");
            entity.Property(e => e.ZonaDestino)
                .HasMaxLength(50)
                .HasColumnName("zonaDestino");
            entity.Property(e => e.ZonaOrigem)
                .HasMaxLength(50)
                .HasColumnName("zonaOrigem");
        });

        modelBuilder.Entity<ServicosDiasTransitoZona>(entity =>
        {
            entity.Property(e => e.Id).HasColumnName("id");
            entity.Property(e => e.Cpostal0)
                .HasMaxLength(15)
                .HasColumnName("cpostal0");
            entity.Property(e => e.Cpostal1)
                .HasMaxLength(15)
                .HasColumnName("cpostal1");
            entity.Property(e => e.IdPais).HasColumnName("idPais");
            entity.Property(e => e.IdServico).HasColumnName("idServico");
            entity.Property(e => e.Zona)
                .HasMaxLength(10)
                .HasColumnName("zona");
        });

        modelBuilder.Entity<ServicosDiasTransitoZonas0>(entity =>
        {
            entity.ToTable("ServicosDiasTransitoZonas0");

            entity.Property(e => e.Id).HasColumnName("id");
            entity.Property(e => e.Cpostal0)
                .HasMaxLength(15)
                .HasColumnName("cpostal0");
            entity.Property(e => e.Cpostal1)
                .HasMaxLength(15)
                .HasColumnName("cpostal1");
            entity.Property(e => e.IdPais).HasColumnName("idPais");
            entity.Property(e => e.IdServico).HasColumnName("idServico");
            entity.Property(e => e.Zona)
                .HasMaxLength(10)
                .HasColumnName("zona");
        });

        modelBuilder.Entity<ServicosEspeciai>(entity =>
        {
            entity.HasIndex(e => e.DtInicio, "idx_dtinicio_dtfim_idMotorista_idrota").HasFillFactor(80);

            entity.Property(e => e.Id).HasColumnName("id");
            entity.Property(e => e.CustoExtra)
                .HasColumnType("money")
                .HasColumnName("custoExtra");
            entity.Property(e => e.CustoTotal)
                .HasColumnType("money")
                .HasColumnName("custoTotal");
            entity.Property(e => e.Descricao)
                .HasMaxLength(50)
                .IsUnicode(false)
                .HasColumnName("descricao");
            entity.Property(e => e.DtFim)
                .HasColumnType("datetime")
                .HasColumnName("dtFim");
            entity.Property(e => e.DtInicio)
                .HasColumnType("datetime")
                .HasColumnName("dtInicio");
            entity.Property(e => e.DtIntrod)
                .HasColumnType("datetime")
                .HasColumnName("dtIntrod");
            entity.Property(e => e.FacturarFedex).HasColumnName("facturarFedex");
            entity.Property(e => e.IdAgente).HasColumnName("idAgente");
            entity.Property(e => e.IdCliMoradaFact).HasColumnName("idCliMoradaFact");
            entity.Property(e => e.IdClienteFactura).HasColumnName("idClienteFactura");
            entity.Property(e => e.IdMotorista).HasColumnName("idMotorista");
            entity.Property(e => e.IdRota)
                .HasMaxLength(10)
                .IsUnicode(false)
                .HasColumnName("idRota");
            entity.Property(e => e.IdUtilIntrod).HasColumnName("idUtilIntrod");
            entity.Property(e => e.KmsFim).HasColumnName("kmsFim");
            entity.Property(e => e.KmsIni).HasColumnName("kmsIni");
            entity.Property(e => e.Matricula)
                .HasMaxLength(50)
                .IsUnicode(false)
                .HasColumnName("matricula");
            entity.Property(e => e.Obs)
                .HasMaxLength(255)
                .IsUnicode(false);
            entity.Property(e => e.Proveito)
                .HasColumnType("money")
                .HasColumnName("proveito");
            entity.Property(e => e.ServicoExtraordinario).HasColumnName("servicoExtraordinario");
        });

        modelBuilder.Entity<ServicosEspeciaisCategoriasT>(entity =>
        {
            entity.ToTable("ServicosEspeciaisCategorias_T");

            entity.Property(e => e.Id).HasColumnName("id");
            entity.Property(e => e.Activo)
                .IsRequired()
                .HasDefaultValueSql("(1)")
                .HasColumnName("activo");
            entity.Property(e => e.Descricao)
                .HasMaxLength(50)
                .HasColumnName("descricao");
        });

        modelBuilder.Entity<ServicosEspeciaisFedex>(entity =>
        {
            entity.ToTable("ServicosEspeciaisFedex");

            entity.Property(e => e.Id).HasColumnName("id");
            entity.Property(e => e.Activo)
                .IsRequired()
                .HasDefaultValueSql("((1))")
                .HasColumnName("activo");
            entity.Property(e => e.Codigo)
                .HasMaxLength(15)
                .HasColumnName("codigo");
            entity.Property(e => e.Descricao)
                .HasMaxLength(50)
                .HasColumnName("descricao");
            entity.Property(e => e.FactClienteKg)
                .HasColumnType("money")
                .HasColumnName("factClienteKg");
            entity.Property(e => e.FactFedex)
                .HasColumnType("money")
                .HasColumnName("factFedex");
            entity.Property(e => e.IdProduto).HasColumnName("idProduto");
            entity.Property(e => e.SiglaCosmos)
                .HasMaxLength(2)
                .HasColumnName("siglaCosmos");
            entity.Property(e => e.Tipo)
                .HasMaxLength(50)
                .HasColumnName("tipo");
        });

        modelBuilder.Entity<ServicosProduto>(entity =>
        {
            entity.HasIndex(e => new { e.DtInicio, e.IdServico, e.IdRegime, e.IdProduto }, "NonClusteredIndex-20190215-125347");

            entity.Property(e => e.Id).HasColumnName("id");
            entity.Property(e => e.Activo)
                .IsRequired()
                .HasDefaultValueSql("((1))")
                .HasColumnName("activo");
            entity.Property(e => e.DtInicio)
                .HasColumnType("date")
                .HasColumnName("dtInicio");
            entity.Property(e => e.IdProduto).HasColumnName("idProduto");
            entity.Property(e => e.IdProdutoFact).HasColumnName("idProdutoFact");
            entity.Property(e => e.IdRegime).HasColumnName("idRegime");
            entity.Property(e => e.IdServico).HasColumnName("idServico");
            entity.Property(e => e.PesoMax)
                .HasColumnType("money")
                .HasColumnName("pesoMax");
            entity.Property(e => e.PesoMin)
                .HasColumnType("money")
                .HasColumnName("pesoMin");
            entity.Property(e => e.PesoMinFact)
                .HasColumnType("money")
                .HasColumnName("pesoMinFact");
            entity.Property(e => e.PesoMinFactPorVol)
                .HasColumnType("money")
                .HasColumnName("pesoMinFactPorVol");
            entity.Property(e => e.Visivel)
                .IsRequired()
                .HasDefaultValueSql("((1))")
                .HasColumnName("visivel");
        });

        modelBuilder.Entity<ServicosProvedoresT>(entity =>
        {
            entity.ToTable("ServicosProvedores_T");

            entity.Property(e => e.Id).HasColumnName("id");
            entity.Property(e => e.CodigoServicoProvedor)
                .HasMaxLength(100)
                .HasColumnName("codigoServicoProvedor");
            entity.Property(e => e.IdProvedor).HasColumnName("idProvedor");
            entity.Property(e => e.IdServico).HasColumnName("idServico");
        });

        modelBuilder.Entity<ServicosRegimesDet>(entity =>
        {
            entity.HasKey(e => new { e.IdServico, e.IdRegime, e.IdServicoDet }).HasName("PK_ServicosRegimes");

            entity.ToTable("ServicosRegimesDet");

            entity.Property(e => e.IdServico).HasColumnName("idServico");
            entity.Property(e => e.IdRegime).HasColumnName("idRegime");
            entity.Property(e => e.IdServicoDet).HasColumnName("idServicoDet");
            entity.Property(e => e.Activo)
                .IsRequired()
                .HasDefaultValueSql("((1))")
                .HasColumnName("activo");
            entity.Property(e => e.CodIva)
                .HasMaxLength(10)
                .HasColumnName("codIva");
            entity.Property(e => e.Id)
                .ValueGeneratedOnAdd()
                .HasColumnName("id");
            entity.Property(e => e.IdTipoIva).HasColumnName("idTipoIVA");
        });

        modelBuilder.Entity<ServicosT>(entity =>
        {
            entity.HasKey(e => e.Id).HasName("PK_T_Servicos");

            entity.ToTable("Servicos_T");

            entity.Property(e => e.Id).HasColumnName("id");
            entity.Property(e => e.Activo)
                .IsRequired()
                .HasDefaultValueSql("((1))")
                .HasColumnName("activo");
            entity.Property(e => e.Codigo)
                .HasMaxLength(15)
                .HasColumnName("codigo");
            entity.Property(e => e.ContaTempoTransito).HasColumnName("contaTempoTransito");
            entity.Property(e => e.Default).HasColumnName("default");
            entity.Property(e => e.Descricao)
                .HasMaxLength(50)
                .HasColumnName("descricao");
            entity.Property(e => e.DiasTransito)
                .HasDefaultValueSql("((1))")
                .HasColumnName("diasTransito");
            entity.Property(e => e.DivVolumetrico)
                .HasColumnType("money")
                .HasColumnName("divVolumetrico");
            entity.Property(e => e.EnvInterface).HasColumnName("envInterface");
            entity.Property(e => e.HoraEntrega)
                .HasColumnType("datetime")
                .HasColumnName("horaEntrega");
            entity.Property(e => e.IdEntidade).HasColumnName("idEntidade");
            entity.Property(e => e.IdSegmento).HasColumnName("idSegmento");
            entity.Property(e => e.IsComissionavel)
                .IsRequired()
                .HasDefaultValueSql("((1))")
                .HasColumnName("isComissionavel");
            entity.Property(e => e.IsFacturavelCliente)
                .IsRequired()
                .HasDefaultValueSql("((1))")
                .HasColumnName("isFacturavelCliente");
            entity.Property(e => e.IsValidDataEntry)
                .IsRequired()
                .HasDefaultValueSql("((1))")
                .HasColumnName("isValidDataEntry");
            entity.Property(e => e.IsValidPortal).HasColumnName("isValidPortal");
            entity.Property(e => e.MaxDimInCm)
                .HasColumnType("money")
                .HasColumnName("maxDimInCm");
            entity.Property(e => e.MaxSizeInCm)
                .HasColumnType("money")
                .HasColumnName("maxSizeInCm");
            entity.Property(e => e.MaxWeight)
                .HasColumnType("money")
                .HasColumnName("maxWeight");
            entity.Property(e => e.MaxWeightPerVol)
                .HasColumnType("money")
                .HasColumnName("maxWeightPerVol");
            entity.Property(e => e.PesoMinFact)
                .HasColumnType("money")
                .HasColumnName("pesoMinFact");
            entity.Property(e => e.PesoMinUni)
                .HasColumnType("money")
                .HasColumnName("pesoMinUni");
            entity.Property(e => e.Posicao)
                .HasDefaultValueSql("((99))")
                .HasColumnName("posicao");
            entity.Property(e => e.Recolha).HasColumnName("recolha");
            entity.Property(e => e.UseKpi)
                .IsRequired()
                .HasDefaultValueSql("((1))")
                .HasColumnName("useKPI");
        });

        modelBuilder.Entity<ServicosUnixGcommap>(entity =>
        {
            entity
                .HasNoKey()
                .ToTable("Servicos_UnixGCOMMap");

            entity.Property(e => e.DescricaoUnix)
                .HasMaxLength(50)
                .IsUnicode(false)
                .HasColumnName("descricaoUnix");
            entity.Property(e => e.IdGcom).HasColumnName("idGCOM");
            entity.Property(e => e.IdUnix).HasColumnName("idUnix");
        });

        modelBuilder.Entity<Simulacao2016>(entity =>
        {
            entity
                .HasNoKey()
                .ToTable("Simulacao2016");

            entity.Property(e => e.AgrvDevSugestãoComercial)
                .HasMaxLength(255)
                .HasColumnName("AGRV# DEV# SUGESTÃO COMERCIAL");
            entity.Property(e => e.DevGrSugestãoComercial)
                .HasMaxLength(255)
                .HasColumnName("DEV# GR# SUGESTÃO COMERCIAL");
            entity.Property(e => e.DevGrSugestãoEmpresa)
                .HasMaxLength(255)
                .HasColumnName("DEV# GR# SUGESTÃO EMPRESA");
            entity.Property(e => e.EnvioSeguroSugestãoComercial)
                .HasMaxLength(255)
                .HasColumnName("ENVIO SEGURO SUGESTÃO COMERCIAL");
            entity.Property(e => e.FuelR19SugestãoEmpresa)
                .HasMaxLength(255)
                .HasColumnName("FUEL R19 SUGESTÃO EMPRESA");
            entity.Property(e => e.FuelRiaSugestãoComercial)
                .HasMaxLength(255)
                .HasColumnName("FUEL RIA SUGESTÃO COMERCIAL");
            entity.Property(e => e.FuelRimSugestãoComercial)
                .HasMaxLength(255)
                .HasColumnName("FUEL RIM SUGESTÃO COMERCIAL");
            entity.Property(e => e.GSupSugestãoEmpresa)
                .HasMaxLength(255)
                .HasColumnName("G# SUP# SUGESTÃO EMPRESA");
            entity.Property(e => e.HandlingSugestãoComercial)
                .HasMaxLength(255)
                .HasColumnName("HANDLING SUGESTÃO COMERCIAL");
            entity.Property(e => e.Id).HasColumnName("id");
            entity.Property(e => e.PodSugestãoEmpresa)
                .HasMaxLength(255)
                .HasColumnName("POD# SUGESTÃO EMPRESA");
            entity.Property(e => e.R19exp)
                .HasMaxLength(255)
                .HasColumnName("R19EXP");
            entity.Property(e => e.Rdiexp)
                .HasMaxLength(255)
                .HasColumnName("RDIEXP");
            entity.Property(e => e.Riaexp)
                .HasMaxLength(255)
                .HasColumnName("RIAEXP");
            entity.Property(e => e.Rimexp)
                .HasMaxLength(255)
                .HasColumnName("RIMEXP");
            entity.Property(e => e.TxAdicSugestãoComercial)
                .HasMaxLength(255)
                .HasColumnName("TX# ADIC# SUGESTÃO COMERCIAL");
            entity.Property(e => e.TxFrioSugestãoComercial)
                .HasMaxLength(255)
                .HasColumnName("TX# FRIO SUGESTÃO COMERCIAL");
            entity.Property(e => e.TxNumSugestãoComercial)
                .HasMaxLength(255)
                .HasColumnName("TX# NUM# SUGESTÃO COMERCIAL");
            entity.Property(e => e.TxReembSugestãoComercial)
                .HasMaxLength(255)
                .HasColumnName("TX# REEMB# SUGESTÃO COMERCIAL");
            entity.Property(e => e.TxReembSugestãoEmpresa)
                .HasMaxLength(255)
                .HasColumnName("TX# REEMB# SUGESTÃO EMPRESA");
            entity.Property(e => e.Xlexp)
                .HasMaxLength(255)
                .HasColumnName("XLEXP");
            entity.Property(e => e._2tentEntregaSugestãoComercial)
                .HasMaxLength(255)
                .HasColumnName("2TENT# ENTREGA SUGESTÃO COMERCIAL");
        });

        modelBuilder.Entity<Sospedido>(entity =>
        {
            entity.ToTable("SOSPedido");

            entity.Property(e => e.Id).HasColumnName("id");
            entity.Property(e => e.ContactoTelf).HasColumnName("contactoTelf");
            entity.Property(e => e.CpostalEnt)
                .HasMaxLength(8)
                .HasColumnName("cpostalEnt");
            entity.Property(e => e.CpostalRec)
                .HasMaxLength(8)
                .HasColumnName("cpostalRec");
            entity.Property(e => e.DescMercadoria)
                .HasMaxLength(150)
                .HasColumnName("descMercadoria");
            entity.Property(e => e.DtEntrega)
                .HasColumnType("date")
                .HasColumnName("dtEntrega");
            entity.Property(e => e.DtIntrod)
                .HasDefaultValueSql("(getdate())")
                .HasColumnType("datetime")
                .HasColumnName("dtIntrod");
            entity.Property(e => e.DtRecolha)
                .HasColumnType("date")
                .HasColumnName("dtRecolha");
            entity.Property(e => e.DtUltAct)
                .HasColumnType("datetime")
                .HasColumnName("dtUltAct");
            entity.Property(e => e.Email)
                .HasMaxLength(50)
                .HasColumnName("email");
            entity.Property(e => e.EmailRec)
                .HasMaxLength(50)
                .HasColumnName("emailRec");
            entity.Property(e => e.EmpresaEnt)
                .HasMaxLength(50)
                .HasColumnName("empresaEnt");
            entity.Property(e => e.EmpresaRec)
                .HasMaxLength(50)
                .HasColumnName("empresaRec");
            entity.Property(e => e.Encerrado).HasColumnName("encerrado");
            entity.Property(e => e.EnvPropostaCliente).HasColumnName("envPropostaCliente");
            entity.Property(e => e.HoraEntDisp).HasColumnName("horaEntDisp");
            entity.Property(e => e.HoraEntMax).HasColumnName("horaEntMax");
            entity.Property(e => e.HoraRecDisp).HasColumnName("horaRecDisp");
            entity.Property(e => e.HoraRecMax).HasColumnName("horaRecMax");
            entity.Property(e => e.IdCliMorada).HasColumnName("idCliMorada");
            entity.Property(e => e.IdCliente).HasColumnName("idCliente");
            entity.Property(e => e.IdCpostalEnt).HasColumnName("idCPostalEnt");
            entity.Property(e => e.IdCpostalRec).HasColumnName("idCPostalRec");
            entity.Property(e => e.IdEntidade).HasColumnName("idEntidade");
            entity.Property(e => e.IdEstado).HasColumnName("idEstado");
            entity.Property(e => e.IdManifesto).HasColumnName("idManifesto");
            entity.Property(e => e.IdMotivoRejeitado).HasColumnName("idMotivoRejeitado");
            entity.Property(e => e.IdPaisEnt).HasColumnName("idPaisEnt");
            entity.Property(e => e.IdPaisRec).HasColumnName("idPaisRec");
            entity.Property(e => e.IdTipoVia).HasColumnName("idTipoVia");
            entity.Property(e => e.IdTipoViatura).HasColumnName("idTipoViatura");
            entity.Property(e => e.IdUtilIntrod).HasColumnName("idUtilIntrod");
            entity.Property(e => e.IdUtilUltAct).HasColumnName("idUtilUltAct");
            entity.Property(e => e.LocalidadeEnt)
                .HasMaxLength(50)
                .HasColumnName("localidadeEnt");
            entity.Property(e => e.LocalidadeRec)
                .HasMaxLength(50)
                .HasColumnName("localidadeRec");
            entity.Property(e => e.MargemLucro)
                .HasColumnType("money")
                .HasColumnName("margemLucro");
            entity.Property(e => e.MoradaEnt)
                .HasMaxLength(100)
                .HasColumnName("moradaEnt");
            entity.Property(e => e.MoradaRec)
                .HasMaxLength(100)
                .HasColumnName("moradaRec");
            entity.Property(e => e.Nif)
                .HasMaxLength(20)
                .HasColumnName("nif");
            entity.Property(e => e.Nome)
                .HasMaxLength(50)
                .HasColumnName("nome");
            entity.Property(e => e.NomeEnt)
                .HasMaxLength(50)
                .HasColumnName("nomeEnt");
            entity.Property(e => e.NomeRec)
                .HasMaxLength(50)
                .HasColumnName("nomeRec");
            entity.Property(e => e.NrVolumes).HasColumnName("nrVolumes");
            entity.Property(e => e.ObsRejeitado)
                .HasMaxLength(250)
                .HasColumnName("obsRejeitado");
            entity.Property(e => e.Observacoes)
                .HasMaxLength(255)
                .HasColumnName("observacoes");
            entity.Property(e => e.PesoTotal)
                .HasColumnType("money")
                .HasColumnName("pesoTotal");
            entity.Property(e => e.TelefoneEnt).HasColumnName("telefoneEnt");
            entity.Property(e => e.TelefoneRec).HasColumnName("telefoneRec");
            entity.Property(e => e.Valor)
                .HasColumnType("money")
                .HasColumnName("valor");
        });

        modelBuilder.Entity<SospedidoDetalhe>(entity =>
        {
            entity.ToTable("SOSPedidoDetalhes");

            entity.Property(e => e.Id).HasColumnName("id");
            entity.Property(e => e.DtIntrod)
                .HasDefaultValueSql("(getdate())")
                .HasColumnType("datetime")
                .HasColumnName("dtIntrod");
            entity.Property(e => e.IdSospedido).HasColumnName("idSOSPedido");
            entity.Property(e => e.IdTipoDetalhe).HasColumnName("idTipoDetalhe");
            entity.Property(e => e.IdUtilIntrod).HasColumnName("idUtilIntrod");
            entity.Property(e => e.Observacoes)
                .HasMaxLength(500)
                .HasColumnName("observacoes");
        });

        modelBuilder.Entity<SospedidoEstadosT>(entity =>
        {
            entity.ToTable("SOSPedidoEstados_T");

            entity.Property(e => e.Id).HasColumnName("id");
            entity.Property(e => e.Activo)
                .IsRequired()
                .HasDefaultValueSql("((1))")
                .HasColumnName("activo");
            entity.Property(e => e.Codigo)
                .HasMaxLength(15)
                .HasColumnName("codigo");
            entity.Property(e => e.Descricao)
                .HasMaxLength(50)
                .HasColumnName("descricao");
            entity.Property(e => e.Finaliza).HasColumnName("finaliza");
        });

        modelBuilder.Entity<SospedidoItem>(entity =>
        {
            entity.ToTable("SOSPedidoItems");

            entity.Property(e => e.Id).HasColumnName("id");
            entity.Property(e => e.IdServicoDet).HasColumnName("idServicoDet");
            entity.Property(e => e.IdSospedido).HasColumnName("idSOSPedido");
        });

        modelBuilder.Entity<SospedidoMotivoRejeitadoT>(entity =>
        {
            entity.ToTable("SOSPedidoMotivoRejeitado_T");

            entity.Property(e => e.Id).HasColumnName("id");
            entity.Property(e => e.Activo)
                .IsRequired()
                .HasDefaultValueSql("((1))")
                .HasColumnName("activo");
            entity.Property(e => e.DescCurta)
                .HasMaxLength(25)
                .HasColumnName("descCurta");
            entity.Property(e => e.Descricao)
                .HasMaxLength(50)
                .HasColumnName("descricao");
        });

        modelBuilder.Entity<SospedidoTipoDetalhesT>(entity =>
        {
            entity.HasKey(e => e.Id).HasName("PK_SOSPedidoTipoDetalhes");

            entity.ToTable("SOSPedidoTipoDetalhes_T");

            entity.Property(e => e.Id).HasColumnName("id");
            entity.Property(e => e.Activo)
                .IsRequired()
                .HasDefaultValueSql("((1))")
                .HasColumnName("activo");
            entity.Property(e => e.Codigo)
                .HasMaxLength(15)
                .HasColumnName("codigo");
            entity.Property(e => e.Descricao)
                .HasMaxLength(50)
                .HasColumnName("descricao");
            entity.Property(e => e.Detalhe)
                .HasMaxLength(150)
                .HasColumnName("detalhe");
            entity.Property(e => e.Ordem).HasColumnName("ordem");
        });

        modelBuilder.Entity<SospedidoTransportadore>(entity =>
        {
            entity.ToTable("SOSPedidoTransportadores");

            entity.Property(e => e.Id).HasColumnName("id");
            entity.Property(e => e.Custo)
                .HasColumnType("money")
                .HasColumnName("custo");
            entity.Property(e => e.Disponivel).HasColumnName("disponivel");
            entity.Property(e => e.DtIntrod)
                .HasColumnType("datetime")
                .HasColumnName("dtIntrod");
            entity.Property(e => e.DtUltAct)
                .HasColumnType("datetime")
                .HasColumnName("dtUltAct");
            entity.Property(e => e.EnvProposta).HasColumnName("envProposta");
            entity.Property(e => e.IdClienteFornecedor).HasColumnName("idClienteFornecedor");
            entity.Property(e => e.IdEntidade).HasColumnName("idEntidade");
            entity.Property(e => e.IdSospedido).HasColumnName("idSOSPedido");
            entity.Property(e => e.IdUtilIntrod).HasColumnName("idUtilIntrod");
            entity.Property(e => e.IdUtilUltAct).HasColumnName("idUtilUltAct");
            entity.Property(e => e.IdViatura).HasColumnName("idViatura");
            entity.Property(e => e.RespProposta).HasColumnName("respProposta");
            entity.Property(e => e.Seleccionado).HasColumnName("seleccionado");
        });

        modelBuilder.Entity<SospedidoVolume>(entity =>
        {
            entity.ToTable("SOSPedidoVolumes");

            entity.Property(e => e.Id).HasColumnName("id");
            entity.Property(e => e.Altura).HasColumnName("altura");
            entity.Property(e => e.Comprimento).HasColumnName("comprimento");
            entity.Property(e => e.IdSospedido).HasColumnName("idSOSPedido");
            entity.Property(e => e.Largura).HasColumnName("largura");
            entity.Property(e => e.M3).HasColumnName("m3");
            entity.Property(e => e.Peso).HasColumnName("peso");
        });

        modelBuilder.Entity<SpInputDadosXml>(entity =>
        {
            entity.HasKey(e => e.Id).HasName("PK__Sp_Input__3213E83F582F3A0C");

            entity.ToTable("Sp_Input_DadosXML");

            entity.HasIndex(e => e.DtIntrod, "NonClusteredIndex-20191219-124946");

            entity.Property(e => e.Id).HasColumnName("id");
            entity.Property(e => e.Dados).HasColumnName("dados");
            entity.Property(e => e.DtIntrod)
                .HasDefaultValueSql("(getdate())")
                .HasColumnType("datetime")
                .HasColumnName("dtIntrod");
        });

        modelBuilder.Entity<SwapT>(entity =>
        {
            entity.HasKey(e => e.Id).HasName("PK__Swap_T__3213E83F7A6B5C54");

            entity.ToTable("Swap_T");

            entity.Property(e => e.Id).HasColumnName("id");
            entity.Property(e => e.Activo).HasColumnName("activo");
            entity.Property(e => e.Codigo)
                .HasMaxLength(10)
                .HasColumnName("codigo");
            entity.Property(e => e.Descricao)
                .HasMaxLength(100)
                .HasColumnName("descricao");
        });

        modelBuilder.Entity<TableTest>(entity =>
        {
            entity
                .HasNoKey()
                .ToTable("TableTest");

            entity.Property(e => e.Codigo)
                .HasComputedColumnSql("([dbo].[getNewCodigo]([idEntidade]))", false)
                .HasColumnName("codigo");
            entity.Property(e => e.Id)
                .ValueGeneratedOnAdd()
                .HasColumnName("id");
            entity.Property(e => e.IdEntidade).HasColumnName("idEntidade");
        });

        modelBuilder.Entity<Tarifa>(entity =>
        {
            entity.ToTable("Tarifa");

            entity.HasIndex(e => new { e.IdTarifaTipo, e.IdTipoIncidencia, e.IdUtilMotorista, e.DtInicio }, "IX_Tarifa_idTarifaTipo_idTipoIncidencia_idUtilMotorista_dtInicio");

            entity.HasIndex(e => new { e.Codigo, e.IdEntidade }, "idx_codigo").HasFillFactor(80);

            entity.HasIndex(e => new { e.IdTarifaTipo, e.IdCliente, e.DtInicio }, "idx_idTarifaTipo_idCliente_dtInicio");

            entity.HasIndex(e => e.IdCliente, "idx_idcliente").HasFillFactor(80);

            entity.HasIndex(e => new { e.IdEntidade, e.IdServicoDet }, "idx_identidade").HasFillFactor(80);

            entity.HasIndex(e => e.IdRegime, "idx_idregime").HasFillFactor(80);

            entity.HasIndex(e => new { e.IdTarifaTipo, e.IdEntidade, e.IdRegime, e.IdServico, e.IdServicoDet, e.Activa, e.DtInicioDef, e.DtFimDef }, "idx_idtarifatipo_identidade_idservico").HasFillFactor(80);

            entity.Property(e => e.Id).HasColumnName("id");
            entity.Property(e => e.Activa)
                .IsRequired()
                .HasDefaultValueSql("((1))")
                .HasColumnName("activa");
            entity.Property(e => e.Codigo)
                .HasMaxLength(25)
                .HasColumnName("codigo");
            entity.Property(e => e.Default).HasColumnName("default");
            entity.Property(e => e.Descricao)
                .HasMaxLength(200)
                .HasColumnName("descricao");
            entity.Property(e => e.DtFim)
                .HasColumnType("datetime")
                .HasColumnName("dtFim");
            entity.Property(e => e.DtFimDef)
                .HasColumnType("datetime")
                .HasColumnName("dtFimDef");
            entity.Property(e => e.DtInicio)
                .HasDefaultValueSql("(getdate())")
                .HasColumnType("datetime")
                .HasColumnName("dtInicio");
            entity.Property(e => e.DtInicioDef)
                .HasColumnType("datetime")
                .HasColumnName("dtInicioDef");
            entity.Property(e => e.DtIntrod)
                .HasDefaultValueSql("(getdate())")
                .HasColumnType("datetime")
                .HasColumnName("dtIntrod");
            entity.Property(e => e.DtValida)
                .HasColumnType("datetime")
                .HasColumnName("dtValida");
            entity.Property(e => e.FactEsperada)
                .HasColumnType("money")
                .HasColumnName("factEsperada");
            entity.Property(e => e.FactMaxEsperada)
                .HasColumnType("money")
                .HasColumnName("factMaxEsperada");
            entity.Property(e => e.FactMinEsperada)
                .HasColumnType("money")
                .HasColumnName("factMinEsperada");
            entity.Property(e => e.IdCliMorada).HasColumnName("idCliMorada");
            entity.Property(e => e.IdCliente)
                .HasComment("disponível apenas para cliente seleccionado")
                .HasColumnName("idCliente");
            entity.Property(e => e.IdEntidade).HasColumnName("idEntidade");
            entity.Property(e => e.IdFicheiro).HasColumnName("idFicheiro");
            entity.Property(e => e.IdMoeda).HasColumnName("idMoeda");
            entity.Property(e => e.IdRegime).HasColumnName("idRegime");
            entity.Property(e => e.IdRota).HasColumnName("idRota");
            entity.Property(e => e.IdServico).HasColumnName("idServico");
            entity.Property(e => e.IdServicoDet)
                .HasDefaultValueSql("((0))")
                .HasColumnName("idServicoDet");
            entity.Property(e => e.IdTarifaTipo).HasColumnName("idTarifaTipo");
            entity.Property(e => e.IdTipoIncidencia).HasColumnName("idTipoIncidencia");
            entity.Property(e => e.IdUtilIntrod).HasColumnName("idUtilIntrod");
            entity.Property(e => e.IdUtilMotorista).HasColumnName("idUtilMotorista");
            entity.Property(e => e.IdUtilValida).HasColumnName("idUtilValida");
            entity.Property(e => e.IsSimulavel).HasColumnName("isSimulavel");
            entity.Property(e => e.TabAutoDefault).HasColumnName("tabAutoDefault");
            entity.Property(e => e.TabEmpresa).HasColumnName("tabEmpresa");
            entity.Property(e => e.UnidArredondaVariavel)
                .HasColumnType("money")
                .HasColumnName("unidArredondaVariavel");
            entity.Property(e => e.Valida).HasColumnName("valida");
            entity.Property(e => e.Visivel)
                .IsRequired()
                .HasDefaultValueSql("((1))")
                .HasColumnName("visivel");
        });

        modelBuilder.Entity<TarifaClienteFicheiro>(entity =>
        {
            entity.HasNoKey();

            entity.Property(e => e.Ficheiro)
                .HasMaxLength(50)
                .HasColumnName("ficheiro");
            entity.Property(e => e.IdCliente).HasColumnName("idCliente");
            entity.Property(e => e.IdTarifa).HasColumnName("idTarifa");
            entity.Property(e => e.Servico)
                .HasMaxLength(3)
                .HasColumnName("servico");
        });

        modelBuilder.Entity<TarifaDetalhe>(entity =>
        {
            entity.HasIndex(e => new { e.IdTarifa, e.IdProdutoFact, e.IdTipoValor, e.Zona0, e.Zona, e.Escalao, e.EscalaoSeg }, "IDX_IdTarifa_idProd_zonas_idTipoVal_escalao_escalaoSeg").HasFillFactor(80);

            entity.HasIndex(e => e.IdTipoValor, "IDX_TIpoValor").HasFillFactor(80);

            entity.HasIndex(e => new { e.IdTarifa, e.Escalao, e.EscalaoSeg }, "Idx_idTarifa_escalao_escalaoSeg").HasFillFactor(80);

            entity.HasIndex(e => new { e.IdTarifa, e.Id, e.Escalao }, "Idx_idTarifa_id_escalao");

            entity.Property(e => e.Id).HasColumnName("id");
            entity.Property(e => e.Cubicagem)
                .HasDefaultValueSql("((-1))")
                .HasColumnType("money")
                .HasColumnName("cubicagem");
            entity.Property(e => e.CubicagemSeg)
                .HasDefaultValueSql("((9999999))")
                .HasColumnType("money")
                .HasColumnName("cubicagemSeg");
            entity.Property(e => e.Escalao)
                .HasColumnType("money")
                .HasColumnName("escalao");
            entity.Property(e => e.EscalaoSeg)
                .HasColumnType("money")
                .HasColumnName("escalaoSeg");
            entity.Property(e => e.IdProdutoFact).HasColumnName("idProdutoFact");
            entity.Property(e => e.IdTarifa).HasColumnName("idTarifa");
            entity.Property(e => e.IdTipoValor).HasColumnName("idTipoValor");
            entity.Property(e => e.NumVolumes)
                .HasDefaultValueSql("((-1))")
                .HasColumnName("numVolumes");
            entity.Property(e => e.NumVolumesSeg)
                .HasDefaultValueSql("((9999999))")
                .HasColumnName("numVolumesSeg");
            entity.Property(e => e.PesoBruto)
                .HasDefaultValueSql("((-1))")
                .HasColumnType("money")
                .HasColumnName("pesoBruto");
            entity.Property(e => e.PesoBrutoSeg)
                .HasDefaultValueSql("((9999999))")
                .HasColumnType("money")
                .HasColumnName("pesoBrutoSeg");
            entity.Property(e => e.PesoMax)
                .HasDefaultValueSql("((-1))")
                .HasColumnType("money")
                .HasColumnName("pesoMax");
            entity.Property(e => e.PesoMaxSeg)
                .HasDefaultValueSql("((9999999))")
                .HasColumnType("money")
                .HasColumnName("pesoMaxSeg");
            entity.Property(e => e.UnidIncremento)
                .HasDefaultValueSql("((1))")
                .HasColumnType("money")
                .HasColumnName("unidIncremento");
            entity.Property(e => e.Valor)
                .HasColumnType("money")
                .HasColumnName("valor");
            entity.Property(e => e.ValorMerc)
                .HasDefaultValueSql("((-1))")
                .HasColumnType("money")
                .HasColumnName("valorMerc");
            entity.Property(e => e.ValorMercSeg)
                .HasDefaultValueSql("((9999999999.))")
                .HasColumnType("money")
                .HasColumnName("valorMercSeg");
            entity.Property(e => e.Zona)
                .HasMaxLength(10)
                .HasColumnName("zona");
            entity.Property(e => e.Zona0)
                .HasMaxLength(10)
                .HasColumnName("zona0");
        });

        modelBuilder.Entity<TarifaDetalhesN>(entity =>
        {
            entity.HasKey(e => e.Id).HasName("PK_TarifaDetalhes_NEW");

            entity.ToTable("TarifaDetalhes_n");

            entity.HasIndex(e => new { e.IdTarifa, e.IdProdutoFact, e.IdTipoValor, e.Zona0, e.Zona, e.Escalao, e.EscalaoSeg }, "NIDX_IdTarifa_idProd_zonas_idTipoVal_escalao_escalaoSeg").HasFillFactor(80);

            entity.HasIndex(e => new { e.IdTarifa, e.Escalao, e.EscalaoSeg }, "NIdx_idTarifa_escalao_escalaoSeg").HasFillFactor(80);

            entity.HasIndex(e => new { e.IdTarifa, e.Id, e.Escalao }, "NIdx_idTarifa_id_escalao");

            entity.HasIndex(e => e.IdTipoValor, "idx_idTipovalor");

            entity.Property(e => e.Id).HasColumnName("id");
            entity.Property(e => e.Cubicagem)
                .HasDefaultValueSql("((-1))")
                .HasColumnType("money")
                .HasColumnName("cubicagem");
            entity.Property(e => e.CubicagemSeg)
                .HasDefaultValueSql("((9999999))")
                .HasColumnType("money")
                .HasColumnName("cubicagemSeg");
            entity.Property(e => e.Escalao)
                .HasColumnType("money")
                .HasColumnName("escalao");
            entity.Property(e => e.EscalaoSeg)
                .HasColumnType("money")
                .HasColumnName("escalaoSeg");
            entity.Property(e => e.IdProdutoFact).HasColumnName("idProdutoFact");
            entity.Property(e => e.IdTarifa).HasColumnName("idTarifa");
            entity.Property(e => e.IdTipoValor).HasColumnName("idTipoValor");
            entity.Property(e => e.NumVolumes)
                .HasDefaultValueSql("((-1))")
                .HasColumnName("numVolumes");
            entity.Property(e => e.NumVolumesSeg)
                .HasDefaultValueSql("((9999999))")
                .HasColumnName("numVolumesSeg");
            entity.Property(e => e.PesoBruto)
                .HasDefaultValueSql("((-1))")
                .HasColumnType("money")
                .HasColumnName("pesoBruto");
            entity.Property(e => e.PesoBrutoSeg)
                .HasDefaultValueSql("((9999999))")
                .HasColumnType("money")
                .HasColumnName("pesoBrutoSeg");
            entity.Property(e => e.PesoMax)
                .HasDefaultValueSql("((-1))")
                .HasColumnType("money")
                .HasColumnName("pesoMax");
            entity.Property(e => e.PesoMaxSeg)
                .HasDefaultValueSql("((9999999))")
                .HasColumnType("money")
                .HasColumnName("pesoMaxSeg");
            entity.Property(e => e.UnidIncremento)
                .HasDefaultValueSql("((1))")
                .HasColumnType("money")
                .HasColumnName("unidIncremento");
            entity.Property(e => e.Valor)
                .HasColumnType("money")
                .HasColumnName("valor");
            entity.Property(e => e.ValorMerc)
                .HasDefaultValueSql("((-1))")
                .HasColumnType("money")
                .HasColumnName("valorMerc");
            entity.Property(e => e.ValorMercSeg)
                .HasDefaultValueSql("((9999999999.))")
                .HasColumnType("money")
                .HasColumnName("valorMercSeg");
            entity.Property(e => e.Zona)
                .HasMaxLength(10)
                .HasColumnName("zona");
            entity.Property(e => e.Zona0)
                .HasMaxLength(10)
                .HasColumnName("zona0");
        });

        modelBuilder.Entity<TarifaDetalhesSoon2bedeleted>(entity =>
        {
            entity
                .HasNoKey()
                .ToTable("TarifaDetalhes_soon2bedeleted");

            entity.Property(e => e.Cubicagem)
                .HasColumnType("money")
                .HasColumnName("cubicagem");
            entity.Property(e => e.CubicagemSeg)
                .HasColumnType("money")
                .HasColumnName("cubicagemSeg");
            entity.Property(e => e.Escalao)
                .HasColumnType("money")
                .HasColumnName("escalao");
            entity.Property(e => e.EscalaoSeg)
                .HasColumnType("money")
                .HasColumnName("escalaoSeg");
            entity.Property(e => e.Id).HasColumnName("id");
            entity.Property(e => e.IdProdutoFact).HasColumnName("idProdutoFact");
            entity.Property(e => e.IdTarifa).HasColumnName("idTarifa");
            entity.Property(e => e.IdTipoValor).HasColumnName("idTipoValor");
            entity.Property(e => e.NumVolumes).HasColumnName("numVolumes");
            entity.Property(e => e.NumVolumesSeg).HasColumnName("numVolumesSeg");
            entity.Property(e => e.PesoBruto)
                .HasColumnType("money")
                .HasColumnName("pesoBruto");
            entity.Property(e => e.PesoBrutoSeg)
                .HasColumnType("money")
                .HasColumnName("pesoBrutoSeg");
            entity.Property(e => e.PesoMax)
                .HasColumnType("money")
                .HasColumnName("pesoMax");
            entity.Property(e => e.PesoMaxSeg)
                .HasColumnType("money")
                .HasColumnName("pesoMaxSeg");
            entity.Property(e => e.UnidIncremento)
                .HasColumnType("money")
                .HasColumnName("unidIncremento");
            entity.Property(e => e.Valor)
                .HasColumnType("money")
                .HasColumnName("valor");
            entity.Property(e => e.ValorMerc)
                .HasColumnType("money")
                .HasColumnName("valorMerc");
            entity.Property(e => e.ValorMercSeg)
                .HasColumnType("money")
                .HasColumnName("valorMercSeg");
            entity.Property(e => e.Zona)
                .HasMaxLength(10)
                .HasColumnName("zona");
            entity.Property(e => e.Zona0)
                .HasMaxLength(10)
                .HasColumnName("zona0");
        });

        modelBuilder.Entity<TarifaIncidenciasTiposMap>(entity =>
        {
            entity
                .HasNoKey()
                .ToTable("TarifaIncidenciasTipos_Map");

            entity.Property(e => e.IdTipoIncidencia).HasColumnName("idTipoIncidencia");
            entity.Property(e => e.IdTipoTarifa).HasColumnName("idTipoTarifa");
        });

        modelBuilder.Entity<TarifaMotoristaCondico>(entity =>
        {
            entity.HasKey(e => e.Id).HasName("PK__TarifasM__3213E83F1F1B15C6");

            entity.HasIndex(e => e.IdTarifaMotorista, "idx_idTarifaMotorista");

            entity.Property(e => e.Id).HasColumnName("id");
            entity.Property(e => e.DtIntrod)
                .HasColumnType("datetime")
                .HasColumnName("dtIntrod");
            entity.Property(e => e.HoraFim).HasColumnName("horaFim");
            entity.Property(e => e.HoraIni).HasColumnName("horaIni");
            entity.Property(e => e.IdTarifaMotorista).HasColumnName("idTarifaMotorista");
            entity.Property(e => e.IdUtilIntrod).HasColumnName("idUtilIntrod");
            entity.Property(e => e.NumStopsFim).HasColumnName("numStopsFim");
            entity.Property(e => e.NumStopsIni).HasColumnName("numStopsIni");
            entity.Property(e => e.PercAgrava)
                .HasColumnType("money")
                .HasColumnName("percAgrava");
            entity.Property(e => e.PercValorBase)
                .HasColumnType("money")
                .HasColumnName("percValorBase");
            entity.Property(e => e.Valor)
                .HasColumnType("money")
                .HasColumnName("valor");
            entity.Property(e => e.ValorObjectivo)
                .HasColumnType("money")
                .HasColumnName("valorObjectivo");
        });

        modelBuilder.Entity<TarifaMotoristum>(entity =>
        {
            entity.HasKey(e => e.Id).HasName("PK__TarifaMo__3213E83F1B4A84E2");

            entity.HasIndex(e => e.IdTarifa, "idx_idTarifa");

            entity.Property(e => e.Id).HasColumnName("id");
            entity.Property(e => e.Activo).HasColumnName("activo");
            entity.Property(e => e.DtIntrod)
                .HasColumnType("datetime")
                .HasColumnName("dtIntrod");
            entity.Property(e => e.IdTarifa).HasColumnName("idTarifa");
            entity.Property(e => e.IdUtilIntrod).HasColumnName("idUtilIntrod");
            entity.Property(e => e.NumStops)
                .HasColumnType("money")
                .HasColumnName("numStops");
            entity.Property(e => e.ValorDia)
                .HasColumnType("money")
                .HasColumnName("valorDia");
            entity.Property(e => e.ValorStop)
                .HasColumnType("money")
                .HasColumnName("valorStop");
        });

        modelBuilder.Entity<TarifaPenalizacoesTipoT>(entity =>
        {
            entity
                .HasNoKey()
                .ToTable("TarifaPenalizacoesTipo_T");

            entity.Property(e => e.Codigo)
                .HasMaxLength(25)
                .IsUnicode(false)
                .HasColumnName("codigo");
            entity.Property(e => e.Descricao)
                .HasMaxLength(50)
                .IsUnicode(false)
                .HasColumnName("descricao");
            entity.Property(e => e.Id)
                .ValueGeneratedOnAdd()
                .HasColumnName("id");
        });

        modelBuilder.Entity<TarifaTipoAgrupaRep>(entity =>
        {
            entity.HasKey(e => new { e.IdTipoAgrupa, e.IdTipoAgrupaRep });

            entity.Property(e => e.IdTipoAgrupa).HasColumnName("idTipoAgrupa");
            entity.Property(e => e.IdTipoAgrupaRep).HasColumnName("idTipoAgrupaRep");
            entity.Property(e => e.Id)
                .ValueGeneratedOnAdd()
                .HasColumnName("id");
        });

        modelBuilder.Entity<TarifaTipoAgrupaRepT>(entity =>
        {
            entity.ToTable("TarifaTipoAgrupaRep_T");

            entity.Property(e => e.Id).HasColumnName("id");
            entity.Property(e => e.Activo)
                .IsRequired()
                .HasDefaultValueSql("((1))")
                .HasColumnName("activo");
            entity.Property(e => e.Codigo)
                .HasMaxLength(15)
                .HasColumnName("codigo");
            entity.Property(e => e.Default).HasColumnName("default");
            entity.Property(e => e.Descricao)
                .HasMaxLength(50)
                .HasColumnName("descricao");
        });

        modelBuilder.Entity<TarifaTipoAgrupaT>(entity =>
        {
            entity.ToTable("TarifaTipoAgrupa_T");

            entity.HasIndex(e => e.IdEntidade, "idx_idEntidade").HasFillFactor(80);

            entity.Property(e => e.Id).HasColumnName("id");
            entity.Property(e => e.Activo)
                .IsRequired()
                .HasDefaultValueSql("((1))")
                .HasColumnName("activo");
            entity.Property(e => e.Codigo)
                .HasMaxLength(15)
                .HasColumnName("codigo");
            entity.Property(e => e.Default).HasColumnName("default");
            entity.Property(e => e.Descricao)
                .HasMaxLength(50)
                .HasColumnName("descricao");
            entity.Property(e => e.IdEntidade).HasColumnName("idEntidade");
        });

        modelBuilder.Entity<TarifaTipoIncidenciaT>(entity =>
        {
            entity.ToTable("TarifaTipoIncidencia_T");

            entity.HasIndex(e => e.IdEntidade, "idx_idEntidade").HasFillFactor(80);

            entity.Property(e => e.Id).HasColumnName("id");
            entity.Property(e => e.Activo)
                .IsRequired()
                .HasDefaultValueSql("((1))")
                .HasColumnName("activo");
            entity.Property(e => e.Codigo)
                .HasMaxLength(25)
                .HasColumnName("codigo");
            entity.Property(e => e.Descricao)
                .HasMaxLength(50)
                .HasColumnName("descricao");
            entity.Property(e => e.IdEntidade).HasColumnName("idEntidade");
            entity.Property(e => e.IdServicoDet).HasColumnName("idServicoDet");
            entity.Property(e => e.UnidArredonda)
                .HasColumnType("money")
                .HasColumnName("unidArredonda");
            entity.Property(e => e.ValorRef)
                .HasMaxLength(50)
                .HasDefaultValueSql("('')")
                .HasColumnName("valorRef");
            entity.Property(e => e.Variavel)
                .HasMaxLength(15)
                .HasColumnName("variavel");
        });

        modelBuilder.Entity<TarifaTipoT>(entity =>
        {
            entity.ToTable("TarifaTipo_T");

            entity.HasIndex(e => e.Codigo, "idx_codigo").HasFillFactor(80);

            entity.Property(e => e.Id).HasColumnName("id");
            entity.Property(e => e.Activo)
                .IsRequired()
                .HasDefaultValueSql("((1))")
                .HasColumnName("activo");
            entity.Property(e => e.Codigo)
                .HasMaxLength(25)
                .HasColumnName("codigo");
            entity.Property(e => e.Descricao)
                .HasMaxLength(50)
                .HasColumnName("descricao");
        });

        modelBuilder.Entity<TarifaTipoValorT>(entity =>
        {
            entity.ToTable("TarifaTipoValor_T");

            entity.HasIndex(e => e.Codigo, "Idx_codigo");

            entity.HasIndex(e => e.IsBaseCalculo, "idx_IsBaseCAlculo");

            entity.Property(e => e.Id).HasColumnName("id");
            entity.Property(e => e.Activo)
                .IsRequired()
                .HasDefaultValueSql("((1))")
                .HasColumnName("activo");
            entity.Property(e => e.Codigo)
                .HasMaxLength(15)
                .HasColumnName("codigo");
            entity.Property(e => e.Descricao)
                .HasMaxLength(50)
                .HasColumnName("descricao");
            entity.Property(e => e.IdEntidade).HasColumnName("idEntidade");
            entity.Property(e => e.IsBaseCalculo)
                .IsRequired()
                .HasDefaultValueSql("((1))")
                .HasColumnName("isBaseCalculo");
            entity.Property(e => e.VisivelTarFornecedor)
                .HasDefaultValueSql("((0))")
                .HasColumnName("visivelTarFornecedor");
        });

        modelBuilder.Entity<TarifaTiposIncidencium>(entity =>
        {
            entity.Property(e => e.Activo).HasColumnName("activo");
            entity.Property(e => e.DivVolumetrico)
                .HasColumnType("decimal(18, 9)")
                .HasColumnName("divVolumetrico");
            entity.Property(e => e.IdProduto).HasColumnName("idProduto");
            entity.Property(e => e.IdTarifa).HasColumnName("idTarifa");
            entity.Property(e => e.IdTipoIncidencia).HasColumnName("idTipoIncidencia");
            entity.Property(e => e.ZonaDestino).HasMaxLength(10);
            entity.Property(e => e.ZonaOrigem).HasMaxLength(10);
        });

        modelBuilder.Entity<TarifaZona>(entity =>
        {
            entity.HasIndex(e => new { e.IdTarifa, e.IdPais }, "idx_idTarifa_idPais").HasFillFactor(80);

            entity.Property(e => e.Id).HasColumnName("id");
            entity.Property(e => e.Cpostal0)
                .HasMaxLength(50)
                .HasColumnName("cpostal0");
            entity.Property(e => e.Cpostal1)
                .HasMaxLength(50)
                .HasColumnName("cpostal1");
            entity.Property(e => e.IdPais).HasColumnName("idPais");
            entity.Property(e => e.IdTarifa).HasColumnName("idTarifa");
            entity.Property(e => e.Zona)
                .HasMaxLength(10)
                .HasColumnName("zona");
        });

        modelBuilder.Entity<TarifaZonas0>(entity =>
        {
            entity.ToTable("TarifaZonas0");

            entity.HasIndex(e => new { e.IdTarifa, e.IdPais }, "idx_idTarifa_idPais").HasFillFactor(80);

            entity.Property(e => e.Id).HasColumnName("id");
            entity.Property(e => e.Cpostal0)
                .HasMaxLength(50)
                .HasColumnName("cpostal0");
            entity.Property(e => e.Cpostal1)
                .HasMaxLength(50)
                .HasColumnName("cpostal1");
            entity.Property(e => e.IdPais).HasColumnName("idPais");
            entity.Property(e => e.IdTarifa).HasColumnName("idTarifa");
            entity.Property(e => e.Zona)
                .HasMaxLength(10)
                .HasColumnName("zona");
        });

        modelBuilder.Entity<TarifasEmUso>(entity =>
        {
            entity
                .HasNoKey()
                .ToTable("TarifasEmUso");

            entity.Property(e => e.IdTarifa).HasColumnName("idTarifa");
        });

        modelBuilder.Entity<TarifasEspeciaisFornecedor>(entity =>
        {
            entity.HasKey(e => e.Id).HasName("PK__TarifasE__3213E83F2AE4B46A");

            entity.ToTable("TarifasEspeciaisFornecedor");

            entity.Property(e => e.Id).HasColumnName("id");
            entity.Property(e => e.Activo)
                .HasDefaultValueSql("((1))")
                .HasColumnName("activo");
            entity.Property(e => e.DtFim)
                .HasColumnType("datetime")
                .HasColumnName("dtFim");
            entity.Property(e => e.DtInicio)
                .HasColumnType("datetime")
                .HasColumnName("dtInicio");
            entity.Property(e => e.DtIntrod)
                .HasColumnType("datetime")
                .HasColumnName("dtIntrod");
            entity.Property(e => e.DtUltAct)
                .HasColumnType("datetime")
                .HasColumnName("dtUltAct");
            entity.Property(e => e.IdCliente).HasColumnName("idCliente");
            entity.Property(e => e.IdEntidade).HasColumnName("idEntidade");
            entity.Property(e => e.IdUtilIntrod).HasColumnName("idUtilIntrod");
            entity.Property(e => e.IdUtilUltAct).HasColumnName("idUtilUltAct");
            entity.Property(e => e.PesoBrutoMax)
                .HasColumnType("money")
                .HasColumnName("pesoBrutoMax");
            entity.Property(e => e.PesoBrutoMin)
                .HasColumnType("money")
                .HasColumnName("pesoBrutoMin");
            entity.Property(e => e.ValorStop)
                .HasColumnType("money")
                .HasColumnName("valorStop");
        });

        modelBuilder.Entity<TarifasPenalizaco>(entity =>
        {
            entity.HasIndex(e => e.IdTarifa, "idx_idtarifa");

            entity.Property(e => e.Id).HasColumnName("id");
            entity.Property(e => e.DtUltAct)
                .HasColumnType("datetime")
                .HasColumnName("dtUltAct");
            entity.Property(e => e.IdPenalizacaoTipo).HasColumnName("idPenalizacaoTipo");
            entity.Property(e => e.IdTarifa).HasColumnName("idTarifa");
            entity.Property(e => e.IdTipoValor).HasColumnName("idTipoValor");
            entity.Property(e => e.IdUtilUltAct).HasColumnName("idUtilUltAct");
            entity.Property(e => e.Valor)
                .HasColumnType("money")
                .HasColumnName("valor");
        });

        modelBuilder.Entity<TarifasSimular>(entity =>
        {
            entity.HasKey(e => e.Id).HasName("PK__TarifasS__3213E83F16F40A67");

            entity.ToTable("TarifasSimular");

            entity.Property(e => e.Id).HasColumnName("id");
            entity.Property(e => e.IdCliente).HasColumnName("idCliente");
            entity.Property(e => e.IdEntidade).HasColumnName("idEntidade");
            entity.Property(e => e.IdRegime).HasColumnName("idRegime");
            entity.Property(e => e.IdServico).HasColumnName("idServico");
            entity.Property(e => e.IdTarifa).HasColumnName("idTarifa");
            entity.Property(e => e.TextoTarifa).HasMaxLength(200);
            entity.Property(e => e.ValorAntigo).HasColumnType("money");
            entity.Property(e => e.ValorSimulado).HasColumnType("money");
        });

        modelBuilder.Entity<Tarifassimular2015>(entity =>
        {
            entity
                .HasNoKey()
                .ToTable("TARIFASSIMULAR2015");

            entity.Property(e => e.Aumento)
                .HasColumnType("money")
                .HasColumnName("aumento");
            entity.Property(e => e.IdRegime).HasColumnName("idRegime");
            entity.Property(e => e.IdServico).HasColumnName("idServico");
            entity.Property(e => e.IdTarifa).HasColumnName("idTarifa");
            entity.Property(e => e.Idcliente).HasColumnName("idcliente");
            entity.Property(e => e.Identidade).HasColumnName("identidade");
            entity.Property(e => e.TextoTarifa).HasMaxLength(100);
            entity.Property(e => e.ValorAntigo).HasColumnType("money");
            entity.Property(e => e.ValorSimulado).HasColumnType("money");
        });

        modelBuilder.Entity<Tarifassimular2016>(entity =>
        {
            entity
                .HasNoKey()
                .ToTable("TARIFASSIMULAR2016");

            entity.Property(e => e.Aumento)
                .HasColumnType("money")
                .HasColumnName("aumento");
            entity.Property(e => e.IdRegime).HasColumnName("idRegime");
            entity.Property(e => e.IdServico).HasColumnName("idServico");
            entity.Property(e => e.IdTarifa).HasColumnName("idTarifa");
            entity.Property(e => e.Idcliente).HasColumnName("idcliente");
            entity.Property(e => e.Identidade).HasColumnName("identidade");
            entity.Property(e => e.TextoTarifa).HasMaxLength(100);
            entity.Property(e => e.ValorAntigo).HasColumnType("money");
            entity.Property(e => e.ValorSimulado).HasColumnType("money");
        });

        modelBuilder.Entity<TaxaCombustivelT>(entity =>
        {
            entity.ToTable("TaxaCombustivel_T");

            entity.Property(e => e.Id).HasColumnName("id");
            entity.Property(e => e.DataFim)
                .HasColumnType("datetime")
                .HasColumnName("dataFim");
            entity.Property(e => e.DataIni)
                .HasColumnType("datetime")
                .HasColumnName("dataIni");
            entity.Property(e => e.DtIntrod)
                .HasColumnType("datetime")
                .HasColumnName("dtIntrod");
            entity.Property(e => e.DtUltAct)
                .HasColumnType("datetime")
                .HasColumnName("dtUltAct");
            entity.Property(e => e.IdEntidade)
                .HasDefaultValueSql("(1)")
                .HasColumnName("idEntidade");
            entity.Property(e => e.IdUtilIntrod).HasColumnName("idUtilIntrod");
            entity.Property(e => e.IdUtilUltAct).HasColumnName("idUtilUltAct");
            entity.Property(e => e.TxCusto)
                .HasColumnType("money")
                .HasColumnName("txCusto");
            entity.Property(e => e.TxVenda)
                .HasColumnType("money")
                .HasColumnName("txVenda");
            entity.Property(e => e.ZonaTaxa).HasColumnName("zonaTaxa");
        });

        modelBuilder.Entity<TaxaCombustivelZonasT>(entity =>
        {
            entity.ToTable("TaxaCombustivelZonas_T");

            entity.Property(e => e.Id).HasColumnName("id");
            entity.Property(e => e.Activo).HasColumnName("activo");
            entity.Property(e => e.Descricao)
                .HasMaxLength(50)
                .HasColumnName("descricao");
            entity.Property(e => e.IdEntidade)
                .HasDefaultValueSql("(1)")
                .HasColumnName("idEntidade");
            entity.Property(e => e.Sigla)
                .HasMaxLength(4)
                .HasColumnName("sigla");
        });

        modelBuilder.Entity<TaxasAdicionai>(entity =>
        {
            entity.HasKey(e => e.Id).HasName("PK__TaxasAdi__3213E83F271319D8");

            entity.Property(e => e.Id).HasColumnName("id");
            entity.Property(e => e.DtFim)
                .HasColumnType("datetime")
                .HasColumnName("dtFim");
            entity.Property(e => e.DtInicio)
                .HasColumnType("datetime")
                .HasColumnName("dtInicio");
            entity.Property(e => e.DtIntrod)
                .HasColumnType("datetime")
                .HasColumnName("dtIntrod");
            entity.Property(e => e.DtUltAct)
                .HasColumnType("datetime")
                .HasColumnName("dtUltAct");
            entity.Property(e => e.IdEntidade).HasColumnName("idEntidade");
            entity.Property(e => e.IdMoeda).HasColumnName("idMoeda");
            entity.Property(e => e.IdRegime).HasColumnName("idRegime");
            entity.Property(e => e.IdServico).HasColumnName("idServico");
            entity.Property(e => e.IdServicoDet).HasColumnName("idServicoDet");
            entity.Property(e => e.IdUtilIntrod).HasColumnName("idUtilIntrod");
            entity.Property(e => e.IdUtilUltAct).HasColumnName("idUtilUltAct");
            entity.Property(e => e.Valor)
                .HasColumnType("money")
                .HasColumnName("valor");
        });

        modelBuilder.Entity<TaxasAdicionaisConfig>(entity =>
        {
            entity.HasKey(e => e.Id).HasName("PK__TaxasAdi__3213E83F41793754");

            entity.ToTable("TaxasAdicionaisConfig");

            entity.Property(e => e.Id).HasColumnName("id");
            entity.Property(e => e.CodBaseIncidencia)
                .HasMaxLength(50)
                .HasColumnName("codBaseIncidencia");
            entity.Property(e => e.DtFim)
                .HasColumnType("datetime")
                .HasColumnName("dtFim");
            entity.Property(e => e.DtIni)
                .HasColumnType("datetime")
                .HasColumnName("dtIni");
            entity.Property(e => e.IdEntidade).HasColumnName("idEntidade");
            entity.Property(e => e.IdServico).HasColumnName("idServico");
            entity.Property(e => e.IdServicoDet).HasColumnName("idServicoDet");
        });

        modelBuilder.Entity<TaxasAdicionaisConfigDetalhe>(entity =>
        {
            entity.HasKey(e => e.Id).HasName("PK__TaxasAdi__3213E83F3EB2954F");

            entity.ToTable("TaxasAdicionaisConfigDetalhe");

            entity.Property(e => e.Id).HasColumnName("id");
            entity.Property(e => e.AplicaValor).HasColumnName("aplicaValor");
            entity.Property(e => e.IdTaxaAdicionalConfig).HasColumnName("idTaxaAdicionalConfig");
            entity.Property(e => e.ZonaDest)
                .HasMaxLength(10)
                .HasColumnName("zonaDest");
            entity.Property(e => e.ZonaOri)
                .HasMaxLength(10)
                .HasColumnName("zonaOri");
        });

        modelBuilder.Entity<TaxasAdicionaisConfigDetalheZona>(entity =>
        {
            entity.HasKey(e => e.Id).HasName("PK__TaxasAdi__3213E83F4DF4D8DF");

            entity.Property(e => e.Id).HasColumnName("id");
            entity.Property(e => e.Cpostal0)
                .HasMaxLength(15)
                .HasColumnName("cpostal0");
            entity.Property(e => e.Cpostal1)
                .HasMaxLength(15)
                .HasColumnName("cpostal1");
            entity.Property(e => e.IdPais).HasColumnName("idPais");
            entity.Property(e => e.IdTaxaAdicionalConfig).HasColumnName("idTaxaAdicionalConfig");
            entity.Property(e => e.Zona)
                .HasMaxLength(10)
                .HasColumnName("zona");
        });

        modelBuilder.Entity<TaxasAdicionaisTarifa>(entity =>
        {
            entity.HasKey(e => e.Id).HasName("PK__TaxasAdi__3213E83F309C8412");

            entity.Property(e => e.Id).HasColumnName("id");
            entity.Property(e => e.DtIntrod)
                .HasColumnType("datetime")
                .HasColumnName("dtIntrod");
            entity.Property(e => e.IdEntidade).HasColumnName("idEntidade");
            entity.Property(e => e.IdRegime).HasColumnName("idRegime");
            entity.Property(e => e.IdServico).HasColumnName("idServico");
            entity.Property(e => e.IdTarifa).HasColumnName("idTarifa");
            entity.Property(e => e.IdTaxaAdicional).HasColumnName("idTaxaAdicional");
        });

        modelBuilder.Entity<TblDelete>(entity =>
        {
            entity
                .HasNoKey()
                .ToTable("tbl_delete");

            entity.Property(e => e.DtFim)
                .HasColumnType("datetime")
                .HasColumnName("dtFim");
            entity.Property(e => e.DtInicio)
                .HasColumnType("datetime")
                .HasColumnName("dtInicio");
            entity.Property(e => e.Hostname)
                .HasMaxLength(100)
                .HasColumnName("hostname");
            entity.Property(e => e.Id).HasColumnName("id");
            entity.Property(e => e.IdParent).HasColumnName("idParent");
            entity.Property(e => e.IdUtil).HasColumnName("idUtil");
            entity.Property(e => e.Passo).HasColumnName("passo");
            entity.Property(e => e.Query)
                .HasMaxLength(4000)
                .HasColumnName("query");
            entity.Property(e => e.SpId).HasColumnName("spID");
            entity.Property(e => e.Sproc)
                .HasMaxLength(100)
                .HasColumnName("SProc");
        });

        modelBuilder.Entity<TblDelete1>(entity =>
        {
            entity
                .HasNoKey()
                .ToTable("tbl_delete1");

            entity.Property(e => e.DtFim)
                .HasColumnType("datetime")
                .HasColumnName("dtFim");
            entity.Property(e => e.DtInicio)
                .HasColumnType("datetime")
                .HasColumnName("dtInicio");
            entity.Property(e => e.Hostname)
                .HasMaxLength(100)
                .HasColumnName("hostname");
            entity.Property(e => e.Id).HasColumnName("id");
            entity.Property(e => e.IdParent).HasColumnName("idParent");
            entity.Property(e => e.IdUtil).HasColumnName("idUtil");
            entity.Property(e => e.Passo).HasColumnName("passo");
            entity.Property(e => e.Query)
                .HasMaxLength(4000)
                .HasColumnName("query");
            entity.Property(e => e.SpId).HasColumnName("spID");
            entity.Property(e => e.Sproc)
                .HasMaxLength(100)
                .HasColumnName("SProc");
        });

        modelBuilder.Entity<TblDeleteMe>(entity =>
        {
            entity
                .HasNoKey()
                .ToTable("tbl_deleteMe");

            entity.HasIndex(e => e.MasterNumber, "idx_awb");

            entity.Property(e => e.DtEnvio)
                .HasColumnType("datetime")
                .HasColumnName("dtEnvio");
            entity.Property(e => e.DtIntrod)
                .HasColumnType("datetime")
                .HasColumnName("dtIntrod");
            entity.Property(e => e.MasterNumber)
                .HasMaxLength(20)
                .HasColumnName("masterNumber");
        });

        modelBuilder.Entity<TempAlldatum>(entity =>
        {
            entity
                .HasNoKey()
                .ToTable("TEMP_ALLDATA");

            entity.Property(e => e.Awb)
                .HasMaxLength(20)
                .UseCollation("Latin1_General_CI_AS")
                .HasColumnName("AWB");
            entity.Property(e => e.DataEntregaRecolha).HasColumnType("datetime");
            entity.Property(e => e.Dataanalise)
                .HasColumnType("date")
                .HasColumnName("DATAAnalise");
            entity.Property(e => e.Ded)
                .HasColumnType("date")
                .HasColumnName("DED");
            entity.Property(e => e.Dedf)
                .HasPrecision(0)
                .HasColumnName("DEDF");
            entity.Property(e => e.Dedi)
                .HasPrecision(0)
                .HasColumnName("DEDI");
            entity.Property(e => e.Dtpup)
                .HasColumnType("datetime")
                .HasColumnName("DTPUP");
            entity.Property(e => e.Dtrecolha)
                .HasColumnType("datetime")
                .HasColumnName("DTRecolha");
            entity.Property(e => e.IdManifesto).HasColumnName("idManifesto");
            entity.Property(e => e.IdPickup).HasColumnName("idPickup");
            entity.Property(e => e.IdPlatOrigemRet)
                .HasMaxLength(15)
                .UseCollation("Latin1_General_CI_AS")
                .HasColumnName("idPlatOrigemRet");
            entity.Property(e => e.IdPlataforma).HasColumnName("idPlataforma");
            entity.Property(e => e.IdUltRota).HasColumnName("idUltRota");
            entity.Property(e => e.NumTelm)
                .HasMaxLength(50)
                .UseCollation("Latin1_General_CI_AS");
            entity.Property(e => e.RefCliente)
                .HasMaxLength(50)
                .UseCollation("Latin1_General_CI_AS");
            entity.Property(e => e.ScanCodeP2)
                .HasMaxLength(2)
                .UseCollation("Latin1_General_CI_AS");
            entity.Property(e => e.ScanDateP2).HasColumnType("datetime");
            entity.Property(e => e.UltScanCode)
                .HasMaxLength(2)
                .UseCollation("Latin1_General_CI_AS");
            entity.Property(e => e.UltScanDate).HasColumnType("datetime");
        });

        modelBuilder.Entity<TempAndreClientesComtarifaAlteradum>(entity =>
        {
            entity
                .HasNoKey()
                .ToTable("TEMP_ANDRE_clientesComtarifaAlterada");

            entity.Property(e => e.Codigo)
                .HasMaxLength(250)
                .HasColumnName("codigo");
            entity.Property(e => e.IdCliente).HasColumnName("idCliente");
            entity.Property(e => e.IdRegime).HasColumnName("idRegime");
            entity.Property(e => e.IdServico).HasColumnName("idServico");
        });

        modelBuilder.Entity<TempAndreTarifasRex2alterada>(entity =>
        {
            entity
                .HasNoKey()
                .ToTable("TEMP_Andre_tarifasRex2alteradas");

            entity.Property(e => e.Codigo)
                .HasMaxLength(250)
                .HasColumnName("codigo");
            entity.Property(e => e.IdCliente).HasColumnName("idCliente");
            entity.Property(e => e.IdRegime).HasColumnName("idRegime");
            entity.Property(e => e.IdServico).HasColumnName("idServico");
        });

        modelBuilder.Entity<TempAtribuitarifasAoDom>(entity =>
        {
            entity
                .HasNoKey()
                .ToTable("TEMP_ATRIBUITARIFAS_AO_DOM");

            entity.Property(e => e.Ano)
                .HasMaxLength(10)
                .IsFixedLength()
                .HasColumnName("ano");
            entity.Property(e => e.Id)
                .ValueGeneratedOnAdd()
                .HasColumnName("id");
            entity.Property(e => e.IdCliente).HasColumnName("idCliente");
            entity.Property(e => e.Processado).HasColumnName("processado");
            entity.Property(e => e.Regime)
                .HasMaxLength(50)
                .HasColumnName("regime");
            entity.Property(e => e.Servico)
                .HasMaxLength(50)
                .HasColumnName("servico");
            entity.Property(e => e.SqlCommand)
                .HasMaxLength(255)
                .HasColumnName("sqlCommand");
        });

        modelBuilder.Entity<TempAtribuitarifasFedex>(entity =>
        {
            entity.ToTable("TEMP_ATRIBUITARIFAS_FEDEX");

            entity.Property(e => e.Id).HasColumnName("id");
            entity.Property(e => e.Ano).HasColumnName("ano");
            entity.Property(e => e.IdCliente).HasColumnName("idCliente");
            entity.Property(e => e.Processado)
                .HasDefaultValueSql("((0))")
                .HasColumnName("processado");
            entity.Property(e => e.Regime)
                .HasMaxLength(50)
                .HasColumnName("regime");
            entity.Property(e => e.Servico)
                .HasMaxLength(50)
                .HasColumnName("servico");
            entity.Property(e => e.SqlCommand)
                .HasMaxLength(255)
                .HasColumnName("sqlCommand");
        });

        modelBuilder.Entity<TempAtribuitarifasFedexAo>(entity =>
        {
            entity
                .HasNoKey()
                .ToTable("TEMP_ATRIBUITARIFAS_FEDEX_AO");

            entity.Property(e => e.Ano).HasColumnName("ano");
            entity.Property(e => e.Id)
                .ValueGeneratedOnAdd()
                .HasColumnName("id");
            entity.Property(e => e.IdCliente).HasColumnName("idCliente");
            entity.Property(e => e.Processado).HasColumnName("processado");
            entity.Property(e => e.Regime)
                .HasMaxLength(50)
                .HasColumnName("regime");
            entity.Property(e => e.Servico)
                .HasMaxLength(50)
                .HasColumnName("servico");
            entity.Property(e => e.SqlCommand)
                .HasMaxLength(255)
                .HasColumnName("sqlCommand");
        });

        modelBuilder.Entity<TempAtribuitarifasRexii>(entity =>
        {
            entity
                .HasNoKey()
                .ToTable("TEMP_ATRIBUITARIFAS_REXII");

            entity.Property(e => e.Ano)
                .HasMaxLength(10)
                .IsFixedLength()
                .HasColumnName("ano");
            entity.Property(e => e.Id)
                .ValueGeneratedOnAdd()
                .HasColumnName("id");
            entity.Property(e => e.IdCliente).HasColumnName("idCliente");
            entity.Property(e => e.Processado).HasColumnName("processado");
            entity.Property(e => e.Regime)
                .HasMaxLength(50)
                .HasColumnName("regime");
            entity.Property(e => e.Servico)
                .HasMaxLength(50)
                .HasColumnName("servico");
            entity.Property(e => e.ServicoDet)
                .HasMaxLength(50)
                .HasColumnName("servicoDet");
            entity.Property(e => e.SqlCommand)
                .HasMaxLength(255)
                .HasColumnName("sqlCommand");
        });

        modelBuilder.Entity<TempAumentos2014>(entity =>
        {
            entity
                .HasNoKey()
                .ToTable("temp_aumentos_2014");

            entity.HasIndex(e => e.IdLin, "idLin");

            entity.Property(e => e.Aumento)
                .HasColumnType("money")
                .HasColumnName("aumento");
            entity.Property(e => e.Awb)
                .HasMaxLength(20)
                .HasColumnName("awb");
            entity.Property(e => e.Data)
                .HasColumnType("date")
                .HasColumnName("data");
            entity.Property(e => e.IdCliente).HasColumnName("idCliente");
            entity.Property(e => e.IdEntidade).HasColumnName("idEntidade");
            entity.Property(e => e.IdLin).HasColumnName("idLin");
            entity.Property(e => e.IdManifesto).HasColumnName("idManifesto");
            entity.Property(e => e.IdNovaTarifa).HasColumnName("idNovaTarifa");
            entity.Property(e => e.IdRegime).HasColumnName("idRegime");
            entity.Property(e => e.IdServico).HasColumnName("idServico");
            entity.Property(e => e.IdServicoDet).HasColumnName("idServicoDet");
            entity.Property(e => e.IdTarifa).HasColumnName("idTarifa");
            entity.Property(e => e.NovaTarifa)
                .HasMaxLength(50)
                .HasColumnName("novaTarifa");
            entity.Property(e => e.Tarifa)
                .HasMaxLength(50)
                .HasColumnName("tarifa");
            entity.Property(e => e.ValorManual).HasColumnName("valorManual");
            entity.Property(e => e.ValorNovaTarifa)
                .HasColumnType("money")
                .HasColumnName("valorNovaTarifa");
            entity.Property(e => e.ValorTarifa)
                .HasColumnType("money")
                .HasColumnName("valorTarifa");
        });

        modelBuilder.Entity<TempAumentos2014Hd>(entity =>
        {
            entity
                .HasNoKey()
                .ToTable("temp_aumentos_2014_hd");

            entity.HasIndex(e => e.IdLin, "idLin").HasFillFactor(80);

            entity.Property(e => e.Aumento)
                .HasColumnType("money")
                .HasColumnName("aumento");
            entity.Property(e => e.Awb)
                .HasMaxLength(20)
                .HasColumnName("awb");
            entity.Property(e => e.Data)
                .HasColumnType("date")
                .HasColumnName("data");
            entity.Property(e => e.IdCliente).HasColumnName("idCliente");
            entity.Property(e => e.IdEntidade).HasColumnName("idEntidade");
            entity.Property(e => e.IdLin).HasColumnName("idLin");
            entity.Property(e => e.IdManifesto).HasColumnName("idManifesto");
            entity.Property(e => e.IdNovaTarifa).HasColumnName("idNovaTarifa");
            entity.Property(e => e.IdRegime).HasColumnName("idRegime");
            entity.Property(e => e.IdServico).HasColumnName("idServico");
            entity.Property(e => e.IdServicoDet).HasColumnName("idServicoDet");
            entity.Property(e => e.IdTarifa).HasColumnName("idTarifa");
            entity.Property(e => e.NovaTarifa)
                .HasMaxLength(50)
                .HasColumnName("novaTarifa");
            entity.Property(e => e.Tarifa)
                .HasMaxLength(50)
                .HasColumnName("tarifa");
            entity.Property(e => e.ValorManual).HasColumnName("valorManual");
            entity.Property(e => e.ValorNovaTarifa)
                .HasColumnType("money")
                .HasColumnName("valorNovaTarifa");
            entity.Property(e => e.ValorTarifa)
                .HasColumnType("money")
                .HasColumnName("valorTarifa");
        });

        modelBuilder.Entity<TempAumentos2015>(entity =>
        {
            entity
                .HasNoKey()
                .ToTable("temp_aumentos_2015");

            entity.HasIndex(e => e.IdLin, "idLin");

            entity.Property(e => e.Aumento)
                .HasColumnType("money")
                .HasColumnName("aumento");
            entity.Property(e => e.Awb)
                .HasMaxLength(20)
                .HasColumnName("awb");
            entity.Property(e => e.Data)
                .HasColumnType("date")
                .HasColumnName("data");
            entity.Property(e => e.IdCliente).HasColumnName("idCliente");
            entity.Property(e => e.IdEntidade).HasColumnName("idEntidade");
            entity.Property(e => e.IdLin).HasColumnName("idLin");
            entity.Property(e => e.IdManifesto).HasColumnName("idManifesto");
            entity.Property(e => e.IdNovaTarifa).HasColumnName("idNovaTarifa");
            entity.Property(e => e.IdRegime).HasColumnName("idRegime");
            entity.Property(e => e.IdServico).HasColumnName("idServico");
            entity.Property(e => e.IdServicoDet).HasColumnName("idServicoDet");
            entity.Property(e => e.IdTarifa).HasColumnName("idTarifa");
            entity.Property(e => e.NovaTarifa)
                .HasMaxLength(50)
                .HasColumnName("novaTarifa");
            entity.Property(e => e.Tarifa)
                .HasMaxLength(50)
                .HasColumnName("tarifa");
            entity.Property(e => e.ValorManual).HasColumnName("valorManual");
            entity.Property(e => e.ValorNovaTarifa)
                .HasColumnType("money")
                .HasColumnName("valorNovaTarifa");
            entity.Property(e => e.ValorTarifa)
                .HasColumnType("money")
                .HasColumnName("valorTarifa");
        });

        modelBuilder.Entity<TempAumentosSimulacao>(entity =>
        {
            entity
                .HasNoKey()
                .ToTable("temp_aumentos_simulacao");

            entity.Property(e => e.Aumento)
                .HasColumnType("money")
                .HasColumnName("aumento");
            entity.Property(e => e.Awb)
                .HasMaxLength(20)
                .HasColumnName("awb");
            entity.Property(e => e.Data)
                .HasColumnType("date")
                .HasColumnName("data");
            entity.Property(e => e.IdCliente).HasColumnName("idCliente");
            entity.Property(e => e.IdEntidade).HasColumnName("idEntidade");
            entity.Property(e => e.IdLin).HasColumnName("idLin");
            entity.Property(e => e.IdManifesto).HasColumnName("idManifesto");
            entity.Property(e => e.IdNovaTarifa).HasColumnName("idNovaTarifa");
            entity.Property(e => e.IdRegime).HasColumnName("idRegime");
            entity.Property(e => e.IdServico).HasColumnName("idServico");
            entity.Property(e => e.IdServicoDet).HasColumnName("idServicoDet");
            entity.Property(e => e.IdTarifa).HasColumnName("idTarifa");
            entity.Property(e => e.NovaTarifa)
                .HasMaxLength(50)
                .HasColumnName("novaTarifa");
            entity.Property(e => e.Tarifa)
                .HasMaxLength(50)
                .HasColumnName("tarifa");
            entity.Property(e => e.Textoficheiro)
                .HasMaxLength(1000)
                .HasColumnName("TEXTOFICHEIRO");
            entity.Property(e => e.ValorManual).HasColumnName("valorManual");
            entity.Property(e => e.ValorNovaTarifa)
                .HasColumnType("money")
                .HasColumnName("valorNovaTarifa");
            entity.Property(e => e.ValorTarifa)
                .HasColumnType("money")
                .HasColumnName("valorTarifa");
        });

        modelBuilder.Entity<TempEstadoEntrega>(entity =>
        {
            entity
                .HasNoKey()
                .ToTable("temp_EstadoEntregas");

            entity.Property(e => e.AwbMaster)
                .HasMaxLength(20)
                .HasColumnName("awb/master");
            entity.Property(e => e.Categoria)
                .HasMaxLength(50)
                .IsUnicode(false)
                .HasColumnName("categoria");
            entity.Property(e => e.Cliente)
                .HasMaxLength(100)
                .HasColumnName("cliente");
            entity.Property(e => e.Codigo)
                .HasMaxLength(20)
                .HasColumnName("codigo");
            entity.Property(e => e.CoordGps)
                .HasMaxLength(50)
                .HasColumnName("coordGps");
            entity.Property(e => e.CpDest)
                .HasMaxLength(10)
                .HasColumnName("cpDest");
            entity.Property(e => e.CppostalExp)
                .HasMaxLength(30)
                .HasColumnName("CPPostalExp");
            entity.Property(e => e.DataEnvio)
                .HasColumnType("datetime")
                .HasColumnName("dataEnvio");
            entity.Property(e => e.DataPrimeiroScan).HasColumnType("datetime");
            entity.Property(e => e.DataUltimoScan).HasColumnType("datetime");
            entity.Property(e => e.Datascan)
                .HasColumnType("datetime")
                .HasColumnName("datascan");
            entity.Property(e => e.Ded)
                .HasColumnType("datetime")
                .HasColumnName("DED");
            entity.Property(e => e.DescScan)
                .HasMaxLength(50)
                .HasColumnName("Desc_Scan");
            entity.Property(e => e.Destinatário)
                .HasMaxLength(34)
                .HasColumnName("destinatário");
            entity.Property(e => e.Digit).HasColumnName("digit.");
            entity.Property(e => e.Entidade)
                .HasMaxLength(50)
                .HasColumnName("entidade");
            entity.Property(e => e.Expedidor).HasMaxLength(60);
            entity.Property(e => e.FirstDed)
                .HasColumnType("datetime")
                .HasColumnName("FirstDED");
            entity.Property(e => e.GV)
                .HasMaxLength(1)
                .IsUnicode(false)
                .HasColumnName("G/V");
            entity.Property(e => e.HoraActual)
                .HasColumnType("datetime")
                .HasColumnName("horaActual");
            entity.Property(e => e.IdPaisExpedidor).HasColumnName("idPaisExpedidor");
            entity.Property(e => e.Iis).HasColumnName("IIs");
            entity.Property(e => e.ImpEtiq).HasColumnName("impEtiq");
            entity.Property(e => e.ImpGuia).HasColumnName("impGuia");
            entity.Property(e => e.Incidência)
                .HasMaxLength(3)
                .IsUnicode(false);
            entity.Property(e => e.LocDest)
                .HasMaxLength(44)
                .HasColumnName("loc.dest");
            entity.Property(e => e.MoradaDestinatario).HasMaxLength(68);
            entity.Property(e => e.Ncs).HasColumnName("NCs");
            entity.Property(e => e.NomeFornecedor).HasMaxLength(100);
            entity.Property(e => e.NumExpBuyTrago)
                .HasMaxLength(50)
                .IsUnicode(false);
            entity.Property(e => e.NívelServiço)
                .HasMaxLength(15)
                .IsUnicode(false)
                .HasColumnName("Nível Serviço");
            entity.Property(e => e.Observacoes)
                .HasMaxLength(200)
                .HasColumnName("observacoes");
            entity.Property(e => e.PaisExpedidor).HasMaxLength(50);
            entity.Property(e => e.Peso).HasColumnType("money");
            entity.Property(e => e.PlatPrimScan).HasMaxLength(50);
            entity.Property(e => e.PlatUltScan).HasMaxLength(15);
            entity.Property(e => e.PrimScan).HasMaxLength(2);
            entity.Property(e => e.Ref)
                .HasMaxLength(50)
                .IsUnicode(false)
                .HasColumnName("ref.");
            entity.Property(e => e.Rota)
                .HasMaxLength(5)
                .HasColumnName("rota");
            entity.Property(e => e.RotaUltScan)
                .HasMaxLength(5)
                .HasColumnName("rotaUltScan");
            entity.Property(e => e.Scan)
                .HasMaxLength(2)
                .HasColumnName("scan");
            entity.Property(e => e.ScanCodePodDex)
                .HasMaxLength(2)
                .HasColumnName("scanCodePodDex");
            entity.Property(e => e.ScanDatePodDex)
                .HasColumnType("datetime")
                .HasColumnName("scanDatePodDex");
            entity.Property(e => e.Sel)
                .HasMaxLength(15)
                .HasColumnName("sel");
            entity.Property(e => e.Servico)
                .HasMaxLength(50)
                .HasColumnName("servico");
            entity.Property(e => e.SubCliente).HasMaxLength(60);
            entity.Property(e => e.UltScan)
                .HasMaxLength(2)
                .HasColumnName("ultScan");
            entity.Property(e => e.UltScanNot44Code).HasMaxLength(2);
            entity.Property(e => e.UltScanNot44Rota).HasMaxLength(5);
            entity.Property(e => e.Vols).HasColumnName("vols");
        });

        modelBuilder.Entity<TempHdMonitorFact>(entity =>
        {
            entity.ToTable("temp_hd_monitor_fact");

            entity.Property(e => e.Id).HasColumnName("id");
            entity.Property(e => e.Altura).HasColumnName("altura");
            entity.Property(e => e.CPostalDestino)
                .HasMaxLength(8)
                .HasColumnName("cPostalDestino");
            entity.Property(e => e.CPostalOrigem)
                .HasMaxLength(8)
                .HasColumnName("cPostalOrigem");
            entity.Property(e => e.Comprimento).HasColumnName("comprimento");
            entity.Property(e => e.Descricao)
                .HasMaxLength(239)
                .HasColumnName("descricao");
            entity.Property(e => e.DtDone)
                .HasColumnType("datetime")
                .HasColumnName("dtDone");
            entity.Property(e => e.DtEnvio)
                .HasColumnType("date")
                .HasColumnName("dtEnvio");
            entity.Property(e => e.DtValor)
                .HasColumnType("datetime")
                .HasColumnName("dtValor");
            entity.Property(e => e.IdClasseOrigem).HasColumnName("idClasseOrigem");
            entity.Property(e => e.IdCliMoradaFact).HasColumnName("idCliMoradaFact");
            entity.Property(e => e.IdClienteFact).HasColumnName("idClienteFact");
            entity.Property(e => e.IdManifesto).HasColumnName("idManifesto");
            entity.Property(e => e.IdManifestoItem).HasColumnName("idManifestoItem");
            entity.Property(e => e.IdPaisDestino).HasColumnName("idPaisDestino");
            entity.Property(e => e.IdPaisOrigem).HasColumnName("idPaisOrigem");
            entity.Property(e => e.IdRegime).HasColumnName("idRegime");
            entity.Property(e => e.IdServico).HasColumnName("idServico");
            entity.Property(e => e.IdServicoDet).HasColumnName("idServicoDet");
            entity.Property(e => e.IdTipoProduto).HasColumnName("idTipoProduto");
            entity.Property(e => e.Identidade).HasColumnName("identidade");
            entity.Property(e => e.Largura).HasColumnName("largura");
            entity.Property(e => e.NumPacotes).HasColumnName("numPacotes");
            entity.Property(e => e.Peso).HasColumnName("peso");
            entity.Property(e => e.PesoVol).HasColumnName("pesoVol");
            entity.Property(e => e.Temvolumetrico).HasColumnName("temvolumetrico");
            entity.Property(e => e.Valor)
                .HasColumnType("money")
                .HasColumnName("valor");
            entity.Property(e => e.ValorFrete)
                .HasColumnType("money")
                .HasColumnName("valorFrete");
            entity.Property(e => e.ValorManual).HasColumnName("valorManual");
            entity.Property(e => e.ValorSegurado)
                .HasColumnType("money")
                .HasColumnName("valorSegurado");
        });

        modelBuilder.Entity<TempNeptunoHd>(entity =>
        {
            entity
                .HasNoKey()
                .ToTable("temp_neptuno_hd");

            entity.Property(e => e.Anulado).HasColumnName("anulado");
            entity.Property(e => e.Cpostal)
                .HasMaxLength(50)
                .HasColumnName("cpostal");
            entity.Property(e => e.Gestor)
                .HasMaxLength(255)
                .HasColumnName("gestor");
            entity.Property(e => e.IdCliente).HasColumnName("idCliente");
            entity.Property(e => e.Locaidade).HasMaxLength(255);
            entity.Property(e => e.Localidade)
                .HasMaxLength(100)
                .HasColumnName("localidade");
            entity.Property(e => e.Nif)
                .HasMaxLength(50)
                .HasColumnName("NIF");
            entity.Property(e => e.Nome)
                .HasMaxLength(255)
                .HasColumnName("nome");
            entity.Property(e => e.Potencial).HasColumnType("money");
            entity.Property(e => e.Repetido).HasColumnName("repetido");
            entity.Property(e => e.Telf1)
                .HasMaxLength(50)
                .HasColumnName("telf1");
            entity.Property(e => e.Telf2)
                .HasMaxLength(255)
                .HasColumnName("telf2");
        });

        modelBuilder.Entity<TempPtctmnCarrovassoura>(entity =>
        {
            entity
                .HasNoKey()
                .ToTable("Temp_PTCTMN_Carrovassoura");

            entity.Property(e => e.ArmazémExpedidor)
                .HasMaxLength(255)
                .HasColumnName("Armazém_Expedidor");
            entity.Property(e => e.DMax)
                .HasMaxLength(255)
                .HasColumnName("D>Max");
            entity.Property(e => e.DataSm)
                .HasColumnType("datetime")
                .HasColumnName("Data SM");
            entity.Property(e => e.Dept)
                .HasMaxLength(255)
                .HasColumnName("DEPT");
            entity.Property(e => e.Empresa).HasMaxLength(255);
            entity.Property(e => e.Mês).HasMaxLength(255);
            entity.Property(e => e.NMes)
                .HasMaxLength(255)
                .HasColumnName("N_Mes");
            entity.Property(e => e.NúmeroDeObjecto)
                .HasMaxLength(255)
                .HasColumnName("Número de Objecto");
            entity.Property(e => e.NúmeroDeOrdem)
                .HasMaxLength(255)
                .HasColumnName("Número de Ordem");
            entity.Property(e => e.NúmeroDeRemessa)
                .HasMaxLength(255)
                .HasColumnName("Número de Remessa");
            entity.Property(e => e.Obs)
                .HasMaxLength(255)
                .HasColumnName("OBS");
            entity.Property(e => e.Resolvido)
                .HasMaxLength(255)
                .HasColumnName("RESOLVIDO");
            entity.Property(e => e.TpServ)
                .HasMaxLength(255)
                .HasColumnName("TP_Serv");
            entity.Property(e => e.Transportador).HasMaxLength(255);
        });

        modelBuilder.Entity<TempRedesCarrovassoura>(entity =>
        {
            entity
                .HasNoKey()
                .ToTable("Temp_Redes_Carrovassoura");

            entity.Property(e => e.Awb)
                .HasMaxLength(255)
                .HasColumnName("awb");
            entity.Property(e => e.Cp4)
                .HasMaxLength(255)
                .HasColumnName("CP4");
            entity.Property(e => e.Data).HasColumnType("datetime");
            entity.Property(e => e.Dept)
                .HasMaxLength(10)
                .HasColumnName("DEPT");
            entity.Property(e => e.Obs)
                .HasMaxLength(250)
                .HasColumnName("OBS");
            entity.Property(e => e.Referencia)
                .HasMaxLength(255)
                .HasColumnName("referencia");
            entity.Property(e => e.Resolvido)
                .HasDefaultValueSql("((0))")
                .HasColumnName("RESOLVIDO");
            entity.Property(e => e.TipoServiçoPt)
                .HasMaxLength(255)
                .HasColumnName("TipoServiço_PT");
            entity.Property(e => e.Transportador).HasMaxLength(255);
            entity.Property(e => e.UltStatReportado)
                .HasMaxLength(255)
                .HasColumnName("ult_stat_reportado");
        });

        modelBuilder.Entity<TempSafira>(entity =>
        {
            entity
                .HasNoKey()
                .ToTable("temp_safira");

            entity.Property(e => e.Awb)
                .HasMaxLength(20)
                .HasColumnName("awb");
            entity.Property(e => e.Dtenvio)
                .HasColumnType("datetime")
                .HasColumnName("dtenvio");
            entity.Property(e => e.IdManifesto).HasColumnName("idManifesto");
            entity.Property(e => e.Idmaster).HasColumnName("idmaster");
            entity.Property(e => e.M3).HasColumnName("m3");
            entity.Property(e => e.Master)
                .HasMaxLength(20)
                .HasColumnName("master");
            entity.Property(e => e.Peso)
                .HasColumnType("money")
                .HasColumnName("peso");
            entity.Property(e => e.PesoOrig)
                .HasColumnType("money")
                .HasColumnName("pesoOrig");
            entity.Property(e => e.PesoOrigVol)
                .HasColumnType("money")
                .HasColumnName("pesoOrigVol");
            entity.Property(e => e.PesoPesado)
                .HasColumnType("money")
                .HasColumnName("pesoPesado");
            entity.Property(e => e.PesoReal)
                .HasColumnType("money")
                .HasColumnName("pesoReal");
            entity.Property(e => e.PesoRealVol)
                .HasColumnType("money")
                .HasColumnName("pesoRealVol");
            entity.Property(e => e.PesoVol)
                .HasColumnType("money")
                .HasColumnName("pesoVol");
            entity.Property(e => e.PesoVolumetrico)
                .HasColumnType("money")
                .HasColumnName("pesoVolumetrico");
        });

        modelBuilder.Entity<TempSheet1Am>(entity =>
        {
            entity
                .HasNoKey()
                .ToTable("TempSheet1_AMS");

            entity.Property(e => e.Cliente)
                .HasMaxLength(255)
                .HasColumnName("cliente");
            entity.Property(e => e.IdCliente).HasColumnName("idCliente");
            entity.Property(e => e.TipoTarifa)
                .HasMaxLength(255)
                .HasColumnName("Tipo Tarifa");
        });

        modelBuilder.Entity<TempSplitComercial>(entity =>
        {
            entity
                .HasNoKey()
                .ToTable("TEMP_SPLIT_COMERCIAL");

            entity.Property(e => e.F4).HasMaxLength(255);
            entity.Property(e => e.IdCliente).HasColumnName("idCliente");
            entity.Property(e => e.Nome)
                .HasMaxLength(255)
                .HasColumnName("nome");
            entity.Property(e => e.Resp)
                .HasMaxLength(255)
                .HasColumnName("resp");
        });

        modelBuilder.Entity<TempStatusConvert>(entity =>
        {
            entity
                .HasNoKey()
                .ToTable("tempStatusConvert");

            entity.Property(e => e.IdCliMorada).HasColumnName("idCliMorada");
            entity.Property(e => e.IdCliente).HasColumnName("idCliente");
            entity.Property(e => e.IdStatus).HasColumnName("idStatus");
            entity.Property(e => e.Processado).HasColumnName("processado");
        });

        modelBuilder.Entity<TempTemplatesTarifas2011>(entity =>
        {
            entity
                .HasNoKey()
                .ToTable("Temp_Templates_Tarifas_2011");

            entity.Property(e => e.F23).HasMaxLength(255);
            entity.Property(e => e.F43).HasMaxLength(255);
            entity.Property(e => e.FactAntigaIbIe)
                .HasMaxLength(255)
                .HasColumnName("Fact antiga IB IE");
            entity.Property(e => e.FactAntigaIbIef)
                .HasMaxLength(255)
                .HasColumnName("Fact antiga IB IEF");
            entity.Property(e => e.FactAntigaIbIp)
                .HasMaxLength(255)
                .HasColumnName("Fact antiga IB IP");
            entity.Property(e => e.FactAntigaIbIpf)
                .HasMaxLength(255)
                .HasColumnName("Fact antiga IB IPF");
            entity.Property(e => e.FactAntigaObIe)
                .HasMaxLength(255)
                .HasColumnName("Fact antiga OB IE");
            entity.Property(e => e.FactAntigaObIef)
                .HasMaxLength(255)
                .HasColumnName("Fact antiga OB IEF");
            entity.Property(e => e.FactAntigaObIp)
                .HasMaxLength(255)
                .HasColumnName("Fact antiga OB IP");
            entity.Property(e => e.FactAntigaObIpf)
                .HasMaxLength(255)
                .HasColumnName("Fact antiga OB IPF");
            entity.Property(e => e.FactNovaIbIe)
                .HasColumnType("money")
                .HasColumnName("Fact nova IB IE");
            entity.Property(e => e.FactNovaIbIef)
                .HasMaxLength(255)
                .HasColumnName("Fact nova IB IEF");
            entity.Property(e => e.FactNovaIbIp)
                .HasColumnType("money")
                .HasColumnName("Fact nova IB IP");
            entity.Property(e => e.FactNovaIbIpf)
                .HasColumnType("money")
                .HasColumnName("Fact nova IB IPF");
            entity.Property(e => e.FactNovaObIe)
                .HasColumnType("money")
                .HasColumnName("Fact nova OB IE");
            entity.Property(e => e.FactNovaObIef)
                .HasColumnType("money")
                .HasColumnName("Fact nova OB IEF");
            entity.Property(e => e.FactNovaObIp)
                .HasColumnType("money")
                .HasColumnName("Fact nova OB IP");
            entity.Property(e => e.FactNovaObIpf)
                .HasColumnType("money")
                .HasColumnName("Fact nova OB IPF");
            entity.Property(e => e.IdGcom).HasColumnName("ID GCOM");
            entity.Property(e => e.Processado)
                .HasDefaultValueSql("((0))")
                .HasColumnName("processado");
            entity.Property(e => e.SugestãoTarifaIeIb)
                .HasMaxLength(255)
                .HasColumnName("SUGESTÃO TARIFA IE IB");
            entity.Property(e => e.SugestãoTarifaIeOb)
                .HasMaxLength(255)
                .HasColumnName("SUGESTÃO TARIFA IE OB");
            entity.Property(e => e.SugestãoTarifaIefIb)
                .HasMaxLength(255)
                .HasColumnName("SUGESTÃO TARIFA IEF IB");
            entity.Property(e => e.SugestãoTarifaIefOb)
                .HasMaxLength(255)
                .HasColumnName("SUGESTÃO TARIFA IEF OB");
            entity.Property(e => e.SugestãoTarifaIpIb)
                .HasMaxLength(255)
                .HasColumnName("SUGESTÃO TARIFA IP IB");
            entity.Property(e => e.SugestãoTarifaIpOb)
                .HasMaxLength(255)
                .HasColumnName("SUGESTÃO TARIFA IP OB");
            entity.Property(e => e.SugestãoTarifaIpfIb)
                .HasMaxLength(255)
                .HasColumnName("SUGESTÃO TARIFA IPF IB");
            entity.Property(e => e.SugestãoTarifaIpfOb)
                .HasMaxLength(255)
                .HasColumnName("SUGESTÃO TARIFA IPF OB");
            entity.Property(e => e.TarifaActualIeIb)
                .HasMaxLength(255)
                .HasColumnName("TARIFA ACTUAL IE IB");
            entity.Property(e => e.TarifaActualIeOb)
                .HasMaxLength(255)
                .HasColumnName("TARIFA ACTUAL IE OB");
            entity.Property(e => e.TarifaActualIefIb)
                .HasMaxLength(255)
                .HasColumnName("TARIFA ACTUAL IEF IB");
            entity.Property(e => e.TarifaActualIefOb)
                .HasMaxLength(255)
                .HasColumnName("TARIFA ACTUAL IEF OB");
            entity.Property(e => e.TarifaActualIpIb)
                .HasMaxLength(255)
                .HasColumnName("TARIFA ACTUAL IP IB");
            entity.Property(e => e.TarifaActualIpOb)
                .HasMaxLength(255)
                .HasColumnName("TARIFA ACTUAL IP OB");
            entity.Property(e => e.TarifaActualIpfIb)
                .HasMaxLength(255)
                .HasColumnName("TARIFA ACTUAL IPF IB");
            entity.Property(e => e.TarifaActualIpfOb)
                .HasMaxLength(255)
                .HasColumnName("TARIFA ACTUAL IPF OB");
            entity.Property(e => e.Utilizador).HasMaxLength(255);
            entity.Property(e => e.VariaçãoIbIe)
                .HasMaxLength(255)
                .HasColumnName("Variação IB IE");
            entity.Property(e => e.VariaçãoIbIp)
                .HasMaxLength(255)
                .HasColumnName("Variação IB IP");
            entity.Property(e => e.VariaçãoObIe)
                .HasMaxLength(255)
                .HasColumnName("Variação OB IE");
            entity.Property(e => e.VariaçãoObIef)
                .HasMaxLength(255)
                .HasColumnName("Variação OB IEF");
            entity.Property(e => e.VariaçãoObIp)
                .HasMaxLength(255)
                .HasColumnName("Variação OB IP");
            entity.Property(e => e.VariaçãoObIpf)
                .HasMaxLength(255)
                .HasColumnName("Variação OB IPF");
            entity.Property(e => e.ZonaCom)
                .HasMaxLength(255)
                .HasColumnName("Zona Com#");
        });

        modelBuilder.Entity<TempTemplatesTarifasRex2Final>(entity =>
        {
            entity
                .HasNoKey()
                .ToTable("Temp_Templates_Tarifas_rex2_final");

            entity.Property(e => e.FactAntigaR10)
                .HasColumnType("money")
                .HasColumnName("Fact antiga R10");
            entity.Property(e => e.FactAntigaR13)
                .HasColumnType("money")
                .HasColumnName("Fact antiga R13");
            entity.Property(e => e.FactAntigaR19)
                .HasColumnType("money")
                .HasColumnName("Fact antiga R19");
            entity.Property(e => e.FactAntigaRia)
                .HasColumnType("money")
                .HasColumnName("Fact antiga RIA");
            entity.Property(e => e.FactAntigaRim)
                .HasColumnType("money")
                .HasColumnName("Fact antiga RIM");
            entity.Property(e => e.FactAntigaXl)
                .HasColumnType("money")
                .HasColumnName("Fact antiga XL");
            entity.Property(e => e.FactNovaR10)
                .HasColumnType("money")
                .HasColumnName("Fact nova R10");
            entity.Property(e => e.FactNovaR13)
                .HasColumnType("money")
                .HasColumnName("Fact nova R13");
            entity.Property(e => e.FactNovaR19)
                .HasColumnType("money")
                .HasColumnName("Fact nova R19");
            entity.Property(e => e.FactNovaRia)
                .HasColumnType("money")
                .HasColumnName("Fact nova RIA");
            entity.Property(e => e.FactNovaRim)
                .HasColumnType("money")
                .HasColumnName("Fact nova RIM");
            entity.Property(e => e.FactNovaXl)
                .HasColumnType("money")
                .HasColumnName("Fact nova XL");
            entity.Property(e => e.GComercial)
                .HasMaxLength(255)
                .HasColumnName("G# COMERCIAL");
            entity.Property(e => e.Id).HasColumnName("ID");
            entity.Property(e => e.Nome)
                .HasMaxLength(255)
                .HasColumnName("NOME");
            entity.Property(e => e.Processado)
                .HasDefaultValueSql("((0))")
                .HasColumnName("processado");
            entity.Property(e => e.SugestãoTarifaR10)
                .HasMaxLength(255)
                .HasColumnName("SUGESTÃO TARIFA R10");
            entity.Property(e => e.SugestãoTarifaR13)
                .HasMaxLength(255)
                .HasColumnName("SUGESTÃO TARIFA R13");
            entity.Property(e => e.SugestãoTarifaR19)
                .HasMaxLength(255)
                .HasColumnName("SUGESTÃO TARIFA R19");
            entity.Property(e => e.SugestãoTarifaRia)
                .HasMaxLength(255)
                .HasColumnName("SUGESTÃO TARIFA RIA");
            entity.Property(e => e.SugestãoTarifaRim)
                .HasMaxLength(255)
                .HasColumnName("SUGESTÃO TARIFA RIM");
            entity.Property(e => e.SugestãoTarifaXl)
                .HasMaxLength(255)
                .HasColumnName("SUGESTÃO TARIFA XL");
            entity.Property(e => e.TarifaActualR10)
                .HasMaxLength(255)
                .HasColumnName("TARIFA ACTUAL R10");
            entity.Property(e => e.TarifaActualR13)
                .HasMaxLength(255)
                .HasColumnName("TARIFA ACTUAL R13");
            entity.Property(e => e.TarifaActualR19)
                .HasMaxLength(255)
                .HasColumnName("TARIFA ACTUAL R19");
            entity.Property(e => e.TarifaActualRia)
                .HasMaxLength(255)
                .HasColumnName("TARIFA ACTUAL RIA");
            entity.Property(e => e.TarifaActualRim)
                .HasMaxLength(255)
                .HasColumnName("TARIFA ACTUAL RIM");
            entity.Property(e => e.TarifaActualXl)
                .HasMaxLength(255)
                .HasColumnName("TARIFA ACTUAL XL");
            entity.Property(e => e.VariaçãoR10)
                .HasColumnType("money")
                .HasColumnName("Variação R10");
            entity.Property(e => e.VariaçãoR13)
                .HasColumnType("money")
                .HasColumnName("Variação R13");
            entity.Property(e => e.VariaçãoR19)
                .HasColumnType("money")
                .HasColumnName("Variação R19");
            entity.Property(e => e.VariaçãoRia)
                .HasColumnType("money")
                .HasColumnName("Variação RIA");
            entity.Property(e => e.VariaçãoRim)
                .HasColumnType("money")
                .HasColumnName("Variação RIM");
            entity.Property(e => e.VariaçãoXl)
                .HasMaxLength(255)
                .HasColumnName("Variação XL");
        });

        modelBuilder.Entity<Teresaalf>(entity =>
        {
            entity
                .HasNoKey()
                .ToTable("teresaalves");

            entity.Property(e => e.F1).HasMaxLength(255);
            entity.Property(e => e.F10).HasMaxLength(255);
            entity.Property(e => e.F11).HasMaxLength(255);
            entity.Property(e => e.F12).HasMaxLength(255);
            entity.Property(e => e.F13).HasMaxLength(255);
            entity.Property(e => e.F14).HasMaxLength(255);
            entity.Property(e => e.F15).HasMaxLength(255);
            entity.Property(e => e.F16).HasMaxLength(255);
            entity.Property(e => e.F17).HasMaxLength(255);
            entity.Property(e => e.F18).HasMaxLength(255);
            entity.Property(e => e.F2).HasMaxLength(255);
            entity.Property(e => e.F20).HasMaxLength(255);
            entity.Property(e => e.F21).HasMaxLength(255);
            entity.Property(e => e.F22).HasMaxLength(255);
            entity.Property(e => e.F23).HasMaxLength(255);
            entity.Property(e => e.F24).HasMaxLength(255);
            entity.Property(e => e.F25).HasMaxLength(255);
            entity.Property(e => e.F27).HasMaxLength(255);
            entity.Property(e => e.F28).HasMaxLength(255);
            entity.Property(e => e.F29).HasMaxLength(255);
            entity.Property(e => e.F30).HasMaxLength(255);
            entity.Property(e => e.F5).HasMaxLength(255);
            entity.Property(e => e.F7).HasMaxLength(255);
            entity.Property(e => e.F9).HasMaxLength(255);
        });

        modelBuilder.Entity<TesteAudit>(entity =>
        {
            entity
                .HasNoKey()
                .ToTable("TesteAudit");

            entity.Property(e => e.AlteredData)
                .HasColumnType("xml")
                .HasColumnName("alteredData");
            entity.Property(e => e.DtUltAct)
                .HasColumnType("datetime")
                .HasColumnName("dtUltAct");
            entity.Property(e => e.FieldName)
                .HasMaxLength(128)
                .IsUnicode(false);
            entity.Property(e => e.IdUtilUltAct).HasColumnName("idUtilUltAct");
            entity.Property(e => e.NewValue)
                .HasMaxLength(1000)
                .IsUnicode(false);
            entity.Property(e => e.OldValue)
                .HasMaxLength(1000)
                .IsUnicode(false);
            entity.Property(e => e.Pk).HasColumnName("PK");
            entity.Property(e => e.SpId).HasColumnName("spID");
            entity.Property(e => e.SysUpdateDate).HasColumnType("datetime");
            entity.Property(e => e.SysUserName)
                .HasMaxLength(128)
                .IsUnicode(false);
            entity.Property(e => e.TableName)
                .HasMaxLength(128)
                .IsUnicode(false);
            entity.Property(e => e.Type)
                .HasMaxLength(1)
                .IsUnicode(false)
                .IsFixedLength();
        });

        modelBuilder.Entity<TesteHd>(entity =>
        {
            entity.HasKey(e => e.Id).HasName("PK_teste_hd_1");

            entity.ToTable("teste_hd");

            entity.Property(e => e.Id)
                .ValueGeneratedNever()
                .HasColumnName("id");
            entity.Property(e => e.Teste)
                .HasMaxLength(10)
                .IsFixedLength()
                .HasColumnName("teste");
        });

        modelBuilder.Entity<TesteNb>(entity =>
        {
            entity
                .HasNoKey()
                .ToTable("TESTE_NB");

            entity.Property(e => e.CustoEntrega).HasColumnType("money");
            entity.Property(e => e.CustoRecolha).HasColumnType("money");
            entity.Property(e => e.Data).HasColumnType("date");
            entity.Property(e => e.IdMotorista).HasColumnName("idMotorista");
            entity.Property(e => e.IdPlataforma).HasColumnName("idPlataforma");
            entity.Property(e => e.IdRota).HasColumnName("idRota");
            entity.Property(e => e.NumStopsEnvios).HasColumnName("numStopsEnvios");
            entity.Property(e => e.NumStopsRecolha).HasColumnName("numStopsRecolha");
            entity.Property(e => e.PesoEntrega).HasColumnType("money");
            entity.Property(e => e.PesoRecolha).HasColumnType("money");
            entity.Property(e => e.ValoresAdicionais).HasColumnType("money");
        });

        modelBuilder.Entity<TiagoCostum>(entity =>
        {
            entity.HasKey(e => e.IdManifesto).HasName("PK__tiagoCos__C64EFAE54950772E");

            entity.ToTable("tiagoCosta");

            entity.Property(e => e.IdManifesto)
                .ValueGeneratedNever()
                .HasColumnName("idManifesto");
            entity.Property(e => e.Awb)
                .HasMaxLength(50)
                .HasColumnName("awb");
            entity.Property(e => e.Cliente).HasMaxLength(200);
            entity.Property(e => e.DtEnvio)
                .HasColumnType("date")
                .HasColumnName("dtEnvio");
            entity.Property(e => e.IdCliente).HasColumnName("idCliente");
            entity.Property(e => e.IdTarifa).HasColumnName("idTarifa");
            entity.Property(e => e.Servico)
                .HasMaxLength(250)
                .HasColumnName("servico");
            entity.Property(e => e.Tarifa)
                .HasMaxLength(250)
                .HasColumnName("tarifa");
            entity.Property(e => e.TarifaSimulada)
                .HasMaxLength(250)
                .HasColumnName("tarifaSimulada");
            entity.Property(e => e.ValorFact)
                .HasColumnType("money")
                .HasColumnName("valorFact");
            entity.Property(e => e.ValorManual).HasColumnName("valorManual");
            entity.Property(e => e.ValorSimulado)
                .HasColumnType("money")
                .HasColumnName("valorSimulado");
        });

        modelBuilder.Entity<TipoInstalacaoShipT>(entity =>
        {
            entity.HasKey(e => e.Id).HasName("PK_TipoInstalacaoShip_T_1");

            entity.ToTable("TipoInstalacaoShip_T");

            entity.Property(e => e.Id).HasColumnName("id");
            entity.Property(e => e.Descricao)
                .HasMaxLength(50)
                .IsUnicode(false)
                .HasColumnName("descricao");
            entity.Property(e => e.IdEntidade).HasColumnName("idEntidade");
        });

        modelBuilder.Entity<Tipsa>(entity =>
        {
            entity
                .HasNoKey()
                .ToView("tipsa");

            entity.Property(e => e.FAlto)
                .HasColumnType("decimal(5, 2)")
                .HasColumnName("F_ALTO");
            entity.Property(e => e.FAncho)
                .HasColumnType("decimal(5, 2)")
                .HasColumnName("F_ANCHO");
            entity.Property(e => e.FLargo)
                .HasColumnType("decimal(5, 2)")
                .HasColumnName("F_LARGO");
            entity.Property(e => e.FPeso)
                .HasColumnType("decimal(5, 3)")
                .HasColumnName("F_PESO");
            entity.Property(e => e.Id)
                .ValueGeneratedOnAdd()
                .HasColumnName("id");
            entity.Property(e => e.Master)
                .HasMaxLength(50)
                .HasColumnName("master");
            entity.Property(e => e.Ref)
                .HasMaxLength(50)
                .HasColumnName("ref");
            entity.Property(e => e.VBul).HasColumnName("V_BUL");
        });

        modelBuilder.Entity<Tipsa4>(entity =>
        {
            entity
                .HasNoKey()
                .ToView("tipsa4");

            entity.Property(e => e.Awb)
                .HasMaxLength(20)
                .HasColumnName("awb");
            entity.Property(e => e.Idmanifesto).HasColumnName("idmanifesto");
            entity.Property(e => e.Master)
                .HasMaxLength(20)
                .HasColumnName("master");
            entity.Property(e => e.Referencia)
                .HasMaxLength(50)
                .IsUnicode(false)
                .HasColumnName("referencia");
        });

        modelBuilder.Entity<TmpAndre>(entity =>
        {
            entity.HasKey(e => e.IdManifesto);

            entity.ToTable("TMP_Andre");

            entity.Property(e => e.IdManifesto)
                .ValueGeneratedNever()
                .HasColumnName("idManifesto");
            entity.Property(e => e.IdTipoProduto).HasColumnName("idTipoProduto");
        });

        modelBuilder.Entity<TmpDocsLinToDelete>(entity =>
        {
            entity
                .HasNoKey()
                .ToTable("TMP_DocsLin_ToDelete");

            entity.Property(e => e.Awbnumber)
                .HasMaxLength(20)
                .HasColumnName("awbnumber");
            entity.Property(e => e.Cambio)
                .HasColumnType("money")
                .HasColumnName("cambio");
            entity.Property(e => e.CodIva)
                .HasMaxLength(10)
                .HasColumnName("codIva");
            entity.Property(e => e.DescProduto)
                .HasMaxLength(250)
                .HasColumnName("descProduto");
            entity.Property(e => e.Dimensoes)
                .HasMaxLength(50)
                .HasColumnName("dimensoes");
            entity.Property(e => e.DtAnulacao)
                .HasColumnType("datetime")
                .HasColumnName("dtAnulacao");
            entity.Property(e => e.DtComis)
                .HasColumnType("datetime")
                .HasColumnName("dtComis");
            entity.Property(e => e.DtCreditada)
                .HasColumnType("datetime")
                .HasColumnName("dtCreditada");
            entity.Property(e => e.DtExport)
                .HasColumnType("datetime")
                .HasColumnName("dtExport");
            entity.Property(e => e.DtExportSap)
                .HasColumnType("datetime")
                .HasColumnName("dtExportSAP");
            entity.Property(e => e.DtIntrod)
                .HasColumnType("datetime")
                .HasColumnName("dtIntrod");
            entity.Property(e => e.DtProduto)
                .HasColumnType("datetime")
                .HasColumnName("dtProduto");
            entity.Property(e => e.ExtCidade)
                .HasMaxLength(50)
                .HasColumnName("extCidade");
            entity.Property(e => e.ExtCpostal)
                .HasMaxLength(15)
                .HasColumnName("extCPostal");
            entity.Property(e => e.ExtEmpresa)
                .HasMaxLength(60)
                .HasColumnName("extEmpresa");
            entity.Property(e => e.ExtIdPais).HasColumnName("extIdPais");
            entity.Property(e => e.ExtMorada)
                .HasMaxLength(100)
                .HasColumnName("extMorada");
            entity.Property(e => e.ExtPais)
                .HasMaxLength(50)
                .HasColumnName("extPais");
            entity.Property(e => e.FaltaValorUnitario).HasColumnName("faltaValorUnitario");
            entity.Property(e => e.Id)
                .ValueGeneratedOnAdd()
                .HasColumnName("id");
            entity.Property(e => e.IdAgrupamento).HasColumnName("idAgrupamento");
            entity.Property(e => e.IdCab).HasColumnName("idCab");
            entity.Property(e => e.IdEntregaMaterial).HasColumnName("idEntregaMaterial");
            entity.Property(e => e.IdEntregaMaterialItem).HasColumnName("idEntregaMaterialItem");
            entity.Property(e => e.IdEquipaComis).HasColumnName("idEquipaComis");
            entity.Property(e => e.IdExport).HasColumnName("idExport");
            entity.Property(e => e.IdExportacao).HasColumnName("idExportacao");
            entity.Property(e => e.IdExportacaoItem).HasColumnName("idExportacaoItem");
            entity.Property(e => e.IdImportacao).HasColumnName("idImportacao");
            entity.Property(e => e.IdImportacaoItem).HasColumnName("idImportacaoItem");
            entity.Property(e => e.IdIvareg).HasColumnName("idIVAREG");
            entity.Property(e => e.IdLinOrigem).HasColumnName("idLinOrigem");
            entity.Property(e => e.IdManifesto).HasColumnName("idManifesto");
            entity.Property(e => e.IdManifestoItem).HasColumnName("idManifestoItem");
            entity.Property(e => e.IdMoeda).HasColumnName("idMoeda");
            entity.Property(e => e.IdProduto).HasColumnName("idProduto");
            entity.Property(e => e.IdRegime).HasColumnName("idRegime");
            entity.Property(e => e.IdServico).HasColumnName("idServico");
            entity.Property(e => e.IdServicoDet).HasColumnName("idServicoDet");
            entity.Property(e => e.IdTarifa).HasColumnName("idTarifa");
            entity.Property(e => e.IdTipoComis).HasColumnName("idTipoComis");
            entity.Property(e => e.IdTipoIva).HasColumnName("idTipoIVA");
            entity.Property(e => e.IdUtilAnulacao).HasColumnName("idUtilAnulacao");
            entity.Property(e => e.IdUtilComis).HasColumnName("idUtilComis");
            entity.Property(e => e.IdUtilCreditada).HasColumnName("idUtilCreditada");
            entity.Property(e => e.IdUtilIntrod).HasColumnName("idUtilIntrod");
            entity.Property(e => e.Lin).HasColumnName("lin");
            entity.Property(e => e.LinhaAuto).HasColumnName("linhaAuto");
            entity.Property(e => e.M3)
                .HasColumnType("money")
                .HasColumnName("m3");
            entity.Property(e => e.NumVolumes).HasColumnName("numVolumes");
            entity.Property(e => e.ObsOrig)
                .HasMaxLength(200)
                .HasColumnName("obsOrig");
            entity.Property(e => e.Observacoes)
                .HasMaxLength(1000)
                .HasColumnName("observacoes");
            entity.Property(e => e.Peso)
                .HasColumnType("money")
                .HasColumnName("peso");
            entity.Property(e => e.PesoVol)
                .HasColumnType("money")
                .HasColumnName("pesoVol");
            entity.Property(e => e.PodDate)
                .HasColumnType("datetime")
                .HasColumnName("podDate");
            entity.Property(e => e.PodSignature)
                .HasMaxLength(50)
                .HasColumnName("podSignature");
            entity.Property(e => e.ProdCidade)
                .HasMaxLength(50)
                .HasColumnName("prodCidade");
            entity.Property(e => e.ProdCpostal)
                .HasMaxLength(15)
                .HasColumnName("prodCPostal");
            entity.Property(e => e.ProdEmpresa)
                .HasMaxLength(60)
                .HasColumnName("prodEmpresa");
            entity.Property(e => e.ProdIdPais).HasColumnName("prodIdPais");
            entity.Property(e => e.ProdMorada)
                .HasMaxLength(100)
                .HasColumnName("prodMorada");
            entity.Property(e => e.ProdPais)
                .HasMaxLength(50)
                .HasColumnName("prodPais");
            entity.Property(e => e.ProdRef)
                .HasMaxLength(50)
                .HasColumnName("prodRef");
            entity.Property(e => e.Quantidade)
                .HasColumnType("money")
                .HasColumnName("quantidade");
            entity.Property(e => e.RefTipoComis)
                .HasMaxLength(20)
                .HasColumnName("refTipoComis");
            entity.Property(e => e.Servico)
                .HasMaxLength(15)
                .HasColumnName("servico");
            entity.Property(e => e.TaxaIva)
                .HasColumnType("money")
                .HasColumnName("taxaIVA");
            entity.Property(e => e.ValComis)
                .HasColumnType("money")
                .HasColumnName("valComis");
            entity.Property(e => e.ValorCiva)
                .HasColumnType("money")
                .HasColumnName("valorCIVA");
            entity.Property(e => e.ValorIva)
                .HasColumnType("money")
                .HasColumnName("valorIVA");
            entity.Property(e => e.ValorProduto)
                .HasColumnType("money")
                .HasColumnName("valorProduto");
            entity.Property(e => e.ValorSiva)
                .HasColumnType("money")
                .HasColumnName("valorSIVA");
            entity.Property(e => e.ValorUnitario)
                .HasColumnType("money")
                .HasColumnName("valorUnitario");
        });

        modelBuilder.Entity<TmpSaraiva>(entity =>
        {
            entity
                .HasNoKey()
                .ToTable("tmp_saraiva");

            entity.Property(e => e.Cae).HasColumnName("cae");
            entity.Property(e => e.Cpostal)
                .HasMaxLength(15)
                .HasColumnName("cpostal");
            entity.Property(e => e.DataUltStatusComercial).HasColumnType("datetime");
            entity.Property(e => e.DataUltStatusComercial2).HasColumnType("datetime");
            entity.Property(e => e.Email)
                .HasMaxLength(50)
                .HasColumnName("email");
            entity.Property(e => e.Equipa)
                .HasMaxLength(50)
                .HasColumnName("equipa");
            entity.Property(e => e.Id).HasColumnName("id");
            entity.Property(e => e.Localidade)
                .HasMaxLength(100)
                .HasColumnName("localidade");
            entity.Property(e => e.Morada)
                .HasMaxLength(100)
                .HasColumnName("morada");
            entity.Property(e => e.NegociadoNac).HasColumnName("negociadoNAC");
            entity.Property(e => e.Nome)
                .HasMaxLength(100)
                .HasColumnName("nome");
            entity.Property(e => e.NomeContacto)
                .HasMaxLength(100)
                .HasColumnName("nomeContacto");
            entity.Property(e => e.NomeUtilizador)
                .HasMaxLength(50)
                .HasColumnName("nomeUtilizador");
            entity.Property(e => e.NumeroContaFedEx)
                .HasMaxLength(20)
                .HasColumnName("numeroContaFedEx");
            entity.Property(e => e.NumeroContribuinte)
                .HasMaxLength(20)
                .HasColumnName("numeroContribuinte");
            entity.Property(e => e.PlatUtilResp).HasMaxLength(50);
            entity.Property(e => e.PotencialNac).HasColumnName("potencialNAC");
            entity.Property(e => e.StatusComercial).HasMaxLength(50);
            entity.Property(e => e.StatusCredito).HasMaxLength(50);
            entity.Property(e => e.TarExp).HasMaxLength(25);
            entity.Property(e => e.TarImp).HasMaxLength(25);
            entity.Property(e => e.Telefone).HasColumnName("telefone");
            entity.Property(e => e.UltEncom)
                .HasColumnType("datetime")
                .HasColumnName("ultEncom");
            entity.Property(e => e.UltEntrev)
                .HasColumnType("datetime")
                .HasColumnName("ultEntrev");
            entity.Property(e => e.UtilizadorResp).HasMaxLength(50);
        });

        modelBuilder.Entity<TodosCp>(entity =>
        {
            entity
                .HasNoKey()
                .ToTable("todos_cp");

            entity.Property(e => e.Column0)
                .HasMaxLength(50)
                .IsUnicode(false)
                .HasColumnName("Column 0");
            entity.Property(e => e.Column1)
                .HasMaxLength(50)
                .IsUnicode(false)
                .HasColumnName("Column 1");
            entity.Property(e => e.Column10)
                .HasMaxLength(50)
                .IsUnicode(false)
                .HasColumnName("Column 10");
            entity.Property(e => e.Column11)
                .HasMaxLength(50)
                .IsUnicode(false)
                .HasColumnName("Column 11");
            entity.Property(e => e.Column12)
                .HasMaxLength(50)
                .IsUnicode(false)
                .HasColumnName("Column 12");
            entity.Property(e => e.Column13)
                .HasMaxLength(50)
                .IsUnicode(false)
                .HasColumnName("Column 13");
            entity.Property(e => e.Column14)
                .HasMaxLength(50)
                .IsUnicode(false)
                .HasColumnName("Column 14");
            entity.Property(e => e.Column15)
                .HasMaxLength(50)
                .IsUnicode(false)
                .HasColumnName("Column 15");
            entity.Property(e => e.Column16)
                .HasMaxLength(50)
                .IsUnicode(false)
                .HasColumnName("Column 16");
            entity.Property(e => e.Column2)
                .HasMaxLength(50)
                .IsUnicode(false)
                .HasColumnName("Column 2");
            entity.Property(e => e.Column3)
                .HasMaxLength(50)
                .IsUnicode(false)
                .HasColumnName("Column 3");
            entity.Property(e => e.Column4)
                .HasMaxLength(50)
                .IsUnicode(false)
                .HasColumnName("Column 4");
            entity.Property(e => e.Column5)
                .HasMaxLength(50)
                .IsUnicode(false)
                .HasColumnName("Column 5");
            entity.Property(e => e.Column6)
                .HasMaxLength(50)
                .IsUnicode(false)
                .HasColumnName("Column 6");
            entity.Property(e => e.Column7)
                .HasMaxLength(50)
                .IsUnicode(false)
                .HasColumnName("Column 7");
            entity.Property(e => e.Column8)
                .HasMaxLength(50)
                .IsUnicode(false)
                .HasColumnName("Column 8");
            entity.Property(e => e.Column9)
                .HasMaxLength(50)
                .IsUnicode(false)
                .HasColumnName("Column 9");
        });

        modelBuilder.Entity<TransportChargesT>(entity =>
        {
            entity.HasKey(e => e.Id).HasName("PK_T_SDE_TransportCharges");

            entity.ToTable("TransportCharges_T");

            entity.HasIndex(e => e.Sigla, "IDX_Sigla").HasFillFactor(80);

            entity.Property(e => e.Id)
                .ValueGeneratedNever()
                .HasColumnName("id");
            entity.Property(e => e.Activo)
                .IsRequired()
                .HasDefaultValueSql("((1))")
                .HasColumnName("activo");
            entity.Property(e => e.CodigoGrasp)
                .HasMaxLength(1)
                .HasColumnName("codigoGrasp");
            entity.Property(e => e.Descricao)
                .HasMaxLength(50)
                .HasColumnName("descricao");
            entity.Property(e => e.Sigla)
                .HasMaxLength(1)
                .HasColumnName("sigla");
        });

        modelBuilder.Entity<TratamentoTipoT>(entity =>
        {
            entity.ToTable("TratamentoTipo_T");

            entity.HasIndex(e => new { e.ScanCode, e.IdEntidade, e.Activo }, "idx_scancode_identidade_activo").HasFillFactor(80);

            entity.Property(e => e.Id).HasColumnName("id");
            entity.Property(e => e.Activo).HasColumnName("activo");
            entity.Property(e => e.Codigo)
                .HasMaxLength(15)
                .HasColumnName("codigo");
            entity.Property(e => e.DescCurta)
                .HasMaxLength(20)
                .IsUnicode(false)
                .HasColumnName("descCurta");
            entity.Property(e => e.Descricao)
                .HasMaxLength(50)
                .IsUnicode(false)
                .HasColumnName("descricao");
            entity.Property(e => e.Finaliza).HasColumnName("finaliza");
            entity.Property(e => e.IdDept).HasColumnName("idDept");
            entity.Property(e => e.IdEntidade).HasColumnName("idEntidade");
            entity.Property(e => e.IdServicoDet).HasColumnName("idServicoDet");
            entity.Property(e => e.Pendente)
                .HasDefaultValueSql("((0))")
                .HasColumnName("pendente");
            entity.Property(e => e.ScanCode)
                .HasMaxLength(2)
                .IsUnicode(false)
                .HasColumnName("scanCode");
        });

        modelBuilder.Entity<TtBenetton>(entity =>
        {
            entity.HasKey(e => e.IdScan).HasName("PK__TT_BENET__C8225309473A2564");

            entity.ToTable("TT_BENETTON");

            entity.Property(e => e.IdScan)
                .ValueGeneratedNever()
                .HasColumnName("idScan");
            entity.Property(e => e.DtEnvio)
                .HasDefaultValueSql("(getdate())")
                .HasColumnType("datetime")
                .HasColumnName("dtEnvio");
            entity.Property(e => e.TrfCodStatoConsForn)
                .HasMaxLength(2)
                .HasColumnName("TRF_COD_STATO_CONS_FORN");
            entity.Property(e => e.TrfCodTipoConsegna)
                .HasMaxLength(10)
                .HasColumnName("TRF_COD_TIPO_CONSEGNA");
            entity.Property(e => e.TrfCodTipoServizio)
                .HasMaxLength(10)
                .HasColumnName("TRF_COD_TIPO_SERVIZIO");
            entity.Property(e => e.TrfDeliveryCode)
                .HasMaxLength(7)
                .HasColumnName("TRF_DELIVERY_CODE");
            entity.Property(e => e.TrfDesPiattaformaDest)
                .HasMaxLength(20)
                .HasColumnName("TRF_DES_PIATTAFORMA_DEST");
            entity.Property(e => e.TrfDesPiattaformaPart)
                .HasMaxLength(20)
                .HasColumnName("TRF_DES_PIATTAFORMA_PART");
            entity.Property(e => e.TrfDtaAggStatoCons)
                .HasMaxLength(8)
                .HasColumnName("TRF_DTA_AGG_STATO_CONS");
            entity.Property(e => e.TrfDtaConsPrenotazione)
                .HasMaxLength(8)
                .HasColumnName("TRF_DTA_CONS_PRENOTAZIONE");
            entity.Property(e => e.TrfDtaConsegna)
                .HasMaxLength(8)
                .HasColumnName("TRF_DTA_CONSEGNA");
            entity.Property(e => e.TrfDtaFineGiac)
                .HasMaxLength(8)
                .HasColumnName("TRF_DTA_FINE_GIAC");
            entity.Property(e => e.TrfDtaInizioGiac)
                .HasMaxLength(8)
                .HasColumnName("TRF_DTA_INIZIO_GIAC");
            entity.Property(e => e.TrfDtaRitiro)
                .HasMaxLength(8)
                .HasColumnName("TRF_DTA_RITIRO");
            entity.Property(e => e.TrfIdnConsegnaForn)
                .HasMaxLength(20)
                .HasColumnName("TRF_IDN_CONSEGNA_FORN");
            entity.Property(e => e.TrfNroGgAttForn)
                .HasMaxLength(4)
                .HasColumnName("TRF_NRO_GG_ATT_FORN");
            entity.Property(e => e.TrfOraAggStatoCons)
                .HasMaxLength(6)
                .HasColumnName("TRF_ORA_AGG_STATO_CONS");
            entity.Property(e => e.TrfOraConsPrenotazione)
                .HasMaxLength(6)
                .HasColumnName("TRF_ORA_CONS_PRENOTAZIONE");
            entity.Property(e => e.TrfOraConsegna)
                .HasMaxLength(6)
                .HasColumnName("TRF_ORA_CONSEGNA");
            entity.Property(e => e.TrfOraRitiro)
                .HasMaxLength(6)
                .HasColumnName("TRF_ORA_RITIRO");
            entity.Property(e => e.TrfTipoRec)
                .HasMaxLength(2)
                .HasColumnName("TRF_TIPO_REC");
        });

        modelBuilder.Entity<TtPtcTmn>(entity =>
        {
            entity.ToTable("TT_PTC_TMN");

            entity.HasIndex(e => e.ScanCode, "idx_scanCode");

            entity.Property(e => e.Id).HasColumnName("id");
            entity.Property(e => e.Descricao)
                .HasMaxLength(150)
                .IsUnicode(false)
                .HasColumnName("descricao");
            entity.Property(e => e.Estado)
                .HasMaxLength(3)
                .IsUnicode(false)
                .HasColumnName("estado");
            entity.Property(e => e.Finaliza).HasColumnName("finaliza");
            entity.Property(e => e.IdCausa).HasColumnName("idCausa");
            entity.Property(e => e.ScanCode)
                .HasMaxLength(2)
                .IsUnicode(false)
                .HasColumnName("scanCode");
        });

        modelBuilder.Entity<TtPtcredesLog>(entity =>
        {
            entity
                .HasNoKey()
                .ToTable("TT_PTCREDES_LOG");

            entity.HasIndex(e => new { e.IdCliente, e.IdScan }, "idx_idCliente_idScan").HasFillFactor(80);

            entity.Property(e => e.AwbNumber)
                .HasMaxLength(50)
                .IsUnicode(false)
                .HasColumnName("awbNumber");
            entity.Property(e => e.Destinatario)
                .HasMaxLength(50)
                .IsUnicode(false)
                .HasColumnName("destinatario");
            entity.Property(e => e.DtEnvio)
                .HasDefaultValueSql("(getdate())")
                .HasColumnType("datetime")
                .HasColumnName("dtEnvio");
            entity.Property(e => e.Estado)
                .HasMaxLength(50)
                .IsUnicode(false)
                .HasColumnName("estado");
            entity.Property(e => e.Id)
                .ValueGeneratedOnAdd()
                .HasColumnName("id");
            entity.Property(e => e.IdCausa).HasColumnName("idCausa");
            entity.Property(e => e.IdCliMorada).HasColumnName("idCliMorada");
            entity.Property(e => e.IdCliente).HasColumnName("idCliente");
            entity.Property(e => e.IdEntidade).HasColumnName("idEntidade");
            entity.Property(e => e.IdScan).HasColumnName("idScan");
            entity.Property(e => e.RefCliente)
                .HasMaxLength(50)
                .IsUnicode(false)
                .HasColumnName("refCliente");
            entity.Property(e => e.ScanDate)
                .HasColumnType("datetime")
                .HasColumnName("scanDate");
            entity.Property(e => e.Signature)
                .HasMaxLength(30)
                .IsUnicode(false)
                .HasColumnName("SIGNATURE");
        });

        modelBuilder.Entity<TtcpFedex>(entity =>
        {
            entity
                .HasNoKey()
                .ToTable("TTCpFedex");

            entity.Property(e => e.Cp4).HasMaxLength(4);
            entity.Property(e => e.DiasOb).HasColumnName("diasOB");
        });

        modelBuilder.Entity<UnidadesMetricasT>(entity =>
        {
            entity.HasKey(e => e.Id).HasName("PK_T_UnidadesMedicao");

            entity.ToTable("UnidadesMetricas_T");

            entity.Property(e => e.Id).HasColumnName("id");
            entity.Property(e => e.Activo)
                .HasDefaultValueSql("((1))")
                .HasColumnName("activo");
            entity.Property(e => e.CodigoGrasp)
                .HasMaxLength(1)
                .HasColumnName("codigoGrasp");
            entity.Property(e => e.Default)
                .HasDefaultValueSql("((0))")
                .HasColumnName("default");
            entity.Property(e => e.Descricao)
                .HasMaxLength(15)
                .HasColumnName("descricao");
            entity.Property(e => e.MultConversaoDef)
                .HasColumnType("money")
                .HasColumnName("multConversaoDef");
            entity.Property(e => e.Sigla)
                .HasMaxLength(3)
                .HasColumnName("sigla");
            entity.Property(e => e.TaxaConversao)
                .HasColumnType("money")
                .HasColumnName("taxaConversao");
        });

        modelBuilder.Entity<UnidadesMonetariasCambioLog>(entity =>
        {
            entity.ToTable("UnidadesMonetariasCambioLog");

            entity.Property(e => e.Id).HasColumnName("id");
            entity.Property(e => e.Activo).HasColumnName("activo");
            entity.Property(e => e.CambioComp).HasColumnName("cambioComp");
            entity.Property(e => e.CambioCompDest).HasColumnName("cambioCompDest");
            entity.Property(e => e.CambioVend).HasColumnName("cambioVend");
            entity.Property(e => e.CambioVendDest).HasColumnName("cambioVendDest");
            entity.Property(e => e.Data)
                .HasColumnType("datetime")
                .HasColumnName("data");
            entity.Property(e => e.DtIntrod)
                .HasDefaultValueSql("(getdate())")
                .HasColumnType("datetime")
                .HasColumnName("dtIntrod");
            entity.Property(e => e.IdUnidMon).HasColumnName("idUnidMon");
            entity.Property(e => e.IdUnidMonDest).HasColumnName("idUnidMonDest");
            entity.Property(e => e.IdUtil).HasColumnName("idUtil");
        });

        modelBuilder.Entity<UnidadesMonetariasT>(entity =>
        {
            entity.ToTable("UnidadesMonetarias_T");

            entity.Property(e => e.Id).HasColumnName("id");
            entity.Property(e => e.Activo)
                .IsRequired()
                .HasDefaultValueSql("(1)")
                .HasColumnName("activo");
            entity.Property(e => e.Cambio)
                .HasColumnType("money")
                .HasColumnName("cambio");
            entity.Property(e => e.Default).HasColumnName("default");
            entity.Property(e => e.Descricao)
                .HasMaxLength(50)
                .HasColumnName("descricao");
            entity.Property(e => e.Iso)
                .HasMaxLength(5)
                .HasColumnName("ISO");
            entity.Property(e => e.Sigla)
                .HasMaxLength(3)
                .HasColumnName("sigla");
            entity.Property(e => e.SiglaFedex)
                .HasMaxLength(3)
                .HasColumnName("siglaFedex");
        });

        modelBuilder.Entity<UnidadesPesoT>(entity =>
        {
            entity.HasKey(e => e.Id).HasName("PK_UnidadesPeso");

            entity.ToTable("UnidadesPeso_T");

            entity.Property(e => e.Id).HasColumnName("id");
            entity.Property(e => e.Activo)
                .HasDefaultValueSql("((1))")
                .HasColumnName("activo");
            entity.Property(e => e.CodigoCosmos)
                .HasMaxLength(1)
                .HasColumnName("codigoCosmos");
            entity.Property(e => e.CodigoGrasp)
                .HasMaxLength(50)
                .HasColumnName("codigoGrasp");
            entity.Property(e => e.Default)
                .HasDefaultValueSql("((0))")
                .HasColumnName("default");
            entity.Property(e => e.Descricao)
                .HasMaxLength(50)
                .HasColumnName("descricao");
            entity.Property(e => e.MultConversaoDef)
                .HasColumnType("money")
                .HasColumnName("multConversaoDef");
            entity.Property(e => e.Sigla)
                .HasMaxLength(3)
                .HasColumnName("sigla");
            entity.Property(e => e.TaxaConversao)
                .HasColumnType("money")
                .HasColumnName("taxaConversao");
        });

        modelBuilder.Entity<UnidadesVolumetricasT>(entity =>
        {
            entity.HasKey(e => e.Id).HasName("PK_T_UnidadesCubicagem");

            entity.ToTable("UnidadesVolumetricas_T");

            entity.Property(e => e.Id).HasColumnName("id");
            entity.Property(e => e.Activo)
                .HasDefaultValueSql("((1))")
                .HasColumnName("activo");
            entity.Property(e => e.CodigoGrasp)
                .HasMaxLength(1)
                .HasColumnName("codigoGrasp");
            entity.Property(e => e.Default)
                .HasDefaultValueSql("((0))")
                .HasColumnName("default");
            entity.Property(e => e.Descricao)
                .HasMaxLength(15)
                .HasColumnName("descricao");
            entity.Property(e => e.MultConversaoDef)
                .HasColumnType("money")
                .HasColumnName("multConversaoDef");
            entity.Property(e => e.Sigla)
                .HasMaxLength(3)
                .HasColumnName("sigla");
            entity.Property(e => e.TaxaConversao)
                .HasColumnType("money")
                .HasColumnName("taxaConversao");
        });

        modelBuilder.Entity<Utilizador>(entity =>
        {
            entity.ToTable("Utilizador", tb => tb.HasTrigger("Utilizador_Update_Trigger"));


            entity.HasIndex(e => new { e.Activo, e.IdGrupo, e.IdEntidade }, "idx_activo_idEntidade_idGrupo").IsDescending(true, false, false);

            entity.HasIndex(e => e.EnvInterface, "idx_envinterface").HasFillFactor(80);

            entity.HasIndex(e => new { e.IdEntidade, e.Id }, "idx_idEntidade").HasFillFactor(80);

            entity.HasIndex(e => new { e.IdGrupo, e.Id }, "idx_idGrupo").HasFillFactor(80);

            entity.HasIndex(e => new { e.IdPlataforma, e.IdEntidade }, "idx_idPataforma");

            entity.Property(e => e.Id).HasColumnName("id");
            entity.Property(e => e.Activo)
                .IsRequired()
                .HasDefaultValueSql("((1))")
                .HasColumnName("activo");
            entity.Property(e => e.AssociaClientesExcep).HasColumnName("associaClientesExcep");
            entity.Property(e => e.CodIpbrick)
                .HasMaxLength(15)
                .HasColumnName("codIPBrick");
            entity.Property(e => e.DestinatarioBoff)
                .IsRequired()
                .HasDefaultValueSql("((1))")
                .HasColumnName("destinatarioBOff");
            entity.Property(e => e.DestinatarioBoffTrans).HasColumnName("destinatarioBOffTrans");
            entity.Property(e => e.DestinatarioCrm)
                .IsRequired()
                .HasDefaultValueSql("((1))")
                .HasColumnName("destinatarioCRM");
            entity.Property(e => e.DestinatarioCrmtrans).HasColumnName("destinatarioCRMTrans");
            entity.Property(e => e.DestinatarioReclamacoes)
                .IsRequired()
                .HasDefaultValueSql("((1))")
                .HasColumnName("destinatarioReclamacoes");
            entity.Property(e => e.DtEnvInterface)
                .HasColumnType("datetime")
                .HasColumnName("dtEnvInterface");
            entity.Property(e => e.DtFimActividade)
                .HasColumnType("datetime")
                .HasColumnName("dtFimActividade");
            entity.Property(e => e.DtInicioActividade)
                .HasDefaultValueSql("(getdate())")
                .HasColumnType("datetime")
                .HasColumnName("dtInicioActividade");
            entity.Property(e => e.DtIntrod)
                .HasDefaultValueSql("(getdate())")
                .HasColumnType("datetime")
                .HasColumnName("dtIntrod");
            entity.Property(e => e.DtUltAct)
                .HasDefaultValueSql("(getdate())")
                .HasColumnType("datetime")
                .HasColumnName("dtUltAct");
            entity.Property(e => e.Email)
                .HasMaxLength(50)
                .HasColumnName("email");
            entity.Property(e => e.EnvInterface).HasColumnName("envInterface");
            entity.Property(e => e.EnviaConversa).HasColumnName("enviaConversa");
            entity.Property(e => e.EnviaConversaPrio).HasColumnName("enviaConversaPrio");
            entity.Property(e => e.Extensao).HasColumnName("extensao");
            entity.Property(e => e.IdAgente).HasColumnName("idAgente");
            entity.Property(e => e.IdDistribuidor).HasColumnName("idDistribuidor");
            entity.Property(e => e.IdEntidade)
                .HasDefaultValueSql("((1))")
                .HasColumnName("idEntidade");
            entity.Property(e => e.IdGrupo).HasColumnName("idGrupo");
            entity.Property(e => e.IdPais)
                .HasDefaultValueSql("((100))")
                .HasColumnName("idPais");
            entity.Property(e => e.IdPlataforma).HasColumnName("idPlataforma");
            entity.Property(e => e.IdUtilIntrod).HasColumnName("idUtilIntrod");
            entity.Property(e => e.IdUtilUltAct).HasColumnName("idUtilUltAct");
            entity.Property(e => e.Ldaplogin)
                .HasMaxLength(50)
                .HasColumnName("LDAPLogin");
            entity.Property(e => e.Nome)
                .HasMaxLength(50)
                .HasColumnName("nome");
            entity.Property(e => e.NumCartaConducao)
                .HasMaxLength(15)
                .HasColumnName("numCartaConducao");
            entity.Property(e => e.PermLoginDev).HasColumnName("permLoginDEV");
            entity.Property(e => e.RecebeConversa)
                .IsRequired()
                .HasDefaultValueSql("((1))")
                .HasColumnName("recebeConversa");
            entity.Property(e => e.RemetenteBoffTrans).HasColumnName("remetenteBOffTrans");
            entity.Property(e => e.RemetenteCrmtrans).HasColumnName("remetenteCRMTrans");
            entity.Property(e => e.RespGrupo).HasColumnName("respGrupo");
            entity.Property(e => e.Telemovel).HasColumnName("telemovel");
            entity.Property(e => e.TelnetAccess).HasColumnName("telnetAccess");
            entity.Property(e => e.ValCartaConducao).HasColumnType("datetime");
            entity.Property(e => e.ValLicencaTransporte).HasColumnType("datetime");
            entity.Property(e => e.ValRegistoCriminal).HasColumnType("datetime");
            entity.Property(e => e.VencimentoAnual)
                .HasColumnType("money")
                .HasColumnName("vencimentoAnual");
            entity.Property(e => e.Visivel)
                .IsRequired()
                .HasDefaultValueSql("((1))")
                .HasColumnName("visivel");
        });



        modelBuilder.Entity<UtilizadorAcessosDblog>(entity =>
        {
            entity.HasKey(e => e.Id).HasName("PK_UtilizadorAcessosDBLog_2");

            entity.ToTable("UtilizadorAcessosDBLog");

            entity.Property(e => e.Id).HasColumnName("id");
            entity.Property(e => e.DtFim)
                .HasColumnType("datetime")
                .HasColumnName("dtFim");
            entity.Property(e => e.DtInicio)
                .HasColumnType("datetime")
                .HasColumnName("dtInicio");
            entity.Property(e => e.Hostname)
                .HasMaxLength(100)
                .HasColumnName("hostname");
            entity.Property(e => e.IdParent).HasColumnName("idParent");
            entity.Property(e => e.IdUtil).HasColumnName("idUtil");
            entity.Property(e => e.Passo).HasColumnName("passo");
            entity.Property(e => e.Query)
                .HasMaxLength(4000)
                .HasColumnName("query");
            entity.Property(e => e.SpId).HasColumnName("spID");
            entity.Property(e => e.Sproc)
                .HasMaxLength(100)
                .HasColumnName("SProc");
        });




        modelBuilder.Entity<UtilizadorAcessosDblogLin>(entity =>
        {
            entity.HasKey(e => e.Id).HasName("PK_UtilizadorAcessosDBLogLin_2");

            entity.ToTable("UtilizadorAcessosDBLogLin");

            entity.Property(e => e.Id).HasColumnName("id");
            entity.Property(e => e.Data)
                .HasDefaultValueSql("(getdate())")
                .HasColumnType("datetime")
                .HasColumnName("data");
            entity.Property(e => e.IdLog).HasColumnName("idLog");
            entity.Property(e => e.Passo).HasColumnName("passo");
        });

        modelBuilder.Entity<UtilizadorAcessosReportLog>(entity =>
        {
            entity.ToTable("UtilizadorAcessosReportLog");

            entity.HasIndex(e => new { e.IdUtil, e.DtAcesso }, "idx_idutil_dtacesso").HasFillFactor(80);

            entity.HasIndex(e => new { e.IdUtil, e.IdMenuReport, e.DtAcesso }, "idx_idutil_idmenureport_dtacesso").HasFillFactor(80);

            entity.Property(e => e.Id).HasColumnName("id");
            entity.Property(e => e.DtAcesso)
                .HasColumnType("datetime")
                .HasColumnName("dtAcesso");
            entity.Property(e => e.DtFimAcesso)
                .HasColumnType("datetime")
                .HasColumnName("dtFimAcesso");
            entity.Property(e => e.IdMenuReport).HasColumnName("idMenuReport");
            entity.Property(e => e.IdUtil).HasColumnName("idUtil");
            entity.Property(e => e.Pbstring)
                .HasMaxLength(255)
                .HasColumnName("pbstring");
            entity.Property(e => e.Permissao).HasColumnName("permissao");
            entity.Property(e => e.Qstring)
                .HasMaxLength(255)
                .HasColumnName("qstring");
            entity.Property(e => e.Url)
                .HasMaxLength(50)
                .HasColumnName("url");
        });

        modelBuilder.Entity<UtilizadorAcessosUrl>(entity =>
        {
            entity.HasKey(e => new { e.IdUtil, e.IdMenuUrl }).HasName("PK_UtilizadorAcessosURL");

            entity.ToTable("UtilizadorAcessosUrl");

            entity.Property(e => e.IdUtil).HasColumnName("idUtil");
            entity.Property(e => e.IdMenuUrl).HasColumnName("idMenuUrl");
            entity.Property(e => e.Activo)
                .IsRequired()
                .HasDefaultValueSql("((1))")
                .HasColumnName("activo");
            entity.Property(e => e.Id)
                .ValueGeneratedOnAdd()
                .HasColumnName("id");
            entity.Property(e => e.IsDefault).HasColumnName("isDefault");
            entity.Property(e => e.IsVisible)
                .IsRequired()
                .HasDefaultValueSql("((1))")
                .HasColumnName("isVisible");
        });

        modelBuilder.Entity<UtilizadorAcessosUrlHistLog>(entity =>
        {
            entity.ToTable("UtilizadorAcessosUrlHistLog");

            entity.HasIndex(e => new { e.IdUtil, e.DtAcesso }, "idx_idUtil_dtAcesso");

            entity.Property(e => e.Id)
                .ValueGeneratedNever()
                .HasColumnName("id");
            entity.Property(e => e.DtAcesso)
                .HasColumnType("datetime")
                .HasColumnName("dtAcesso");
            entity.Property(e => e.IdMenuUrl).HasColumnName("idMenuUrl");
            entity.Property(e => e.IdUtil).HasColumnName("idUtil");
            entity.Property(e => e.Pbstring)
                .HasMaxLength(255)
                .HasColumnName("pbstring");
            entity.Property(e => e.Permissao).HasColumnName("permissao");
            entity.Property(e => e.Qstring)
                .HasMaxLength(255)
                .HasColumnName("qstring");
            entity.Property(e => e.Url)
                .HasMaxLength(50)
                .HasColumnName("url");
        });

        modelBuilder.Entity<UtilizadorAcessosUrlLog>(entity =>
        {
            entity.ToTable("UtilizadorAcessosUrlLog");

            entity.HasIndex(e => new { e.IdUtil, e.DtAcesso }, "idx_idutil_dtacesso").HasFillFactor(80);

            entity.HasIndex(e => new { e.IdUtil, e.IdMenuUrl, e.DtAcesso }, "idx_idutil_idMenuUrl_dtAcesso").HasFillFactor(80);

            entity.Property(e => e.Id).HasColumnName("id");
            entity.Property(e => e.DtAcesso)
                .HasColumnType("datetime")
                .HasColumnName("dtAcesso");
            entity.Property(e => e.IdMenuUrl).HasColumnName("idMenuUrl");
            entity.Property(e => e.IdUtil).HasColumnName("idUtil");
            entity.Property(e => e.Pbstring)
                .HasMaxLength(255)
                .HasColumnName("pbstring");
            entity.Property(e => e.Permissao).HasColumnName("permissao");
            entity.Property(e => e.Qstring)
                .HasMaxLength(255)
                .HasColumnName("qstring");
            entity.Property(e => e.Url)
                .HasMaxLength(50)
                .HasColumnName("url");
        });

        modelBuilder.Entity<UtilizadorAcessosUrlPermisso>(entity =>
        {
            entity.HasKey(e => e.Id).HasName("PK_UtilizadorAcessosURLPermissoes");

            entity.HasIndex(e => e.IdUtilAcesso, "idx_idUtilAcesso");

            entity.Property(e => e.Id).HasColumnName("id");
            entity.Property(e => e.Codigo)
                .HasMaxLength(50)
                .HasColumnName("codigo");
            entity.Property(e => e.IdUtilAcesso).HasColumnName("idUtilAcesso");
            entity.Property(e => e.IsAllowed).HasColumnName("isAllowed");
            entity.Property(e => e.IsDefault)
                .IsRequired()
                .HasDefaultValueSql("((1))")
                .HasColumnName("isDefault");
            entity.Property(e => e.IsEditable)
                .IsRequired()
                .HasDefaultValueSql("((1))")
                .HasColumnName("isEditable");
            entity.Property(e => e.IsVisible)
                .IsRequired()
                .HasDefaultValueSql("((1))")
                .HasColumnName("isVisible");
            entity.Property(e => e.Valor)
                .HasColumnType("sql_variant")
                .HasColumnName("valor");
        });

        modelBuilder.Entity<UtilizadorAcessosUrlReport>(entity =>
        {
            entity.HasKey(e => e.Id).HasName("PK__Utilizad__3213E83F797588BD");

            entity.HasIndex(e => new { e.Idutil, e.Activo }, "idx_idUtil_activo");

            entity.Property(e => e.Id).HasColumnName("id");
            entity.Property(e => e.Activo).HasColumnName("activo");
            entity.Property(e => e.IdMenuReport).HasColumnName("idMenuReport");
            entity.Property(e => e.Idutil).HasColumnName("idutil");
            entity.Property(e => e.IsDefault).HasColumnName("isDefault");
            entity.Property(e => e.IsVisible).HasColumnName("isVisible");
        });

        modelBuilder.Entity<UtilizadorAcessosUrlReportsPermisso>(entity =>
        {
            entity.HasKey(e => e.Id).HasName("PK_UtilizadorAcessosURLReportPermissoes");

            entity.Property(e => e.Id).HasColumnName("id");
            entity.Property(e => e.Codigo)
                .HasMaxLength(50)
                .HasColumnName("codigo");
            entity.Property(e => e.IdUtilAcesso).HasColumnName("idUtilAcesso");
            entity.Property(e => e.IsAllowed).HasColumnName("isAllowed");
            entity.Property(e => e.IsDefault)
                .IsRequired()
                .HasDefaultValueSql("((1))")
                .HasColumnName("isDefault");
            entity.Property(e => e.IsEditable)
                .IsRequired()
                .HasDefaultValueSql("((1))")
                .HasColumnName("isEditable");
            entity.Property(e => e.IsVisible)
                .IsRequired()
                .HasDefaultValueSql("((1))")
                .HasColumnName("isVisible");
            entity.Property(e => e.Valor)
                .HasColumnType("sql_variant")
                .HasColumnName("valor");
        });

        modelBuilder.Entity<UtilizadorAgente>(entity =>
        {
            entity.HasKey(e => e.Id).HasName("PK_Agentes");

            entity.Property(e => e.Id).HasColumnName("id");
            entity.Property(e => e.Activo)
                .IsRequired()
                .HasDefaultValueSql("(1)")
                .HasColumnName("activo");
            entity.Property(e => e.Codigo)
                .HasMaxLength(15)
                .HasColumnName("codigo");
            entity.Property(e => e.CustoDia)
                .HasColumnType("money")
                .HasColumnName("custoDia");
            entity.Property(e => e.CustoEntMaster)
                .HasColumnType("money")
                .HasColumnName("custoEntMaster");
            entity.Property(e => e.CustoEntMps)
                .HasColumnType("money")
                .HasColumnName("custoEntMPS");
            entity.Property(e => e.CustoEntStop)
                .HasColumnType("money")
                .HasColumnName("custoEntStop");
            entity.Property(e => e.CustoMes)
                .HasColumnType("money")
                .HasColumnName("custoMes");
            entity.Property(e => e.CustoMinDia)
                .HasColumnType("money")
                .HasColumnName("custoMinDia");
            entity.Property(e => e.CustoMinMes)
                .HasColumnType("money")
                .HasColumnName("custoMinMes");
            entity.Property(e => e.CustoRecMaster)
                .HasColumnType("money")
                .HasColumnName("custoRecMaster");
            entity.Property(e => e.CustoRecMps)
                .HasColumnType("money")
                .HasColumnName("custoRecMPS");
            entity.Property(e => e.CustoRecStop)
                .HasColumnType("money")
                .HasColumnName("custoRecStop");
            entity.Property(e => e.Descricao)
                .HasMaxLength(50)
                .HasColumnName("descricao");
            entity.Property(e => e.DtInicio)
                .HasColumnType("datetime")
                .HasColumnName("dtInicio");
            entity.Property(e => e.DtIntrod)
                .HasColumnType("datetime")
                .HasColumnName("dtIntrod");
            entity.Property(e => e.IdEntidade).HasColumnName("idEntidade");
            entity.Property(e => e.IdPlataforma).HasColumnName("idPlataforma");
            entity.Property(e => e.IdUtilIntrod).HasColumnName("idUtilIntrod");
            entity.Property(e => e.PenalAwbent)
                .HasColumnType("money")
                .HasColumnName("penalAWBEnt");
            entity.Property(e => e.PenalAwbrec)
                .HasColumnType("money")
                .HasColumnName("penalAWBRec");
        });

        modelBuilder.Entity<UtilizadorAlertasCount>(entity =>
        {
            entity.HasKey(e => new { e.IdUtil, e.IdEntidade });

            entity.ToTable("UtilizadorAlertasCount");

            entity.Property(e => e.IdUtil).HasColumnName("idUtil");
            entity.Property(e => e.IdEntidade).HasColumnName("idEntidade");
            entity.Property(e => e.AlertasHoje).HasColumnName("alertasHoje");
            entity.Property(e => e.AlertasSempre).HasColumnName("alertasSempre");
            entity.Property(e => e.BackofficesNovos).HasColumnName("backofficesNovos");
            entity.Property(e => e.BackofficesPendentes).HasColumnName("backofficesPendentes");
            entity.Property(e => e.EntrevistasAtrasadas).HasColumnName("entrevistasAtrasadas");
            entity.Property(e => e.EntrevistasPendentes).HasColumnName("entrevistasPendentes");
            entity.Property(e => e.PedidosCreditoPendentes).HasColumnName("pedidosCreditoPendentes");
            entity.Property(e => e.PickupsAnulados).HasColumnName("pickupsAnulados");
            entity.Property(e => e.PickupsPendentes).HasColumnName("pickupsPendentes");
            entity.Property(e => e.PickupsPendentesUrg).HasColumnName("pickupsPendentesUrg");
            entity.Property(e => e.PickupsTotal).HasColumnName("pickupsTotal");
            entity.Property(e => e.ReclamaPend).HasColumnName("reclamaPend");
            entity.Property(e => e.ReclamaPendConc).HasColumnName("reclamaPendConc");
            entity.Property(e => e.ReclamaPendParaMim).HasColumnName("reclamaPendParaMim");
            entity.Property(e => e.ReclamaPendPorMim).HasColumnName("reclamaPendPorMim");
            entity.Property(e => e.SospedidoAceitesSini).HasColumnName("sospedidoAceitesSIni");
            entity.Property(e => e.SospedidoCprecoFornecedor).HasColumnName("sospedidoCPrecoFornecedor");
            entity.Property(e => e.SospedidoSfornecedores).HasColumnName("sospedidoSFornecedores");
            entity.Property(e => e.SospedidoSpropCliente).HasColumnName("sospedidoSPropCliente");
        });

        modelBuilder.Entity<UtilizadorAusencia>(entity =>
        {
            entity.HasIndex(e => e.IdUtil, "idx_idutil").HasFillFactor(80);

            entity.Property(e => e.Id).HasColumnName("id");
            entity.Property(e => e.Aprovacao)
                .HasDefaultValueSql("((0))")
                .HasColumnName("aprovacao");
            entity.Property(e => e.DtAprovacao)
                .HasColumnType("datetime")
                .HasColumnName("dtAprovacao");
            entity.Property(e => e.DtFim)
                .HasColumnType("datetime")
                .HasColumnName("dtFim");
            entity.Property(e => e.DtInicio)
                .HasColumnType("datetime")
                .HasColumnName("dtInicio");
            entity.Property(e => e.DtIntrod)
                .HasDefaultValueSql("(getdate())")
                .HasColumnType("datetime")
                .HasColumnName("dtIntrod");
            entity.Property(e => e.IdEntidade)
                .HasDefaultValueSql("((1))")
                .HasColumnName("idEntidade");
            entity.Property(e => e.IdMotivo).HasColumnName("idMotivo");
            entity.Property(e => e.IdUtil).HasColumnName("idUtil");
            entity.Property(e => e.IdUtilAprovacao).HasColumnName("idUtilAprovacao");
            entity.Property(e => e.IdUtilIntrod).HasColumnName("idUtilIntrod");
            entity.Property(e => e.Observacoes)
                .HasMaxLength(250)
                .HasColumnName("observacoes");
        });

        modelBuilder.Entity<UtilizadorDistribuidore>(entity =>
        {
            entity.HasKey(e => new { e.IdUtil, e.IdDistribuidor }).HasName("PK_UtilizadorDistribuidores_1");

            entity.Property(e => e.IdUtil).HasColumnName("idUtil");
            entity.Property(e => e.IdDistribuidor).HasColumnName("idDistribuidor");
            entity.Property(e => e.Id)
                .ValueGeneratedOnAdd()
                .HasColumnName("id");
        });

        modelBuilder.Entity<UtilizadorEntidade>(entity =>
        {
            entity.HasKey(e => new { e.IdUtil, e.IdEntidade });

            entity.Property(e => e.IdUtil).HasColumnName("idUtil");
            entity.Property(e => e.IdEntidade).HasColumnName("idEntidade");
            entity.Property(e => e.Id)
                .ValueGeneratedOnAdd()
                .HasColumnName("id");
        });

        modelBuilder.Entity<UtilizadorEquipa>(entity =>
        {
            entity.HasKey(e => e.Id).HasName("PK_T_UtilizadorEquipa");

            entity.ToTable("UtilizadorEquipa");

            entity.Property(e => e.Id).HasColumnName("id");
            entity.Property(e => e.Activa).HasColumnName("activa");
            entity.Property(e => e.Descricao)
                .HasMaxLength(50)
                .HasColumnName("descricao");
            entity.Property(e => e.DtFim)
                .HasColumnType("datetime")
                .HasColumnName("dtFim");
            entity.Property(e => e.DtInicio)
                .HasColumnType("datetime")
                .HasColumnName("dtInicio");
            entity.Property(e => e.DtUltAct)
                .HasColumnType("datetime")
                .HasColumnName("dtUltAct");
            entity.Property(e => e.IdDinamicaComercial).HasColumnName("idDinamicaComercial");
            entity.Property(e => e.IdEntidade)
                .HasDefaultValueSql("((1))")
                .HasColumnName("idEntidade");
            entity.Property(e => e.IdPlataforma).HasColumnName("idPlataforma");
            entity.Property(e => e.IdPlataformaReg).HasColumnName("idPlataformaReg");
            entity.Property(e => e.IdUtilControllerAe).HasColumnName("idUtilControllerAE");
            entity.Property(e => e.IdUtilControllerTsr).HasColumnName("idUtilControllerTSR");
            entity.Property(e => e.IdUtilTelesale).HasColumnName("idUtilTelesale");
            entity.Property(e => e.IdUtilUltAct).HasColumnName("idUtilUltAct");
            entity.Property(e => e.IdUtilVendedor).HasColumnName("idUtilVendedor");
            entity.Property(e => e.IdutilController).HasColumnName("idutilController");
            entity.Property(e => e.IsForcedAe)
                .HasDefaultValueSql("((0))")
                .HasColumnName("isForcedAE");
            entity.Property(e => e.Sigla)
                .HasMaxLength(4)
                .HasColumnName("sigla");
        });

        modelBuilder.Entity<UtilizadorExcepcao>(entity =>
        {
            entity.HasKey(e => e.Id).HasName("PK_T_UtilizadorExcepcao");

            entity.ToTable("UtilizadorExcepcao");

            entity.Property(e => e.Id).HasColumnName("id");
            entity.Property(e => e.Data)
                .HasColumnType("datetime")
                .HasColumnName("data");
            entity.Property(e => e.Descricao)
                .HasMaxLength(500)
                .HasColumnName("descricao");
            entity.Property(e => e.DtIntrod)
                .HasDefaultValueSql("(getdate())")
                .HasColumnType("datetime")
                .HasColumnName("dtIntrod");
            entity.Property(e => e.Duracao)
                .HasColumnType("datetime")
                .HasColumnName("duracao");
            entity.Property(e => e.IdUtil).HasColumnName("idUtil");
        });

        modelBuilder.Entity<UtilizadorFuncaoAcessosUrl>(entity =>
        {
            entity.HasKey(e => new { e.IdFuncao, e.IdMenuUrl }).HasName("PK_UtilizadorGruposAcessosURL");

            entity.ToTable("UtilizadorFuncaoAcessosUrl");

            entity.HasIndex(e => e.Id, "idx_id");

            entity.Property(e => e.IdFuncao).HasColumnName("idFuncao");
            entity.Property(e => e.IdMenuUrl).HasColumnName("idMenuUrl");
            entity.Property(e => e.Activo)
                .IsRequired()
                .HasDefaultValueSql("((1))")
                .HasColumnName("activo");
            entity.Property(e => e.Id)
                .ValueGeneratedOnAdd()
                .HasColumnName("id");
            entity.Property(e => e.IsDefault).HasColumnName("isDefault");
            entity.Property(e => e.IsVisible)
                .IsRequired()
                .HasDefaultValueSql("((1))")
                .HasColumnName("isVisible");
        });

        modelBuilder.Entity<UtilizadorFuncaoAcessosUrlPermisso>(entity =>
        {
            entity.HasKey(e => e.Id).HasName("PK_UtilizadorGruposAcessosUrlPermissoes");

            entity.HasIndex(e => e.IdUtilFuncAcesso, "idx_idUtilFuncAcesso");

            entity.Property(e => e.Id).HasColumnName("id");
            entity.Property(e => e.Codigo)
                .HasMaxLength(50)
                .HasColumnName("codigo");
            entity.Property(e => e.IdUtilFuncAcesso).HasColumnName("idUtilFuncAcesso");
            entity.Property(e => e.IsDefault)
                .IsRequired()
                .HasDefaultValueSql("((1))")
                .HasColumnName("isDefault");
            entity.Property(e => e.IsEditable)
                .IsRequired()
                .HasDefaultValueSql("((1))")
                .HasColumnName("isEditable");
            entity.Property(e => e.IsVisible)
                .IsRequired()
                .HasDefaultValueSql("((1))")
                .HasColumnName("isVisible");
            entity.Property(e => e.Valor)
                .HasColumnType("sql_variant")
                .HasColumnName("valor");
        });

        modelBuilder.Entity<UtilizadorFuncaoAcessosUrlReport>(entity =>
        {
            entity.HasKey(e => new { e.IdFuncao, e.IdMenuReport });

            entity.Property(e => e.IdFuncao).HasColumnName("idFuncao");
            entity.Property(e => e.IdMenuReport).HasColumnName("idMenuReport");
            entity.Property(e => e.Activo)
                .IsRequired()
                .HasDefaultValueSql("((1))")
                .HasColumnName("activo");
            entity.Property(e => e.Id)
                .ValueGeneratedOnAdd()
                .HasColumnName("id");
            entity.Property(e => e.IsDefault).HasColumnName("isDefault");
            entity.Property(e => e.IsVisible)
                .IsRequired()
                .HasDefaultValueSql("((1))")
                .HasColumnName("isVisible");
        });

        modelBuilder.Entity<UtilizadorFuncaoAcessosUrlreportsPermisso>(entity =>
        {
            entity.ToTable("UtilizadorFuncaoAcessosURLReportsPermissoes");

            entity.Property(e => e.Id).HasColumnName("id");
            entity.Property(e => e.Codigo)
                .HasMaxLength(50)
                .HasColumnName("codigo");
            entity.Property(e => e.IdUtilFuncAcesso).HasColumnName("idUtilFuncAcesso");
            entity.Property(e => e.IsDefault)
                .IsRequired()
                .HasDefaultValueSql("((1))")
                .HasColumnName("isDefault");
            entity.Property(e => e.IsEditable)
                .IsRequired()
                .HasDefaultValueSql("((1))")
                .HasColumnName("isEditable");
            entity.Property(e => e.IsVisible)
                .IsRequired()
                .HasDefaultValueSql("((1))")
                .HasColumnName("isVisible");
            entity.Property(e => e.Valor)
                .HasColumnType("sql_variant")
                .HasColumnName("valor");
        });

        modelBuilder.Entity<UtilizadorFuncaoEntidade>(entity =>
        {
            entity.HasKey(e => new { e.IdUtilizadorFuncao, e.IdEntidade });

            entity.ToTable("UtilizadorFuncaoEntidade");

            entity.Property(e => e.IdUtilizadorFuncao).HasColumnName("idUtilizadorFuncao");
            entity.Property(e => e.IdEntidade).HasColumnName("idEntidade");
            entity.Property(e => e.Id)
                .ValueGeneratedOnAdd()
                .HasColumnName("id");
            entity.Property(e => e.IdDepartamento).HasColumnName("idDepartamento");
            entity.Property(e => e.IdFuncaoSup).HasColumnName("idFuncaoSup");
            entity.Property(e => e.Nivel).HasColumnName("nivel");
        });

        modelBuilder.Entity<UtilizadorFuncaoEntidadeAcessosUrl>(entity =>
        {
            entity.HasKey(e => new { e.IdUtilizadorFuncaoEntidade, e.IdMenuUrl });

            entity.ToTable("UtilizadorFuncaoEntidadeAcessosUrl");

            entity.Property(e => e.IdUtilizadorFuncaoEntidade).HasColumnName("idUtilizadorFuncaoEntidade");
            entity.Property(e => e.IdMenuUrl).HasColumnName("idMenuUrl");
            entity.Property(e => e.Activo).HasColumnName("activo");
            entity.Property(e => e.Id)
                .ValueGeneratedOnAdd()
                .HasColumnName("id");
            entity.Property(e => e.IsDefault).HasColumnName("isDefault");
            entity.Property(e => e.IsVisible).HasColumnName("isVisible");
        });

        modelBuilder.Entity<UtilizadorFuncaoEntidadeAcessosUrlParam>(entity =>
        {
            entity.HasKey(e => new { e.IdUfeacessoUrl, e.Codigo });

            entity.Property(e => e.IdUfeacessoUrl).HasColumnName("idUFEAcessoUrl");
            entity.Property(e => e.Codigo)
                .HasMaxLength(50)
                .HasColumnName("codigo");
            entity.Property(e => e.Id)
                .ValueGeneratedOnAdd()
                .HasColumnName("id");
            entity.Property(e => e.Valor)
                .HasColumnType("sql_variant")
                .HasColumnName("valor");
        });

        modelBuilder.Entity<UtilizadorFuncaoEntidadeAcessosUrlReport>(entity =>
        {
            entity.HasKey(e => new { e.IdUtilizadorFuncaoEntidade, e.IdMenuReport });

            entity.HasIndex(e => e.Activo, "idx_a");

            entity.HasIndex(e => new { e.IdMenuReport, e.Activo }, "idx_b");

            entity.Property(e => e.IdUtilizadorFuncaoEntidade).HasColumnName("idUtilizadorFuncaoEntidade");
            entity.Property(e => e.IdMenuReport).HasColumnName("idMenuReport");
            entity.Property(e => e.Activo)
                .IsRequired()
                .HasDefaultValueSql("((1))")
                .HasColumnName("activo");
            entity.Property(e => e.Id)
                .ValueGeneratedOnAdd()
                .HasColumnName("id");
            entity.Property(e => e.IsDefault).HasColumnName("isDefault");
            entity.Property(e => e.IsVisible)
                .IsRequired()
                .HasDefaultValueSql("((1))")
                .HasColumnName("isVisible");
        });

        modelBuilder.Entity<UtilizadorFuncaoEntidadeAcessosUrlReportsParam>(entity =>
        {
            entity.HasKey(e => e.Id).HasName("PK_UtilizadorFuncaoEntidadeAcessosURLReportsParams");

            entity.Property(e => e.Id).HasColumnName("id");
            entity.Property(e => e.Codigo)
                .HasMaxLength(50)
                .HasColumnName("codigo");
            entity.Property(e => e.IdUfeacessoUrlReport).HasColumnName("idUFEAcessoUrlReport");
            entity.Property(e => e.IsDefault)
                .IsRequired()
                .HasDefaultValueSql("((1))")
                .HasColumnName("isDefault");
            entity.Property(e => e.IsEditable)
                .IsRequired()
                .HasDefaultValueSql("((1))")
                .HasColumnName("isEditable");
            entity.Property(e => e.IsVisible)
                .IsRequired()
                .HasDefaultValueSql("((1))")
                .HasColumnName("isVisible");
            entity.Property(e => e.Valor)
                .HasColumnType("sql_variant")
                .HasColumnName("valor");
        });

        modelBuilder.Entity<UtilizadorFuncaoEntidadeParam>(entity =>
        {
            entity.HasKey(e => new { e.IdUtilizadorFuncaoEntidade, e.Codigo });

            entity.Property(e => e.IdUtilizadorFuncaoEntidade).HasColumnName("idUtilizadorFuncaoEntidade");
            entity.Property(e => e.Codigo)
                .HasMaxLength(50)
                .HasColumnName("codigo");
            entity.Property(e => e.Id)
                .ValueGeneratedOnAdd()
                .HasColumnName("id");
            entity.Property(e => e.Valor)
                .HasColumnType("sql_variant")
                .HasColumnName("valor");
        });

        modelBuilder.Entity<UtilizadorFuncaoParamsT>(entity =>
        {
            entity.HasKey(e => new { e.IdUtilizadorFuncao, e.Codigo });

            entity.ToTable("UtilizadorFuncaoParams_T");

            entity.Property(e => e.IdUtilizadorFuncao).HasColumnName("idUtilizadorFuncao");
            entity.Property(e => e.Codigo)
                .HasMaxLength(50)
                .HasColumnName("codigo");
            entity.Property(e => e.Id)
                .ValueGeneratedOnAdd()
                .HasColumnName("id");
            entity.Property(e => e.Valor)
                .HasColumnType("sql_variant")
                .HasColumnName("valor");
        });

        modelBuilder.Entity<UtilizadorFuncaoT>(entity =>
        {
            entity.HasKey(e => e.Id).HasName("PK_UtilizadorFuncao_T_1");

            entity.ToTable("UtilizadorFuncao_T");

            entity.Property(e => e.Id)
                .ValueGeneratedOnAdd()
                .HasColumnName("id");
            entity.Property(e => e.Codigo)
                .HasMaxLength(20)
                .HasColumnName("codigo");
            entity.Property(e => e.Descricao)
                .HasMaxLength(50)
                .HasColumnName("descricao");
            entity.Property(e => e.IdDepartamento).HasColumnName("idDepartamento");
            entity.Property(e => e.IdFuncaoSup).HasColumnName("idFuncaoSup");
            entity.Property(e => e.Nivel).HasColumnName("nivel");
        });

        modelBuilder.Entity<UtilizadorFunco>(entity =>
        {
            entity.HasKey(e => new { e.IdUtil, e.IdFuncao });

            entity.Property(e => e.IdUtil).HasColumnName("idUtil");
            entity.Property(e => e.IdFuncao).HasColumnName("idFuncao");
            entity.Property(e => e.IsLider).HasColumnName("isLider");
        });

        modelBuilder.Entity<UtilizadorFuncoesEntidade>(entity =>
        {
            entity.HasKey(e => new { e.IdUtil, e.IdUtilizadorFuncaoEntidade });

            entity.Property(e => e.IdUtil).HasColumnName("idUtil");
            entity.Property(e => e.IdUtilizadorFuncaoEntidade).HasColumnName("idUtilizadorFuncaoEntidade");
            entity.Property(e => e.Id)
                .ValueGeneratedOnAdd()
                .HasColumnName("id");
            entity.Property(e => e.IsLeader).HasColumnName("isLeader");
        });

        modelBuilder.Entity<UtilizadorFuncoesEntidadesPlataforma>(entity =>
        {
            entity.HasKey(e => new { e.IdUtilizadorFuncoesEntidades, e.IdPlataforma });

            entity.Property(e => e.IdUtilizadorFuncoesEntidades).HasColumnName("idUtilizadorFuncoesEntidades");
            entity.Property(e => e.IdPlataforma).HasColumnName("idPlataforma");
            entity.Property(e => e.Id)
                .ValueGeneratedOnAdd()
                .HasColumnName("id");
        });

        modelBuilder.Entity<UtilizadorFuncoesT>(entity =>
        {
            entity.ToTable("UtilizadorFuncoes_T");

            entity.Property(e => e.Id)
                .ValueGeneratedNever()
                .HasColumnName("id");
            entity.Property(e => e.Codigo)
                .HasMaxLength(20)
                .HasColumnName("codigo");
            entity.Property(e => e.Descricao)
                .HasMaxLength(50)
                .HasColumnName("descricao");
            entity.Property(e => e.IdDepartamento).HasColumnName("idDepartamento");
            entity.Property(e => e.IdFuncaoSup).HasColumnName("idFuncaoSup");
            entity.Property(e => e.IsDestBoff).HasColumnName("isDestBOff");
            entity.Property(e => e.IsDestCrm).HasColumnName("isDestCRM");
            entity.Property(e => e.Nivel).HasColumnName("nivel");
        });

        modelBuilder.Entity<UtilizadorGruposDistribuidoresT>(entity =>
        {
            entity.HasKey(e => new { e.IdGrupo, e.IdEntidadeGrupo, e.IdDistribuidor });

            entity.ToTable("UtilizadorGruposDistribuidores_T");

            entity.Property(e => e.IdGrupo).HasColumnName("idGrupo");
            entity.Property(e => e.IdEntidadeGrupo)
                .HasDefaultValueSql("(1)")
                .HasColumnName("idEntidadeGrupo");
            entity.Property(e => e.IdDistribuidor).HasColumnName("idDistribuidor");
            entity.Property(e => e.Id)
                .ValueGeneratedOnAdd()
                .HasColumnName("id");
        });

        modelBuilder.Entity<UtilizadorGruposEntidadesT>(entity =>
        {
            entity.HasKey(e => new { e.IdGrupo, e.IdEntidadeGrupo, e.IdEntidade });

            entity.ToTable("UtilizadorGruposEntidades_T");

            entity.Property(e => e.IdGrupo).HasColumnName("idGrupo");
            entity.Property(e => e.IdEntidadeGrupo)
                .HasDefaultValueSql("(1)")
                .HasColumnName("idEntidadeGrupo");
            entity.Property(e => e.IdEntidade).HasColumnName("idEntidade");
            entity.Property(e => e.Id)
                .ValueGeneratedOnAdd()
                .HasColumnName("id");
        });

        modelBuilder.Entity<UtilizadorGruposT>(entity =>
        {
            entity.HasKey(e => e.Id).HasName("PK_T_UtilizadorGrupos");

            entity.ToTable("UtilizadorGrupos_T");

            entity.HasIndex(e => e.IdDepartamento, "idx_iddepartamento").HasFillFactor(80);

            entity.Property(e => e.Id)
                .ValueGeneratedNever()
                .HasColumnName("id");
            entity.Property(e => e.Activo)
                .IsRequired()
                .HasDefaultValueSql("((1))")
                .HasColumnName("activo");
            entity.Property(e => e.ApenasCarteira).HasColumnName("apenasCarteira");
            entity.Property(e => e.AssociaClientes)
                .HasDefaultValueSql("((0))")
                .HasColumnName("associaClientes");
            entity.Property(e => e.Descricao)
                .HasMaxLength(25)
                .HasColumnName("descricao");
            entity.Property(e => e.IdDepartamento).HasColumnName("idDepartamento");
            entity.Property(e => e.IsDirector).HasColumnName("isDirector");
            entity.Property(e => e.IsEstDis).HasColumnName("isEstDis");
            entity.Property(e => e.Nivel).HasColumnName("nivel");
            entity.Property(e => e.Visivel)
                .IsRequired()
                .HasDefaultValueSql("((1))")
                .HasColumnName("visivel");
        });

        modelBuilder.Entity<UtilizadorLogin>(entity =>
        {
            entity.HasKey(e => e.IdUtil);

            entity.ToTable("UtilizadorLogin", tb => tb.HasTrigger("UtilizadorLogin_Update_Trigger"));

            entity.Property(e => e.IdUtil)
                .ValueGeneratedNever()
                .HasColumnName("idUtil");
            entity.Property(e => e.DtPassword)
                .HasDefaultValueSql("(getdate())")
                .HasColumnType("datetime")
                .HasColumnName("dtPassword");
            entity.Property(e => e.DtUltAct)
                .HasColumnType("datetime")
                .HasColumnName("dtUltAct");
            entity.Property(e => e.DuracaoPassword).HasColumnName("duracaoPassword");
            entity.Property(e => e.IdUtilUltAct).HasColumnName("idUtilUltAct");
            entity.Property(e => e.Login)
                .HasMaxLength(50)
                .HasColumnName("login");
            entity.Property(e => e.LoginEnabled).HasColumnName("loginEnabled");
            entity.Property(e => e.Password)
                .HasMaxLength(50)
                .HasColumnName("password");
        });

        modelBuilder.Entity<UtilizadorLoginLog>(entity =>
        {
            entity.HasKey(e => e.Id).HasName("PK_T_UtilizadorLoginHistorico");

            entity.ToTable("UtilizadorLoginLog", tb => tb.HasTrigger("TR_AtribRotaEmPupsFixos"));

            entity.HasIndex(e => new { e.Mobile, e.Sucesso, e.DtLogoff }, "Idx_mobile_dtLogoff__sucesso_idUtil_dtLogin").HasFillFactor(80);

            entity.HasIndex(e => new { e.IdUtil, e.DtLogin }, "idx_idUtil_dtLogin").IsDescending(false, true);

            entity.HasIndex(e => e.IdInterface, "idx_idinterface").HasFillFactor(80);

            entity.HasIndex(e => new { e.IdUtil, e.DtLogoff }, "idx_idutil_dtlogoff").HasFillFactor(80);

            entity.Property(e => e.Id).HasColumnName("id");
            entity.Property(e => e.ChSessao)
                .HasMaxLength(50)
                .HasColumnName("chSessao");
            entity.Property(e => e.DtLogin)
                .HasColumnType("datetime")
                .HasColumnName("dtLogin");
            entity.Property(e => e.DtLogoff)
                .HasColumnType("datetime")
                .HasColumnName("dtLogoff");
            entity.Property(e => e.ForcedLogoff).HasColumnName("forcedLogoff");
            entity.Property(e => e.IdInterface).HasColumnName("idInterface");
            entity.Property(e => e.IdMirror).HasColumnName("idMirror");
            entity.Property(e => e.IdUtil).HasColumnName("idUtil");
            entity.Property(e => e.Ip)
                .HasMaxLength(50)
                .HasColumnName("ip");
            entity.Property(e => e.LoginAs)
                .HasMaxLength(50)
                .HasColumnName("loginAs");
            entity.Property(e => e.Mobile)
                .HasDefaultValueSql("((0))")
                .HasColumnName("mobile");
            entity.Property(e => e.Sucesso).HasColumnName("sucesso");
        });

        modelBuilder.Entity<UtilizadorLoginMirrorsT>(entity =>
        {
            entity.ToTable("UtilizadorLoginMirrors_T");

            entity.Property(e => e.Id)
                .ValueGeneratedNever()
                .HasColumnName("id");
            entity.Property(e => e.Activo)
                .IsRequired()
                .HasDefaultValueSql("(1)")
                .HasColumnName("activo");
            entity.Property(e => e.Codigo)
                .HasMaxLength(10)
                .HasColumnName("codigo");
            entity.Property(e => e.Default).HasColumnName("default");
            entity.Property(e => e.Descricao)
                .HasMaxLength(50)
                .HasColumnName("descricao");
            entity.Property(e => e.IsDev).HasColumnName("isDEV");
            entity.Property(e => e.Port)
                .HasMaxLength(10)
                .HasColumnName("port");
            entity.Property(e => e.Url)
                .HasMaxLength(50)
                .HasColumnName("url");
        });

        modelBuilder.Entity<UtilizadorMotivosAusenciaT>(entity =>
        {
            entity.HasKey(e => e.Id).HasName("PK_T_MotivosAusencia");

            entity.ToTable("UtilizadorMotivosAusencia_T");

            entity.Property(e => e.Id).HasColumnName("id");
            entity.Property(e => e.Activo)
                .HasDefaultValueSql("(1)")
                .HasColumnName("activo");
            entity.Property(e => e.Descricao)
                .HasMaxLength(50)
                .HasColumnName("descricao");
        });

        modelBuilder.Entity<UtilizadorRelatorioDiario>(entity =>
        {
            entity.HasKey(e => e.Id).HasName("PK_T_UtilizadorKmsPercorridos");

            entity.ToTable("UtilizadorRelatorioDiario");

            entity.HasIndex(e => new { e.IdRota, e.DtIni, e.IdUtil, e.DtFim, e.IdViatura }, "idx_datas_rota_util_viatura").HasFillFactor(80);

            entity.HasIndex(e => e.DtFim, "idx_dtfim_dtini_idrota_idutil").HasFillFactor(80);

            entity.HasIndex(e => new { e.DtIni, e.IdUtil, e.IdRota, e.IdViatura, e.Matricula, e.DtFim, e.KmsIni, e.KmsFim }, "idx_dtini_idutil_idrota_idviatura").HasFillFactor(80);

            entity.HasIndex(e => new { e.IdRota, e.DtIni, e.DtFim }, "idx_idRota_dtIni_dtFim").HasFillFactor(80);

            entity.HasIndex(e => new { e.IdRota, e.IdUtil }, "pk_idutil_idrota").HasFillFactor(80);

            entity.Property(e => e.Id).HasColumnName("id");
            entity.Property(e => e.DtFim)
                .HasColumnType("datetime")
                .HasColumnName("dt_fim");
            entity.Property(e => e.DtIni)
                .HasColumnType("datetime")
                .HasColumnName("dt_ini");
            entity.Property(e => e.DtIntrod)
                .HasDefaultValueSql("(getdate())")
                .HasColumnType("datetime")
                .HasColumnName("dtIntrod");
            entity.Property(e => e.DtUltAct)
                .HasColumnType("datetime")
                .HasColumnName("dtUltAct");
            entity.Property(e => e.IdModoTransporte).HasColumnName("idModoTransporte");
            entity.Property(e => e.IdRota).HasColumnName("idRota");
            entity.Property(e => e.IdServicoEspecial).HasColumnName("idServicoEspecial");
            entity.Property(e => e.IdUtil).HasColumnName("idUtil");
            entity.Property(e => e.IdUtilIntrod).HasColumnName("idUtilIntrod");
            entity.Property(e => e.IdUtilUltAct).HasColumnName("idUtilUltAct");
            entity.Property(e => e.IdViatura).HasColumnName("idViatura");
            entity.Property(e => e.KmsFim).HasColumnName("kms_fim");
            entity.Property(e => e.KmsIni).HasColumnName("kms_ini");
            entity.Property(e => e.Matricula)
                .HasMaxLength(12)
                .HasColumnName("matricula");
        });

        modelBuilder.Entity<UtilizadorSetting>(entity =>
        {
            entity.Property(e => e.Id).HasColumnName("id");
            entity.Property(e => e.Activo).HasColumnName("activo");
            entity.Property(e => e.DtIntrod)
                .HasColumnType("datetime")
                .HasColumnName("dtIntrod");
            entity.Property(e => e.DtUltAct)
                .HasColumnType("datetime")
                .HasColumnName("dtUltAct");
            entity.Property(e => e.FormatoImp).HasMaxLength(10);
            entity.Property(e => e.IdEntidade).HasColumnName("idEntidade");
            entity.Property(e => e.IdGrupo).HasColumnName("idGrupo");
            entity.Property(e => e.IdPais).HasColumnName("idPais");
            entity.Property(e => e.IdPlataforma).HasColumnName("idPlataforma");
            entity.Property(e => e.IdUtil).HasColumnName("idUtil");
            entity.Property(e => e.IdUtilIntrod).HasColumnName("idUtilIntrod");
            entity.Property(e => e.IdUtilUltAct).HasColumnName("idUtilUltAct");
            entity.Property(e => e.Impressora).HasMaxLength(500);
            entity.Property(e => e.ImpressoraEtiq).HasMaxLength(500);
            entity.Property(e => e.PluginWcpp)
                .HasMaxLength(20)
                .HasColumnName("PluginWCPP");
            entity.Property(e => e.VersaoChrome).HasMaxLength(30);
        });

        modelBuilder.Entity<UtilizadoresEquipasCpostal>(entity =>
        {
            entity.HasKey(e => e.Id).HasName("PK__Utilizad__3213E83F1C246A1C");

            entity.ToTable("UtilizadoresEquipasCpostal");

            entity.HasIndex(e => new { e.IdCpostal, e.IdDinamicaComercial, e.Activo, e.IdEntidade }, "Idx_UtilEquiCpost_idCpostal_idDimanica_idEntidade_activo").HasFillFactor(80);

            entity.HasIndex(e => new { e.IdCpostal, e.IdEquipa, e.Activo, e.IdEntidade }, "Idx_UtilEquiCpost_idCpostal_idEquipa_idEntidade_activo").HasFillFactor(80);

            entity.HasIndex(e => new { e.IdDinamicaComercial, e.Activo, e.IdEntidade }, "Idx_idDinamicaComercial_activo_idEntidade");

            entity.Property(e => e.Id).HasColumnName("id");
            entity.Property(e => e.Activo).HasColumnName("activo");
            entity.Property(e => e.DtIntrod)
                .HasColumnType("datetime")
                .HasColumnName("dtIntrod");
            entity.Property(e => e.DtUltAct)
                .HasColumnType("datetime")
                .HasColumnName("dtUltAct");
            entity.Property(e => e.IdCpostal).HasColumnName("idCpostal");
            entity.Property(e => e.IdDinamicaComercial).HasColumnName("idDinamicaComercial");
            entity.Property(e => e.IdEntidade).HasColumnName("idEntidade");
            entity.Property(e => e.IdEquipa).HasColumnName("idEquipa");
            entity.Property(e => e.IdUtilIntrod).HasColumnName("idUtilIntrod");
            entity.Property(e => e.IdUtilUltAct).HasColumnName("idUtilUltAct");
        });

        modelBuilder.Entity<UtilizadoresEquipasCpostalBak>(entity =>
        {
            entity
                .HasNoKey()
                .ToTable("UtilizadoresEquipasCpostal_bak");

            entity.Property(e => e.Activo).HasColumnName("activo");
            entity.Property(e => e.DtIntrod)
                .HasColumnType("datetime")
                .HasColumnName("dtIntrod");
            entity.Property(e => e.DtUltAct)
                .HasColumnType("datetime")
                .HasColumnName("dtUltAct");
            entity.Property(e => e.Id)
                .ValueGeneratedOnAdd()
                .HasColumnName("id");
            entity.Property(e => e.IdCpostal).HasColumnName("idCpostal");
            entity.Property(e => e.IdDinamicaComercial).HasColumnName("idDinamicaComercial");
            entity.Property(e => e.IdEntidade).HasColumnName("idEntidade");
            entity.Property(e => e.IdEquipa).HasColumnName("idEquipa");
            entity.Property(e => e.IdUtilIntrod).HasColumnName("idUtilIntrod");
            entity.Property(e => e.IdUtilUltAct).HasColumnName("idUtilUltAct");
        });

        modelBuilder.Entity<VClienteEntidadesPotNeg>(entity =>
        {
            entity
                .HasNoKey()
                .ToView("v_ClienteEntidadesPotNeg");

            entity.Property(e => e.CodRegime)
                .HasMaxLength(25)
                .HasColumnName("codRegime");
            entity.Property(e => e.CodServico)
                .HasMaxLength(15)
                .HasColumnName("codServico");
            entity.Property(e => e.IdCliMorada).HasColumnName("idCliMorada");
            entity.Property(e => e.IdCliente).HasColumnName("idCliente");
            entity.Property(e => e.IdEntidade).HasColumnName("idEntidade");
            entity.Property(e => e.IdRegime).HasColumnName("idRegime");
            entity.Property(e => e.IdServico).HasColumnName("idServico");
            entity.Property(e => e.Negociado)
                .HasColumnType("money")
                .HasColumnName("negociado");
            entity.Property(e => e.Potencial)
                .HasColumnType("money")
                .HasColumnName("potencial");
            entity.Property(e => e.Regime)
                .HasMaxLength(50)
                .HasColumnName("regime");
            entity.Property(e => e.Servico)
                .HasMaxLength(50)
                .HasColumnName("servico");
            entity.Property(e => e.Zona)
                .HasMaxLength(10)
                .HasColumnName("zona");
        });

        modelBuilder.Entity<VClienteMorada>(entity =>
        {
            entity
                .HasNoKey()
                .ToView("v_ClienteMoradas");

            entity.Property(e => e.CodContab)
                .HasMaxLength(50)
                .HasColumnName("codContab");
            entity.Property(e => e.Cpostal)
                .HasMaxLength(15)
                .HasColumnName("cpostal");
            entity.Property(e => e.Email)
                .HasMaxLength(50)
                .HasColumnName("email");
            entity.Property(e => e.Fax).HasColumnName("fax");
            entity.Property(e => e.GrupoRangel).HasColumnName("grupoRangel");
            entity.Property(e => e.HoraDisponivel).HasColumnName("horaDisponivel");
            entity.Property(e => e.HoraFecho).HasColumnName("horaFecho");
            entity.Property(e => e.IdCliMorada).HasColumnName("idCliMorada");
            entity.Property(e => e.IdCliMoradaFact).HasColumnName("idCliMoradaFact");
            entity.Property(e => e.IdCliente).HasColumnName("idCliente");
            entity.Property(e => e.IdCpostal).HasColumnName("idCPostal");
            entity.Property(e => e.IdEntidade).HasColumnName("idEntidade");
            entity.Property(e => e.IdEquipaComercial).HasColumnName("idEquipaComercial");
            entity.Property(e => e.IdPais).HasColumnName("idPais");
            entity.Property(e => e.IdStComercial).HasColumnName("idStComercial");
            entity.Property(e => e.IdStCredito).HasColumnName("idStCredito");
            entity.Property(e => e.IdTipoAbc).HasColumnName("idTipoABC");
            entity.Property(e => e.IdTipoCliente).HasColumnName("idTipoCliente");
            entity.Property(e => e.IdTipoEntidade).HasColumnName("idTipoEntidade");
            entity.Property(e => e.IdUtilResp).HasColumnName("idUtilResp");
            entity.Property(e => e.IsGlobalAccount).HasColumnName("isGlobalAccount");
            entity.Property(e => e.IsMoradaDefault).HasColumnName("isMoradaDefault");
            entity.Property(e => e.IsMoradaFact).HasColumnName("isMoradaFact");
            entity.Property(e => e.LimiteCredito)
                .HasColumnType("money")
                .HasColumnName("limiteCredito");
            entity.Property(e => e.LimiteCreditoAdua)
                .HasColumnType("money")
                .HasColumnName("limiteCreditoAdua");
            entity.Property(e => e.Localidade)
                .HasMaxLength(100)
                .HasColumnName("localidade");
            entity.Property(e => e.Morada)
                .HasMaxLength(100)
                .HasColumnName("morada");
            entity.Property(e => e.Nome)
                .HasMaxLength(100)
                .HasColumnName("nome");
            entity.Property(e => e.NomeCliente)
                .HasMaxLength(100)
                .HasColumnName("nomeCliente");
            entity.Property(e => e.NomeContactoDef)
                .HasMaxLength(50)
                .HasColumnName("nomeContactoDef");
            entity.Property(e => e.NrContrib)
                .HasMaxLength(20)
                .HasColumnName("nrContrib");
            entity.Property(e => e.NumConta)
                .HasMaxLength(20)
                .HasColumnName("numConta");
            entity.Property(e => e.Telefone).HasColumnName("telefone");
            entity.Property(e => e.TemSisShip).HasColumnName("temSisShip");
            entity.Property(e => e.VolumeVendas)
                .HasColumnType("money")
                .HasColumnName("volumeVendas");
        });

        modelBuilder.Entity<VEntrevistasCrmApagar>(entity =>
        {
            entity
                .HasNoKey()
                .ToView("v_EntrevistasCRM_APAGAR");

            entity.Property(e => e.Automatica).HasColumnName("automatica");
            entity.Property(e => e.DtInicio)
                .HasColumnType("datetime")
                .HasColumnName("dtInicio");
            entity.Property(e => e.Duracao).HasColumnName("duracao");
            entity.Property(e => e.Efectuada).HasColumnName("efectuada");
            entity.Property(e => e.Formato).HasMaxLength(15);
            entity.Property(e => e.Id).HasColumnName("id");
            entity.Property(e => e.IGCOM2Userserta).HasColumnName("iGCOM2Userserta");
            entity.Property(e => e.IdCliente).HasColumnName("idCliente");
            entity.Property(e => e.IdEntrevistaOrigem).HasColumnName("idEntrevistaOrigem");
            entity.Property(e => e.IdEntrevistaResposta).HasColumnName("idEntrevistaResposta");
            entity.Property(e => e.IdFormato).HasColumnName("idFormato");
            entity.Property(e => e.IdTipo).HasColumnName("idTipo");
            entity.Property(e => e.IdUtil).HasColumnName("idUtil");
            entity.Property(e => e.NaoAtendeu).HasColumnName("naoAtendeu");
            entity.Property(e => e.Nome)
                .HasMaxLength(100)
                .HasColumnName("nome");
            entity.Property(e => e.Observacoes)
                .HasMaxLength(500)
                .HasColumnName("observacoes");
            entity.Property(e => e.Remarcada).HasColumnName("remarcada");
            entity.Property(e => e.Tipo).HasMaxLength(15);
        });

        modelBuilder.Entity<VEntrevistasEfectuadasApagar>(entity =>
        {
            entity
                .HasNoKey()
                .ToView("v_EntrevistasEfectuadas_APAGAR");

            entity.Property(e => e.Automatica).HasColumnName("automatica");
            entity.Property(e => e.DtInicio)
                .HasColumnType("datetime")
                .HasColumnName("dtInicio");
            entity.Property(e => e.Duracao).HasColumnName("duracao");
            entity.Property(e => e.Efectuada).HasColumnName("efectuada");
            entity.Property(e => e.Formato).HasMaxLength(15);
            entity.Property(e => e.Id).HasColumnName("id");
            entity.Property(e => e.IGCOM2Userserta).HasColumnName("iGCOM2Userserta");
            entity.Property(e => e.IdCliente).HasColumnName("idCliente");
            entity.Property(e => e.IdEntrevistaOrigem).HasColumnName("idEntrevistaOrigem");
            entity.Property(e => e.IdEntrevistaResposta).HasColumnName("idEntrevistaResposta");
            entity.Property(e => e.IdFormato).HasColumnName("idFormato");
            entity.Property(e => e.IdTipo).HasColumnName("idTipo");
            entity.Property(e => e.IdUtil).HasColumnName("idUtil");
            entity.Property(e => e.NaoAtendeu).HasColumnName("naoAtendeu");
            entity.Property(e => e.Nome)
                .HasMaxLength(100)
                .HasColumnName("nome");
            entity.Property(e => e.Observacoes)
                .HasMaxLength(500)
                .HasColumnName("observacoes");
            entity.Property(e => e.Remarcada).HasColumnName("remarcada");
            entity.Property(e => e.Tipo).HasMaxLength(15);
        });

        modelBuilder.Entity<VEntrevistasPECApagar>(entity =>
        {
            entity
                .HasNoKey()
                .ToView("v_EntrevistasP+E+C_APAGAR");

            entity.Property(e => e.Automatica).HasColumnName("automatica");
            entity.Property(e => e.Data).HasColumnType("datetime");
            entity.Property(e => e.Duracao).HasColumnName("duracao");
            entity.Property(e => e.Efectuada).HasColumnName("efectuada");
            entity.Property(e => e.Formato).HasMaxLength(15);
            entity.Property(e => e.Id).HasColumnName("id");
            entity.Property(e => e.IGCOM2Userserta).HasColumnName("iGCOM2Userserta");
            entity.Property(e => e.IdCliente).HasColumnName("idCliente");
            entity.Property(e => e.IdEntrevistaOrigem).HasColumnName("idEntrevistaOrigem");
            entity.Property(e => e.IdEntrevistaResposta).HasColumnName("idEntrevistaResposta");
            entity.Property(e => e.IdFormato).HasColumnName("idFormato");
            entity.Property(e => e.IdTipo).HasColumnName("idTipo");
            entity.Property(e => e.IdUtil).HasColumnName("idUtil");
            entity.Property(e => e.NaoAtendeu).HasColumnName("naoAtendeu");
            entity.Property(e => e.Nome)
                .HasMaxLength(100)
                .HasColumnName("nome");
            entity.Property(e => e.Observacoes)
                .HasMaxLength(1500)
                .HasColumnName("observacoes");
            entity.Property(e => e.Pec)
                .HasMaxLength(1)
                .IsUnicode(false)
                .HasColumnName("PEC");
            entity.Property(e => e.Remarcada).HasColumnName("remarcada");
            entity.Property(e => e.Tipo).HasMaxLength(15);
        });

        modelBuilder.Entity<VEntrevistasPendentesApagar>(entity =>
        {
            entity
                .HasNoKey()
                .ToView("v_EntrevistasPendentes_APAGAR");

            entity.Property(e => e.Automatica).HasColumnName("automatica");
            entity.Property(e => e.DtInicio)
                .HasColumnType("datetime")
                .HasColumnName("dtInicio");
            entity.Property(e => e.Duracao).HasColumnName("duracao");
            entity.Property(e => e.Efectuada).HasColumnName("efectuada");
            entity.Property(e => e.Formato).HasMaxLength(15);
            entity.Property(e => e.Id).HasColumnName("id");
            entity.Property(e => e.IGCOM2Userserta).HasColumnName("iGCOM2Userserta");
            entity.Property(e => e.IdCliente).HasColumnName("idCliente");
            entity.Property(e => e.IdEntrevistaOrigem).HasColumnName("idEntrevistaOrigem");
            entity.Property(e => e.IdEntrevistaResposta).HasColumnName("idEntrevistaResposta");
            entity.Property(e => e.IdFormato).HasColumnName("idFormato");
            entity.Property(e => e.IdTipo).HasColumnName("idTipo");
            entity.Property(e => e.IdUtil).HasColumnName("idUtil");
            entity.Property(e => e.Naoatendeu).HasColumnName("naoatendeu");
            entity.Property(e => e.Nome)
                .HasMaxLength(100)
                .HasColumnName("nome");
            entity.Property(e => e.Observacoes).HasColumnName("observacoes");
            entity.Property(e => e.Remarcada).HasColumnName("remarcada");
            entity.Property(e => e.Tipo).HasMaxLength(15);
        });

        modelBuilder.Entity<VEtlmanifesto>(entity =>
        {
            entity
                .HasNoKey()
                .ToView("v_ETLManifesto");

            entity.Property(e => e.Anulado).HasColumnName("anulado");
            entity.Property(e => e.Awb)
                .HasMaxLength(50)
                .HasColumnName("awb");
            entity.Property(e => e.DataFim).HasColumnType("datetime");
            entity.Property(e => e.DataInicio).HasColumnType("datetime");
            entity.Property(e => e.DtEntregaDesejada)
                .HasColumnType("datetime")
                .HasColumnName("dtEntregaDesejada");
            entity.Property(e => e.DtEnvio)
                .HasColumnType("date")
                .HasColumnName("dtEnvio");
            entity.Property(e => e.DtExpedicao)
                .HasColumnType("date")
                .HasColumnName("dtExpedicao");
            entity.Property(e => e.DtIntrod)
                .HasColumnType("datetime")
                .HasColumnName("dtIntrod");
            entity.Property(e => e.DtUltAct)
                .HasColumnType("datetime")
                .HasColumnName("dtUltAct");
            entity.Property(e => e.FormId)
                .HasMaxLength(4)
                .HasColumnName("form_id");
            entity.Property(e => e.Id).HasColumnName("id");
            entity.Property(e => e.IdDistribuidor).HasColumnName("idDistribuidor");
            entity.Property(e => e.IdEntidade).HasColumnName("idEntidade");
            entity.Property(e => e.IdManifestoDev).HasColumnName("idManifestoDev");
            entity.Property(e => e.IdManifestoOrig).HasColumnName("idManifestoOrig");
            entity.Property(e => e.IdMaster).HasColumnName("idMaster");
            entity.Property(e => e.IdPickup).HasColumnName("idPickup");
            entity.Property(e => e.IdPlataforma).HasColumnName("idPlataforma");
            entity.Property(e => e.IdRegime).HasColumnName("idRegime");
            entity.Property(e => e.IdRota).HasColumnName("idRota");
            entity.Property(e => e.IdSegmento).HasColumnName("idSegmento");
            entity.Property(e => e.IdTipoManifesto).HasColumnName("idTipoManifesto");
            entity.Property(e => e.IdUtilAnulacao).HasColumnName("idUtilAnulacao");
            entity.Property(e => e.IdUtilIntrod).HasColumnName("idUtilIntrod");
            entity.Property(e => e.IdUtilUltAct).HasColumnName("idUtilUltAct");
            entity.Property(e => e.IsMaster).HasColumnName("isMaster");
            entity.Property(e => e.Master)
                .HasMaxLength(50)
                .HasColumnName("master");
            entity.Property(e => e.Ordem).HasColumnName("ordem");
            entity.Property(e => e.PupScanCode)
                .HasMaxLength(2)
                .HasColumnName("pupScanCode");
            entity.Property(e => e.PupScanDate)
                .HasColumnType("datetime")
                .HasColumnName("pupScanDate");
            entity.Property(e => e.RecordType)
                .HasMaxLength(2)
                .HasColumnName("recordType");
            entity.Property(e => e.RefExpedidor)
                .HasMaxLength(40)
                .HasColumnName("refExpedidor");
            entity.Property(e => e.RefOrig)
                .HasMaxLength(50)
                .HasColumnName("refOrig");
            entity.Property(e => e.ScanCode)
                .HasMaxLength(2)
                .HasColumnName("scanCode");
            entity.Property(e => e.Scandate)
                .HasColumnType("datetime")
                .HasColumnName("scandate");
            entity.Property(e => e.SwapScanDate)
                .HasColumnType("datetime")
                .HasColumnName("swapScanDate");
            entity.Property(e => e.TratarVolume).HasColumnName("tratarVolume");
        });

        modelBuilder.Entity<VImportacaoScansAbertosApagar>(entity =>
        {
            entity
                .HasNoKey()
                .ToView("V_ImportacaoScansAbertos_APAGAR");

            entity.Property(e => e.Awbnumber)
                .HasMaxLength(20)
                .HasColumnName("awbnumber");
            entity.Property(e => e.Idmanifesto).HasColumnName("idmanifesto");
        });

        modelBuilder.Entity<VManifestoPendentesEntrega>(entity =>
        {
            entity
                .HasNoKey()
                .ToView("v_ManifestoPendentesEntrega");

            entity.Property(e => e.Awb)
                .HasMaxLength(50)
                .HasColumnName("awb");
            entity.Property(e => e.CodPlataforma)
                .HasMaxLength(5)
                .HasColumnName("codPlataforma");
            entity.Property(e => e.CodRota)
                .HasMaxLength(5)
                .HasColumnName("codRota");
            entity.Property(e => e.Comment)
                .HasMaxLength(250)
                .HasColumnName("comment");
            entity.Property(e => e.DtEntregaDesejada)
                .HasColumnType("datetime")
                .HasColumnName("dtEntregaDesejada");
            entity.Property(e => e.DtEnvio)
                .HasColumnType("date")
                .HasColumnName("dtEnvio");
            entity.Property(e => e.IdCliente).HasColumnName("idCliente");
            entity.Property(e => e.IdDistribuidor).HasColumnName("idDistribuidor");
            entity.Property(e => e.IdEntidade).HasColumnName("idEntidade");
            entity.Property(e => e.IdManifesto).HasColumnName("idManifesto");
            entity.Property(e => e.IdMaster).HasColumnName("idMaster");
            entity.Property(e => e.IdPlataforma).HasColumnName("idPlataforma");
            entity.Property(e => e.IdPltDestino).HasColumnName("idPltDestino");
            entity.Property(e => e.IdPltOrigem).HasColumnName("idPltOrigem");
            entity.Property(e => e.IdServico).HasColumnName("idServico");
            entity.Property(e => e.IdUtil).HasColumnName("idUtil");
            entity.Property(e => e.IsMaster).HasColumnName("isMaster");
            entity.Property(e => e.Master)
                .HasMaxLength(50)
                .HasColumnName("master");
            entity.Property(e => e.NumDias).HasColumnName("numDias");
            entity.Property(e => e.ScanCode)
                .HasMaxLength(2)
                .HasColumnName("scanCode");
            entity.Property(e => e.ScanDate)
                .HasColumnType("datetime")
                .HasColumnName("scanDate");
        });

        modelBuilder.Entity<VMaterialCutOffsApagar>(entity =>
        {
            entity
                .HasNoKey()
                .ToView("v_MaterialCutOffs_APAGAR");

            entity.Property(e => e.Cp3)
                .HasMaxLength(10)
                .HasColumnName("cp3");
            entity.Property(e => e.Cp4)
                .HasMaxLength(20)
                .HasColumnName("cp4");
            entity.Property(e => e.CutOff1).HasColumnType("datetime");
            entity.Property(e => e.CutOff2).HasColumnType("datetime");
            entity.Property(e => e.HoraLimite)
                .HasColumnType("datetime")
                .HasColumnName("horaLimite");
            entity.Property(e => e.Id).HasColumnName("id");
            entity.Property(e => e.IdPlataforma).HasColumnName("idPlataforma");
            entity.Property(e => e.IdRotaDefault).HasColumnName("idRotaDefault");
            entity.Property(e => e.Localidade).HasMaxLength(50);
            entity.Property(e => e.Morada)
                .HasMaxLength(100)
                .HasColumnName("morada");
            entity.Property(e => e.RotaDefault).HasMaxLength(5);
        });

        modelBuilder.Entity<VMaterialPedidosCutOffsApagar>(entity =>
        {
            entity
                .HasNoKey()
                .ToView("v_MaterialPedidosCutOffs_APAGAR");

            entity.Property(e => e.CpostalPed)
                .HasMaxLength(15)
                .HasColumnName("cpostalPed");
            entity.Property(e => e.CutOff1Ped).HasColumnType("datetime");
            entity.Property(e => e.CutOff2Ped).HasColumnType("datetime");
            entity.Property(e => e.HoraLimitePed)
                .HasColumnType("datetime")
                .HasColumnName("horaLimitePed");
            entity.Property(e => e.Id).HasColumnName("id");
            entity.Property(e => e.IdPlataformaPed).HasColumnName("idPlataformaPed");
            entity.Property(e => e.IdRotaDefault).HasColumnName("idRotaDefault");
            entity.Property(e => e.LocalidadePed).HasMaxLength(35);
            entity.Property(e => e.MoradaPed)
                .HasMaxLength(100)
                .HasColumnName("moradaPed");
            entity.Property(e => e.RotaDefault).HasMaxLength(3);
        });

        modelBuilder.Entity<VReclamaco>(entity =>
        {
            entity
                .HasNoKey()
                .ToView("v_Reclamacoes");

            entity.Property(e => e.Awb).HasColumnName("awb");
            entity.Property(e => e.Categoria)
                .HasMaxLength(50)
                .HasColumnName("categoria");
            entity.Property(e => e.Causa)
                .HasMaxLength(50)
                .HasColumnName("causa");
            entity.Property(e => e.Concluida).HasColumnName("concluida");
            entity.Property(e => e.Contacto)
                .HasMaxLength(50)
                .HasColumnName("contacto");
            entity.Property(e => e.CreditoDanos)
                .HasColumnType("money")
                .HasColumnName("creditoDanos");
            entity.Property(e => e.CreditoMbg)
                .HasColumnType("money")
                .HasColumnName("creditoMBG");
            entity.Property(e => e.CreditoSeguro)
                .HasColumnType("money")
                .HasColumnName("creditoSeguro");
            entity.Property(e => e.CreditoTransporte)
                .HasColumnType("money")
                .HasColumnName("creditoTransporte");
            entity.Property(e => e.DtAbertura)
                .HasColumnType("datetime")
                .HasColumnName("dtAbertura");
            entity.Property(e => e.DtConclusao)
                .HasColumnType("datetime")
                .HasColumnName("dtConclusao");
            entity.Property(e => e.DtCreditoTransporte)
                .HasColumnType("datetime")
                .HasColumnName("dtCreditoTransporte");
            entity.Property(e => e.DtDanos)
                .HasColumnType("datetime")
                .HasColumnName("dtDanos");
            entity.Property(e => e.DtEncerramento)
                .HasColumnType("datetime")
                .HasColumnName("dtEncerramento");
            entity.Property(e => e.DtIntrod)
                .HasColumnType("datetime")
                .HasColumnName("dtIntrod");
            entity.Property(e => e.DtMbg)
                .HasColumnType("datetime")
                .HasColumnName("dtMBG");
            entity.Property(e => e.DtMbgpedido)
                .HasColumnType("datetime")
                .HasColumnName("dtMBGPedido");
            entity.Property(e => e.DtPedidoCreditoTransporte)
                .HasColumnType("datetime")
                .HasColumnName("dtPedidoCreditoTransporte");
            entity.Property(e => e.DtPedidoDanos)
                .HasColumnType("datetime")
                .HasColumnName("dtPedidoDanos");
            entity.Property(e => e.DtPedidoseguro)
                .HasColumnType("datetime")
                .HasColumnName("dtPedidoseguro");
            entity.Property(e => e.DtSeguro)
                .HasColumnType("datetime")
                .HasColumnName("dtSeguro");
            entity.Property(e => e.Encerrada).HasColumnName("encerrada");
            entity.Property(e => e.FaxParticular)
                .HasMaxLength(50)
                .HasColumnName("fax_particular");
            entity.Property(e => e.Id).HasColumnName("id");
            entity.Property(e => e.IdCategoria).HasColumnName("idCategoria");
            entity.Property(e => e.IdCausa).HasColumnName("idCausa");
            entity.Property(e => e.IdCliente).HasColumnName("idCliente");
            entity.Property(e => e.IdLocalOcorrencia).HasColumnName("idLocalOcorrencia");
            entity.Property(e => e.IdRegime).HasColumnName("idRegime");
            entity.Property(e => e.IdResolucao).HasColumnName("idResolucao");
            entity.Property(e => e.IdTipo).HasColumnName("idTipo");
            entity.Property(e => e.IdUtilConclusao).HasColumnName("idUtilConclusao");
            entity.Property(e => e.IdUtilEncerramento).HasColumnName("idUtilEncerramento");
            entity.Property(e => e.IdUtilIntrod).HasColumnName("idUtilIntrod");
            entity.Property(e => e.LocalOcorrencia)
                .HasMaxLength(50)
                .HasColumnName("localOcorrencia");
            entity.Property(e => e.MoradaParticular)
                .HasMaxLength(50)
                .HasColumnName("morada_particular");
            entity.Property(e => e.NrContaFedex)
                .HasMaxLength(9)
                .HasColumnName("nr_conta_fedex");
            entity.Property(e => e.Pac).HasColumnName("PAC");
            entity.Property(e => e.Regime)
                .HasMaxLength(50)
                .HasColumnName("regime");
            entity.Property(e => e.Resolucao)
                .HasMaxLength(50)
                .HasColumnName("resolucao");
            entity.Property(e => e.TelfParticular)
                .HasMaxLength(50)
                .HasColumnName("telf_particular");
            entity.Property(e => e.Tipo)
                .HasMaxLength(50)
                .HasColumnName("tipo");
        });

        modelBuilder.Entity<VRecolhasCutOffsApagar>(entity =>
        {
            entity
                .HasNoKey()
                .ToView("v_RecolhasCutOffs_APAGAR");

            entity.Property(e => e.Cp3Pup)
                .HasMaxLength(10)
                .HasColumnName("cp3Pup");
            entity.Property(e => e.Cp4Pup)
                .HasMaxLength(20)
                .HasColumnName("cp4Pup");
            entity.Property(e => e.CutOff1Pup).HasColumnType("datetime");
            entity.Property(e => e.CutOff2Pup).HasColumnType("datetime");
            entity.Property(e => e.HoraLimitePup)
                .HasColumnType("datetime")
                .HasColumnName("horaLimitePup");
            entity.Property(e => e.Id).HasColumnName("id");
            entity.Property(e => e.IdPlataformaPup).HasColumnName("idPlataformaPup");
            entity.Property(e => e.IdRotaDefault).HasColumnName("idRotaDefault");
            entity.Property(e => e.LocalidadePup)
                .HasMaxLength(50)
                .HasColumnName("localidadePup");
            entity.Property(e => e.MoradaPup)
                .HasMaxLength(100)
                .HasColumnName("moradaPup");
            entity.Property(e => e.RotaDefault).HasMaxLength(5);
        });

        modelBuilder.Entity<VScan71RiApagar>(entity =>
        {
            entity
                .HasNoKey()
                .ToView("v_Scan71_RI_APAGAR");

            entity.Property(e => e.AwbNumber)
                .HasMaxLength(20)
                .HasColumnName("awbNumber");
            entity.Property(e => e.Comment)
                .HasMaxLength(30)
                .HasColumnName("comment");
            entity.Property(e => e.Id).HasColumnName("id");
            entity.Property(e => e.IdManifesto).HasColumnName("idManifesto");
            entity.Property(e => e.ScanCode)
                .HasMaxLength(2)
                .HasColumnName("scanCode");
            entity.Property(e => e.ScanCourierRoute)
                .HasMaxLength(5)
                .HasColumnName("scanCourierRoute");
            entity.Property(e => e.ScanDate)
                .HasColumnType("datetime")
                .HasColumnName("scanDate");
            entity.Property(e => e.ScanLocation)
                .HasMaxLength(5)
                .HasColumnName("scanLocation");
            entity.Property(e => e.Signature)
                .HasMaxLength(30)
                .HasColumnName("signature");
        });

        modelBuilder.Entity<VeraGuerreiro>(entity =>
        {
            entity
                .HasNoKey()
                .ToView("VeraGuerreiro");

            entity.Property(e => e.Awb)
                .HasMaxLength(50)
                .HasColumnName("awb");
            entity.Property(e => e.CodClienteParceiro)
                .HasMaxLength(50)
                .IsUnicode(false);
            entity.Property(e => e.CodigoDelagacionCex)
                .HasMaxLength(3)
                .IsUnicode(false);
            entity.Property(e => e.CodigoDevolucao)
                .HasMaxLength(1)
                .IsUnicode(false)
                .HasColumnName("codigoDevolucao");
            entity.Property(e => e.CodigoProvedor)
                .HasMaxLength(4)
                .IsUnicode(false);
            entity.Property(e => e.Comment)
                .HasMaxLength(250)
                .HasColumnName("comment");
            entity.Property(e => e.DelegacaoProvedor)
                .HasMaxLength(5)
                .IsUnicode(false)
                .HasColumnName("delegacaoProvedor");
            entity.Property(e => e.Descricao).HasMaxLength(200);
            entity.Property(e => e.EventCode).HasMaxLength(10);
            entity.Property(e => e.Expedicao)
                .HasMaxLength(1)
                .IsUnicode(false);
            entity.Property(e => e.IdManifParceiro)
                .HasMaxLength(50)
                .IsUnicode(false)
                .HasColumnName("idManifParceiro");
            entity.Property(e => e.IdManifesto).HasColumnName("idManifesto");
            entity.Property(e => e.IdScan).HasColumnName("idScan");
            entity.Property(e => e.Ms)
                .HasMaxLength(200)
                .HasColumnName("MS");
            entity.Property(e => e.NumeroGiro)
                .HasMaxLength(1)
                .IsUnicode(false)
                .HasColumnName("numeroGiro");
            entity.Property(e => e.Numerotransferencia)
                .HasMaxLength(1)
                .IsUnicode(false);
            entity.Property(e => e.Plataforma).HasMaxLength(50);
            entity.Property(e => e.PostDate)
                .HasColumnType("datetime")
                .HasColumnName("postDate");
            entity.Property(e => e.ReasonCode).HasMaxLength(10);
            entity.Property(e => e.Refparcliente)
                .HasMaxLength(50)
                .IsUnicode(false)
                .HasColumnName("REFPARCLIENTE");
            entity.Property(e => e.ScanCode)
                .HasMaxLength(2)
                .HasColumnName("scanCode");
            entity.Property(e => e.ScanDateDt)
                .HasMaxLength(8)
                .IsUnicode(false)
                .HasColumnName("scanDateDt");
            entity.Property(e => e.ScanTime)
                .HasMaxLength(8000)
                .IsUnicode(false)
                .HasColumnName("scanTime");
            entity.Property(e => e.Signature)
                .HasMaxLength(30)
                .HasColumnName("signature");
        });

        modelBuilder.Entity<Viatura>(entity =>
        {
            entity.HasKey(e => e.Id).HasName("PK_Viaturas");

            entity.ToTable("Viatura", tb => tb.HasTrigger("Viatura_Update_Trigger"));

            entity.HasIndex(e => e.EnvInterface, "idx_envinterface").HasFillFactor(80);

            entity.Property(e => e.Id).HasColumnName("id");
            entity.Property(e => e.Activo)
                .HasDefaultValueSql("((1))")
                .HasColumnName("activo");
            entity.Property(e => e.CapacidadeKg).HasColumnName("capacidadeKg");
            entity.Property(e => e.CapacidadeM3).HasColumnName("capacidadeM3");
            entity.Property(e => e.Cilindrada).HasColumnName("cilindrada");
            entity.Property(e => e.Codigo)
                .HasMaxLength(15)
                .HasColumnName("codigo");
            entity.Property(e => e.ConsumoMedio)
                .HasColumnType("money")
                .HasColumnName("consumoMedio");
            entity.Property(e => e.CustoPneusKm)
                .HasColumnType("money")
                .HasColumnName("custoPneusKm");
            entity.Property(e => e.CustoPortagensMes)
                .HasColumnType("money")
                .HasColumnName("custoPortagensMes");
            entity.Property(e => e.CustoRendaMes)
                .HasColumnType("money")
                .HasColumnName("custoRendaMes");
            entity.Property(e => e.CustoSeguroMes)
                .HasColumnType("money")
                .HasColumnName("custoSeguroMes");
            entity.Property(e => e.CustoSmsMes)
                .HasColumnType("money")
                .HasColumnName("custoSmsMes");
            entity.Property(e => e.CustoTelemovelMes)
                .HasColumnType("money")
                .HasColumnName("custoTelemovelMes");
            entity.Property(e => e.DtEnvInterface)
                .HasColumnType("datetime")
                .HasColumnName("dtEnvInterface");
            entity.Property(e => e.DtFimContrato)
                .HasColumnType("datetime")
                .HasColumnName("dtFimContrato");
            entity.Property(e => e.DtInicioContrato)
                .HasColumnType("datetime")
                .HasColumnName("dtInicioContrato");
            entity.Property(e => e.DtIntrod)
                .HasDefaultValueSql("(getdate())")
                .HasColumnType("datetime")
                .HasColumnName("dtIntrod");
            entity.Property(e => e.DtUltAct)
                .HasColumnType("datetime")
                .HasColumnName("dtUltAct");
            entity.Property(e => e.DtViaverde)
                .HasColumnType("datetime")
                .HasColumnName("dtViaverde");
            entity.Property(e => e.DuracaoContrato).HasColumnName("duracaoContrato");
            entity.Property(e => e.EnvInterface).HasColumnName("envInterface");
            entity.Property(e => e.EnviosMax).HasColumnName("enviosMax");
            entity.Property(e => e.EnviosMin).HasColumnName("enviosMin");
            entity.Property(e => e.IdCliente).HasColumnName("idCliente");
            entity.Property(e => e.IdCombustivel).HasColumnName("idCombustivel");
            entity.Property(e => e.IdEntidade)
                .HasDefaultValueSql("((1))")
                .HasColumnName("idEntidade");
            entity.Property(e => e.IdPlataforma).HasColumnName("idPlataforma");
            entity.Property(e => e.IdTipoContrato).HasColumnName("idTipoContrato");
            entity.Property(e => e.IdTipoViatura).HasColumnName("idTipoViatura");
            entity.Property(e => e.IdUtilIntrod).HasColumnName("idUtilIntrod");
            entity.Property(e => e.IdUtilUltAct).HasColumnName("idUtilUltAct");
            entity.Property(e => e.IdUtilizador).HasColumnName("idUtilizador");
            entity.Property(e => e.KmsContrato).HasColumnName("kmsContrato");
            entity.Property(e => e.Lotacao).HasColumnName("lotacao");
            entity.Property(e => e.Matricula)
                .HasMaxLength(8)
                .HasColumnName("matricula");
            entity.Property(e => e.Modelo)
                .HasMaxLength(50)
                .HasColumnName("modelo");
            entity.Property(e => e.Observacoes)
                .HasMaxLength(150)
                .HasColumnName("observacoes");
            entity.Property(e => e.PesoMax).HasColumnName("pesoMax");
            entity.Property(e => e.PesoMin).HasColumnName("pesoMin");
            entity.Property(e => e.Publicidade).HasColumnName("publicidade");
            entity.Property(e => e.ValorCompra)
                .HasColumnType("money")
                .HasColumnName("valorCompra");
            entity.Property(e => e.VolMax).HasColumnName("volMax");
            entity.Property(e => e.VolMaxM3).HasColumnName("volMaxM3");
            entity.Property(e => e.VolMin).HasColumnName("volMin");
            entity.Property(e => e.VolMinM3).HasColumnName("volMinM3");
        });

        modelBuilder.Entity<ViaturaCombustiveisT>(entity =>
        {
            entity.HasKey(e => e.Id).HasName("PK_T_ViaturaCombustiveis");

            entity.ToTable("ViaturaCombustiveis_T");

            entity.Property(e => e.Id).HasColumnName("id");
            entity.Property(e => e.CustoLitro)
                .HasColumnType("money")
                .HasColumnName("custoLitro");
            entity.Property(e => e.Descricao)
                .HasMaxLength(10)
                .HasColumnName("descricao");
        });

        modelBuilder.Entity<ViaturaCustosExtra>(entity =>
        {
            entity.ToTable("ViaturaCustosExtra");

            entity.Property(e => e.Id).HasColumnName("id");
            entity.Property(e => e.Custo)
                .HasColumnType("money")
                .HasColumnName("custo");
            entity.Property(e => e.Data)
                .HasColumnType("datetime")
                .HasColumnName("data");
            entity.Property(e => e.DtIntrod)
                .HasDefaultValueSql("(getdate())")
                .HasColumnType("datetime")
                .HasColumnName("dtIntrod");
            entity.Property(e => e.IdCondutor).HasColumnName("idCondutor");
            entity.Property(e => e.IdRota).HasColumnName("idRota");
            entity.Property(e => e.IdTipoCusto).HasColumnName("idTipoCusto");
            entity.Property(e => e.IdUtilIntrod).HasColumnName("idUtilIntrod");
            entity.Property(e => e.Observacoes)
                .HasMaxLength(100)
                .HasColumnName("observacoes");
        });

        modelBuilder.Entity<ViaturaReviso>(entity =>
        {
            entity.Property(e => e.Id).HasColumnName("id");
            entity.Property(e => e.Custo)
                .HasColumnType("money")
                .HasColumnName("custo");
            entity.Property(e => e.DtEfectuada)
                .HasColumnType("datetime")
                .HasColumnName("dtEfectuada");
            entity.Property(e => e.DtFecho)
                .HasColumnType("datetime")
                .HasColumnName("dtFecho");
            entity.Property(e => e.DtIntrod)
                .HasDefaultValueSql("(getdate())")
                .HasColumnType("datetime")
                .HasColumnName("dtIntrod");
            entity.Property(e => e.DtMarcada)
                .HasColumnType("datetime")
                .HasColumnName("dtMarcada");
            entity.Property(e => e.IGCOM2Userserta).HasColumnName("iGCOM2Userserta");
            entity.Property(e => e.IdCondutor).HasColumnName("idCondutor");
            entity.Property(e => e.IdTipoManutencao).HasColumnName("idTipoManutencao");
            entity.Property(e => e.IdUtilFecho).HasColumnName("idUtilFecho");
            entity.Property(e => e.IdUtilIntrod).HasColumnName("idUtilIntrod");
            entity.Property(e => e.IdViatura).HasColumnName("idViatura");
            entity.Property(e => e.ObsEfectuada)
                .HasMaxLength(100)
                .HasColumnName("obsEfectuada");
            entity.Property(e => e.ObsMarcada)
                .HasMaxLength(100)
                .HasColumnName("obsMarcada");
            entity.Property(e => e.Programada)
                .HasDefaultValueSql("(1)")
                .HasColumnName("programada");
        });

        modelBuilder.Entity<ViaturaTipoContratoT>(entity =>
        {
            entity.ToTable("ViaturaTipoContrato_T");

            entity.Property(e => e.Id).HasColumnName("id");
            entity.Property(e => e.Activo)
                .IsRequired()
                .HasDefaultValueSql("(1)")
                .HasColumnName("activo");
            entity.Property(e => e.Descricao)
                .HasMaxLength(50)
                .HasColumnName("descricao");
        });

        modelBuilder.Entity<ViaturaZona>(entity =>
        {
            entity.Property(e => e.Id).HasColumnName("id");
            entity.Property(e => e.Cpostal0)
                .HasMaxLength(15)
                .HasColumnName("cpostal0");
            entity.Property(e => e.Cpostal1)
                .HasMaxLength(15)
                .HasColumnName("cpostal1");
            entity.Property(e => e.IdPais).HasColumnName("idPais");
            entity.Property(e => e.IdViatura).HasColumnName("idViatura");
        });

        modelBuilder.Entity<ViaturasTipoT>(entity =>
        {
            entity
                .HasNoKey()
                .ToTable("ViaturasTipo_T");

            entity.Property(e => e.AlturaMax)
                .HasColumnType("money")
                .HasColumnName("alturaMax");
            entity.Property(e => e.Codigo)
                .HasMaxLength(10)
                .HasColumnName("codigo");
            entity.Property(e => e.ComprimentoMax)
                .HasColumnType("money")
                .HasColumnName("comprimentoMax");
            entity.Property(e => e.Id)
                .ValueGeneratedOnAdd()
                .HasColumnName("id");
            entity.Property(e => e.IdUnidadeMetricaAlturaMax).HasColumnName("idUnidadeMetricaAlturaMax");
            entity.Property(e => e.IdUnidadeMetricaComprimentoMax).HasColumnName("idUnidadeMetricaComprimentoMax");
            entity.Property(e => e.Imagem)
                .HasMaxLength(50)
                .IsUnicode(false)
                .HasColumnName("imagem");
            entity.Property(e => e.Imagem2)
                .HasMaxLength(50)
                .HasColumnName("imagem2");
        });

        modelBuilder.Entity<ViewFacturacaoRexIi>(entity =>
        {
            entity
                .HasNoKey()
                .ToView("view_facturacaoRexII");

            entity.Property(e => e.Awb)
                .HasMaxLength(50)
                .HasColumnName("awb");
            entity.Property(e => e.ClientFact)
                .HasMaxLength(100)
                .HasColumnName("clientFact");
            entity.Property(e => e.CodAgrupamento).HasColumnName("codAgrupamento");
            entity.Property(e => e.CpostalDestino)
                .HasMaxLength(10)
                .HasColumnName("cpostal_destino");
            entity.Property(e => e.CpostalOrigem)
                .HasMaxLength(10)
                .HasColumnName("cpostal_origem");
            entity.Property(e => e.Data)
                .HasColumnType("datetime")
                .HasColumnName("data");
            entity.Property(e => e.DtEnvio)
                .HasColumnType("datetime")
                .HasColumnName("dtEnvio");
            entity.Property(e => e.Nome)
                .HasMaxLength(100)
                .HasColumnName("nome");
            entity.Property(e => e.NumPacotes).HasColumnName("numPacotes");
            entity.Property(e => e.PaisDestino)
                .HasMaxLength(2)
                .HasColumnName("pais_destino");
            entity.Property(e => e.PaisOrigem)
                .HasMaxLength(2)
                .HasColumnName("pais_origem");
            entity.Property(e => e.Peso)
                .HasColumnType("money")
                .HasColumnName("peso");
            entity.Property(e => e.Servico)
                .HasMaxLength(15)
                .HasColumnName("servico");
            entity.Property(e => e.ValorFact)
                .HasColumnType("money")
                .HasColumnName("valorFact");
        });

        modelBuilder.Entity<ViewSapbwVenda>(entity =>
        {
            entity
                .HasNoKey()
                .ToView("VIEW_SAPBW_VENDAS", "SAPBW");

            entity.Property(e => e.DtdocD)
                .HasMaxLength(8)
                .IsUnicode(false)
                .HasColumnName("DTDOC_D");
            entity.Property(e => e.DtdocT)
                .HasMaxLength(6)
                .IsUnicode(false)
                .HasColumnName("DTDOC_T");
            entity.Property(e => e.Nif).HasColumnName("NIF");
            entity.Property(e => e.Venda)
                .HasColumnType("money")
                .HasColumnName("VENDA");
        });

        modelBuilder.Entity<WsCexIncidenciasTratamentoLog>(entity =>
        {
            entity.HasKey(e => e.Id).HasName("PK__WS_CEX_I__3213E83F0AE659A2");

            entity.ToTable("WS_CEX_IncidenciasTratamento_LOG");

            entity.Property(e => e.Id).HasColumnName("id");
            entity.Property(e => e.CanalEntrada)
                .HasMaxLength(4000)
                .HasColumnName("canalEntrada");
            entity.Property(e => e.Cliente)
                .HasMaxLength(4000)
                .HasColumnName("cliente");
            entity.Property(e => e.CodPosDest)
                .HasMaxLength(4000)
                .HasColumnName("codPosDest");
            entity.Property(e => e.CodigoSolucion)
                .HasMaxLength(4000)
                .HasColumnName("codigoSolucion");
            entity.Property(e => e.ContactoDest)
                .HasMaxLength(4000)
                .HasColumnName("contactoDest");
            entity.Property(e => e.DomDest)
                .HasMaxLength(4000)
                .HasColumnName("domDest");
            entity.Property(e => e.Dtintrod)
                .HasDefaultValueSql("(getdate())")
                .HasColumnType("datetime")
                .HasColumnName("dtintrod");
            entity.Property(e => e.FechaEnvio).HasMaxLength(4000);
            entity.Property(e => e.FecharConcertada).HasMaxLength(4000);
            entity.Property(e => e.HorarioConcertado1).HasMaxLength(4000);
            entity.Property(e => e.HorarioConcertado2).HasMaxLength(4000);
            entity.Property(e => e.InstruccionesEntrega)
                .HasMaxLength(4000)
                .HasColumnName("instruccionesEntrega");
            entity.Property(e => e.NomeDest)
                .HasMaxLength(4000)
                .HasColumnName("nomeDest");
            entity.Property(e => e.NumEnvio)
                .HasMaxLength(4000)
                .HasColumnName("numEnvio");
            entity.Property(e => e.OfficinaCorreos).HasMaxLength(4000);
            entity.Property(e => e.Pass)
                .HasMaxLength(4000)
                .HasColumnName("pass");
            entity.Property(e => e.PobDest)
                .HasMaxLength(4000)
                .HasColumnName("pobDest");
            entity.Property(e => e.Referencia)
                .HasMaxLength(4000)
                .HasColumnName("referencia");
            entity.Property(e => e.Solicitante)
                .HasMaxLength(4000)
                .HasColumnName("solicitante");
            entity.Property(e => e.TelefDest)
                .HasMaxLength(4000)
                .HasColumnName("telefDest");
        });

        modelBuilder.Entity<WsauthLog>(entity =>
        {
            entity.ToTable("WSAUTH_Log");

            entity.Property(e => e.Id).HasColumnName("id");
            entity.Property(e => e.Ticket)
                .HasMaxLength(32)
                .HasDefaultValueSql("(CONVERT([nvarchar](32),replace(newid(),'-',''),0))")
                .HasColumnName("ticket");
            entity.Property(e => e.Validade)
                .HasColumnType("datetime")
                .HasColumnName("validade");
        });

        modelBuilder.Entity<ZIuqTempIndexKey>(entity =>
        {
            entity.HasKey(e => new { e.FObjId, e.FIndId, e.IndexColumnId }).HasName("z_IUQ_TempPK");

            entity.ToTable("z_IUQ_Temp_Index_Keys");

            entity.Property(e => e.FObjId).HasColumnName("F_Obj_ID");
            entity.Property(e => e.FIndId).HasColumnName("F_Ind_ID");
            entity.Property(e => e.IndexColumnId).HasColumnName("Index_Column_ID");
            entity.Property(e => e.FObjName)
                .HasMaxLength(128)
                .HasColumnName("F_Obj_Name");
            entity.Property(e => e.IndexKey)
                .HasMaxLength(128)
                .HasColumnName("Index_Key");
            entity.Property(e => e.IndexKeyList).HasColumnName("Index_Key_List");
        });

        modelBuilder.Entity<ZIuqTempIndexUsage>(entity =>
        {
            entity
                .HasNoKey()
                .ToTable("zIUQ_Temp_Index_Usage");

            entity.Property(e => e.FIndId).HasColumnName("F_Ind_ID");
            entity.Property(e => e.FIndexName)
                .HasMaxLength(128)
                .HasColumnName("F_Index_Name");
            entity.Property(e => e.FTableName)
                .HasMaxLength(128)
                .HasColumnName("F_Table_Name");
            entity.Property(e => e.IndexKeys)
                .HasMaxLength(255)
                .HasColumnName("Index_Keys");
            entity.Property(e => e.IndexType)
                .HasMaxLength(56)
                .HasColumnName("Index_Type");
            entity.Property(e => e.LastUsedForReads)
                .HasColumnType("datetime")
                .HasColumnName("Last_Used_For_Reads");
            entity.Property(e => e.LastUserLookup)
                .HasColumnType("datetime")
                .HasColumnName("last_user_lookup");
            entity.Property(e => e.LastUserScan)
                .HasColumnType("datetime")
                .HasColumnName("last_user_scan");
            entity.Property(e => e.LastUserSeek)
                .HasColumnType("datetime")
                .HasColumnName("last_user_seek");
            entity.Property(e => e.NoOfUpdates).HasColumnName("No_Of_Updates");
            entity.Property(e => e.UserReads).HasColumnName("User_Reads");
        });

        modelBuilder.Entity<Zona>(entity =>
        {
            entity
                .HasNoKey()
                .ToTable("ZONAS$");

            entity.Property(e => e.CodPais).HasMaxLength(255);
            entity.Property(e => e.Sigla).HasMaxLength(255);
            entity.Property(e => e.Zona1)
                .HasMaxLength(255)
                .HasColumnName("Zona");
        });

        modelBuilder.Entity<ZonasRota>(entity =>
        {
            entity.HasKey(e => e.Id).HasName("PK__ZonasRot__3213E83F62834A47");

            entity.Property(e => e.Id).HasColumnName("id");
            entity.Property(e => e.Activo).HasColumnName("activo");
            entity.Property(e => e.Codigo)
                .HasMaxLength(5)
                .IsUnicode(false)
                .HasColumnName("codigo");
            entity.Property(e => e.Descricao)
                .HasMaxLength(50)
                .IsUnicode(false)
                .HasColumnName("descricao");
            entity.Property(e => e.DtIntrod)
                .HasColumnType("datetime")
                .HasColumnName("dtIntrod");
            entity.Property(e => e.DtUltAct)
                .HasColumnType("datetime")
                .HasColumnName("dtUltAct");
            entity.Property(e => e.IdPais).HasColumnName("idPais");
            entity.Property(e => e.IdUtilIntrod).HasColumnName("idUtilIntrod");
            entity.Property(e => e.IdUtilUltAct).HasColumnName("idUtilUltAct");
        });

        modelBuilder.Entity<ZonasTarifariosRex2>(entity =>
        {
            entity
                .HasNoKey()
                .ToTable("zonasTarifariosREx2");

            entity.Property(e => e.ZcCdpFim)
                .HasMaxLength(50)
                .IsUnicode(false)
                .HasColumnName("zc_cdp_fim");
            entity.Property(e => e.ZcCdpIni)
                .HasMaxLength(50)
                .IsUnicode(false)
                .HasColumnName("zc_cdp_ini");
            entity.Property(e => e.ZcNumero)
                .HasMaxLength(50)
                .IsUnicode(false)
                .HasColumnName("zc_numero");
            entity.Property(e => e.ZcPais)
                .HasMaxLength(50)
                .IsUnicode(false)
                .HasColumnName("zc_pais");
            entity.Property(e => e.ZcZona)
                .HasMaxLength(50)
                .IsUnicode(false)
                .HasColumnName("zc_zona");
            entity.Property(e => e.ZcZonaCf)
                .HasMaxLength(50)
                .IsUnicode(false)
                .HasColumnName("zc_zona_cf");
        });

        modelBuilder.Entity<ZzzConvPortal>(entity =>
        {
            entity.HasKey(e => e.Idunico).HasName("PK__zzz_conv__04D7B6E52F92E1F3");

            entity.ToTable("zzz_conv_portal");

            entity.Property(e => e.Idunico).HasColumnName("idunico");
            entity.Property(e => e.Awb)
                .HasMaxLength(20)
                .IsUnicode(false)
                .IsFixedLength()
                .HasColumnName("awb");
            entity.Property(e => e.IdManifesto).HasColumnName("idManifesto");
            entity.Property(e => e.IsMaster).HasColumnName("isMaster");
            entity.Property(e => e.Masternum)
                .HasMaxLength(20)
                .IsUnicode(false)
                .IsFixedLength()
                .HasColumnName("masternum");
        });

        OnModelCreatingPartial(modelBuilder);
    }

    partial void OnModelCreatingPartial(ModelBuilder modelBuilder);
}
