@using System.Security.Claims
@using Microsoft.AspNetCore.Components.Authorization
@using ProjetoFinal.Web.Blazor.Identity
@inject AuthenticationStateProvider AuthenticationStateProvider
@inject ITokenProvider TokenProvider

<h3>ClaimsPrincipal Data</h3>

<p>@authMessage</p>

@if (claims.Count() > 0)
{
    <ul>
        @foreach (var claim in claims)
        {
            <li>@claim.Type: @claim.Value</li>
        }
    </ul>
}

<b>Access Token:</b>
@TokenProvider.AccessToken

<br />
<br />

<b>Refresh Token:</b>
@TokenProvider.RefreshToken

@code {
    private string authMessage;
    private IEnumerable<Claim> claims = Enumerable.Empty<Claim>();


    protected override async Task OnInitializedAsync()
    {
        GetClaimsPrincipalData();
    }

    private async Task GetClaimsPrincipalData()
    {
        var authState = await AuthenticationStateProvider.GetAuthenticationStateAsync();
        var user = authState.User;

        if (user.Identity.IsAuthenticated)
        {
            authMessage = $"{user.Identity.Name} is authenticated.";
            claims = user.Claims;
        }
        else
        {
            authMessage = "The user is NOT authenticated.";
        }
    }
}